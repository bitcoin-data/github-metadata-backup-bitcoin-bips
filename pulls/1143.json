{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1143",
    "id": 690256260,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjkwMjU2MjYw",
    "html_url": "https://github.com/bitcoin/bips/pull/1143",
    "diff_url": "https://github.com/bitcoin/bips/pull/1143.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1143.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1143/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1143/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1143/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/761ef12782dc02af48b3e3b5a5238faeec6870fe",
    "number": 1143,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[BIPs 380-386] Output Script Descriptors",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Here are several BIPs specifying output script descriptors as implemented in Bitcoin Core.\r\n\r\nIn order to make it easier for implementors to indicate which descriptors they support, I've split up the specifications into multiple BIPs. The first is a general BIP describing the philosophy, general structure, shared expressions, and the checksum. The rest of the BIPs specify each descriptor function itself and are grouped into categories of non-segwit (pk, pkh, p2sh), segwit (wpkh, wsh), multi (multi, sortedmulti), combo (by itself), opaque wrappers (raw, addr), and tr (by itself).",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2021-07-14T22:08:41Z",
    "updated_at": "2021-09-04T21:55:15Z",
    "closed_at": "2021-08-30T14:43:55Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-08-30T14:43:55Z",
    "merge_commit_sha": "1cafbd1289de15e3c853da24cdb96e6a80a79f8b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "achow101:descriptors",
      "ref": "descriptors",
      "sha": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45007004,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNzAwNA==",
        "name": "bips",
        "full_name": "achow101/bips",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bips",
        "archive_url": "https://api.github.com/repos/achow101/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bips/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bips/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bips/downloads",
        "events_url": "https://api.github.com/repos/achow101/bips/events",
        "forks_url": "https://api.github.com/repos/achow101/bips/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bips.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bips/languages",
        "merges_url": "https://api.github.com/repos/achow101/bips/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bips.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bips/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bips/tags",
        "teams_url": "https://api.github.com/repos/achow101/bips/teams",
        "trees_url": "https://api.github.com/repos/achow101/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bips.git",
        "hooks_url": "https://api.github.com/repos/achow101/bips/hooks",
        "svn_url": "https://github.com/achow101/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 13762,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-10T18:02:43Z",
        "created_at": "2015-10-27T00:37:26Z",
        "updated_at": "2022-01-19T00:36:27Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "8a050eccbb5f9712f31d8d159e984ade0b3ffcc3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5178,
        "stargazers_count": 8116,
        "watchers_count": 8116,
        "size": 13694,
        "default_branch": "master",
        "open_issues_count": 115,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-08T12:03:37Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-06-12T10:53:19Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 763,
    "deletions": 0,
    "changed_files": 8,
    "commits": 7,
    "review_comments": 28,
    "comments": 13
  },
  "events": [
    {
      "event": "commented",
      "id": 880313085,
      "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDMxMzA4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/880313085",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-15T01:12:55Z",
      "updated_at": "2021-07-15T01:12:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "As stated previously, strong concept ACK. \r\n\r\nI think after this gets merged, it will be important to go through existing BIPs that make use of descriptors, and put in needed references.",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-880313085",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "commented",
      "id": 883295801,
      "node_id": "IC_kwDOAN28mc40pgY5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/883295801",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T10:51:08Z",
      "updated_at": "2021-07-20T11:05:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\n> In order to make it easier for implementors to indicate which descriptors they support, I've split up the specifications into multiple BIPs.\r\n\r\nWill you be using the BIP numbers of these 7 BIPs in the actual descriptors? My initial response was that having as many as 7 BIPs seemed like overkill. \r\n\r\nThe motivation as stated in the Bitcoin dev mailing list [post](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019151.html):\r\n\r\n> Since descriptors are modular and have optional components, I've decided to split it into 7 BIPs, rather than a single one.\r\n\r\n> This separation is so that implementors can choose to not implement some descriptors and still say which descriptors they support without being too difficult to understand.\r\n\r\nI think (?) it is general practice that implementers aren't expected to implement the BIP in full regardless so unless the BIP number is needed for the descriptor I wonder if it would be more accessible to implementers/reviewers to shrink the number of BIPs down from its current 7. Jumping between different BIPs for context (and creating a need for multiple BIPs to be updated in future) isn't optimal imo if it can be avoided.\r\n\r\nedit: Presumably also descriptor support for CHECKSIGADD (Taproot multisig) and eventually MuSig(2) will also have their own BIPs too? So the number of descriptor related BIPs will be increasing well past 7 too.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-883295801",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "commented",
      "id": 883523024,
      "node_id": "IC_kwDOAN28mc40qX3Q",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/883523024",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T16:19:33Z",
      "updated_at": "2021-07-20T16:19:48Z",
      "author_association": "MEMBER",
      "body": "> Will you be using the BIP numbers of these 7 BIPs in the actual descriptors\r\n\r\nNo.\r\n\r\n> I think (?) it is general practice that implementers aren't expected to implement the BIP in full regardless so unless the BIP number is needed for the descriptor I wonder if it would be more accessible to implementers/reviewers to shrink the number of BIPs down from its current 7\r\n\r\nThe expectation is that each implementations will implement in full the BIPs they want to support.\r\n\r\nIMO it's easier to say \"software implements BIPs X, Y, and Z\" than \"software implements BIP XX but only the wpkh, wsh, and tr descriptors\". Every time you would say \"software supports BIP XX descriptors\", you would also have to caveat it with which descriptors are supported. By using separate BIPs, you can just give the BIP numbers corresponding to the groups of descriptors supported.\r\n\r\n> edit: Presumably also descriptor support for CHECKSIGADD (Taproot multisig) and eventually MuSig(2) will also have their own BIPs too? So the number of descriptor related BIPs will be increasing well past 7 too.\r\n\r\nYes.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-883523024",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "commented",
      "id": 883536812,
      "node_id": "IC_kwDOAN28mc40qbOs",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/883536812",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T16:40:20Z",
      "updated_at": "2021-07-20T16:40:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> IMO it's easier to say \"software implements BIPs X, Y, and Z\" than \"software implements BIP XX but only the wpkh, wsh, and tr descriptors\". Every time you would say \"software supports BIP XX descriptors\", you would also have to caveat it with which descriptors are supported. By using separate BIPs, you can just give the BIP numbers corresponding to the groups of descriptors supported.\r\n\r\nIf this approach (lots of modular BIPs) is followed for other projects it is going to mean a lot more BIPs (and BIP numbers to keep track of). I wondered if there was anything specific to descriptors that made this modular approach make sense.\r\n\r\nBut enough on the number of BIPs (!) I'll read through them in more detail now I know you're fixed on this.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-883536812",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "commented",
      "id": 883540712,
      "node_id": "IC_kwDOAN28mc40qcLo",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/883540712",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T16:46:40Z",
      "updated_at": "2021-07-20T16:46:40Z",
      "author_association": "MEMBER",
      "body": "> If this approach (lots of modular BIPs) is followed for other projects it is going to mean a lot more BIPs (and BIP numbers to keep track of). I wondered if there was anything specific to descriptors that made this modular approach make sense.\r\n\r\nThis is something already being done for other aspects of Bitcoin. Off the top of my head, both BIP 43 and 174 are now using this approach of using multiple BIPs to extend existing functionality. New BIP 43 purpose numbers are defined in new BIPs (see 44, 49, 85, and 86). BIP 174 is much like descriptors in that it is modular and extensible. New fields are being specified in new BIPs rather than being just added to BIP 174.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-883540712",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "labeled",
      "id": 5046061603,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUwNDYwNjE2MDM=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5046061603",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T18:57:48Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 883623566,
      "node_id": "IC_kwDOAN28mc40qwaO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/883623566",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T19:01:51Z",
      "updated_at": "2021-07-20T19:01:51Z",
      "author_association": "MEMBER",
      "body": "Going to leave this unassigned for now, just to collect ACKs/comments on the specific splitting of the BIPs (which would affect the number range and meaning of those numbers) for a few weeks.\r\n\r\nWhile the acceptance of BIPs does not depend on third-party ACKs, number assignments can't be adjusted/changed quite so easily once done, so I think it would be better to flesh out any review on the specific splitting beforehand.\r\n\r\n(My personal opinion is that perhaps the pretty-much-just-for-compatibility stuff should be combined, but I don't care strongly.)",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-883623566",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "reviewed",
      "id": 714155932,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE0MTU1OTMy",
      "url": null,
      "actor": null,
      "commit_id": "a4c0b268c7fd7e682c95d998ed2e91efe1c1e0fb",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "How do I put it in my pocket without a computer? I only have a mobile phone...please give me some advice,thanks",
      "user": {
        "login": "KimJi55",
        "id": 87067090,
        "node_id": "MDQ6VXNlcjg3MDY3MDkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/87067090?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KimJi55",
        "html_url": "https://github.com/KimJi55",
        "followers_url": "https://api.github.com/users/KimJi55/followers",
        "following_url": "https://api.github.com/users/KimJi55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KimJi55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KimJi55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KimJi55/subscriptions",
        "organizations_url": "https://api.github.com/users/KimJi55/orgs",
        "repos_url": "https://api.github.com/users/KimJi55/repos",
        "events_url": "https://api.github.com/users/KimJi55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KimJi55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#pullrequestreview-714155932",
      "submitted_at": "2021-07-23T22:13:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
    },
    {
      "event": "commented",
      "id": 887810669,
      "node_id": "IC_kwDOAN28mc406upt",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/887810669",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-27T20:25:10Z",
      "updated_at": "2021-07-27T20:25:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "As I stated [here](https://github.com/achow101/bips/pull/3#issuecomment-876730458), I think it makes sense to split the BIPs up, especially as that seems to be the direction we are heading in with extensions/compatibility.\r\n\r\nNot all implementations will comply fully with the complete spec",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-887810669",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "reviewed",
      "id": 717388581,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE3Mzg4NTgx",
      "url": null,
      "actor": null,
      "commit_id": "38157a5ac1143049bf29384f492c129e934126bd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#pullrequestreview-717388581",
      "submitted_at": "2021-07-28T19:45:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
    },
    {
      "event": "commented",
      "id": 888579296,
      "node_id": "IC_kwDOAN28mc409qTg",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/888579296",
      "actor": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-28T19:54:43Z",
      "updated_at": "2021-07-28T19:54:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK for different BIPs. I think the numbers would numerically close from each other that this should not matter. \r\n",
      "user": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-888579296",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5082771563,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTA4Mjc3MTU2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5082771563",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-28T22:16:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5082773236,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTA4Mjc3MzIzNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5082773236",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-28T22:16:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5083012712,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTA4MzAxMjcxMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5083012712",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-28T23:53:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5083015815,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTA4MzAxNTgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5083015815",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-28T23:54:57Z"
    },
    {
      "event": "reviewed",
      "id": 718028111,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE4MDI4MTEx",
      "url": null,
      "actor": null,
      "commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Just some nits reading through.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#pullrequestreview-718028111",
      "submitted_at": "2021-07-29T12:54:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5087314054,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTA4NzMxNDA1NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5087314054",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-29T17:08:40Z"
    },
    {
      "event": "commented",
      "id": 889949247,
      "node_id": "IC_kwDOAN28mc41C4w_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/889949247",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-30T14:57:28Z",
      "updated_at": "2021-07-30T17:10:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "I wonder if another consequence of having so many granular BIPs is you need to be clearer on what a BIP **doesn't** contain and provide cross references to the BIPs that an implementer may be interested in (having initially gone to wrong BIP or unsure which BIP to go to first). Otherwise an implementer is going to be bouncing around a number of different BIPs (especially once we have 10+ descriptor BIPs).\r\n\r\ne.g. \"This multisig descriptor BIP only contains information on descriptors using legacy multisig and does not contain information on Taproot multisig (CHECKSIGADD) or MuSig, that information can be found in BIP X and BIP Y.\"\r\n\r\n(Or more accurately today specifically for Taproot multisig and MuSig, these are not currently specified.)",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-889949247",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "commented",
      "id": 890122896,
      "node_id": "IC_kwDOAN28mc41DjKQ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/890122896",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-30T20:00:06Z",
      "updated_at": "2021-07-30T20:00:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Maybe an index of sorts could be placed in BIP-descriptors-general, which is where I imagine everyone will start?",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-890122896",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "commented",
      "id": 907876446,
      "node_id": "IC_kwDOAN28mc42HRhe",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/907876446",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-29T21:26:28Z",
      "updated_at": "2021-08-29T21:26:28Z",
      "author_association": "MEMBER",
      "body": "Assigning these BIP 380-386, in order listed in the current PR's README.mediawiki",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-907876446",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NzFmNDM1ZTc2YjA3NGU1NTE1MWE1YWE5OTEwOTI5MGU4ZDBiNjUzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/71f435e76b074e55151a5aa99109290e8d0b6535",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/71f435e76b074e55151a5aa99109290e8d0b6535",
      "tree": {
        "sha": "7d988607a6f2b6e38fa589cad9ba74360d582dda",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/7d988607a6f2b6e38fa589cad9ba74360d582dda"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ed35a418caac32e967a7b0ae1d9a4334c5017e12",
          "sha": "ed35a418caac32e967a7b0ae1d9a4334c5017e12",
          "html_url": "https://github.com/bitcoin/bips/commit/ed35a418caac32e967a7b0ae1d9a4334c5017e12"
        }
      ],
      "message": "Specify BIP 380: Descriptors general operation",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-29T23:57:30Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-06-27T21:20:21Z"
      },
      "sha": "71f435e76b074e55151a5aa99109290e8d0b6535"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5223295725,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIyMzI5NTcyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5223295725",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-30T00:03:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5223301674,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIyMzMwMTY3NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5223301674",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-30T00:06:40Z"
    },
    {
      "event": "renamed",
      "id": 5223305170,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NTIyMzMwNTE3MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5223305170",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-30T00:08:34Z",
      "rename": {
        "from": "[New BIPs] Output Script Descriptors",
        "to": "[New BIPs] BIPs 380-386 Output Script Descriptors"
      }
    },
    {
      "event": "renamed",
      "id": 5223305744,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NTIyMzMwNTc0NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5223305744",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-30T00:08:51Z",
      "rename": {
        "from": "[New BIPs] BIPs 380-386 Output Script Descriptors",
        "to": "[BIPs 380-386] Output Script Descriptors"
      }
    },
    {
      "event": "commented",
      "id": 907906095,
      "node_id": "IC_kwDOAN28mc42HYwv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/907906095",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-30T00:09:05Z",
      "updated_at": "2021-08-30T00:09:05Z",
      "author_association": "MEMBER",
      "body": "Updated with BIP numbers",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-907906095",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6YmQxMmVhN2U5ZGRkZTRjN2JkNzBiZjNjNGUxM2U5OGY5NDFmY2M0ZA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bd12ea7e9ddde4c7bd70bf3c4e13e98f941fcc4d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/bd12ea7e9ddde4c7bd70bf3c4e13e98f941fcc4d",
      "tree": {
        "sha": "9076f2621fd67692bc33d571f0cf0851dd8aa5e7",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/9076f2621fd67692bc33d571f0cf0851dd8aa5e7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/71f435e76b074e55151a5aa99109290e8d0b6535",
          "sha": "71f435e76b074e55151a5aa99109290e8d0b6535",
          "html_url": "https://github.com/bitcoin/bips/commit/71f435e76b074e55151a5aa99109290e8d0b6535"
        }
      ],
      "message": "Specify BIP 381: Non-segwit descriptors",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-30T00:10:11Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-06-27T22:49:37Z"
      },
      "sha": "bd12ea7e9ddde4c7bd70bf3c4e13e98f941fcc4d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ZmI1NmExOGM4OTBhZjhiMjY5OTg3YjJlNjY2NDc2NWZmYzA1YTVjMQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fb56a18c890af8b269987b2e6664765ffc05a5c1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/fb56a18c890af8b269987b2e6664765ffc05a5c1",
      "tree": {
        "sha": "ef413cf33faeb78e0e47f1babe4c8786fe6795cc",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/ef413cf33faeb78e0e47f1babe4c8786fe6795cc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bd12ea7e9ddde4c7bd70bf3c4e13e98f941fcc4d",
          "sha": "bd12ea7e9ddde4c7bd70bf3c4e13e98f941fcc4d",
          "html_url": "https://github.com/bitcoin/bips/commit/bd12ea7e9ddde4c7bd70bf3c4e13e98f941fcc4d"
        }
      ],
      "message": "Specify BIP 382: Segwit descriptors",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-30T00:10:53Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-06-27T23:35:45Z"
      },
      "sha": "fb56a18c890af8b269987b2e6664765ffc05a5c1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NjA4ZjQwYjQ5ODBhYjU2YmYzYjk1MzgxYzE3Mjc5MWQzOTc4NjIyMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/608f40b4980ab56bf3b95381c172791d39786223",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/608f40b4980ab56bf3b95381c172791d39786223",
      "tree": {
        "sha": "1a6299b282eb658abf2c0fe48761d1a095866f59",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/1a6299b282eb658abf2c0fe48761d1a095866f59"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fb56a18c890af8b269987b2e6664765ffc05a5c1",
          "sha": "fb56a18c890af8b269987b2e6664765ffc05a5c1",
          "html_url": "https://github.com/bitcoin/bips/commit/fb56a18c890af8b269987b2e6664765ffc05a5c1"
        }
      ],
      "message": "Specify BIP 383: Multisig descriptors",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-30T00:10:55Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-06-28T00:27:33Z"
      },
      "sha": "608f40b4980ab56bf3b95381c172791d39786223"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ZjUyZjFlODJlNTIzNjdlYmJkYTI2NTY4NDVhNzFhZDkyYTRlZDY3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f52f1e82e52367ebbda2656845a71ad92a4ed677",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f52f1e82e52367ebbda2656845a71ad92a4ed677",
      "tree": {
        "sha": "e2a1ae1d941038d584aab5782a7ea9ae96140455",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/e2a1ae1d941038d584aab5782a7ea9ae96140455"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/608f40b4980ab56bf3b95381c172791d39786223",
          "sha": "608f40b4980ab56bf3b95381c172791d39786223",
          "html_url": "https://github.com/bitcoin/bips/commit/608f40b4980ab56bf3b95381c172791d39786223"
        }
      ],
      "message": "Specify BIP 384: Combo descriptors",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-30T00:11:10Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-06-27T22:49:41Z"
      },
      "sha": "f52f1e82e52367ebbda2656845a71ad92a4ed677"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NTQwM2ZmOTBkNjljODJjYjIyYjBhNmY5NjlmOGM0ZWM2MDE1NjliMQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5403ff90d69c82cb22b0a6f969f8c4ec601569b1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/5403ff90d69c82cb22b0a6f969f8c4ec601569b1",
      "tree": {
        "sha": "f00b34c14d1cd288be71047cdfd41212ee810b8a",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f00b34c14d1cd288be71047cdfd41212ee810b8a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f52f1e82e52367ebbda2656845a71ad92a4ed677",
          "sha": "f52f1e82e52367ebbda2656845a71ad92a4ed677",
          "html_url": "https://github.com/bitcoin/bips/commit/f52f1e82e52367ebbda2656845a71ad92a4ed677"
        }
      ],
      "message": "Specify BIP 385: Raw and addr descriptors",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-30T00:12:57Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-06-27T22:49:44Z"
      },
      "sha": "5403ff90d69c82cb22b0a6f969f8c4ec601569b1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NzYxZWYxMjc4MmRjMDJhZjQ4YjNlM2I1YTUyMzhmYWVlYzY4NzBmZQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "tree": {
        "sha": "960f36b9a2049a3b260900b17c0c9ab6ee9d64be",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/960f36b9a2049a3b260900b17c0c9ab6ee9d64be"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5403ff90d69c82cb22b0a6f969f8c4ec601569b1",
          "sha": "5403ff90d69c82cb22b0a6f969f8c4ec601569b1",
          "html_url": "https://github.com/bitcoin/bips/commit/5403ff90d69c82cb22b0a6f969f8c4ec601569b1"
        }
      ],
      "message": "Specify BIP 386: Taproot descriptors",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-08-30T00:12:58Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-06-29T20:33:02Z"
      },
      "sha": "761ef12782dc02af48b3e3b5a5238faeec6870fe"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5223312342,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTIyMzMxMjM0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5223312342",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-30T00:13:10Z"
    },
    {
      "event": "merged",
      "id": 5226740264,
      "node_id": "MDExOk1lcmdlZEV2ZW50NTIyNjc0MDI2NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5226740264",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1cafbd1289de15e3c853da24cdb96e6a80a79f8b",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/1cafbd1289de15e3c853da24cdb96e6a80a79f8b",
      "created_at": "2021-08-30T14:43:55Z"
    },
    {
      "event": "closed",
      "id": 5226740281,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTIyNjc0MDI4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5226740281",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-30T14:43:55Z"
    },
    {
      "event": "commented",
      "id": 913046043,
      "node_id": "IC_kwDOAN28mc42a_ob",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/913046043",
      "actor": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T21:55:15Z",
      "updated_at": "2021-09-04T21:55:15Z",
      "author_association": "NONE",
      "body": "I know that I’d appreciate if @luke-jr could hold as placeholder a few consecutive BIP numbers after this series for further descriptor related BIPs that also will be coming soon. Like 387-389.",
      "user": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1143#issuecomment-913046043",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1143"
    },
    {
      "event": "mentioned",
      "id": 5256874379,
      "node_id": "MEE_lADOAN28mc44UQNtzwAAAAE5VYmL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5256874379",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T21:55:15Z"
    },
    {
      "event": "subscribed",
      "id": 5256874380,
      "node_id": "SE_lADOAN28mc44UQNtzwAAAAE5VYmM",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5256874380",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-04T21:55:15Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678592740",
      "pull_request_review_id": 717388581,
      "id": 678592740,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODU5Mjc0MA==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+<pre>\n+  BIP: bip-descriptors-non-segwit\n+  Layer: Applications\n+  Title: Non-segwit Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-non-segwit\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt> output script descriptors.\n+<tt>pk()</tt> descriptors take a key and produces a P2PK output script.\n+<tt>pkh()</tt> descriptors take a key and produces a P2PKH output script.\n+<tt>sh()</tt> descriptors take a script and produces a P2SH output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Prior to the activation of Segregated Witness, there were 3 main standard output script formats: P2PK, P2PKH, and P2SH.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+Three new script expressions are defined: <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt>.\n+\n+===<tt>pk()</tt>===\n+\n+The <tt>pk(KEY)</tt> expression can be used in any context or level of a descriptor.\n+It takes a single key expression as an argument and produces a P2PK output script.\n+Depending on the higher level descriptors, there may be restrictions on the type of public keys that can be included.\n+Such restrictions will be specified by those descriptors.\n+\n+The output script produced is:\n+<pre>\n+<KEY> OP_CHECKSIG\n+</pre>\n+\n+===<tt>pkh()</tt>===\n+\n+The <tt>pkh(KEY)</tt> expression can be used as a top level expression, or inside of either a <tt>sh()</tt> or <tt>wsh()</tt> descriptor.",
      "path": "bip-descriptors-non-segwit.mediawiki",
      "position": null,
      "original_position": 49,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "38157a5ac1143049bf29384f492c129e934126bd",
      "in_reply_to_id": null,
      "user": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there any special reason for the description of `pk()` script expression and `pkh()` script expression different? Also, we are using wsh without actually defining/(referring to) what it is. ",
      "created_at": "2021-07-28T19:28:30Z",
      "updated_at": "2021-07-28T19:45:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678592740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678592740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678596878",
      "pull_request_review_id": 717388581,
      "id": 678596878,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODU5Njg3OA==",
      "diff_hunk": "@@ -0,0 +1,70 @@\n+<pre>\n+  BIP: bip-descriptors-segwit\n+  Layer: Applications\n+  Title: segwit Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-segwit\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>wpkh()</tt>, and <tt>wsh()</tt> output script descriptors.\n+<tt>wpkh()</tt> descriptors take a key and produces a P2WPKH output script.\n+<tt>wsh()</tt> descriptors take a script and produces a P2WSH output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Segregated Witness added 2 additional standard output script formats: P2WPKH and P2WSH.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+Two new script expressions are defined: <tt>wpkh()</tt>, and <tt>wsh()</tt>.\n+\n+===<tt>wpkh()</tt>===\n+\n+The <tt>wpkh(KEY)</tt> expression can be used as a top level expression, or inside of a <tt>sh()</tt> descriptor.\n+It takes a single key expression as an argument and produces a P2WPKH output script.\n+Only keys which are/has compressed public keys can be contained in a <tt>wpkh()</tt> expression.\n+\n+The output script produced is:\n+<pre>\n+OP_0 <KEY_hash160>\n+</pre>\n+\n+===<tt>wsh()</tt>===\n+\n+The <tt>wsh(SCRIPT)</tt> expression can be used as a top level expression, or inside of a <tt>sh()</tt> descriptor.",
      "path": "bip-descriptors-segwit.mediawiki",
      "position": null,
      "original_position": 47,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "148b0ba417fadbe8cdc5c517e538ce62655c4b6e",
      "in_reply_to_id": null,
      "user": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`wsh()` Should also have a note about only compressed keys being allowed",
      "created_at": "2021-07-28T19:34:57Z",
      "updated_at": "2021-07-28T19:45:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678596878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678596878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678602731",
      "pull_request_review_id": 717388581,
      "id": 678602731,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODYwMjczMQ==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>\n+\n+===<tt>tr()</tt>===\n+\n+The <tt>tr(KEY)</tt> or <tt>tr(KEY, TREE)</tt> expression can only be used as a top level expression.\n+All key expressions under any <tt>tr()</tt> expression must create x-only public keys.\n+\n+<tt>tr(KEY)</tt> takes a single key expression as an argument and produces a P2TR output script which does not have a script path.\n+The keys produced by the key expression are used as the internal key as specified by [[bip-0341.mediawiki#cite_ref-22-0|BIP 341]].\n+Specifically, \"If the spending conditions do not require a script path, the output key should commit to an unspendable script path instead of having no script path.\n+This can be achieved by computing the output key point as ''Q = P + int(hash<sub>TapTweak</sub>(bytes(P)))G''.\"\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key)))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+<tt>tr(KEY, TREE)</tt> takes a key expression as the first argument, and a tree expression as the second argument and produces a P2TR output script which has a script path.\n+The keys produced by the first key expression are used as the internal key as specified by [[bip-0341.mediawiki#Constructing_and_spending_Taproot_outputs|BIP 341]].\n+The Tree expression becomes the Taproot script tree as described in BIP 341.\n+A merkle root is computed from this tree and combined with the internal key to create the Taproot output key.\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+merkle_root:        HashTapBranch(TREE)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key) || merkle_root))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+===Modified Key Expression===\n+\n+Key Expressions within a <tt>tr()</tt> expression must only create x-only public keys.\n+Uncompressed public keys are not allowed, but compressed public keys may be implicitly converted to x-only public keys.",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 79,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "a4c0b268c7fd7e682c95d998ed2e91efe1c1e0fb",
      "in_reply_to_id": null,
      "user": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```diff\r\n- may be implicitly\r\n+ would be implicitly\r\n```",
      "created_at": "2021-07-28T19:44:49Z",
      "updated_at": "2021-07-28T19:45:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678602731",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678602731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678688507",
      "pull_request_review_id": 717510207,
      "id": 678688507,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY4ODUwNw==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+<pre>\n+  BIP: bip-descriptors-non-segwit\n+  Layer: Applications\n+  Title: Non-segwit Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-non-segwit\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt> output script descriptors.\n+<tt>pk()</tt> descriptors take a key and produces a P2PK output script.\n+<tt>pkh()</tt> descriptors take a key and produces a P2PKH output script.\n+<tt>sh()</tt> descriptors take a script and produces a P2SH output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Prior to the activation of Segregated Witness, there were 3 main standard output script formats: P2PK, P2PKH, and P2SH.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+Three new script expressions are defined: <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt>.\n+\n+===<tt>pk()</tt>===\n+\n+The <tt>pk(KEY)</tt> expression can be used in any context or level of a descriptor.\n+It takes a single key expression as an argument and produces a P2PK output script.\n+Depending on the higher level descriptors, there may be restrictions on the type of public keys that can be included.\n+Such restrictions will be specified by those descriptors.\n+\n+The output script produced is:\n+<pre>\n+<KEY> OP_CHECKSIG\n+</pre>\n+\n+===<tt>pkh()</tt>===\n+\n+The <tt>pkh(KEY)</tt> expression can be used as a top level expression, or inside of either a <tt>sh()</tt> or <tt>wsh()</tt> descriptor.",
      "path": "bip-descriptors-non-segwit.mediawiki",
      "position": null,
      "original_position": 49,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "38157a5ac1143049bf29384f492c129e934126bd",
      "in_reply_to_id": 678592740,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`pk` is allowed inside of `tr` but `pkh` is not.\r\n\r\n> Also, we are using wsh without actually defining/(referring to) what it \r\n\r\nThese definitions all have mentions of descriptors from other documents. I haven't really figured out a good way to do.",
      "created_at": "2021-07-28T22:14:27Z",
      "updated_at": "2021-07-28T22:14:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678688507",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678688507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678688862",
      "pull_request_review_id": 717510628,
      "id": 678688862,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY4ODg2Mg==",
      "diff_hunk": "@@ -0,0 +1,70 @@\n+<pre>\n+  BIP: bip-descriptors-segwit\n+  Layer: Applications\n+  Title: segwit Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-segwit\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>wpkh()</tt>, and <tt>wsh()</tt> output script descriptors.\n+<tt>wpkh()</tt> descriptors take a key and produces a P2WPKH output script.\n+<tt>wsh()</tt> descriptors take a script and produces a P2WSH output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Segregated Witness added 2 additional standard output script formats: P2WPKH and P2WSH.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+Two new script expressions are defined: <tt>wpkh()</tt>, and <tt>wsh()</tt>.\n+\n+===<tt>wpkh()</tt>===\n+\n+The <tt>wpkh(KEY)</tt> expression can be used as a top level expression, or inside of a <tt>sh()</tt> descriptor.\n+It takes a single key expression as an argument and produces a P2WPKH output script.\n+Only keys which are/has compressed public keys can be contained in a <tt>wpkh()</tt> expression.\n+\n+The output script produced is:\n+<pre>\n+OP_0 <KEY_hash160>\n+</pre>\n+\n+===<tt>wsh()</tt>===\n+\n+The <tt>wsh(SCRIPT)</tt> expression can be used as a top level expression, or inside of a <tt>sh()</tt> descriptor.",
      "path": "bip-descriptors-segwit.mediawiki",
      "position": null,
      "original_position": 47,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "148b0ba417fadbe8cdc5c517e538ce62655c4b6e",
      "in_reply_to_id": 678596878,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is a few lines down \"Any key expression found in any script expression contained by a `wsh()` expression must only produce compresed public keys.\"",
      "created_at": "2021-07-28T22:15:17Z",
      "updated_at": "2021-07-28T22:15:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678688862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678688862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678689178",
      "pull_request_review_id": 717510998,
      "id": 678689178,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY4OTE3OA==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>\n+\n+===<tt>tr()</tt>===\n+\n+The <tt>tr(KEY)</tt> or <tt>tr(KEY, TREE)</tt> expression can only be used as a top level expression.\n+All key expressions under any <tt>tr()</tt> expression must create x-only public keys.\n+\n+<tt>tr(KEY)</tt> takes a single key expression as an argument and produces a P2TR output script which does not have a script path.\n+The keys produced by the key expression are used as the internal key as specified by [[bip-0341.mediawiki#cite_ref-22-0|BIP 341]].\n+Specifically, \"If the spending conditions do not require a script path, the output key should commit to an unspendable script path instead of having no script path.\n+This can be achieved by computing the output key point as ''Q = P + int(hash<sub>TapTweak</sub>(bytes(P)))G''.\"\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key)))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+<tt>tr(KEY, TREE)</tt> takes a key expression as the first argument, and a tree expression as the second argument and produces a P2TR output script which has a script path.\n+The keys produced by the first key expression are used as the internal key as specified by [[bip-0341.mediawiki#Constructing_and_spending_Taproot_outputs|BIP 341]].\n+The Tree expression becomes the Taproot script tree as described in BIP 341.\n+A merkle root is computed from this tree and combined with the internal key to create the Taproot output key.\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+merkle_root:        HashTapBranch(TREE)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key) || merkle_root))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+===Modified Key Expression===\n+\n+Key Expressions within a <tt>tr()</tt> expression must only create x-only public keys.\n+Uncompressed public keys are not allowed, but compressed public keys may be implicitly converted to x-only public keys.",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 79,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "a4c0b268c7fd7e682c95d998ed2e91efe1c1e0fb",
      "in_reply_to_id": 678602731,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-07-28T22:15:58Z",
      "updated_at": "2021-07-28T22:15:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678689178",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678689178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678696237",
      "pull_request_review_id": 717519390,
      "id": 678696237,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODY5NjIzNw==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+<pre>\n+  BIP: bip-descriptors-non-segwit\n+  Layer: Applications\n+  Title: Non-segwit Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-non-segwit\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt> output script descriptors.\n+<tt>pk()</tt> descriptors take a key and produces a P2PK output script.\n+<tt>pkh()</tt> descriptors take a key and produces a P2PKH output script.\n+<tt>sh()</tt> descriptors take a script and produces a P2SH output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Prior to the activation of Segregated Witness, there were 3 main standard output script formats: P2PK, P2PKH, and P2SH.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+Three new script expressions are defined: <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt>.\n+\n+===<tt>pk()</tt>===\n+\n+The <tt>pk(KEY)</tt> expression can be used in any context or level of a descriptor.\n+It takes a single key expression as an argument and produces a P2PK output script.\n+Depending on the higher level descriptors, there may be restrictions on the type of public keys that can be included.\n+Such restrictions will be specified by those descriptors.\n+\n+The output script produced is:\n+<pre>\n+<KEY> OP_CHECKSIG\n+</pre>\n+\n+===<tt>pkh()</tt>===\n+\n+The <tt>pkh(KEY)</tt> expression can be used as a top level expression, or inside of either a <tt>sh()</tt> or <tt>wsh()</tt> descriptor.",
      "path": "bip-descriptors-non-segwit.mediawiki",
      "position": null,
      "original_position": 49,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "38157a5ac1143049bf29384f492c129e934126bd",
      "in_reply_to_id": 678592740,
      "user": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> pk is allowed inside of tr but pkh is not.\r\n\r\nMakes sense. \r\n\r\n> These definitions all have mentions of descriptors from other documents. I haven't really figured out a good way to do it.\r\n\r\nI think the main descriptor BIP could be kept updated with all the top-level contexts and a very high-level summary. How about something like?\r\n\r\n```\r\nLegacy output descriptors: sh(), pk(), pkh(), multi(), sorted_multi()\r\nSegwitv0 output Desctipors: wsh(), wpkh(), \r\nTaproot output Descriptor: tr(),\r\n```\r\n\r\n",
      "created_at": "2021-07-28T22:32:34Z",
      "updated_at": "2021-07-28T22:32:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678696237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678696237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678726877",
      "pull_request_review_id": 717554449,
      "id": 678726877,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODcyNjg3Nw==",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+<pre>\n+  BIP: bip-descriptors-non-segwit\n+  Layer: Applications\n+  Title: Non-segwit Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-non-segwit\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt> output script descriptors.\n+<tt>pk()</tt> descriptors take a key and produces a P2PK output script.\n+<tt>pkh()</tt> descriptors take a key and produces a P2PKH output script.\n+<tt>sh()</tt> descriptors take a script and produces a P2SH output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Prior to the activation of Segregated Witness, there were 3 main standard output script formats: P2PK, P2PKH, and P2SH.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+Three new script expressions are defined: <tt>pk()</tt>, <tt>pkh()</tt>, and <tt>sh()</tt>.\n+\n+===<tt>pk()</tt>===\n+\n+The <tt>pk(KEY)</tt> expression can be used in any context or level of a descriptor.\n+It takes a single key expression as an argument and produces a P2PK output script.\n+Depending on the higher level descriptors, there may be restrictions on the type of public keys that can be included.\n+Such restrictions will be specified by those descriptors.\n+\n+The output script produced is:\n+<pre>\n+<KEY> OP_CHECKSIG\n+</pre>\n+\n+===<tt>pkh()</tt>===\n+\n+The <tt>pkh(KEY)</tt> expression can be used as a top level expression, or inside of either a <tt>sh()</tt> or <tt>wsh()</tt> descriptor.",
      "path": "bip-descriptors-non-segwit.mediawiki",
      "position": null,
      "original_position": 49,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "38157a5ac1143049bf29384f492c129e934126bd",
      "in_reply_to_id": 678592740,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added a listing of expressions as appendices.",
      "created_at": "2021-07-28T23:53:37Z",
      "updated_at": "2021-07-28T23:53:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r678726877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/678726877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679102157",
      "pull_request_review_id": 718028111,
      "id": 679102157,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTEwMjE1Nw==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/brance/brace",
      "created_at": "2021-07-29T12:25:44Z",
      "updated_at": "2021-07-29T12:54:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679102157",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679102157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679107438",
      "pull_request_review_id": 718028111,
      "id": 679107438,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTEwNzQzOA==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.\n+\n+===Checksum===\n+\n+Follwing the top level script expression is a single octothorpe (<tt>#</tt>) followed by the 8 character checksum.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 118,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/Follwing/Following",
      "created_at": "2021-07-29T12:33:14Z",
      "updated_at": "2021-07-29T12:54:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679107438",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679107438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679108108",
      "pull_request_review_id": 718028111,
      "id": 679108108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTEwODEwOA==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.\n+\n+===Checksum===\n+\n+Follwing the top level script expression is a single octothorpe (<tt>#</tt>) followed by the 8 character checksum.\n+The checksum is an error correcting checksum similar to bech32.\n+\n+The checksum has the following properties:\n+* Mistakes in a descriptor string are measured in \"symbol errors\". The higher the number of symbol errors, the harder it is to detect:\n+** An error substituting a character from <tt>0123456789()[],'/*abcdefgh@:$%{}</tt> for another in that set always counts as 1 symbol error.\n+*** Note that hex encoded keys are covered by these characters. Extended keys (<tt>xpub</tt> and <tt>xprv</tt>) use other characters too, but also have their own checksum mechansim.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 124,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/mechansim/mechanism",
      "created_at": "2021-07-29T12:34:07Z",
      "updated_at": "2021-07-29T12:54:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679108108",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679108108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679109578",
      "pull_request_review_id": 718028111,
      "id": 679109578,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTEwOTU3OA==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.\n+\n+===Checksum===\n+\n+Follwing the top level script expression is a single octothorpe (<tt>#</tt>) followed by the 8 character checksum.\n+The checksum is an error correcting checksum similar to bech32.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 119,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "May want to say bech32m here rather than bech32 for future proofing.",
      "created_at": "2021-07-29T12:36:17Z",
      "updated_at": "2021-07-29T12:54:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679109578",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679109578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679112506",
      "pull_request_review_id": 718028111,
      "id": 679112506,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTExMjUwNg==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>\n+\n+===<tt>tr()</tt>===\n+\n+The <tt>tr(KEY)</tt> or <tt>tr(KEY, TREE)</tt> expression can only be used as a top level expression.\n+All key expressions under any <tt>tr()</tt> expression must create x-only public keys.\n+\n+<tt>tr(KEY)</tt> takes a single key expression as an argument and produces a P2TR output script which does not have a script path.\n+The keys produced by the key expression are used as the internal key as specified by [[bip-0341.mediawiki#cite_ref-22-0|BIP 341]].\n+Specifically, \"If the spending conditions do not require a script path, the output key should commit to an unspendable script path instead of having no script path.\n+This can be achieved by computing the output key point as ''Q = P + int(hash<sub>TapTweak</sub>(bytes(P)))G''.\"\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key)))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+<tt>tr(KEY, TREE)</tt> takes a key expression as the first argument, and a tree expression as the second argument and produces a P2TR output script which has a script path.\n+The keys produced by the first key expression are used as the internal key as specified by [[bip-0341.mediawiki#Constructing_and_spending_Taproot_outputs|BIP 341]].\n+The Tree expression becomes the Taproot script tree as described in BIP 341.\n+A merkle root is computed from this tree and combined with the internal key to create the Taproot output key.\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+merkle_root:        HashTapBranch(TREE)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key) || merkle_root))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+===Modified Key Expression===\n+\n+Key Expressions within a <tt>tr()</tt> expression must only create x-only public keys.\n+Uncompressed public keys are not allowed, but compressed public keys would be implicitly converted to x-only public keys.\n+The keys derived from extended keys must be serialized as x-only public keys.\n+An additional key expression is defined only for use within a <tt>tr()</tt> descriptor:\n+\n+* A 64 hex character string representing an x-only public key\n+\n+==Test Vectors==\n+\n+TBD\n+\n+==Backwards Compatibility==\n+\n+<tt>tr()</tt> descriptors use the format and general operation specified in [[bip-descriptor-general.mediawiki|bip-descriptor-general]].\n+As these are a wholly new descriptors, they are not compatible with any implementation.",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 92,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/these are a wholly new descriptors/these are a set of wholly new descriptors",
      "created_at": "2021-07-29T12:40:24Z",
      "updated_at": "2021-07-29T12:54:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679112506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679112506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679114748",
      "pull_request_review_id": 718028111,
      "id": 679114748,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTExNDc0OA==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>\n+\n+===<tt>tr()</tt>===\n+\n+The <tt>tr(KEY)</tt> or <tt>tr(KEY, TREE)</tt> expression can only be used as a top level expression.\n+All key expressions under any <tt>tr()</tt> expression must create x-only public keys.\n+\n+<tt>tr(KEY)</tt> takes a single key expression as an argument and produces a P2TR output script which does not have a script path.\n+The keys produced by the key expression are used as the internal key as specified by [[bip-0341.mediawiki#cite_ref-22-0|BIP 341]].",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 54,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/keys/key s/are used as/is used as. \r\n\r\nThere is only one (internal) key produced by the key expression right?",
      "created_at": "2021-07-29T12:43:24Z",
      "updated_at": "2021-07-29T12:54:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679114748",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679114748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679115976",
      "pull_request_review_id": 718028111,
      "id": 679115976,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTExNTk3Ng==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/A new script expressions are defined/A new script expression is defined",
      "created_at": "2021-07-29T12:45:02Z",
      "updated_at": "2021-07-29T12:54:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679115976",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679115976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679119786",
      "pull_request_review_id": 718028111,
      "id": 679119786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTExOTc4Ng==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.\n+\n+===Checksum===\n+\n+Follwing the top level script expression is a single octothorpe (<tt>#</tt>) followed by the 8 character checksum.\n+The checksum is an error correcting checksum similar to bech32.\n+\n+The checksum has the following properties:\n+* Mistakes in a descriptor string are measured in \"symbol errors\". The higher the number of symbol errors, the harder it is to detect:\n+** An error substituting a character from <tt>0123456789()[],'/*abcdefgh@:$%{}</tt> for another in that set always counts as 1 symbol error.\n+*** Note that hex encoded keys are covered by these characters. Extended keys (<tt>xpub</tt> and <tt>xprv</tt>) use other characters too, but also have their own checksum mechansim.\n+*** <tt>SCRIPT</tt> expression function names use other characters, but mistakes in these would generally result in an unparsable descriptor.\n+** A case error always counts as 1 symbol error.\n+** Any other 1 character substitution error counts as 1 or 2 symbol errors.\n+* Any 1 symbol error is always detected.\n+* Any 2 or 3 symbol error in a descriptor of up to 49154 characters is always detected.\n+* Any 4 symbol error in a descriptor of up to 507 characters is always detected.\n+* Any 5 symbol error in a descriptor of up to 77 characters is always detected.\n+* Is optimized to minimize the chance of a 5 symbol error in a descriptor up to 387 characters is undetected\n+* Random errors have a chance of 1 in 2<super>40</super> of being undetected.\n+\n+The checksum itself uses the same character set as bech32: <tt>qpzry9x8gf2tvdw0s3jn54khce6mua7l</tt>",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 135,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also bech32m here (if changed above)",
      "created_at": "2021-07-29T12:50:22Z",
      "updated_at": "2021-07-29T12:54:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679119786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679119786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679120839",
      "pull_request_review_id": 718028111,
      "id": 679120839,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTEyMDgzOQ==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 114,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/alphabetic/alphanumeric",
      "created_at": "2021-07-29T12:51:47Z",
      "updated_at": "2021-07-29T12:54:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679120839",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679120839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679121275",
      "pull_request_review_id": 718028111,
      "id": 679121275,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTEyMTI3NQ==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 90,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/hardnened/hardened",
      "created_at": "2021-07-29T12:52:19Z",
      "updated_at": "2021-07-29T12:54:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679121275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679121275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679332320",
      "pull_request_review_id": 718333795,
      "id": 679332320,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzMjMyMA==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.\n+\n+===Checksum===\n+\n+Follwing the top level script expression is a single octothorpe (<tt>#</tt>) followed by the 8 character checksum.\n+The checksum is an error correcting checksum similar to bech32.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 119,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679109578,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Bech32m is bech32 with a different constant. The method of the encoding itself is bech32, and specified by bech32, not bech32m.",
      "created_at": "2021-07-29T17:02:35Z",
      "updated_at": "2021-07-29T17:02:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679332320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679332320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679332875",
      "pull_request_review_id": 718334506,
      "id": 679332875,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzMjg3NQ==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 114,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679120839,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alphabetic is correct.",
      "created_at": "2021-07-29T17:03:25Z",
      "updated_at": "2021-07-29T17:03:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679332875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679332875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336295",
      "pull_request_review_id": 718339120,
      "id": 679336295,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzNjI5NQ==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>\n+\n+===<tt>tr()</tt>===\n+\n+The <tt>tr(KEY)</tt> or <tt>tr(KEY, TREE)</tt> expression can only be used as a top level expression.\n+All key expressions under any <tt>tr()</tt> expression must create x-only public keys.\n+\n+<tt>tr(KEY)</tt> takes a single key expression as an argument and produces a P2TR output script which does not have a script path.\n+The keys produced by the key expression are used as the internal key as specified by [[bip-0341.mediawiki#cite_ref-22-0|BIP 341]].",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 54,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679114748,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A single key expression produces one key per index, but multiple keys in general. Each key is used as the internal key to a separate output. This should already be obvious from knowing BIP 341, but I've tried to make it clearer.",
      "created_at": "2021-07-29T17:08:34Z",
      "updated_at": "2021-07-29T17:08:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679336295",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336368",
      "pull_request_review_id": 718339236,
      "id": 679336368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzNjM2OA==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679102157,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-07-29T17:08:41Z",
      "updated_at": "2021-07-29T17:08:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679336368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336421",
      "pull_request_review_id": 718339293,
      "id": 679336421,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzNjQyMQ==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.\n+\n+===Checksum===\n+\n+Follwing the top level script expression is a single octothorpe (<tt>#</tt>) followed by the 8 character checksum.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 118,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679107438,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-07-29T17:08:45Z",
      "updated_at": "2021-07-29T17:08:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679336421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336455",
      "pull_request_review_id": 718339334,
      "id": 679336455,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzNjQ1NQ==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.\n+\n+====Normalization of Key Expressions with Hardened Derivation====\n+\n+When a descriptor is exported without private keys, it is necessary to do additional derivation to remove any intermediate hardened derivation steps for the exported descriptor to be useful.\n+The exporter should derive the extended public key at the last hardened derivation step and use that extended public key as the key in the descriptor.\n+The derivation steps that were taken to get to that key must be added to the previous key origin information.\n+If there is no key origin information, then one must be added for the newly derived extended public key.\n+If the final derivation is hardened, then it is not necessary to do additional derivation.\n+\n+===Character Set===\n+\n+The expressions used in descriptors must only contain characters within this character set so that the descriptor checksum will work.\n+\n+The allowed characters are:\n+<pre>\n+0123456789()[],'/*abcdefgh@:$%{}\n+IJKLMNOPQRSTUVWXYZ&+-.;<=>?!^_|~\n+ijklmnopqrstuvwxyzABCDEFGH`#\"\\<space>\n+</pre>\n+Note that <tt><space></tt> on the last line is a space character.\n+\n+This character set is written as 3 groups of 32 characters in this specific order so that the checksum below can identify more errors.\n+The first group are the most common \"unprotected\" characters (i.e. things such as hex and keypaths that do not already have their own checksums).\n+Case errors cause an offset that is a multiple of 32 while as many alphabetic characters are in the same group while following the previous restrictions.\n+\n+===Checksum===\n+\n+Follwing the top level script expression is a single octothorpe (<tt>#</tt>) followed by the 8 character checksum.\n+The checksum is an error correcting checksum similar to bech32.\n+\n+The checksum has the following properties:\n+* Mistakes in a descriptor string are measured in \"symbol errors\". The higher the number of symbol errors, the harder it is to detect:\n+** An error substituting a character from <tt>0123456789()[],'/*abcdefgh@:$%{}</tt> for another in that set always counts as 1 symbol error.\n+*** Note that hex encoded keys are covered by these characters. Extended keys (<tt>xpub</tt> and <tt>xprv</tt>) use other characters too, but also have their own checksum mechansim.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 124,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679108108,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-07-29T17:08:49Z",
      "updated_at": "2021-07-29T17:08:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679336455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336522",
      "pull_request_review_id": 718339425,
      "id": 679336522,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzNjUyMg==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.\n+A new expression is defined: Tree Expressions\n+\n+===Tree Expression===\n+\n+A Tree Expression (denoted <tt>TREE</tt>) is an expression which represents a tree of scripts.\n+The way the tree is represented in an output script is dependent on the higher level expressions.\n+\n+A Tree Expression is:\n+* Any Script Expression that is allowed at the level this Tree Expression is in.\n+* A pair of Tree Expressions consisting of:\n+** An open brace <tt>{</tt>\n+** A Tree Expression\n+** A comma <tt>,</tt>\n+** A Tree Expression\n+** A closing brance <tt>}</tt>\n+\n+===<tt>tr()</tt>===\n+\n+The <tt>tr(KEY)</tt> or <tt>tr(KEY, TREE)</tt> expression can only be used as a top level expression.\n+All key expressions under any <tt>tr()</tt> expression must create x-only public keys.\n+\n+<tt>tr(KEY)</tt> takes a single key expression as an argument and produces a P2TR output script which does not have a script path.\n+The keys produced by the key expression are used as the internal key as specified by [[bip-0341.mediawiki#cite_ref-22-0|BIP 341]].\n+Specifically, \"If the spending conditions do not require a script path, the output key should commit to an unspendable script path instead of having no script path.\n+This can be achieved by computing the output key point as ''Q = P + int(hash<sub>TapTweak</sub>(bytes(P)))G''.\"\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key)))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+<tt>tr(KEY, TREE)</tt> takes a key expression as the first argument, and a tree expression as the second argument and produces a P2TR output script which has a script path.\n+The keys produced by the first key expression are used as the internal key as specified by [[bip-0341.mediawiki#Constructing_and_spending_Taproot_outputs|BIP 341]].\n+The Tree expression becomes the Taproot script tree as described in BIP 341.\n+A merkle root is computed from this tree and combined with the internal key to create the Taproot output key.\n+\n+<pre>\n+internal_key:       lift_x(KEY)\n+merkle_root:        HashTapBranch(TREE)\n+32_byte_output_key: internal_key + int(HashTapTweak(bytes(internal_key) || merkle_root))G\n+scriptPubKey:       OP_1 <32_byte_output_key>\n+</pre>\n+\n+===Modified Key Expression===\n+\n+Key Expressions within a <tt>tr()</tt> expression must only create x-only public keys.\n+Uncompressed public keys are not allowed, but compressed public keys would be implicitly converted to x-only public keys.\n+The keys derived from extended keys must be serialized as x-only public keys.\n+An additional key expression is defined only for use within a <tt>tr()</tt> descriptor:\n+\n+* A 64 hex character string representing an x-only public key\n+\n+==Test Vectors==\n+\n+TBD\n+\n+==Backwards Compatibility==\n+\n+<tt>tr()</tt> descriptors use the format and general operation specified in [[bip-descriptor-general.mediawiki|bip-descriptor-general]].\n+As these are a wholly new descriptors, they are not compatible with any implementation.",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 92,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679112506,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-07-29T17:08:55Z",
      "updated_at": "2021-07-29T17:08:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679336522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336573",
      "pull_request_review_id": 718339480,
      "id": 679336573,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzNjU3Mw==",
      "diff_hunk": "@@ -0,0 +1,101 @@\n+<pre>\n+  BIP: bip-descriptors-tr\n+  Layer: Applications\n+  Title: tr() Output Script Descriptors\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-tr\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This document specifies <tt>tr()</tt> output script descriptors.\n+<tt>tr()</tt> descriptors take a key and optionally a tree of scripts and produces a P2TR output script.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Taproot added one additional standard output script format: P2TR.\n+These expressions allow specifying those formats as a descriptor.\n+\n+==Specification==\n+\n+A new script expressions are defined: <tt>tr()</tt>.",
      "path": "bip-descriptors-tr.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679115976,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-07-29T17:08:59Z",
      "updated_at": "2021-07-29T17:08:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679336573",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336689",
      "pull_request_review_id": 718339617,
      "id": 679336689,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzNjY4OQ==",
      "diff_hunk": "@@ -0,0 +1,277 @@\n+<pre>\n+  BIP: bip-descriptors-general\n+  Layer: Applications\n+  Title: Output Script Descriptors General Operation\n+  Author: Pieter Wuille <pieter@wuille.net>\n+          Andrew Chow <andrew@achow101.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-descriptors-general\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-27\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+\n+Output Script Descriptors are a simple language which can be used to describe collections of output scripts.\n+There can be many different descriptor fragments and functions.\n+This document describes the general syntax for descriptors, descriptor checksums, and common expressions.\n+\n+==Copyright==\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+==Motivation==\n+\n+Bitcoin wallets traditionally have stored a set of keys which are later serialized and mutated to produce the output scripts that the wallet watches and the addresses it provides to users.\n+Typically backups have consisted of solely the private keys, nowadays primarily in the form of BIP 39 mnemonics.\n+However this backup solution is insuffient, especially since the introduction of Segregated Witness which added new output types.\n+Given just the private keys, it is not possible for restored wallets to know which kinds of output scripts and addresses to produce.\n+This has lead to incompatibilities between wallets when restoring a backup or exporting data for a watch only wallet.\n+\n+Further complicating matters are BIP 32 derivation paths.\n+Although BIPs 44, 49, and 84 have specified standard BIP 32 derivation paths for different output scripts and addresses, not all wallets support them nor use those derivation paths.\n+The lack of derivation path information in these backups and exports leads to further incompatibilities between wallets.\n+\n+Current solutions to these issues have not been generic and can be viewed as being layer violations.\n+Solutions such as introducing different version bytes for extended key serialization both are a layer violation (key derivation should be separate from script type meaning) and specific only to a particular derivation path and script type.\n+\n+Output Script Descriptors introduces a generic solution to these issues.\n+Script types are specified explicitly through the use of Script Expressions.\n+Key derivation paths are specified explicitly in Key Expressions.\n+These allow for creating wallet backups and exports which specify the exact scripts, subscripts (redeemScript, witnessScript, etc.), and keys to produce.\n+With the general structure specified in this BIP, new Script Expressions can be introduced as new script types are added.\n+Lastly, the use of common terminology and existing standards allow for Output Script Descriptors to be engineer readable so that the results can be understood at a glance.\n+\n+==Specification==\n+\n+Descriptors consist of several types of expressions.\n+The top level expression is a <tt>SCRIPT</tt>.\n+This expression may be followed by <tt>#CHECKSUM</tt>, where <tt>CHECKSUM</tt> is an 8 character alphanumeric descriptor checksum.\n+\n+===Script Expressions===\n+\n+Script Expressions (denoted <tt>SCRIPT</tt>) are expressions which correspond directly with a Bitcoin script.\n+These expressions are written as functions and take arguments.\n+Such expressions have a script template which is filled with the arguments correspondingly.\n+Expressions are written with a human readable identifier string with the arguments enclosed with parentheses.\n+The identifier string should be alphanumeric and may include underscores.\n+\n+The arguments to a script expression are defined by that expression itself.\n+They could be a script expression, a key expression, or some other expression entirely.\n+\n+===Key Expressions===\n+\n+A common expression used as an argument to script expressions are key expressions (denoted <tt>KEY</tt>).\n+These represent a public or private key and, optionally, information about the origin of that key.\n+Key expressions can only be used as arguments to script expressions.\n+\n+Key expressions consist of:\n+* Optionally, key origin information, consisting of:\n+** An open bracket <tt>[</tt>\n+** Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP 32 for details)\n+** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt>  path elements to indicate the unhardened or hardened derivation steps between the fingerprint and the key that follows.\n+** A closing bracket <tt>]</tt>\n+* Followed by the actual key, which is either:\n+** A hex encoded public key, which depending the script expression, may be either:\n+*** 66 hex character string beginning with <tt>02</tt> or <tt>03</tt> representing a compressed public key\n+*** 130 hex character string beginning with <tt>04</tt> representing an uncompressed public key\n+** A [[https://en.bitcoin.it/wiki/Wallet_import_format|WIF]] encoded private key\n+** <tt>xpub</tt> encoded extended public key or <tt>xprv</tt> encoded extended private key (as defined in BIP 32)\n+*** Followed by zero or more <tt>/NUM</tt> or <tt>/NUMh</tt> path elements indicating BIP 32 derivation steps to be taken after the given extended key.\n+*** Optionally followed by a single <tt>/*</tt> or <tt>/*h</tt> final step to denote all direct unhardened or hardened children.\n+\n+If the <tt>KEY</tt> is a BIP 32 extended key, before output scripts can be created, child keys must be derived using the derivation information that follows the extended key.\n+When the final step is <tt>/*</tt> or <tt>/*'</tt>, an output script will be produced for every child key index.\n+The derived key must be not be serialized as an uncompressed public key.\n+Script Expressions may have further requirements on how derived public keys are serialized for script creation.\n+\n+In the above specification, the hardened indicator <tt>h</tt> may be replaced with alternative hardnened indicators of <tt>H</tt> or <tt>'</tt>.",
      "path": "bip-descriptors-general.mediawiki",
      "position": null,
      "original_position": 90,
      "commit_id": "761ef12782dc02af48b3e3b5a5238faeec6870fe",
      "original_commit_id": "1e7ab4d53658c9d51d1e4621a71ab9450e38706a",
      "in_reply_to_id": 679121275,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-07-29T17:09:08Z",
      "updated_at": "2021-07-29T17:09:08Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1143#discussion_r679336689",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/679336689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1143"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    }
  ]
}