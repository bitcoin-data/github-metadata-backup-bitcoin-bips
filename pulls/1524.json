{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1524",
    "id": 1637792405,
    "node_id": "PR_kwDOAN28mc5hnrqV",
    "html_url": "https://github.com/bitcoin/bips/pull/1524",
    "diff_url": "https://github.com/bitcoin/bips/pull/1524.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1524.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1524/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
    "number": 1524,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Ephemeral anchors",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Opening to allow discussion on the text separately from the Bitcoin Core implementation here https://github.com/bitcoin/bitcoin/pull/30239\r\n\r\nExample usage:\r\nhttps://github.com/instagibbs/bolts/commits/zero_fee_commitment\r\nhttps://github.com/instagibbs/lightning/commits/commit_zero_fees",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2023-12-10T19:56:50Z",
    "updated_at": "2024-07-01T17:19:40Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "3e41b6906e235be7139edba2cb34ed690b2efbaa",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "instagibbs:ephemeral_anchor",
      "ref": "ephemeral_anchor",
      "sha": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 17830834,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzgzMDgzNA==",
        "name": "bips",
        "full_name": "instagibbs/bips",
        "owner": {
          "login": "instagibbs",
          "id": 5767891,
          "node_id": "MDQ6VXNlcjU3Njc4OTE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/instagibbs",
          "html_url": "https://github.com/instagibbs",
          "followers_url": "https://api.github.com/users/instagibbs/followers",
          "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
          "organizations_url": "https://api.github.com/users/instagibbs/orgs",
          "repos_url": "https://api.github.com/users/instagibbs/repos",
          "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/instagibbs/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/instagibbs/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/instagibbs/bips",
        "archive_url": "https://api.github.com/repos/instagibbs/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/instagibbs/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/instagibbs/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/instagibbs/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/instagibbs/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/instagibbs/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/instagibbs/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/instagibbs/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/instagibbs/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/instagibbs/bips/contributors",
        "deployments_url": "https://api.github.com/repos/instagibbs/bips/deployments",
        "downloads_url": "https://api.github.com/repos/instagibbs/bips/downloads",
        "events_url": "https://api.github.com/repos/instagibbs/bips/events",
        "forks_url": "https://api.github.com/repos/instagibbs/bips/forks",
        "git_commits_url": "https://api.github.com/repos/instagibbs/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/instagibbs/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/instagibbs/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/instagibbs/bips.git",
        "issue_comment_url": "https://api.github.com/repos/instagibbs/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/instagibbs/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/instagibbs/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/instagibbs/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/instagibbs/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/instagibbs/bips/languages",
        "merges_url": "https://api.github.com/repos/instagibbs/bips/merges",
        "milestones_url": "https://api.github.com/repos/instagibbs/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/instagibbs/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/instagibbs/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/instagibbs/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:instagibbs/bips.git",
        "stargazers_url": "https://api.github.com/repos/instagibbs/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/instagibbs/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/instagibbs/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/instagibbs/bips/subscription",
        "tags_url": "https://api.github.com/repos/instagibbs/bips/tags",
        "teams_url": "https://api.github.com/repos/instagibbs/bips/teams",
        "trees_url": "https://api.github.com/repos/instagibbs/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/instagibbs/bips.git",
        "hooks_url": "https://api.github.com/repos/instagibbs/bips/hooks",
        "svn_url": "https://github.com/instagibbs/bips",
        "homepage": "bitcoin.org",
        "language": "Protocol Buffer",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 15084,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-01T16:52:02Z",
        "created_at": "2014-03-17T14:32:12Z",
        "updated_at": "2024-07-01T16:55:50Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2218f698297e2abd0260d68ea9456cc57ee9346f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5298,
        "stargazers_count": 9091,
        "watchers_count": 9091,
        "size": 15080,
        "default_branch": "master",
        "open_issues_count": 43,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-01T16:52:05Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-07-01T15:33:02Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 138,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 56,
    "comments": 23
  },
  "events": [
    {
      "event": "commented",
      "id": 1849066604,
      "node_id": "IC_kwDOAN28mc5uNoRs",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1849066604",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T20:00:19Z",
      "updated_at": "2023-12-10T20:00:19Z",
      "author_association": "MEMBER",
      "body": "@ariard bring comment from https://github.com/instagibbs/bolts/commit/4830650f0d45e7ff2c8637e05dc89d14d0d9a506#diff-6bed824879b760d329ec379b16a1d0e78ffba034fdfa13b95cf0480e09fa7c4bR156\r\n\r\n> This is uncertain to me how this rule works with trimmed HTLCs on LN commitment transactions making their fees non-zero, even assuming anchor outputs where second-stage txn are signed with 0-feerate.\r\n\r\nI gave an example spec at the top, and implementation(of most of it) for CLN. Links again here:\r\n\r\nExample usage:\r\nhttps://github.com/instagibbs/bolts/commits/zero_fee_commitment\r\nhttps://github.com/instagibbs/lightning/commits/commit_zero_fees\r\n\r\nTLDR: trimmed value can go into the anchor itself, and is simply spent to fees by the spender.\r\n\r\n> Otherwise a time-sensitive package can be tampered by third-parties entering into replacement cycling games, without being a direct off-chain counterparty to the target transaction traffic.\r\n\r\nIn the BIP I can mention that it allows any party to spend, therefore any party can attempt a cycling attack. We're not going to agree on the severity of the attack, so it's up to implementer to do their own research.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1849066604",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "mentioned",
      "id": 11203568841,
      "node_id": "MEE_lADOAN28mc55RC2wzwAAAAKbyOTJ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11203568841",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T20:00:20Z"
    },
    {
      "event": "subscribed",
      "id": 11203568848,
      "node_id": "SE_lADOAN28mc55RC2wzwAAAAKbyOTQ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11203568848",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-10T20:00:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11211979022,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAAKcSTkO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11211979022",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T15:24:28Z"
    },
    {
      "event": "commented",
      "id": 1865322320,
      "node_id": "IC_kwDOAN28mc5vLo9Q",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1865322320",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-21T00:43:59Z",
      "updated_at": "2023-12-21T00:43:59Z",
      "author_association": "MEMBER",
      "body": "> TLDR: trimmed value can go into the anchor itself, and is simply spent to fees by the spender.\r\n\r\nI believe this is broken - Let’s say you have Alice and Bob sharing a Lightning channel, with `max_accepted_htlcs` (483) on both sides. Alice is a routing hop allowing HTLC forward going through Alice-Bob link. Bob circularly routes 483 offered HTLCs  of value 330 satoshis (total amount 159390 satoshis). Those HTLCs are symmetrically committed on both Alice and Bob states. Assuming Bob can broadcast privately to a [transaction accelerator](https://www.viabtc.com/tools/txaccelerator/) with a child pocketing the anchor itself, Bob can mine the commitment transaction and steals 159390 satoshis from Alice’s balance.\r\n\r\nThanks to correct me if my understanding of `option_commit_zero_fee` is incorrect.\r\n\r\nAs of today, Bob could do the same attack by routing the HTLCs, however as the trimmed HTLCs are committed as miner fees, if Bob does not have low-hashrate capabilities, he cannot steal from Alice. Moving trimmed HTLC amounts from miners fees to a anyone-can-spend amount changes notably the threat model, in my opinion.\r\n\r\n> In the BIP I can mention that it allows any party to spend, therefore any party can attempt a cycling attack. We're not going > to agree on the severity of the attack, so it's up to implementer to do their own research.\r\n\r\nWhile I agree that we won’t agree on the severity of a replacement cycling attack, I disagree on the deference to put on implementers the responsibility to do their own research on the security of such proposal. Not only this is unfavorable practice for Internet protocol standardization works (all IETF RFCs must have mandatory security sections - RFC 3552), beyond for the given proposal it modifies the attacker incentives model as _anyone_ on the peer-to-peer transaction-relay network can enter into replacement cycling attacks against your time-sensitive packages or massive transaction batch.\r\n\r\nAllowing anyone to tamper with packages is not only an issue for the safety of your use-case funds, it does open the door to adversaries tamper with the global transaction traffic, with potential way to realize gains. In the past, [miners-harvesting attacks](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019615.html) have been considered, and here it’s opening one. If you know that the transaction issuer of this transaction pattern will automatically fee-bump its package after X blocks without confirmation, anyone-can-spend ephemeral anchor allows you to substitute a “honest” CPFP at 20 sat/vbytes with a “malicious\" CPFP at 30 sat/vbytes and then evicts this CPFP to trigger an eviction of the 0-fee parent itself from network mempools.\r\n\r\nFor this last reason, I think that anyone-can-spend ephemeral anchor should be reconsidered and locking the ephemeral anchor under a counterparty pubkey should be introduced, as we’re doing with anchor outputs on lightning commitment transactions today. I understand the efficiency reasons to use an `OP_TRUE` though I’m unsure it’s worth the newly introduced safety weaknesses. ",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1865322320",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "comment_deleted",
      "id": 11309240884,
      "node_id": "CDE_lADOAN28mc55RC2wzwAAAAKiFVI0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11309240884",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-21T01:52:29Z"
    },
    {
      "event": "commented",
      "id": 1869734387,
      "node_id": "IC_kwDOAN28mc5vceHz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1869734387",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-26T19:31:55Z",
      "updated_at": "2023-12-26T19:31:55Z",
      "author_association": "MEMBER",
      "body": "Node policy is not a standardizable subject matter in itself, and I'm not really seeing anything here to standardize?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1869734387",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "reviewed",
      "id": 1805282997,
      "node_id": "PRR_kwDOAN28mc5rmm61",
      "url": null,
      "actor": null,
      "commit_id": "7d79c5692bb745bf158f2d8f8e4979d80ad07e58",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "illesdavid",
        "id": 121698016,
        "node_id": "U_kgDOB0D24A",
        "avatar_url": "https://avatars.githubusercontent.com/u/121698016?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/illesdavid",
        "html_url": "https://github.com/illesdavid",
        "followers_url": "https://api.github.com/users/illesdavid/followers",
        "following_url": "https://api.github.com/users/illesdavid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/illesdavid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/illesdavid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/illesdavid/subscriptions",
        "organizations_url": "https://api.github.com/users/illesdavid/orgs",
        "repos_url": "https://api.github.com/users/illesdavid/repos",
        "events_url": "https://api.github.com/users/illesdavid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/illesdavid/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-1805282997",
      "submitted_at": "2024-01-05T02:47:19Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11403821230,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAAKnuICu",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11403821230",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-05T18:00:17Z"
    },
    {
      "event": "commented",
      "id": 1881520578,
      "node_id": "IC_kwDOAN28mc5wJbnC",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1881520578",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T17:25:24Z",
      "updated_at": "2024-01-08T17:25:24Z",
      "author_association": "MEMBER",
      "body": "> As of today, Bob could do the same attack by routing the HTLCs, however as the trimmed HTLCs are committed as miner fees, if Bob does not have low-hashrate capabilities, he cannot steal from Alice. Moving trimmed HTLC amounts from miners fees to a anyone-can-spend amount changes notably the threat model, in my opinion.\r\n\r\n@ariard it's an implementation detail for both Bitcoin Core and LN spec, but your hesitancy has caused me to look for a better solution than I was previously thinking: https://delvingbitcoin.org/t/ephemeral-anchors-and-mev/383\r\n\r\n> While I agree that we won’t agree on the severity of a replacement cycling attack\r\n\r\nI'm fine adding some warning text wherever to inform implementors. Propose some please.\r\n\r\n> For this last reason, I think that anyone-can-spend ephemeral anchor should be reconsidered and locking the ephemeral anchor under a counterparty pubkey should be introduced, as we’re doing with anchor outputs on lightning commitment transactions today. I understand the efficiency reasons to use an OP_TRUE though I’m unsure it’s worth the newly introduced safety weaknesses.\r\n\r\nI think the story for keyless is much simpler, even if you personally disagree with the relative security of it.\r\n\r\nAnything that's relay-standard now would be a potential \"rug\" if it suddenly required you to be V3, that you must RBF all sibling spends, etc. If we instituted a rule anyways safely somehow, it may interfere with future relaxations where we don't care about dust(say, widespread utreexo deployment). Regardless today it also has a weaker anti-dust story as it can't be cleaned up except by key owners.\r\n\r\nWe're just not going to agree on this given our nearly year long discussions of cycle replacement attacks and similar, and it'll be up to others to weigh in on this point for specific use-cases. I apologize for not moving forward with this line of discussion from here on out.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1881520578",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "mentioned",
      "id": 11420547516,
      "node_id": "MEE_lADOAN28mc55RC2wzwAAAAKot7m8",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11420547516",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T17:25:24Z"
    },
    {
      "event": "subscribed",
      "id": 11420547531,
      "node_id": "SE_lADOAN28mc55RC2wzwAAAAKot7nL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11420547531",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T17:25:24Z"
    },
    {
      "event": "commented",
      "id": 1881528829,
      "node_id": "IC_kwDOAN28mc5wJdn9",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1881528829",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T17:30:32Z",
      "updated_at": "2024-01-08T17:30:32Z",
      "author_association": "MEMBER",
      "body": "> Node policy is not a standardizable subject matter in itself, and I'm not really seeing anything here to standardize?\r\n\r\nI'll let others weigh in, but in general I'd like to have a common place to have a tx format, like this, publicly documented, with some suggestions for implementors, even if we cannot force anyone to do so. \r\n\r\nRelated, I see no mention of banning policy in BIP rules; let me know if I missed something. \r\n\r\nI'll leave this PR open for now.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1881528829",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 1895039106,
      "node_id": "IC_kwDOAN28mc5w9ACC",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1895039106",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T06:30:44Z",
      "updated_at": "2024-01-17T06:30:44Z",
      "author_association": "MEMBER",
      "body": "BIPs are for standardization across implementations. Policy is an individual per-node decision, not something standardized in itself.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1895039106",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 1897958506,
      "node_id": "IC_kwDOAN28mc5xIIxq",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1897958506",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-18T07:44:08Z",
      "updated_at": "2024-01-18T07:44:08Z",
      "author_association": "MEMBER",
      "body": "> I'll let others weigh in\r\n\r\nFor what it's worth i think ti's useful to have a BIP for this.\r\n\r\n> BIPs are for standardization across implementations. Policy is an individual per-node decision, not something standardized in itself.\r\n\r\nBy this same token why bother writing BIPs for output script descriptors? For deterministic key generation? It's most of the time an individual decision whether to use a feature. But that doesn't change the fact that it's useful to have a public, implementation-agnostic, documentation for anything where inter-compatibility is needed.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1897958506",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "reviewed",
      "id": 1835555343,
      "node_id": "PRR_kwDOAN28mc5taFoP",
      "url": null,
      "actor": null,
      "commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-1835555343",
      "submitted_at": "2024-01-22T02:40:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "commented",
      "id": 1904394135,
      "node_id": "IC_kwDOAN28mc5xgr-X",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1904394135",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-22T16:43:28Z",
      "updated_at": "2024-01-22T16:43:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "> BIPs are for standardization across implementations. Policy is an individual per-node decision, not something standardized in itself.\r\n\r\nI suspect if this is a non-negotiable for this repo and this BIP editor (and hence won't get a BIP number) then we'll need a bips-policy repo or something (under the same GitHub organization perhaps). I get Luke's perspective to some extent (default policy proposals are certainly a very different animal to say consensus rule proposals) but this shouldn't be stunting collaboration between Core developers and Lightning developers on policy proposals. Personally I'd rather these draft proposals were incorporated into the BIP process but if that isn't going to happen then the documents need to be worked on in a different repo and with a different numbering system. Of course there is no guarantee these policy proposals will ever be merged into Core or an alternative implementation (they'd need to go through the Core etc review process to be merged) but that doesn't mean people can't draft and collaborate on proposals. Applies to #1541 too.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1904394135",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 1907937053,
      "node_id": "IC_kwDOAN28mc5xuM8d",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1907937053",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T11:25:15Z",
      "updated_at": "2024-01-24T11:25:15Z",
      "author_association": "MEMBER",
      "body": "The idea of only using BIPs for standards that need to be adopted by \"everybody\" or are consensus rules has no precedent and makes no sense. There are lots of wallet standards, p2p messages, and services dedicated to SPV clients that are used by a small fraction of Bitcoin users and software. A large number of BIPs are not relevant to node software, but they are Bitcoin-specific and should have canonical implementation-agnostic specifications and documentation for multiple people to refer to.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1907937053",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 1907976635,
      "node_id": "IC_kwDOAN28mc5xuWm7",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1907976635",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T11:52:10Z",
      "updated_at": "2024-01-24T11:52:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "@glozow: I personally agree with you. I asked Luke about this on X/Twitter (it is public so I hope he doesn't mind me copying it over here) and he [responded](https://x.com/LukeDashjr/status/1749521346575360260?s=20):\r\n\r\n> \"Transaction pinning\" AFAIK is a _result_ of policy centralization efforts, not a real problem. The alternative is to encourage diverse policies, and at the technical level, to prepare multiple alternative transaction variants to ensure one being rejected won't be a problem.\r\n\r\nSo his perspective is not that BIPs need to be adopted by everybody or have to be consensus rules (as you state) but that he thinks attempts to standardize policy aren't a good idea and are perhaps even harmful. Again I personally disagree with that perspective (and I suspect everyone working on these proposals also disagree with that perspective) but just clarifying what Luke's perspective is.\r\n\r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1907976635",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "mentioned",
      "id": 11583348949,
      "node_id": "MEE_lADOAN28mc55RC2wzwAAAAKya-DV",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11583348949",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T11:52:10Z"
    },
    {
      "event": "subscribed",
      "id": 11583348968,
      "node_id": "SE_lADOAN28mc55RC2wzwAAAAKya-Do",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11583348968",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T11:52:11Z"
    },
    {
      "event": "commented",
      "id": 1908014619,
      "node_id": "IC_kwDOAN28mc5xuf4b",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1908014619",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T12:17:35Z",
      "updated_at": "2024-01-24T12:17:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I suspect if this is a non-negotiable for this repo and this BIP editor (and hence won't get a BIP number) then we'll need a bips-policy repo or something (under the same GitHub organization perhaps).\r\n\r\nIn the absence of convincing Luke otherwise or adding a new BIP editor who disagrees directly with Luke on this topic it seems to me like a new repo for policy related BIPs is the best way forward.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-1908014619",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "reviewed",
      "id": 2025934038,
      "node_id": "PRR_kwDOAN28mc54wUzW",
      "url": null,
      "actor": null,
      "commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2025934038",
      "submitted_at": "2024-04-26T22:08:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "reviewed",
      "id": 2025940561,
      "node_id": "PRR_kwDOAN28mc54wWZR",
      "url": null,
      "actor": null,
      "commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2025940561",
      "submitted_at": "2024-04-26T22:18:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "reviewed",
      "id": 2026110328,
      "node_id": "PRR_kwDOAN28mc54w_14",
      "url": null,
      "actor": null,
      "commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2026110328",
      "submitted_at": "2024-04-27T01:15:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "commented",
      "id": 2082776584,
      "node_id": "IC_kwDOAN28mc58JKYI",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2082776584",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T13:37:02Z",
      "updated_at": "2024-04-29T13:38:04Z",
      "author_association": "MEMBER",
      "body": "pushed fixups, but marking as draft until I come back to this. Scope has changed substantially so this essentially needs a complete re-write.\r\n\r\nshort motivation for changes for those interested here: https://github.com/bitcoin/bitcoin/pull/29001#issuecomment-2025830996",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2082776584",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12643362404,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAALxmmZk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12643362404",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T13:37:12Z"
    },
    {
      "event": "convert_to_draft",
      "id": 12643363508,
      "node_id": "CTDE_lADOAN28mc55RC2wzwAAAALxmmq0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12643363508",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T13:37:17Z"
    },
    {
      "event": "labeled",
      "id": 12746769108,
      "node_id": "LE_lADOAN28mc55RC2wzwAAAAL3xELU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12746769108",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T16:56:06Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 12746769115,
      "node_id": "LE_lADOAN28mc55RC2wzwAAAAL3xELb",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12746769115",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T16:56:06Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2110885055,
      "node_id": "PRR_kwDOAN28mc590Yy_",
      "url": null,
      "actor": null,
      "commit_id": "f08392a2fcc1fab75275ddc19933eedf3a2a8910",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "jw are you planning to update this since n30239 is open?",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2110885055",
      "submitted_at": "2024-06-11T16:04:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "commented",
      "id": 2161129653,
      "node_id": "IC_kwDOAN28mc6A0Di1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2161129653",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T16:06:33Z",
      "updated_at": "2024-06-11T16:06:33Z",
      "author_association": "MEMBER",
      "body": "@glozow yes thanks for reminding me, a number of things have changed like the output format requirements, sibling eviction being broken out into its own TRUC feature, etc.\r\n\r\nI'll  revive this this week",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2161129653",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "mentioned",
      "id": 13119652841,
      "node_id": "MEE_lADOAN28mc55RC2wzwAAAAMN_gPp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13119652841",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T16:06:34Z"
    },
    {
      "event": "subscribed",
      "id": 13119652887,
      "node_id": "SE_lADOAN28mc55RC2wzwAAAAMN_gQX",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13119652887",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T16:06:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13121286604,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAAMOFvHM",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13121286604",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T18:35:21Z"
    },
    {
      "event": "ready_for_review",
      "id": 13121288171,
      "node_id": "RFRE_lADOAN28mc55RC2wzwAAAAMOFvfr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13121288171",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T18:35:30Z"
    },
    {
      "event": "commented",
      "id": 2161383610,
      "node_id": "IC_kwDOAN28mc6A1Bi6",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2161383610",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T18:36:32Z",
      "updated_at": "2024-06-11T18:36:32Z",
      "author_association": "MEMBER",
      "body": "re-did the text to reflect the updated changes to the new PR https://github.com/bitcoin/bitcoin/pull/30239 with updated(shorter!) motivation section",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2161383610",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "reviewed",
      "id": 2111210608,
      "node_id": "PRR_kwDOAN28mc591oRw",
      "url": null,
      "actor": null,
      "commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Just a quick first pass",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2111210608",
      "submitted_at": "2024-06-11T19:12:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13132057822,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAAMOu0ze",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13132057822",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T13:34:46Z"
    },
    {
      "event": "commented",
      "id": 2163728285,
      "node_id": "IC_kwDOAN28mc6A99-d",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2163728285",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T19:11:39Z",
      "updated_at": "2024-06-12T19:11:39Z",
      "author_association": "MEMBER",
      "body": "Again, policy isn't a subject of standardization. While things like BIP 125 and TRUC got BIPs for signalling, there isn't anything like that here.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2163728285",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 2163794697,
      "node_id": "IC_kwDOAN28mc6A-OMJ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2163794697",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T19:56:09Z",
      "updated_at": "2024-06-12T19:56:09Z",
      "author_association": "MEMBER",
      "body": "Again, I don't see that policy written anywhere, but don't want to overly bother people. I'll just make a BINANA or something if that's the general consensus.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2163794697",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 2166507315,
      "node_id": "IC_kwDOAN28mc6BIkcz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2166507315",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T18:25:47Z",
      "updated_at": "2024-06-13T18:25:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don’t think that it’s general consensus. While I agree with Luke that it would be troublesome if someone prescribed that all implementations must follow a specific mempool policy, I don’t see an issue with proposing a mempool policy that implementations can choose to adopt.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2166507315",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 2181674511,
      "node_id": "IC_kwDOAN28mc6CCbYP",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2181674511",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-20T22:51:36Z",
      "updated_at": "2024-06-20T22:51:36Z",
      "author_association": "MEMBER",
      "body": "It's not a policy, it's the nature of it. There's nothing to coordinate between implementations.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2181674511",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 2182896039,
      "node_id": "IC_kwDOAN28mc6CHFmn",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2182896039",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T14:46:36Z",
      "updated_at": "2024-06-21T14:46:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ephemeral Anchors seem potentially useful for LN implementations to coordinate on (see documentation in https://bitcoinops.org/en/topics/ephemeral-anchors/), in the context of BOLT3 for instance, or for other ecosystem projects (e.g. [example use cases](https://github.com/bitcoin/bips/pull/1524/files#diff-246db581fdcbbadcd0a9c39ed9bf23898ebfdac36901a1a4ba2fe40190128c6dR54)) to possibly adopt for inter-op. If yes, it seems valuable to add a draft here (it would need to see wider adoption to progress to final).",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2182896039",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "unlabeled",
      "id": 13243802437,
      "node_id": "UNLE_lADOAN28mc55RC2wzwAAAAMVZGNF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13243802437",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:00:53Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2136964413,
      "node_id": "PRR_kwDOAN28mc5_X309",
      "url": null,
      "actor": null,
      "commit_id": "64370fa8b08b5358937dcae5f9853929f4d4ded3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ProofOfKeags",
        "id": 4033651,
        "node_id": "MDQ6VXNlcjQwMzM2NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4033651?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProofOfKeags",
        "html_url": "https://github.com/ProofOfKeags",
        "followers_url": "https://api.github.com/users/ProofOfKeags/followers",
        "following_url": "https://api.github.com/users/ProofOfKeags/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProofOfKeags/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProofOfKeags/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProofOfKeags/subscriptions",
        "organizations_url": "https://api.github.com/users/ProofOfKeags/orgs",
        "repos_url": "https://api.github.com/users/ProofOfKeags/repos",
        "events_url": "https://api.github.com/users/ProofOfKeags/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProofOfKeags/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2136964413",
      "submitted_at": "2024-06-24T23:18:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "commented",
      "id": 2192614053,
      "node_id": "IC_kwDOAN28mc6CsKKl",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2192614053",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-26T20:56:34Z",
      "updated_at": "2024-06-26T20:59:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It's not a policy, it's the nature of it. There's nothing to coordinate between implementations.\r\n\r\nThe point is that multiple LN implementations would like to use a specific output construction under specific circumstances. Currently, most nodes would not relay transactions with such outputs. Node operators might be sympathetic to the specific use-case, but will not want to be more permissive than necessary, while on the other hand, the carve-out needs to enable the use-case to make sense. It would neither make sense if there were multiple different variants for the output constructions nor to more broadly accept output constructions than necessary.\r\n\r\nTherefore, this proposal only makes sense when there is coordination on what nodes would relay on the network and the precise parameters for the output construction that fits the use-case. The design of this output construction is subject of this draft.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2192614053",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13331631231,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAAMaoIx_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13331631231",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T13:21:10Z"
    },
    {
      "event": "reviewed",
      "id": 2148692130,
      "node_id": "PRR_kwDOAN28mc6AEnCi",
      "url": null,
      "actor": null,
      "commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Did another pass, looks pretty good to me. I noticed that there is no Rationale section, although that seems to be somewhat covered in motivation and related works. If you wanted to add more explanation to design decisions, it might make sense to add such a section.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2148692130",
      "submitted_at": "2024-06-28T20:06:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "reviewed",
      "id": 2148879700,
      "node_id": "PRR_kwDOAN28mc6AFU1U",
      "url": null,
      "actor": null,
      "commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2148879700",
      "submitted_at": "2024-06-28T20:07:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13352765289,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAAMb4wdp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13352765289",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T14:53:46Z"
    },
    {
      "event": "commented",
      "id": 2200379346,
      "node_id": "IC_kwDOAN28mc6DJx_S",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2200379346",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T14:54:43Z",
      "updated_at": "2024-07-01T14:54:43Z",
      "author_association": "MEMBER",
      "body": "updated taking or adapting all suggestions and added a small rationale section",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2200379346",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "reviewed",
      "id": 2151814320,
      "node_id": "PRR_kwDOAN28mc6AQhSw",
      "url": null,
      "actor": null,
      "commit_id": "8852274d86a7f8b203a5fcae85726769671dffd9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Changes look good to me, found a few typos\r\n\r\nACK 8852274d86a7f8b203a5fcae85726769671dffd9",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#pullrequestreview-2151814320",
      "submitted_at": "2024-07-01T16:48:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDllNDYzZmU0NjZkMmZmOWY1ZDBiMTBlYzdhMmM1MjZjZDVlZDIwNjc",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "tree": {
        "sha": "668a3db899e96b6ce0b933ccedc84597738260d6",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/668a3db899e96b6ce0b933ccedc84597738260d6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e21bf40e0c7de24e052941629039ee920a339a23",
          "sha": "e21bf40e0c7de24e052941629039ee920a339a23",
          "html_url": "https://github.com/bitcoin/bips/commit/e21bf40e0c7de24e052941629039ee920a339a23"
        }
      ],
      "message": "Add ephemeral anchor BIP proposal",
      "committer": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-07-01T16:51:57Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2023-01-11T17:02:01Z"
      },
      "sha": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13354169971,
      "node_id": "HRFPE_lADOAN28mc55RC2wzwAAAAMb-HZz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13354169971",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T16:52:04Z"
    },
    {
      "event": "commented",
      "id": 2200621187,
      "node_id": "IC_kwDOAN28mc6DKtCD",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2200621187",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T16:52:13Z",
      "updated_at": "2024-07-01T16:52:13Z",
      "author_association": "MEMBER",
      "body": "fixed typos, thanks",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2200621187",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    },
    {
      "event": "commented",
      "id": 2200664509,
      "node_id": "IC_kwDOAN28mc6DK3m9",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2200664509",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T17:19:39Z",
      "updated_at": "2024-07-01T17:19:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re-ack https://github.com/bitcoin/bips/commit/9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067 via Range-Diff",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1524#issuecomment-2200664509",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1524"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461293987",
      "pull_request_review_id": 1835555343,
      "id": 1461293987,
      "node_id": "PRRC_kwDOAN28mc5XGZOj",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]\n+pinning vectors, where an adversary can vastly increase the required fees to replace a\n+transaction that will not be mined quickly, or disallow replacement altogether.\n+Depending on certain factors, this economic value can reach over 500 times increase\n+in required fees to replace the attacker's transaction. V3 transactions end\n+up reducing this attack surface by 100 times, resulting in 5 times increase in fees\n+using the same running example. This policy can be thought of as a \"RBF carve-out\".\n+\n+The major pinning vector left is \"package limit pinning\", where a counterparty\n+either maliciously or accidentally pins a transaction by exhausting the maximum\n+descendant limit of a transaction package using their own outputs, and is unwilling\n+or unable to get the package mined. This leaves the honest user unable to spend their\n+own outputs in the transaction package, as there is no RBF rule in place for evicting\n+\"sibling\" output spends from the same parent transaction.\n+\n+One existing mitigation for this issue is the [https://github.com/bitcoin/bitcoin/pull/15681 CPFP carve out], which allows\n+a \"one more\" policy these limits, given some restrictions. This carve-out only works for\n+transactions with up to two immediately-spendable outputs. This leaves a lot to be\n+desired:\n+\n+* It does not solve many-party contract pinning, such as a three-party payment channel\n+* It does not solve batched payments pinning if the service is unable to double-spend its own inputs. For example, an exchange may require strict separation between client funds and fee funds for security reasons.\n+* In two-party smart contracts, all but two outputs must be relative-timelocked, which interferes with tooling such as [https://bitcoin.sipa.be/miniscript/ Miniscript] and smart contract composition such as making an output that is directly deposited into another smart contract or any wallet with standard address types.\n+* Perhaps most importantly, it is incompatible with future improvements to the mempool, particularly [https://github.com/bitcoin/bitcoin/issues/27677 Cluster Mempools].\n+\n+This proposal gives a standard way to create a 0-fee \"parent\" transaction\n+which can be fee-bumped by any wallet by introducing a special 0-value anchor output\n+which MUST be spent within the same relay package.\n+\n+===Implications===\n+\n+In conjunction with V3 rules of a transaction having up to one child,\n+if a \"parent\" transaction has an ephemeral anchor, any spend of that parent transaction's\n+outputs must also include the ephemeral anchor spend in the same transaction, meaning it can\n+be double-spent by any other party via existing RBF rules. This \"mutex lock\" supersedes\n+the LN-focused CPFP carve-out, neatly solving the remaining issues with multiparty constructs and Miniscript\n+compatibility.\n+\n+===Expected Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit related key material\n+* Simplified watchtowers: No requirement for watchtowers to be registered with privileged key material\n+* Payment accelerators: Users can submit transactions to transaction accelerators, who can fee bump using their own infrastructure\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove `1 CSV` and value-sapping anchors.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+\n+===Unsolved Pinning Scenarios===\n+\n+One major class of pinning vectors yet unsolved is when the pre-signed transaction uses\n+SIGHASH_ANYONECANPAY. This mode should be avoided as a pinning DoS is trivial.\n+\n+Second is any other transaction type such as coinjoins, where the wallet user doesn't\n+have \"veto\" power over all inputs in the transaction. A counterparty can double-spend\n+their inputs, and this can still result in a variety of pinning vectors, albeit\n+perhaps reduced in severity or chance of success.\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities, and also was more weakly motivated by not solving package limit pinning.\n+Repackaging the idea within the context of ancestor package relay and in light of the latest transaction pinning\n+research, we can mitigate the negative externalities while solving substantial problems.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with the scriptPubKey of exactly <code>OP_1 <0x4e73></code>, which is a non-taproot witness v1 script.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+A new output script type is made policy standard to spend, known as an ephemeral anchor.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 112,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The main policy change is making the script standard to **create** as an ouput. I think it's only that you're defining a new valid witness program (rather than using OP_TRUE directly) that means you also need to make spending standard.",
      "created_at": "2024-01-22T02:33:27Z",
      "updated_at": "2024-01-22T02:40:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1461293987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461293987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461294231",
      "pull_request_review_id": 1835555343,
      "id": 1461294231,
      "node_id": "PRRC_kwDOAN28mc5XGZSX",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]\n+pinning vectors, where an adversary can vastly increase the required fees to replace a\n+transaction that will not be mined quickly, or disallow replacement altogether.\n+Depending on certain factors, this economic value can reach over 500 times increase\n+in required fees to replace the attacker's transaction. V3 transactions end\n+up reducing this attack surface by 100 times, resulting in 5 times increase in fees\n+using the same running example. This policy can be thought of as a \"RBF carve-out\".\n+\n+The major pinning vector left is \"package limit pinning\", where a counterparty\n+either maliciously or accidentally pins a transaction by exhausting the maximum\n+descendant limit of a transaction package using their own outputs, and is unwilling\n+or unable to get the package mined. This leaves the honest user unable to spend their\n+own outputs in the transaction package, as there is no RBF rule in place for evicting\n+\"sibling\" output spends from the same parent transaction.\n+\n+One existing mitigation for this issue is the [https://github.com/bitcoin/bitcoin/pull/15681 CPFP carve out], which allows\n+a \"one more\" policy these limits, given some restrictions. This carve-out only works for\n+transactions with up to two immediately-spendable outputs. This leaves a lot to be\n+desired:\n+\n+* It does not solve many-party contract pinning, such as a three-party payment channel\n+* It does not solve batched payments pinning if the service is unable to double-spend its own inputs. For example, an exchange may require strict separation between client funds and fee funds for security reasons.\n+* In two-party smart contracts, all but two outputs must be relative-timelocked, which interferes with tooling such as [https://bitcoin.sipa.be/miniscript/ Miniscript] and smart contract composition such as making an output that is directly deposited into another smart contract or any wallet with standard address types.\n+* Perhaps most importantly, it is incompatible with future improvements to the mempool, particularly [https://github.com/bitcoin/bitcoin/issues/27677 Cluster Mempools].\n+\n+This proposal gives a standard way to create a 0-fee \"parent\" transaction\n+which can be fee-bumped by any wallet by introducing a special 0-value anchor output\n+which MUST be spent within the same relay package.\n+\n+===Implications===\n+\n+In conjunction with V3 rules of a transaction having up to one child,\n+if a \"parent\" transaction has an ephemeral anchor, any spend of that parent transaction's\n+outputs must also include the ephemeral anchor spend in the same transaction, meaning it can\n+be double-spent by any other party via existing RBF rules. This \"mutex lock\" supersedes\n+the LN-focused CPFP carve-out, neatly solving the remaining issues with multiparty constructs and Miniscript\n+compatibility.\n+\n+===Expected Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit related key material\n+* Simplified watchtowers: No requirement for watchtowers to be registered with privileged key material\n+* Payment accelerators: Users can submit transactions to transaction accelerators, who can fee bump using their own infrastructure\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove `1 CSV` and value-sapping anchors.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+\n+===Unsolved Pinning Scenarios===\n+\n+One major class of pinning vectors yet unsolved is when the pre-signed transaction uses\n+SIGHASH_ANYONECANPAY. This mode should be avoided as a pinning DoS is trivial.\n+\n+Second is any other transaction type such as coinjoins, where the wallet user doesn't\n+have \"veto\" power over all inputs in the transaction. A counterparty can double-spend\n+their inputs, and this can still result in a variety of pinning vectors, albeit\n+perhaps reduced in severity or chance of success.\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities, and also was more weakly motivated by not solving package limit pinning.\n+Repackaging the idea within the context of ancestor package relay and in light of the latest transaction pinning\n+research, we can mitigate the negative externalities while solving substantial problems.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with the scriptPubKey of exactly <code>OP_1 <0x4e73></code>, which is a non-taproot witness v1 script.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+A new output script type is made policy standard to spend, known as an ephemeral anchor.\n+\n+Ephemeral anchors of any satoshi value are standard for relay.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 114,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might want to emphasise here that dust limits do not apply?",
      "created_at": "2024-01-22T02:34:04Z",
      "updated_at": "2024-01-22T02:40:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1461294231",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461294231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461295131",
      "pull_request_review_id": 1835555343,
      "id": 1461295131,
      "node_id": "PRRC_kwDOAN28mc5XGZgb",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]\n+pinning vectors, where an adversary can vastly increase the required fees to replace a\n+transaction that will not be mined quickly, or disallow replacement altogether.\n+Depending on certain factors, this economic value can reach over 500 times increase\n+in required fees to replace the attacker's transaction. V3 transactions end\n+up reducing this attack surface by 100 times, resulting in 5 times increase in fees\n+using the same running example. This policy can be thought of as a \"RBF carve-out\".\n+\n+The major pinning vector left is \"package limit pinning\", where a counterparty\n+either maliciously or accidentally pins a transaction by exhausting the maximum\n+descendant limit of a transaction package using their own outputs, and is unwilling\n+or unable to get the package mined. This leaves the honest user unable to spend their\n+own outputs in the transaction package, as there is no RBF rule in place for evicting\n+\"sibling\" output spends from the same parent transaction.\n+\n+One existing mitigation for this issue is the [https://github.com/bitcoin/bitcoin/pull/15681 CPFP carve out], which allows\n+a \"one more\" policy these limits, given some restrictions. This carve-out only works for\n+transactions with up to two immediately-spendable outputs. This leaves a lot to be\n+desired:\n+\n+* It does not solve many-party contract pinning, such as a three-party payment channel\n+* It does not solve batched payments pinning if the service is unable to double-spend its own inputs. For example, an exchange may require strict separation between client funds and fee funds for security reasons.\n+* In two-party smart contracts, all but two outputs must be relative-timelocked, which interferes with tooling such as [https://bitcoin.sipa.be/miniscript/ Miniscript] and smart contract composition such as making an output that is directly deposited into another smart contract or any wallet with standard address types.\n+* Perhaps most importantly, it is incompatible with future improvements to the mempool, particularly [https://github.com/bitcoin/bitcoin/issues/27677 Cluster Mempools].\n+\n+This proposal gives a standard way to create a 0-fee \"parent\" transaction\n+which can be fee-bumped by any wallet by introducing a special 0-value anchor output\n+which MUST be spent within the same relay package.\n+\n+===Implications===\n+\n+In conjunction with V3 rules of a transaction having up to one child,\n+if a \"parent\" transaction has an ephemeral anchor, any spend of that parent transaction's\n+outputs must also include the ephemeral anchor spend in the same transaction, meaning it can\n+be double-spent by any other party via existing RBF rules. This \"mutex lock\" supersedes\n+the LN-focused CPFP carve-out, neatly solving the remaining issues with multiparty constructs and Miniscript\n+compatibility.\n+\n+===Expected Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit related key material\n+* Simplified watchtowers: No requirement for watchtowers to be registered with privileged key material\n+* Payment accelerators: Users can submit transactions to transaction accelerators, who can fee bump using their own infrastructure\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove `1 CSV` and value-sapping anchors.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+\n+===Unsolved Pinning Scenarios===\n+\n+One major class of pinning vectors yet unsolved is when the pre-signed transaction uses\n+SIGHASH_ANYONECANPAY. This mode should be avoided as a pinning DoS is trivial.\n+\n+Second is any other transaction type such as coinjoins, where the wallet user doesn't\n+have \"veto\" power over all inputs in the transaction. A counterparty can double-spend\n+their inputs, and this can still result in a variety of pinning vectors, albeit\n+perhaps reduced in severity or chance of success.\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities, and also was more weakly motivated by not solving package limit pinning.\n+Repackaging the idea within the context of ancestor package relay and in light of the latest transaction pinning\n+research, we can mitigate the negative externalities while solving substantial problems.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with the scriptPubKey of exactly <code>OP_1 <0x4e73></code>, which is a non-taproot witness v1 script.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+A new output script type is made policy standard to spend, known as an ephemeral anchor.\n+\n+Ephemeral anchors of any satoshi value are standard for relay.\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:\n+\n+* Be an otherwise valid V3 transaction\n+* Be 0-fee\n+* Have only one ephemeral anchor\n+* Have the ephemeral anchor spent in the same ancestor relay package\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+It is recommended that miners should not mine ephemeral anchor transactions\n+without also mining the spend in the same block. This means miners should not\n+prioritise transactions that create ephemeral anchors but instead should just prioritise the spend;\n+mining software is encouraged to enforce that limitation.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 130,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does this mean the bitcoin core PR should (does?) reject attempts to `prioritisetransaction` when it notices the tx being prioritised creates an EA output?",
      "created_at": "2024-01-22T02:36:51Z",
      "updated_at": "2024-01-22T02:40:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1461295131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461295131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461295701",
      "pull_request_review_id": 1835555343,
      "id": 1461295701,
      "node_id": "PRRC_kwDOAN28mc5XGZpV",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]\n+pinning vectors, where an adversary can vastly increase the required fees to replace a\n+transaction that will not be mined quickly, or disallow replacement altogether.\n+Depending on certain factors, this economic value can reach over 500 times increase\n+in required fees to replace the attacker's transaction. V3 transactions end\n+up reducing this attack surface by 100 times, resulting in 5 times increase in fees\n+using the same running example. This policy can be thought of as a \"RBF carve-out\".\n+\n+The major pinning vector left is \"package limit pinning\", where a counterparty\n+either maliciously or accidentally pins a transaction by exhausting the maximum\n+descendant limit of a transaction package using their own outputs, and is unwilling\n+or unable to get the package mined. This leaves the honest user unable to spend their\n+own outputs in the transaction package, as there is no RBF rule in place for evicting\n+\"sibling\" output spends from the same parent transaction.\n+\n+One existing mitigation for this issue is the [https://github.com/bitcoin/bitcoin/pull/15681 CPFP carve out], which allows\n+a \"one more\" policy these limits, given some restrictions. This carve-out only works for\n+transactions with up to two immediately-spendable outputs. This leaves a lot to be\n+desired:\n+\n+* It does not solve many-party contract pinning, such as a three-party payment channel\n+* It does not solve batched payments pinning if the service is unable to double-spend its own inputs. For example, an exchange may require strict separation between client funds and fee funds for security reasons.\n+* In two-party smart contracts, all but two outputs must be relative-timelocked, which interferes with tooling such as [https://bitcoin.sipa.be/miniscript/ Miniscript] and smart contract composition such as making an output that is directly deposited into another smart contract or any wallet with standard address types.\n+* Perhaps most importantly, it is incompatible with future improvements to the mempool, particularly [https://github.com/bitcoin/bitcoin/issues/27677 Cluster Mempools].\n+\n+This proposal gives a standard way to create a 0-fee \"parent\" transaction\n+which can be fee-bumped by any wallet by introducing a special 0-value anchor output\n+which MUST be spent within the same relay package.\n+\n+===Implications===\n+\n+In conjunction with V3 rules of a transaction having up to one child,\n+if a \"parent\" transaction has an ephemeral anchor, any spend of that parent transaction's\n+outputs must also include the ephemeral anchor spend in the same transaction, meaning it can\n+be double-spent by any other party via existing RBF rules. This \"mutex lock\" supersedes\n+the LN-focused CPFP carve-out, neatly solving the remaining issues with multiparty constructs and Miniscript\n+compatibility.\n+\n+===Expected Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit related key material\n+* Simplified watchtowers: No requirement for watchtowers to be registered with privileged key material\n+* Payment accelerators: Users can submit transactions to transaction accelerators, who can fee bump using their own infrastructure\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove `1 CSV` and value-sapping anchors.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+\n+===Unsolved Pinning Scenarios===\n+\n+One major class of pinning vectors yet unsolved is when the pre-signed transaction uses\n+SIGHASH_ANYONECANPAY. This mode should be avoided as a pinning DoS is trivial.\n+\n+Second is any other transaction type such as coinjoins, where the wallet user doesn't\n+have \"veto\" power over all inputs in the transaction. A counterparty can double-spend\n+their inputs, and this can still result in a variety of pinning vectors, albeit\n+perhaps reduced in severity or chance of success.\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities, and also was more weakly motivated by not solving package limit pinning.\n+Repackaging the idea within the context of ancestor package relay and in light of the latest transaction pinning\n+research, we can mitigate the negative externalities while solving substantial problems.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with the scriptPubKey of exactly <code>OP_1 <0x4e73></code>, which is a non-taproot witness v1 script.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+A new output script type is made policy standard to spend, known as an ephemeral anchor.\n+\n+Ephemeral anchors of any satoshi value are standard for relay.\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:\n+\n+* Be an otherwise valid V3 transaction\n+* Be 0-fee\n+* Have only one ephemeral anchor\n+* Have the ephemeral anchor spent in the same ancestor relay package\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+It is recommended that miners should not mine ephemeral anchor transactions\n+without also mining the spend in the same block. This means miners should not\n+prioritise transactions that create ephemeral anchors but instead should just prioritise the spend;\n+mining software is encouraged to enforce that limitation.\n+\n+No witness data for ephemeral anchors spends should be allowed, to preclude witness\n+stuffing.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 133,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Mixes MUST and should; these are all relay policies, so shouldn't they all be at the same level of compulsion?\r\n\r\nArguably it may be attractive for miners to stuff witness data in here -- if they want to include modest amounts of arbitrary data in a block, then doing it in the witness is cheaper than anywhere else, and if someone else is paying for the tx that's associated with the witness, that's cheaper than them creating a dummy tx themselves.",
      "created_at": "2024-01-22T02:38:29Z",
      "updated_at": "2024-01-22T02:40:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1461295701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1461295701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581577736",
      "pull_request_review_id": 2025934038,
      "id": 1581577736,
      "node_id": "PRRC_kwDOAN28mc5eRPYI",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 8,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n  Type: Informational\r\n```\r\n\r\nPerhaps \"Informational\" rather than \"Standards Track\", as policy is an individual, per-node decision, but it may be helpful to document policy R&D as informational BIPs.",
      "created_at": "2024-04-26T22:08:18Z",
      "updated_at": "2024-04-26T22:08:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1581577736",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581577736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581582368",
      "pull_request_review_id": 2025940561,
      "id": 1581582368,
      "node_id": "PRRC_kwDOAN28mc5eRQgg",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 3,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that this isn't one of the BIP123 / BIP2 classification layers.  I'm not sure, but it looks like BIPs 2 and 123 would need to be updated if there is consensus on classifying BIPs as `Mempool Policy` layer.",
      "created_at": "2024-04-26T22:18:11Z",
      "updated_at": "2024-04-26T22:30:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1581582368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581582368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581692363",
      "pull_request_review_id": 2026110328,
      "id": 1581692363,
      "node_id": "PRRC_kwDOAN28mc5eRrXL",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]\n+pinning vectors, where an adversary can vastly increase the required fees to replace a\n+transaction that will not be mined quickly, or disallow replacement altogether.\n+Depending on certain factors, this economic value can reach over 500 times increase\n+in required fees to replace the attacker's transaction. V3 transactions end\n+up reducing this attack surface by 100 times, resulting in 5 times increase in fees\n+using the same running example. This policy can be thought of as a \"RBF carve-out\".\n+\n+The major pinning vector left is \"package limit pinning\", where a counterparty\n+either maliciously or accidentally pins a transaction by exhausting the maximum\n+descendant limit of a transaction package using their own outputs, and is unwilling\n+or unable to get the package mined. This leaves the honest user unable to spend their\n+own outputs in the transaction package, as there is no RBF rule in place for evicting\n+\"sibling\" output spends from the same parent transaction.\n+\n+One existing mitigation for this issue is the [https://github.com/bitcoin/bitcoin/pull/15681 CPFP carve out], which allows\n+a \"one more\" policy these limits, given some restrictions. This carve-out only works for\n+transactions with up to two immediately-spendable outputs. This leaves a lot to be\n+desired:\n+\n+* It does not solve many-party contract pinning, such as a three-party payment channel\n+* It does not solve batched payments pinning if the service is unable to double-spend its own inputs. For example, an exchange may require strict separation between client funds and fee funds for security reasons.\n+* In two-party smart contracts, all but two outputs must be relative-timelocked, which interferes with tooling such as [https://bitcoin.sipa.be/miniscript/ Miniscript] and smart contract composition such as making an output that is directly deposited into another smart contract or any wallet with standard address types.\n+* Perhaps most importantly, it is incompatible with future improvements to the mempool, particularly [https://github.com/bitcoin/bitcoin/issues/27677 Cluster Mempools].\n+\n+This proposal gives a standard way to create a 0-fee \"parent\" transaction\n+which can be fee-bumped by any wallet by introducing a special 0-value anchor output\n+which MUST be spent within the same relay package.\n+\n+===Implications===\n+\n+In conjunction with V3 rules of a transaction having up to one child,\n+if a \"parent\" transaction has an ephemeral anchor, any spend of that parent transaction's\n+outputs must also include the ephemeral anchor spend in the same transaction, meaning it can\n+be double-spent by any other party via existing RBF rules. This \"mutex lock\" supersedes\n+the LN-focused CPFP carve-out, neatly solving the remaining issues with multiparty constructs and Miniscript\n+compatibility.\n+\n+===Expected Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit related key material\n+* Simplified watchtowers: No requirement for watchtowers to be registered with privileged key material\n+* Payment accelerators: Users can submit transactions to transaction accelerators, who can fee bump using their own infrastructure\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove `1 CSV` and value-sapping anchors.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+\n+===Unsolved Pinning Scenarios===\n+\n+One major class of pinning vectors yet unsolved is when the pre-signed transaction uses\n+SIGHASH_ANYONECANPAY. This mode should be avoided as a pinning DoS is trivial.\n+\n+Second is any other transaction type such as coinjoins, where the wallet user doesn't\n+have \"veto\" power over all inputs in the transaction. A counterparty can double-spend\n+their inputs, and this can still result in a variety of pinning vectors, albeit\n+perhaps reduced in severity or chance of success.\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities, and also was more weakly motivated by not solving package limit pinning.\n+Repackaging the idea within the context of ancestor package relay and in light of the latest transaction pinning\n+research, we can mitigate the negative externalities while solving substantial problems.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with the scriptPubKey of exactly <code>OP_1 <0x4e73></code>, which is a non-taproot witness v1 script.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+A new output script type is made policy standard to spend, known as an ephemeral anchor.\n+\n+Ephemeral anchors of any satoshi value are standard for relay.\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:\n+\n+* Be an otherwise valid V3 transaction\n+* Be 0-fee\n+* Have only one ephemeral anchor\n+* Have the ephemeral anchor spent in the same ancestor relay package\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+It is recommended that miners should not mine ephemeral anchor transactions\n+without also mining the spend in the same block. This means miners should not\n+prioritise transactions that create ephemeral anchors but instead should just prioritise the spend;\n+mining software is encouraged to enforce that limitation.\n+\n+No witness data for ephemeral anchors spends should be allowed, to preclude witness\n+stuffing.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/29001\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):\n+\n+* Richard Meyers",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 149,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(if this refers to `https://twitter.com/remyers_`)\r\n\r\n```suggestion\r\n* Richard Myers\r\n```\r\n",
      "created_at": "2024-04-27T01:15:26Z",
      "updated_at": "2024-04-27T01:17:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1581692363",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581692363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1582919995",
      "pull_request_review_id": 2028216369,
      "id": 1582919995,
      "node_id": "PRRC_kwDOAN28mc5eWXE7",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 3,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": 1581582368,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "BIP 125 (RBF) uses \"Layer: Application\" here. Having a standard here is pretty much about coordination between node behaviour (\"this sort of tx will be relayed\") and applications (\"how do i make txs that will be relayed?\") so that seems reasonable?",
      "created_at": "2024-04-29T11:39:30Z",
      "updated_at": "2024-04-29T11:39:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1582919995",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1582919995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583111525",
      "pull_request_review_id": 2028551594,
      "id": 1583111525,
      "node_id": "PRRC_kwDOAN28mc5eXF1l",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 8,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": 1581577736,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-04-29T13:38:19Z",
      "updated_at": "2024-04-29T13:38:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1583111525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583111525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583111770",
      "pull_request_review_id": 2028552000,
      "id": 1583111770,
      "node_id": "PRRC_kwDOAN28mc5eXF5a",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 3,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": 1581582368,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "did @ajtowns suggestion for now",
      "created_at": "2024-04-29T13:38:30Z",
      "updated_at": "2024-04-29T13:38:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1583111770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583111770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583111860",
      "pull_request_review_id": 2028552204,
      "id": 1583111860,
      "node_id": "PRRC_kwDOAN28mc5eXF60",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]\n+pinning vectors, where an adversary can vastly increase the required fees to replace a\n+transaction that will not be mined quickly, or disallow replacement altogether.\n+Depending on certain factors, this economic value can reach over 500 times increase\n+in required fees to replace the attacker's transaction. V3 transactions end\n+up reducing this attack surface by 100 times, resulting in 5 times increase in fees\n+using the same running example. This policy can be thought of as a \"RBF carve-out\".\n+\n+The major pinning vector left is \"package limit pinning\", where a counterparty\n+either maliciously or accidentally pins a transaction by exhausting the maximum\n+descendant limit of a transaction package using their own outputs, and is unwilling\n+or unable to get the package mined. This leaves the honest user unable to spend their\n+own outputs in the transaction package, as there is no RBF rule in place for evicting\n+\"sibling\" output spends from the same parent transaction.\n+\n+One existing mitigation for this issue is the [https://github.com/bitcoin/bitcoin/pull/15681 CPFP carve out], which allows\n+a \"one more\" policy these limits, given some restrictions. This carve-out only works for\n+transactions with up to two immediately-spendable outputs. This leaves a lot to be\n+desired:\n+\n+* It does not solve many-party contract pinning, such as a three-party payment channel\n+* It does not solve batched payments pinning if the service is unable to double-spend its own inputs. For example, an exchange may require strict separation between client funds and fee funds for security reasons.\n+* In two-party smart contracts, all but two outputs must be relative-timelocked, which interferes with tooling such as [https://bitcoin.sipa.be/miniscript/ Miniscript] and smart contract composition such as making an output that is directly deposited into another smart contract or any wallet with standard address types.\n+* Perhaps most importantly, it is incompatible with future improvements to the mempool, particularly [https://github.com/bitcoin/bitcoin/issues/27677 Cluster Mempools].\n+\n+This proposal gives a standard way to create a 0-fee \"parent\" transaction\n+which can be fee-bumped by any wallet by introducing a special 0-value anchor output\n+which MUST be spent within the same relay package.\n+\n+===Implications===\n+\n+In conjunction with V3 rules of a transaction having up to one child,\n+if a \"parent\" transaction has an ephemeral anchor, any spend of that parent transaction's\n+outputs must also include the ephemeral anchor spend in the same transaction, meaning it can\n+be double-spent by any other party via existing RBF rules. This \"mutex lock\" supersedes\n+the LN-focused CPFP carve-out, neatly solving the remaining issues with multiparty constructs and Miniscript\n+compatibility.\n+\n+===Expected Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit related key material\n+* Simplified watchtowers: No requirement for watchtowers to be registered with privileged key material\n+* Payment accelerators: Users can submit transactions to transaction accelerators, who can fee bump using their own infrastructure\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove `1 CSV` and value-sapping anchors.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+\n+===Unsolved Pinning Scenarios===\n+\n+One major class of pinning vectors yet unsolved is when the pre-signed transaction uses\n+SIGHASH_ANYONECANPAY. This mode should be avoided as a pinning DoS is trivial.\n+\n+Second is any other transaction type such as coinjoins, where the wallet user doesn't\n+have \"veto\" power over all inputs in the transaction. A counterparty can double-spend\n+their inputs, and this can still result in a variety of pinning vectors, albeit\n+perhaps reduced in severity or chance of success.\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities, and also was more weakly motivated by not solving package limit pinning.\n+Repackaging the idea within the context of ancestor package relay and in light of the latest transaction pinning\n+research, we can mitigate the negative externalities while solving substantial problems.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with the scriptPubKey of exactly <code>OP_1 <0x4e73></code>, which is a non-taproot witness v1 script.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+A new output script type is made policy standard to spend, known as an ephemeral anchor.\n+\n+Ephemeral anchors of any satoshi value are standard for relay.\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:\n+\n+* Be an otherwise valid V3 transaction\n+* Be 0-fee\n+* Have only one ephemeral anchor\n+* Have the ephemeral anchor spent in the same ancestor relay package\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+It is recommended that miners should not mine ephemeral anchor transactions\n+without also mining the spend in the same block. This means miners should not\n+prioritise transactions that create ephemeral anchors but instead should just prioritise the spend;\n+mining software is encouraged to enforce that limitation.\n+\n+No witness data for ephemeral anchors spends should be allowed, to preclude witness\n+stuffing.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/29001\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):\n+\n+* Richard Meyers",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 149,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": 1581692363,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-04-29T13:38:34Z",
      "updated_at": "2024-04-29T13:38:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1583111860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583111860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635139147",
      "pull_request_review_id": 2110885055,
      "id": 1635139147,
      "node_id": "PRRC_kwDOAN28mc5hdj5L",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Mempool Policy\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Standards Track\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]\n+pinning vectors, where an adversary can vastly increase the required fees to replace a\n+transaction that will not be mined quickly, or disallow replacement altogether.\n+Depending on certain factors, this economic value can reach over 500 times increase\n+in required fees to replace the attacker's transaction. V3 transactions end\n+up reducing this attack surface by 100 times, resulting in 5 times increase in fees\n+using the same running example. This policy can be thought of as a \"RBF carve-out\".\n+\n+The major pinning vector left is \"package limit pinning\", where a counterparty\n+either maliciously or accidentally pins a transaction by exhausting the maximum\n+descendant limit of a transaction package using their own outputs, and is unwilling\n+or unable to get the package mined. This leaves the honest user unable to spend their\n+own outputs in the transaction package, as there is no RBF rule in place for evicting\n+\"sibling\" output spends from the same parent transaction.\n+\n+One existing mitigation for this issue is the [https://github.com/bitcoin/bitcoin/pull/15681 CPFP carve out], which allows\n+a \"one more\" policy these limits, given some restrictions. This carve-out only works for\n+transactions with up to two immediately-spendable outputs. This leaves a lot to be\n+desired:\n+\n+* It does not solve many-party contract pinning, such as a three-party payment channel\n+* It does not solve batched payments pinning if the service is unable to double-spend its own inputs. For example, an exchange may require strict separation between client funds and fee funds for security reasons.\n+* In two-party smart contracts, all but two outputs must be relative-timelocked, which interferes with tooling such as [https://bitcoin.sipa.be/miniscript/ Miniscript] and smart contract composition such as making an output that is directly deposited into another smart contract or any wallet with standard address types.\n+* Perhaps most importantly, it is incompatible with future improvements to the mempool, particularly [https://github.com/bitcoin/bitcoin/issues/27677 Cluster Mempools].\n+\n+This proposal gives a standard way to create a 0-fee \"parent\" transaction\n+which can be fee-bumped by any wallet by introducing a special 0-value anchor output\n+which MUST be spent within the same relay package.\n+\n+===Implications===\n+\n+In conjunction with V3 rules of a transaction having up to one child,\n+if a \"parent\" transaction has an ephemeral anchor, any spend of that parent transaction's\n+outputs must also include the ephemeral anchor spend in the same transaction, meaning it can\n+be double-spent by any other party via existing RBF rules. This \"mutex lock\" supersedes\n+the LN-focused CPFP carve-out, neatly solving the remaining issues with multiparty constructs and Miniscript\n+compatibility.\n+\n+===Expected Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit related key material\n+* Simplified watchtowers: No requirement for watchtowers to be registered with privileged key material\n+* Payment accelerators: Users can submit transactions to transaction accelerators, who can fee bump using their own infrastructure\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove `1 CSV` and value-sapping anchors.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+\n+===Unsolved Pinning Scenarios===\n+\n+One major class of pinning vectors yet unsolved is when the pre-signed transaction uses\n+SIGHASH_ANYONECANPAY. This mode should be avoided as a pinning DoS is trivial.\n+\n+Second is any other transaction type such as coinjoins, where the wallet user doesn't\n+have \"veto\" power over all inputs in the transaction. A counterparty can double-spend\n+their inputs, and this can still result in a variety of pinning vectors, albeit\n+perhaps reduced in severity or chance of success.\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities, and also was more weakly motivated by not solving package limit pinning.\n+Repackaging the idea within the context of ancestor package relay and in light of the latest transaction pinning\n+research, we can mitigate the negative externalities while solving substantial problems.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with the scriptPubKey of exactly <code>OP_1 <0x4e73></code>, which is a non-taproot witness v1 script.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+A new output script type is made policy standard to spend, known as an ephemeral anchor.\n+\n+Ephemeral anchors of any satoshi value are standard for relay.\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:\n+\n+* Be an otherwise valid V3 transaction\n+* Be 0-fee\n+* Have only one ephemeral anchor\n+* Have the ephemeral anchor spent in the same ancestor relay package\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+It is recommended that miners should not mine ephemeral anchor transactions\n+without also mining the spend in the same block. This means miners should not\n+prioritise transactions that create ephemeral anchors but instead should just prioritise the spend;\n+mining software is encouraged to enforce that limitation.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 130,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "527b007dbf5b9a89895017030183370e05468ae6",
      "in_reply_to_id": 1461295131,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIRC an older implementation had this",
      "created_at": "2024-06-11T16:01:06Z",
      "updated_at": "2024-06-11T16:04:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635139147",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635139147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635140413",
      "pull_request_review_id": 2110885055,
      "id": 1635140413,
      "node_id": "PRRC_kwDOAN28mc5hdkM9",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also consumed within the same\n+mempool package. This ephemeral anchor is a \"mutex lock\" for the transaction,\n+allowing for robust fee bumping by wallets, not requiring any special key material\n+to do so, and avoiding all known transaction pinning vectors.\n+\n+===Motivation===\n+\n+One definition of transaction pinning is the intentional or unintentional blocking\n+of a getting a transaction mined that would otherwise be rational for the miner\n+to include in the next block without the attacker paying anything in many cases.\n+This can result in wallets simply not supporting fee bumping due to complexity,\n+or in certain smart contract cases such as Hash Time Locked Contracts, outright theft.\n+\n+[https://github.com/bitcoin/bitcoin/pull/28948 V3] transactions, which this proposal is built on, greatly mitigates [https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki BIP125]",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 30,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "f08392a2fcc1fab75275ddc19933eedf3a2a8910",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Needs update for TRUC / BIP 431 across doc",
      "created_at": "2024-06-11T16:02:04Z",
      "updated_at": "2024-06-11T16:04:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635140413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635140413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635337233",
      "pull_request_review_id": 2111210608,
      "id": 1635337233,
      "node_id": "PRRC_kwDOAN28mc5heUQR",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": 5,
      "original_position": 5,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n  Author: Gregory Sanders <gsanders87@gmail.com>\r\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\r\n```",
      "created_at": "2024-06-11T18:47:05Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635337233",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635337233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635337853",
      "pull_request_review_id": 2111210608,
      "id": 1635337853,
      "node_id": "PRRC_kwDOAN28mc5heUZ9",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 9,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Order must be \"Type, Created, License\"\r\n```suggestion\r\n  Type: Informational\r\n  Created: 2023-01-11\r\n  License: BSD-3-Clause\r\n```",
      "created_at": "2024-06-11T18:47:38Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635337853",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635337853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": 7,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635340014",
      "pull_request_review_id": 2111210608,
      "id": 1635340014,
      "node_id": "PRRC_kwDOAN28mc5heU7u",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\na descendant transaction includes the proper fee for the package. In many cases\r\n```",
      "created_at": "2024-06-11T18:49:44Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635340014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635340014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635341570",
      "pull_request_review_id": 2111210608,
      "id": 1635341570,
      "node_id": "PRRC_kwDOAN28mc5heVUC",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 39,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe:\r\n\r\n```suggestion\r\nby avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\r\nspending the anchor is given the responsibility of bringing funds.\r\n```",
      "created_at": "2024-06-11T18:51:16Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635341570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635341570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635342288",
      "pull_request_review_id": 2111210608,
      "id": 1635342288,
      "node_id": "PRRC_kwDOAN28mc5heVfQ",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 41,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe\r\n\r\n```suggestion\r\nIt is cleaner for this abstraction and others if instead of requiring\r\n```\r\n\r\nor\r\n\r\n```suggestion\r\nIt would be cleaner for this abstraction and others if instead of requiring\r\n```",
      "created_at": "2024-06-11T18:51:58Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635342288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635342288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635343171",
      "pull_request_review_id": 2111210608,
      "id": 1635343171,
      "node_id": "PRRC_kwDOAN28mc5heVtD",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nFor anchors using TRUC transactions, it's expected that they would take two output script forms:\r\n```",
      "created_at": "2024-06-11T18:52:50Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635343171",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635343171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635343610",
      "pull_request_review_id": 2111210608,
      "id": 1635343610,
      "node_id": "PRRC_kwDOAN28mc5heVz6",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 48,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Opinionated suggestion, feel free to ignore:\r\n```suggestion\r\n1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\r\n```",
      "created_at": "2024-06-11T18:53:17Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635343610",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635343610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635344625",
      "pull_request_review_id": 2111210608,
      "id": 1635344625,
      "node_id": "PRRC_kwDOAN28mc5heWDx",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the scriptPubKey <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 51,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Opinionated suggestion, feel free to ignore:\r\n```suggestion\r\nextensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\r\n```",
      "created_at": "2024-06-11T18:54:20Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635344625",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635344625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635350037",
      "pull_request_review_id": 2111210608,
      "id": 1635350037,
      "node_id": "PRRC_kwDOAN28mc5heXYV",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the scriptPubKey <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 65,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It feels like \"all that entails\" is missing something. Should that be \"all that that entails\", or \"all that a softfork entails\"?\r\n\r\n```suggestion\r\n[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawback of these proposals are the necessity of a softfork and all that that entails.\r\n```",
      "created_at": "2024-06-11T18:59:28Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635350037",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635350037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635351140",
      "pull_request_review_id": 2111210608,
      "id": 1635351140,
      "node_id": "PRRC_kwDOAN28mc5heXpk",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the scriptPubKey <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust values which are spent by a child transaction.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 81,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is only one, right?\r\n\r\n```suggestion\r\nEphemeral anchor: An output with dust value which is immediately spent by a child transaction.\r\n```",
      "created_at": "2024-06-11T19:00:33Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635351140",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635351140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635351927",
      "pull_request_review_id": 2111210608,
      "id": 1635351927,
      "node_id": "PRRC_kwDOAN28mc5heX13",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the scriptPubKey <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust values which are spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 87,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nWhen received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\r\n```",
      "created_at": "2024-06-11T19:01:20Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635351927",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635351927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635354085",
      "pull_request_review_id": 2111210608,
      "id": 1635354085,
      "node_id": "PRRC_kwDOAN28mc5heYXl",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 7,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The proposal is missing the mandatory copyright section. Since BSD-3 is a software license, perhaps consider a CC0 1.0 Universal license.",
      "created_at": "2024-06-11T19:03:39Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635354085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635354085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635357229",
      "pull_request_review_id": 2111210608,
      "id": 1635357229,
      "node_id": "PRRC_kwDOAN28mc5heZIt",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the scriptPubKey <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust values which are spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/30239\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):\n+\n+* Richard Myers\n+* James O'Beirne\n+* Antoine Poinsot\n+* Antoine Riard \n+* Jeremy Rubin\n+* Bastien Teinturier\n+* Anthony Towns\n+* Gloria Zhao\n+\n+==References and Rationale==",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 121,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a section header without content in the section",
      "created_at": "2024-06-11T19:06:54Z",
      "updated_at": "2024-06-11T19:12:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1635357229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1635357229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1636477734",
      "pull_request_review_id": 2113044779,
      "id": 1636477734,
      "node_id": "PRRC_kwDOAN28mc5hiqsm",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the scriptPubKey <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 65,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": 1635350037,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just dropped the clause since it's superfluous ",
      "created_at": "2024-06-12T13:34:47Z",
      "updated_at": "2024-06-12T13:34:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1636477734",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1636477734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1636477910",
      "pull_request_review_id": 2113045040,
      "id": 1636477910,
      "node_id": "PRRC_kwDOAN28mc5hiqvW",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 7,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": 1635354085,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure",
      "created_at": "2024-06-12T13:34:53Z",
      "updated_at": "2024-06-12T13:34:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1636477910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1636477910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1636477979",
      "pull_request_review_id": 2113045150,
      "id": 1636477979,
      "node_id": "PRRC_kwDOAN28mc5hiqwb",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Status: Draft\n+  License: BSD-3-Clause\n+  Type: Informational\n+  Created: 2023-01-11\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant spend includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child\n+spend of the anchor is given the responsibility of bringing funds.\n+\n+It is be cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two scriptPubKey forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privelaged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the scriptPubKey <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork and all that entails.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust values which are spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchors transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/30239\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):\n+\n+* Richard Myers\n+* James O'Beirne\n+* Antoine Poinsot\n+* Antoine Riard \n+* Jeremy Rubin\n+* Bastien Teinturier\n+* Anthony Towns\n+* Gloria Zhao\n+\n+==References and Rationale==",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 121,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "a54ca170013d3a07aa3c6de11ac0961011e522de",
      "in_reply_to_id": 1635357229,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "removed",
      "created_at": "2024-06-12T13:34:56Z",
      "updated_at": "2024-06-12T13:34:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1636477979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1636477979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1651755494",
      "pull_request_review_id": 2136964413,
      "id": 1651755494,
      "node_id": "PRRC_kwDOAN28mc5ic8nm",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/30239\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):\n+\n+* Richard Myers\n+* James O'Beirne\n+* Antoine Poinsot\n+* Antoine Riard \n+* Jeremy Rubin\n+* Bastien Teinturier\n+* Anthony Towns\n+* Gloria Zhao\n+\n+=Copyright==",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 122,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "64370fa8b08b5358937dcae5f9853929f4d4ded3",
      "in_reply_to_id": null,
      "user": {
        "login": "ProofOfKeags",
        "id": 4033651,
        "node_id": "MDQ6VXNlcjQwMzM2NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4033651?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProofOfKeags",
        "html_url": "https://github.com/ProofOfKeags",
        "followers_url": "https://api.github.com/users/ProofOfKeags/followers",
        "following_url": "https://api.github.com/users/ProofOfKeags/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProofOfKeags/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProofOfKeags/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProofOfKeags/subscriptions",
        "organizations_url": "https://api.github.com/users/ProofOfKeags/orgs",
        "repos_url": "https://api.github.com/users/ProofOfKeags/repos",
        "events_url": "https://api.github.com/users/ProofOfKeags/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProofOfKeags/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n==Copyright==\r\n```",
      "created_at": "2024-06-24T23:18:27Z",
      "updated_at": "2024-06-24T23:18:28Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1651755494",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1651755494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1658736157",
      "pull_request_review_id": 2148001176,
      "id": 1658736157,
      "node_id": "PRRC_kwDOAN28mc5i3k4d",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/30239\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):\n+\n+* Richard Myers\n+* James O'Beirne\n+* Antoine Poinsot\n+* Antoine Riard \n+* Jeremy Rubin\n+* Bastien Teinturier\n+* Anthony Towns\n+* Gloria Zhao\n+\n+=Copyright==",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 122,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "64370fa8b08b5358937dcae5f9853929f4d4ded3",
      "in_reply_to_id": 1651755494,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2024-06-28T13:21:17Z",
      "updated_at": "2024-06-28T13:21:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1658736157",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1658736157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659150780",
      "pull_request_review_id": 2148692130,
      "id": 1659150780,
      "node_id": "PRRC_kwDOAN28mc5i5KG8",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 17,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nEphemeral Anchors are a mempool policy carve-out that allows UTXOs of any value,\r\n```",
      "created_at": "2024-06-28T18:21:51Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659150780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659150780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659151336",
      "pull_request_review_id": 2148692130,
      "id": 1659151336,
      "node_id": "PRRC_kwDOAN28mc5i5KPo",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 18,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Previously plural:\r\n\r\n```suggestion\r\neven 0-value dust, to be created, provided they are also spent within the same\r\n```",
      "created_at": "2024-06-28T18:22:34Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659151336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659151336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659152039",
      "pull_request_review_id": 2148692130,
      "id": 1659152039,
      "node_id": "PRRC_kwDOAN28mc5i5Kan",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 26,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Switching tenses:\r\n\r\n```suggestion\r\nRelay dust limits have been in place in most implementations of the Bitcoin\r\nprotocol to discourage the creation of UTXOs that are never spent in the future,\r\nbloat the UTXO set, and increase the validation burden for validating\r\nnodes.\r\n```",
      "created_at": "2024-06-28T18:23:28Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659152039",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659152039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659154843",
      "pull_request_review_id": 2148692130,
      "id": 1659154843,
      "node_id": "PRRC_kwDOAN28mc5i5LGb",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about:\r\n\r\n```suggestion\r\n[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\r\nallows a small amount of contract value to be given to an output to allow network relay\r\nby passing dust checks, but not as the primary source of fee funds. Instead, the child transaction\r\nspending the anchor is responsible for providing the funds.\r\n```",
      "created_at": "2024-06-28T18:26:38Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659154843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659154843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": 37,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659158056",
      "pull_request_review_id": 2148692130,
      "id": 1659158056,
      "node_id": "PRRC_kwDOAN28mc5i5L4o",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 43,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"requiring dust values\" ⇒ Isn’t the issue that they must have above dust amounts?\r\n\r\nHow about:\r\n```suggestion\r\nIn this and similar abstractions it would be cleaner if the anchor itself could be 0-value\r\ninstead of requiring anchors to exceed dust amounts.\r\n```",
      "created_at": "2024-06-28T18:29:45Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659158056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659158056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659160137",
      "pull_request_review_id": 2148692130,
      "id": 1659160137,
      "node_id": "PRRC_kwDOAN28mc5i5MZJ",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 49,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about \"shared by possibly multiple\" → \"possibly shared by multiple\"?\r\n\r\n```suggestion\r\n1. Keyed anchor: A key, possibly shared by multiple privileged parties, is used to encumber the anchor. This could be `tr()`, `p2wsh()` or any\r\n```",
      "created_at": "2024-06-28T18:31:18Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659160137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659160137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659162808",
      "pull_request_review_id": 2148692130,
      "id": 1659162808,
      "node_id": "PRRC_kwDOAN28mc5i5NC4",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about:\r\n```suggestion\r\n* Simplified watchtowers/accelerators: No requirement to equip watchtowers with privileged key material, and no value to steal by those watchtowers\r\n```",
      "created_at": "2024-06-28T18:33:00Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659162808",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659162808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659165029",
      "pull_request_review_id": 2148692130,
      "id": 1659165029,
      "node_id": "PRRC_kwDOAN28mc5i5Nll",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 69,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn’t it be a direct relationship?\r\n\r\n```suggestion\r\nsponsor transactions with no explicit relationship in the classical UTXO\r\n```",
      "created_at": "2024-06-28T18:35:29Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659165029",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659165029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659170131",
      "pull_request_review_id": 2148692130,
      "id": 1659170131,
      "node_id": "PRRC_kwDOAN28mc5i5O1T",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": 82,
      "original_position": 82,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This contradicts the abstract which specified that the ephemeral anchor output would be allowed to have _any value_. Either the abstract should be improved to state that ephemeral anchors are confined to dust amounts, or this definition should be clarified that any amount is acceptable including dust amounts.",
      "created_at": "2024-06-28T18:41:46Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659170131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659170131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659172477",
      "pull_request_review_id": 2148692130,
      "id": 1659172477,
      "node_id": "PRRC_kwDOAN28mc5i5PZ9",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 90,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TRUC transactions do not enforce topology constraints. TRUC transactions request nodes to enforce topological constraints. How about:\r\n\r\n```suggestion\r\n* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction adhering to the corresponding topological constraints\r\n```",
      "created_at": "2024-06-28T18:44:24Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659172477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659172477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659178748",
      "pull_request_review_id": 2148692130,
      "id": 1659178748,
      "node_id": "PRRC_kwDOAN28mc5i5Q78",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 92,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could be understood to e.g. forbid a nulldata output without an amount. Did you mean:\r\n\r\n```suggestion\r\n* Have exactly one ephemeral anchor and may not create additional dust value UTXOs\r\n```",
      "created_at": "2024-06-28T18:49:59Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659178748",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659178748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659179551",
      "pull_request_review_id": 2148692130,
      "id": 1659179551,
      "node_id": "PRRC_kwDOAN28mc5i5RIf",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 93,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n* Have its emphemeral anchor spent in the same TRUC cluster\r\n```",
      "created_at": "2024-06-28T18:51:00Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659179551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659179551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659192593",
      "pull_request_review_id": 2148692130,
      "id": 1659192593,
      "node_id": "PRRC_kwDOAN28mc5i5UUR",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 97,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps:\r\n\r\n```suggestion\r\nThese constraints apply only to mempool policy. Otherwise valid blocks are not\r\ninvalidated by breaking these policy-only rules as they have no bearing on consensus.\r\n```",
      "created_at": "2024-06-28T19:01:32Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659192593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659192593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": 96,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659195721",
      "pull_request_review_id": 2148692130,
      "id": 1659195721,
      "node_id": "PRRC_kwDOAN28mc5i5VFJ",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/30239\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 111,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nand insightful feedback (in last name order):\r\n```\r\n\r\nOr maybe:\r\n```suggestion\r\nand insightful feedback (ordered by last name):\r\n```",
      "created_at": "2024-06-28T19:03:41Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659195721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659195721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659203290",
      "pull_request_review_id": 2148692130,
      "id": 1659203290,
      "node_id": "PRRC_kwDOAN28mc5i5W7a",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 66,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since it is one drawback shared by all of these proposals, ISTM that it should just be \"drawback\" instead of \"drawbacks\".\r\n\r\n```suggestion\r\n[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawback of these are the necessity of a softfork.\r\n```",
      "created_at": "2024-06-28T19:10:47Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659203290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659203290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659208190",
      "pull_request_review_id": 2148692130,
      "id": 1659208190,
      "node_id": "PRRC_kwDOAN28mc5i5YH-",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output\n+* Have the dust value spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+If included in an otherwise valid block, these additional constraints do not apply\n+as this is a policy-only change.\n+\n+== Backward compatibility ==\n+\n+Ephemeral anchor spends were previously non-standard, so there are no known conflicts\n+with previous usage.\n+\n+==Implementation==\n+\n+https://github.com/bitcoin/bitcoin/pull/30239\n+\n+==Acknowledgements==\n+\n+Thank you to all those listed for foundational work\n+and insightful feedback(in last name order):\n+\n+* Richard Myers\n+* James O'Beirne\n+* Antoine Poinsot\n+* Antoine Riard \n+* Jeremy Rubin\n+* Bastien Teinturier\n+* Anthony Towns\n+* Gloria Zhao\n+\n+==Copyright==\n+\n+This document is licensed as Creative Commons CC0 1.0 Universal.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 124,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis document is licensed under the Creative Commons CC0 1.0 Universal license.\r\n```",
      "created_at": "2024-06-28T19:14:33Z",
      "updated_at": "2024-06-28T20:06:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659208190",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659208190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659266042",
      "pull_request_review_id": 2148879700,
      "id": 1659266042,
      "node_id": "PRRC_kwDOAN28mc5i5mP6",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": 10,
      "original_position": 10,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, and since you build on TRUC Transactions, you should have:\r\n\r\n```suggestion\r\n  License: CC0 1.0 Universal\r\n  Requires: 431\r\n```",
      "created_at": "2024-06-28T20:07:51Z",
      "updated_at": "2024-06-28T20:07:51Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1659266042",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1659266042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 10,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661179741",
      "pull_request_review_id": 2151607839,
      "id": 1661179741,
      "node_id": "PRRC_kwDOAN28mc5jA5dd",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": 82,
      "original_position": 82,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": 1659170131,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "rejiggered it a bit to be clearer this policy change only deals with dust.",
      "created_at": "2024-07-01T14:54:08Z",
      "updated_at": "2024-07-01T14:54:09Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661179741",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661179741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661179839",
      "pull_request_review_id": 2151607998,
      "id": 1661179839,
      "node_id": "PRRC_kwDOAN28mc5jA5e_",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows any value utxos,\n+even 0-value dust, to be created, provided it is also spent within the same\n+mempool package.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloating the UTXO set and increasing the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to merely allow network relay\n+by avoiding dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is given the responsibility of bringing funds.\n+\n+It is cleaner for this abstraction and others if instead of requiring\n+dust values in anchors, the anchor itself can be 0 value.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, shared by possibly multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement for watchtowers to be registered with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawbacks of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+indirectly sponsor transactions with no explicit relationship in the classical utxo\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction which enforces topology constraints\n+* Be 0-fee\n+* Have only one dust value output",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 92,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "e09bddbfc71ec338e1bc1061d0936cf02c2be2e3",
      "in_reply_to_id": 1659178748,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the \"dust threshold\" of OP_RETURN is 0, but I'll try and be more explicit",
      "created_at": "2024-07-01T14:54:13Z",
      "updated_at": "2024-07-01T14:54:13Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661179839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661179839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661304721",
      "pull_request_review_id": 2151814320,
      "id": 1661304721,
      "node_id": "PRRC_kwDOAN28mc5jBX-R",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+  Requires: 431\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows dust UTXOs,\n+even 0-value, to be created, provided they are also spent in the mempool.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloat the UTXO set, and increase the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to allow network relay\n+by passing dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is responsibile for providing the funds.",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "8852274d86a7f8b203a5fcae85726769671dffd9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nspending the anchor is responsible for providing the funds.\r\n```",
      "created_at": "2024-07-01T16:40:44Z",
      "updated_at": "2024-07-01T16:48:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661304721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661304721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661305097",
      "pull_request_review_id": 2151814320,
      "id": 1661305097,
      "node_id": "PRRC_kwDOAN28mc5jBYEJ",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+  Requires: 431\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows dust UTXOs,\n+even 0-value, to be created, provided they are also spent in the mempool.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloat the UTXO set, and increase the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to allow network relay\n+by passing dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is responsibile for providing the funds.\n+\n+In this and similar abstractions it would be cleaner if the anchor itself could be 0-value\n+instead of requiring anchors to exceed dust amounts.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, possibly shared by multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement to equip watchtowers with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawback of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+sponsor transactions with no explicit relationship in the classical UTXO\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction adhering to the corresponding topological constraints\n+* Be 0-fee\n+* Have only one dust value output (output values which would normally cause rejection)\n+* Have its ephemeral anchor spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+These constraints apply only to mempool policy. Blocks are not\n+invalidated by breaking these policy-only rules as they have no bearing on consensus.\n+\n+==Rationale==\n+\n+To incentivize the mining of the spends of ephemeral anchors we require three things to be true:\n+\n+1. The ephemeral anchor transaciton should be 0-fee itself",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 103,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "8852274d86a7f8b203a5fcae85726769671dffd9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. The ephemeral anchor transaction should be 0-fee itself\r\n```",
      "created_at": "2024-07-01T16:41:06Z",
      "updated_at": "2024-07-01T16:48:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661305097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661305097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661305508",
      "pull_request_review_id": 2151814320,
      "id": 1661305508,
      "node_id": "PRRC_kwDOAN28mc5jBYKk",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+  Requires: 431\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows dust UTXOs,\n+even 0-value, to be created, provided they are also spent in the mempool.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloat the UTXO set, and increase the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to allow network relay\n+by passing dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is responsibile for providing the funds.\n+\n+In this and similar abstractions it would be cleaner if the anchor itself could be 0-value\n+instead of requiring anchors to exceed dust amounts.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, possibly shared by multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement to equip watchtowers with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawback of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+sponsor transactions with no explicit relationship in the classical UTXO\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set\n+causing negative externalities.\n+\n+==Definitions==\n+\n+Ephemeral anchor: An output with dust value which is immediately spent by a child transaction.\n+\n+Ephemeral anchor transaction: A transaction that has an ephemeral anchor\n+\n+==Specification==\n+\n+When received by a peer for inclusion to the mempool an ephemeral anchor transaction MUST:\n+\n+* Be an otherwise valid [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transaction adhering to the corresponding topological constraints\n+* Be 0-fee\n+* Have only one dust value output (output values which would normally cause rejection)\n+* Have its ephemeral anchor spent in the same TRUC cluster\n+\n+or will be rejected by policy. All other policy checks are left in place.\n+These constraints apply only to mempool policy. Blocks are not\n+invalidated by breaking these policy-only rules as they have no bearing on consensus.\n+\n+==Rationale==\n+\n+To incentivize the mining of the spends of ephemeral anchors we require three things to be true:\n+\n+1. The ephemeral anchor transaciton should be 0-fee itself\n+2. The transaction should only have a single child\n+3. The ephemeral anchor must be spent\n+\n+With these restrictions in place, the only endogenous incentives to mine the ephemeral\n+anchor transaction is to mine the transaction along with the child transaction\n+spending the acnhor. TRUC transaction restrictions inherently follow the single",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "8852274d86a7f8b203a5fcae85726769671dffd9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nspending the anchor. TRUC transaction restrictions inherently follow the single\r\n```",
      "created_at": "2024-07-01T16:41:32Z",
      "updated_at": "2024-07-01T16:48:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661305508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661305508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661309682",
      "pull_request_review_id": 2151814320,
      "id": 1661309682,
      "node_id": "PRRC_kwDOAN28mc5jBZLy",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+  Requires: 431\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows dust UTXOs,\n+even 0-value, to be created, provided they are also spent in the mempool.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloat the UTXO set, and increase the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "8852274d86a7f8b203a5fcae85726769671dffd9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nand basic package relay, users can generate and propagate 0-fee transactions provided\r\n```",
      "created_at": "2024-07-01T16:45:47Z",
      "updated_at": "2024-07-01T16:48:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661309682",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661309682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661310676",
      "pull_request_review_id": 2151814320,
      "id": 1661310676,
      "node_id": "PRRC_kwDOAN28mc5jBZbU",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+  Requires: 431\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows dust UTXOs,\n+even 0-value, to be created, provided they are also spent in the mempool.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloat the UTXO set, and increase the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to allow network relay\n+by passing dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is responsibile for providing the funds.\n+\n+In this and similar abstractions it would be cleaner if the anchor itself could be 0-value\n+instead of requiring anchors to exceed dust amounts.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, possibly shared by multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 51,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "8852274d86a7f8b203a5fcae85726769671dffd9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the user's need for lack of txid malleability. Further policy\r\n```",
      "created_at": "2024-07-01T16:46:46Z",
      "updated_at": "2024-07-01T16:48:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661310676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661310676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661311191",
      "pull_request_review_id": 2151814320,
      "id": 1661311191,
      "node_id": "PRRC_kwDOAN28mc5jBZjX",
      "diff_hunk": "@@ -0,0 +1,138 @@\n+<pre>\n+  BIP: ?\n+  Layer: Application\n+  Title: Ephemeral Anchors\n+  Author: Gregory Sanders <gsanders87@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Informational\n+  Created: 2023-01-11\n+  License: CC0 1.0 Universal\n+  Requires: 431\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+Ephemeral Anchors are a mempool policy carve-out that allows dust UTXOs,\n+even 0-value, to be created, provided they are also spent in the mempool.\n+\n+===Motivation===\n+\n+Relay dust limits have been in place in most implementations of the Bitcoin\n+protocol to discourage the creation of UTXOs that are never spent in the future,\n+bloat the UTXO set, and increase the validation burden for validating\n+nodes.\n+\n+With [https://github.com/bitcoin/bips/blob/master/bip-0431.mediawiki TRUC] transactions\n+and basic package relay, users can generate and propogate 0-fee transactions provided\n+a descendant transaction includes the proper fee for the package. In many cases\n+these fees can be directly sourced from a freely spendable output, with the resulting\n+change output being decremented by the required fee amount.\n+\n+In some cases however there are no freely spendable outputs to source this fee value\n+from, and in these cases an \"anchor\" is employed.\n+\n+[https://github.com/lightning/bolts/blob/master/03-transactions.md#to_local_anchor-and-to_remote_anchor-output-option_anchors LN]\n+allows a small amount of contract value to be given to an output to allow network relay\n+by passing dust checks, but not as the primary source of fee funds. Instead the child transaction\n+spending the anchor is responsibile for providing the funds.\n+\n+In this and similar abstractions it would be cleaner if the anchor itself could be 0-value\n+instead of requiring anchors to exceed dust amounts.\n+\n+===Typical Configurations===\n+\n+For anchors using TRUC transactions, it's expected that they would take two output script forms:\n+\n+1. Keyed anchor: A key, possibly shared by multiple privileged parties, is used to encumber the anchor. This could also be `tr()`, `p2wsh()` or any\n+output type that allows key material.\n+1. Un-keyed anchor: `P2SH(OP_TRUE)` or `P2WSH(OP_TRUE)`, depending on the the user's need for lack of txid malleability. Further policy\n+extensions could allow output templates such as the output script <code>OP_1 <0x4e73></code> or a bare `OP_TRUE`.\n+\n+===Example Use Cases===\n+\n+* Batched payments with segregated fee pools: Batched payments that can be fee bumped without access to customer deposit-related key material\n+* Simplified watchtowers/accelerators: No requirement to equip watchtowers with privileged key material, and no value to steal by those watchtowers\n+* Multiparty smart contracts: LN BOLTs can be revamped to remove value-sapping anchors.\n+* LN-Symmetry: During the contest period, no anchor value can be sourced endogenously.\n+* [https://bitcoin.stackexchange.com/questions/100537/what-is-spacechain Spacechains]\n+* Ark transactions\n+* Timeout Trees\n+\n+===Related Work===\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021334.html SIGHASH_GROUP] style proposals are an alternative method of bringing funds to a transaction without involving CPFP by enacting a softfork. Making these pin-resistant may require follow-on policy work, or [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020458.html more general covenants] to directly stop pins we want to avoid. The drawback of these are the necessity of a softfork.\n+\n+[https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018168.html Transaction Sponsors] is a softfork proposal to allow transactions to\n+sponsor transactions with no explicit relationship in the classical UTXO\n+model. Ephemeral Anchors can be viewed as a type of opt-in transaction sponsors implemented\n+purely in policy.\n+\n+Using a 0-value CPFP anchor is not a new idea, see:\n+\n+* [https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-May/015931.html LN-dev discussion on 0-value anchors]\n+\n+The discussion lacked a solution to the issue of the dust entering into the utxo set",
      "path": "bip-ephemeralanchors.mediawiki",
      "position": null,
      "original_position": 77,
      "commit_id": "9e463fe466d2ff9f5d0b10ec7a2c526cd5ed2067",
      "original_commit_id": "8852274d86a7f8b203a5fcae85726769671dffd9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThe discussion lacked a solution to the issue of the dust entering into the UTXO set\r\n```",
      "created_at": "2024-07-01T16:47:16Z",
      "updated_at": "2024-07-01T16:48:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1524#discussion_r1661311191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1661311191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1524"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    }
  ]
}