{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/179",
    "id": 42381941,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzODE5NDE=",
    "html_url": "https://github.com/bitcoin/bips/pull/179",
    "diff_url": "https://github.com/bitcoin/bips/pull/179.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/179.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/179/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/179/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/179/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/6902f790f174c8af934869dcc5f10f94f816f65d",
    "number": 179,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP112: CHECKSEQUENCEVERIFY",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Todo\n- [x] BIP number assignment\n- [x] Amend text for median-past-timelock BIP number when assigned\n",
    "labels": [],
    "created_at": "2015-08-13T18:21:24Z",
    "updated_at": "2015-09-20T09:46:36Z",
    "closed_at": "2015-09-19T18:13:48Z",
    "mergeable_state": "unknown",
    "merged_at": "2015-09-19T18:13:48Z",
    "merge_commit_sha": "3bb75e12b3f5c22d4af159077e7ace74546da1c8",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "btcdrak:bip-checksequenceverify",
      "ref": "bip-checksequenceverify",
      "sha": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40414513,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDQxNDUxMw==",
        "name": "bips",
        "full_name": "btcdrak/bips",
        "owner": {
          "login": "btcdrak",
          "id": 7275704,
          "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/btcdrak",
          "html_url": "https://github.com/btcdrak",
          "followers_url": "https://api.github.com/users/btcdrak/followers",
          "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
          "organizations_url": "https://api.github.com/users/btcdrak/orgs",
          "repos_url": "https://api.github.com/users/btcdrak/repos",
          "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/btcdrak/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/btcdrak/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/btcdrak/bips",
        "archive_url": "https://api.github.com/repos/btcdrak/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/btcdrak/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/btcdrak/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/btcdrak/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/btcdrak/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/btcdrak/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/btcdrak/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/btcdrak/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/btcdrak/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/btcdrak/bips/contributors",
        "deployments_url": "https://api.github.com/repos/btcdrak/bips/deployments",
        "downloads_url": "https://api.github.com/repos/btcdrak/bips/downloads",
        "events_url": "https://api.github.com/repos/btcdrak/bips/events",
        "forks_url": "https://api.github.com/repos/btcdrak/bips/forks",
        "git_commits_url": "https://api.github.com/repos/btcdrak/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/btcdrak/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/btcdrak/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/btcdrak/bips.git",
        "issue_comment_url": "https://api.github.com/repos/btcdrak/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/btcdrak/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/btcdrak/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/btcdrak/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/btcdrak/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/btcdrak/bips/languages",
        "merges_url": "https://api.github.com/repos/btcdrak/bips/merges",
        "milestones_url": "https://api.github.com/repos/btcdrak/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/btcdrak/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/btcdrak/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/btcdrak/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:btcdrak/bips.git",
        "stargazers_url": "https://api.github.com/repos/btcdrak/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/btcdrak/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/btcdrak/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/btcdrak/bips/subscription",
        "tags_url": "https://api.github.com/repos/btcdrak/bips/tags",
        "teams_url": "https://api.github.com/repos/btcdrak/bips/teams",
        "trees_url": "https://api.github.com/repos/btcdrak/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/btcdrak/bips.git",
        "hooks_url": "https://api.github.com/repos/btcdrak/bips/hooks",
        "svn_url": "https://github.com/btcdrak/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 2,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 4473,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2018-08-14T21:28:17Z",
        "created_at": "2015-08-08T19:43:12Z",
        "updated_at": "2023-07-04T13:46:24Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a0837d35c65b4165f472a7e7af70b4f98722e50c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5535,
        "stargazers_count": 8220,
        "watchers_count": 8220,
        "size": 13787,
        "default_branch": "master",
        "open_issues_count": 112,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T12:09:15Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-08-01T09:08:43Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 252,
    "deletions": 0,
    "changed_files": 2,
    "commits": 3,
    "review_comments": 10,
    "comments": 20
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 381821063,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzgxODIxMDYz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/381821063",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-13T19:12:07Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjM4ODU6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjM4ODc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjM4ODg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjM4OTA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "mentioned",
      "id": 382355742,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgyMzU1NzQy",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/382355742",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T08:53:29Z"
    },
    {
      "event": "subscribed",
      "id": 382355743,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MjM1NTc0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/382355743",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-14T08:53:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-17T19:21:29Z",
      "updated_at": "2015-08-17T19:21:29Z",
      "source": {
        "issue": {
          "id": 101491428,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MjM2Njg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6564",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6564/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6564/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6564/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/6564",
          "number": 6564,
          "state": "closed",
          "state_reason": null,
          "title": "BIP-112: Mempool-only CHECKSEQUENCEVERIFY",
          "body": "Replace NOP3 with CHECKSEQUENCEVERIFY (BIP-112)\n\n&lt;nSequence&gt; CHECKSEQUENCEVERIFY -> &lt;nSequence&gt;\n\nFails if relative lock-time encoded in txin.nSequence < relative lock-time represented by nSequence, allowing funds of a txout to be locked for a number of blocks or a duration of time after its inclusion in a block.\n\nTransactions that fail CSV verification will be rejected from the mempool, making it easy to test the feature. However blocks containing \"invalid\" CSV-using transactions will still be accepted; this is _not_ the soft-fork required to actually enable CSV for production use.\n",
          "user": {
            "login": "maaku",
            "id": 69154,
            "node_id": "MDQ6VXNlcjY5MTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maaku",
            "html_url": "https://github.com/maaku",
            "followers_url": "https://api.github.com/users/maaku/followers",
            "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
            "organizations_url": "https://api.github.com/users/maaku/orgs",
            "repos_url": "https://api.github.com/users/maaku/repos",
            "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maaku/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 46,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6564",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/6564",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/6564.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/6564.patch"
          },
          "closed_at": "2016-02-11T20:08:53Z",
          "created_at": "2015-08-17T19:18:39Z",
          "updated_at": "2021-09-08T10:59:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 132534336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjUzNDMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/132534336",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T10:36:17Z",
      "updated_at": "2015-08-19T10:36:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "I extremely dislike the inversion to preserve the \"previous nSequence\nsemantics\". The \"previous nSequence semantics\" were\nconsensus-unenforceable but we can cover the same use cases (or the\nrealistic ones at least) with nMaturity. Let's face it and move on\nwithout technical debt we don't need and may regret. If we do this\ninversion we will likely carry it for very long if not forever.\nI don't think we will ever regret not having done the inversion.\n\nAs a side effect of this proposed change, I believe documentation (not just this BIP but also doxygen's) can become much clearer (maybe even shorter simultaneously).\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-132534336",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 132676170,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjY3NjE3MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/132676170",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T16:21:28Z",
      "updated_at": "2015-08-19T16:21:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "I am indifferent on this issue (the bit inversion), but so far only Jorge has spoken up. I opted for this detail during implementation in order to preserve existing semantics, even if those semantics are not commonly used. This was the conservative choice, driven in part because I didn't want the proposal to be held up by the other side saying \"this is confusing because it changes how sequence numbers work! it used to count up but now it counts down!\"\n\nI can see both sides and as I said I'm indifferent, so I went with the conservative choice of not messing with existing semantics. However if there is strong preferences from _multiple_ people on this matter it is not too late to change. If anyone feels strongly about this, please speak up.\n",
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-132676170",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 132697669,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjY5NzY2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/132697669",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T17:09:33Z",
      "updated_at": "2015-08-19T17:09:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "If I'm the only one opposed to the inversion, I certainly prefer this with the inversion than not having the new op at all.\nBut as you say the code change is relatively simple, and I don't think sufficient reasons have been provided to justify the bit inversion to \"preserve the old semantics\" (specially given that the old semantics were not enforceable). The new semantics are better with or without the inversion.\nI think that even if the inversion is maintained the BIP should contain the motivations of that decision.\nIdeally with concrete example use cases that would be broken instead of a vague \"to preserve the old semantics\" (which would still be better than what BIP draft currently has).\n\nBut, yes, please, more \"I prefer to do the inversion\" (0), \"I'm indifferent\" (1) and \"I prefer not to do the inversion\" (1) from other people would be appreciated.\nI suspect most people will, like you, be indifferent, but I'm specially interested on what arguments (and \"this is not what Satoshi had in mind for nSequence\" is not a logical argument) people would have to \"preserve the current semantics\".\n\nMaybe @mikehearn can help providing those reasons?\nI don't understand his points about \"resource scheduling and update flood damping\" in http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008293.html\n\nSo, to be completely clear, this is not a NACK, just a nit. If the inversion is going to be used, please document why. If there's no good reason to use the inversion, just not using it will make everything simpler and more readable.\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-132697669",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "mentioned",
      "id": 386762104,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzg2NzYyMTA0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/386762104",
      "actor": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T17:09:33Z"
    },
    {
      "event": "subscribed",
      "id": 386762105,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4Njc2MjEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/386762105",
      "actor": {
        "login": "mikehearn",
        "id": 971089,
        "node_id": "MDQ6VXNlcjk3MTA4OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikehearn",
        "html_url": "https://github.com/mikehearn",
        "followers_url": "https://api.github.com/users/mikehearn/followers",
        "following_url": "https://api.github.com/users/mikehearn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mikehearn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mikehearn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
        "organizations_url": "https://api.github.com/users/mikehearn/orgs",
        "repos_url": "https://api.github.com/users/mikehearn/repos",
        "events_url": "https://api.github.com/users/mikehearn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mikehearn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-19T17:09:33Z"
    },
    {
      "event": "commented",
      "id": 133816935,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzgxNjkzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/133816935",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-23T10:51:04Z",
      "updated_at": "2015-08-23T10:52:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just want to mention that nSequence is used by a colored coin protocol [EPOBC](https://github.com/chromaway/ngcccbase/wiki/EPOBC). I don't know myself the detail of this protocol very well, but if we don't keep nSequence semantic it may be very detrimental to chromaway. The inversion may fix the issue. (not checked that into the details)\n",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-133816935",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 133859971,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzg1OTk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/133859971",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-23T15:16:05Z",
      "updated_at": "2015-08-23T15:16:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "There is an exception explicitly for such purposes. Just make sure you set\nbit 31.\nOn Aug 23, 2015 3:51 AM, \"Nicolas Dorier\" notifications@github.com wrote:\n\n> Just want to mention that nSequence is used by a colored coin protocol\n> EPOBC https://github.com/chromaway/ngcccbase/wiki/EPOBC. I don't know\n> myself the detail of this protocol very well, but if we don't keep\n> nSequence semantic it may be very detrimental to chromaway.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bips/pull/179#issuecomment-133816935.\n",
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-133859971",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "renamed",
      "id": 390857238,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzkwODU3MjM4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/390857238",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-08-24T18:03:14Z",
      "rename": {
        "from": "BIP CHECKSEQUENCEVERIFY",
        "to": "BIP112: CHECKSEQUENCEVERIFY"
      }
    },
    {
      "event": "commented",
      "id": 137597428,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzU5NzQyOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/137597428",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T23:04:38Z",
      "updated_at": "2015-09-03T23:04:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Whats the current status here?\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-137597428",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 400654476,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAwNjU0NDc2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/400654476",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T23:25:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 400655925,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAwNjU1OTI1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/400655925",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T23:28:40Z"
    },
    {
      "event": "commented",
      "id": 137601224,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzYwMTIyNA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/137601224",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T23:30:48Z",
      "updated_at": "2015-09-03T23:30:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "@gmaxwell I believe there was some question of whether or not to use the inversion. http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010686.html\n",
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-137601224",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "mentioned",
      "id": 400657361,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDAwNjU3MzYx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/400657361",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T23:30:48Z"
    },
    {
      "event": "subscribed",
      "id": 400657362,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwMDY1NzM2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/400657362",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-03T23:30:48Z"
    },
    {
      "event": "commented",
      "id": 138015665,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODAxNTY2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138015665",
      "actor": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T00:51:27Z",
      "updated_at": "2015-09-06T00:55:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Unless changing the semantics breaks something, I'm for using the most transparent semantics here. Given that almost nobody uses the nSequence field at all, it's probably less painful to change the semantics now than to have to document this quirk later on when everyone is using it.\n",
      "user": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138015665",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138016175,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODAxNjE3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138016175",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T01:12:23Z",
      "updated_at": "2015-09-06T01:12:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "There seems to be a general consensus in favor of dropping the bit\ninversion.\n\nThe sequencenumbers3 branch contains future soft-fork bits that are shifted\nout of register, as per @gmaxwell's suggestion. This adds future expansion\ncapability at the cost of relative lock times being limited to about 2\nyears (not an issue in foreseeable use cases) and quite a bit more code\ncomplexity (a bit more of an issue...)\n\nSo far Rusty is the only one that had commented on this. Both he and I are\nmildly against this due to being considerably more complicated. If we want\nto remove the bit inversion to make relative lock times semantically\nsimpler it doesn't make sense to then add a bunch of bit shifts.\n\nBut I would like a more clear consensus before making a call on this and\nchanging the text and code. Can a few people review that branch and express\nan opinion?\nOn Sep 5, 2015 5:51 PM, \"Eric Lombrozo\" notifications@github.com wrote:\n\n> Unless bit inversion breaks something, I'm for using the most transparent\n> semantics here. Given that almost nobody uses the nSequence field at all,\n> it's probably less painful to change the semantics now than to have to\n> document this quirk later on.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bips/pull/179#issuecomment-138015665.\n",
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138016175",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "mentioned",
      "id": 402020731,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDAyMDIwNzMx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402020731",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T01:12:23Z"
    },
    {
      "event": "subscribed",
      "id": 402020732,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwMjAyMDczMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402020732",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T01:12:23Z"
    },
    {
      "event": "commented",
      "id": 138016249,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODAxNjI0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138016249",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T01:15:21Z",
      "updated_at": "2015-09-06T01:15:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Is there a branch that drops the bit inversion without making any further changes?\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138016249",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138016274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODAxNjI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138016274",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T01:16:25Z",
      "updated_at": "2015-09-06T01:16:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "sequencenumbers2\nOn Sep 5, 2015 6:15 PM, \"Jorge Timón\" notifications@github.com wrote:\n\n> Is there a branch that drops the bit inversion without making any further\n> changes?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bips/pull/179#issuecomment-138016249.\n",
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138016274",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138040824,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA0MDgyNA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138040824",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T04:59:58Z",
      "updated_at": "2015-09-06T05:00:51Z",
      "author_association": "MEMBER",
      "body": "Why not mask them with a logical AND instead of bit shifts? Wouldn't that keep it semantically simple?\n\nAlso, I feel like I've brought this up before, but: I really think this should use a new name besides \"sequence\" since it is completely changing the semantics from what the original purpose was.\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138040824",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "mentioned",
      "id": 402067978,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDAyMDY3OTc4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402067978",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T04:59:58Z"
    },
    {
      "event": "subscribed",
      "id": 402067979,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwMjA2Nzk3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402067979",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T04:59:58Z"
    },
    {
      "event": "commented",
      "id": 138043457,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA0MzQ1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138043457",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T05:45:38Z",
      "updated_at": "2015-09-06T05:45:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "I would rename nSequence to nMaturity. In fact, if I remember correctly the first time we talked about something similar to rcltv/csv we called it \"op_maturity\" which in my opinion is much more clear and would probably simplify the documentation.\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138043457",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138043725,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA0MzcyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138043725",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T05:55:23Z",
      "updated_at": "2015-09-06T05:55:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm going to be the odd one out here and claim the sequence numbers\nactually describes exactly what the field's semantics is, regardless of\nwhether you are counting up or down. Given two transactions, the sequence\nnumber can be used to determine which came after the other.\nOn Sep 5, 2015 10:45 PM, \"Jorge Timón\" notifications@github.com wrote:\n\n> I would rename nSequence to nMaturity. In fact, if I remember correctly\n> the first time we talked about something similar to rcltv/csv we called it\n> \"op_maturity\" which in my opinion is much more clear and would probably\n> simplify the documentation.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bips/pull/179#issuecomment-138043457.\n",
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138043725",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138045474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA0NTQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138045474",
      "actor": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T06:17:31Z",
      "updated_at": "2015-09-06T06:23:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "@maaku Technically, that is true - but I think the bigger point is that the use cases we're after don't really care about sequence...that the original semantics are preserved is sort of a side effect of the more important feature which is relative time lock which is what is actually enforced by the consensus rules.\n",
      "user": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138045474",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "mentioned",
      "id": 402080810,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDAyMDgwODEw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402080810",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T06:17:31Z"
    },
    {
      "event": "subscribed",
      "id": 402080811,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwMjA4MDgxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402080811",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T06:17:31Z"
    },
    {
      "event": "commented",
      "id": 138046560,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA0NjU2MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138046560",
      "actor": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T06:26:00Z",
      "updated_at": "2015-09-06T06:26:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Also, it's possible to think of pathological cases where the sequence numbers don't necessarily reflect the sequence. i.e. a higher sequence number transaction with no fee and a lower sequence number transaction with a very high fee that spends the same output.\n",
      "user": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138046560",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138048840,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA0ODg0MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138048840",
      "actor": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T07:07:55Z",
      "updated_at": "2015-09-06T07:07:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "In other words, since nSequence isn't being used at all, we have a free field we can repurpose for RCLTV which we already know has many good use cases. The fact we can preserve the semantics via a little hackery, while a clever observation, isn't really what's important.\n",
      "user": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138048840",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138098439,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODA5ODQzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138098439",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T16:40:19Z",
      "updated_at": "2015-09-06T16:44:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't want to be repetitive, but this has exactly the same semantics as the 100 blocks maturity for coinbase inputs. In fact, I would prefer this check https://github.com/bitcoin/bitcoin/compare/master...maaku:sequencenumbers2#diff-7ec3c68a81efff79b6ca22ac1f1eabbaR943 to be done in the same place where the coinbase maturity is checked, here: https://github.com/jtimon/bitcoin/blob/consensus-txinputs-0.12.99/src/main.cpp#L1301\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138098439",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "commented",
      "id": 138131037,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODEzMTAzNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138131037",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T22:13:01Z",
      "updated_at": "2015-09-06T22:13:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm in agreement with @maaku \n",
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138131037",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "mentioned",
      "id": 402293494,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDAyMjkzNDk0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402293494",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T22:13:01Z"
    },
    {
      "event": "subscribed",
      "id": 402293495,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwMjI5MzQ5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402293495",
      "actor": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T22:13:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 402302400,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAyMzAyNDAw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402302400",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T22:59:44Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6YWU0Njk0M2YxMWZhZjgwYzFmNjk1NDJmMDk3Njk4OWMwOWNmYTE5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae46943f11faf80c1f69542f0976989c09cfa192",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/ae46943f11faf80c1f69542f0976989c09cfa192",
      "tree": {
        "sha": "a47ae29b7d501719ba3935e1d002e4b68957a6fe",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/a47ae29b7d501719ba3935e1d002e4b68957a6fe"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/a0837d35c65b4165f472a7e7af70b4f98722e50c",
          "sha": "a0837d35c65b4165f472a7e7af70b4f98722e50c",
          "html_url": "https://github.com/bitcoin/bips/commit/a0837d35c65b4165f472a7e7af70b4f98722e50c"
        }
      ],
      "message": "BIP for OP_CHECKSEQUENCEVERIFY",
      "committer": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-09-06T23:03:50Z"
      },
      "author": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-08-10T23:49:09Z"
      },
      "sha": "ae46943f11faf80c1f69542f0976989c09cfa192"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NjE1MGIzYTg1NzRkY2IxNDUyMDkzNjA3MTAwNWExOWI4MWIxMmQ5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6150b3a8574dcb14520936071005a19b81b12d93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6150b3a8574dcb14520936071005a19b81b12d93",
      "tree": {
        "sha": "718d9c121cfc01ca1a4d4bfbc38cdac20d997ca9",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/718d9c121cfc01ca1a4d4bfbc38cdac20d997ca9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae46943f11faf80c1f69542f0976989c09cfa192",
          "sha": "ae46943f11faf80c1f69542f0976989c09cfa192",
          "html_url": "https://github.com/bitcoin/bips/commit/ae46943f11faf80c1f69542f0976989c09cfa192"
        }
      ],
      "message": "Comprehensive editing to clarify meaning and intent of existing text.",
      "committer": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-09-06T23:03:55Z"
      },
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2015-08-13T01:14:51Z"
      },
      "sha": "6150b3a8574dcb14520936071005a19b81b12d93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NjkwMmY3OTBmMTc0YzhhZjkzNDg2OWRjYzVmMTBmOTRmODE2ZjY1ZA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6902f790f174c8af934869dcc5f10f94f816f65d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6902f790f174c8af934869dcc5f10f94f816f65d",
      "tree": {
        "sha": "64e5c7cdf56270c758060c4deb74eb4b805a850a",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/64e5c7cdf56270c758060c4deb74eb4b805a850a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6150b3a8574dcb14520936071005a19b81b12d93",
          "sha": "6150b3a8574dcb14520936071005a19b81b12d93",
          "html_url": "https://github.com/bitcoin/bips/commit/6150b3a8574dcb14520936071005a19b81b12d93"
        }
      ],
      "message": "Add constant definitions for clarity\n\nFormatting Fix typos\n\nUpdate with BIP 112 assignment\n\nUpdate references to BIP113\n\nUpdate deployment methodology\n\nAdd references",
      "committer": {
        "name": "BtcDrak",
        "email": "btcdrak@gmail.com",
        "date": "2015-09-06T23:03:55Z"
      },
      "author": {
        "name": "฿tcDrak",
        "email": "btcdrak@users.noreply.github.com",
        "date": "2015-08-13T07:14:38Z"
      },
      "sha": "6902f790f174c8af934869dcc5f10f94f816f65d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 402302996,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAyMzAyOTk2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/402302996",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T23:04:14Z"
    },
    {
      "event": "commented",
      "id": 138134764,
      "node_id": "MDEyOklzc3VlQ29tbWVudDEzODEzNDc2NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/138134764",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-06T23:05:57Z",
      "updated_at": "2015-09-06T23:05:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just a heads up, I've rebased and added to the index.\n",
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/179#issuecomment-138134764",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/179"
    },
    {
      "event": "referenced",
      "id": 413971254,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMzk3MTI1NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/413971254",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "063a8ad82acacb6babc8dc238258f78b7996b810",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/063a8ad82acacb6babc8dc238258f78b7996b810",
      "created_at": "2015-09-19T18:13:48Z"
    },
    {
      "event": "merged",
      "id": 413971255,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDEzOTcxMjU1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/413971255",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "063a8ad82acacb6babc8dc238258f78b7996b810",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/063a8ad82acacb6babc8dc238258f78b7996b810",
      "created_at": "2015-09-19T18:13:48Z"
    },
    {
      "event": "closed",
      "id": 413971256,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDEzOTcxMjU2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/413971256",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-19T18:13:48Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 414126868,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0MTQxMjY4Njg=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/414126868",
      "actor": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-09-20T09:46:36Z"
    },
    {
      "event": "referenced",
      "id": 1112679124,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDExMTI2NzkxMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1112679124",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "95e71965601d631d0f7077fb27fa6a5774a57286",
      "commit_url": "https://api.github.com/repos/luke-jr/bips/commits/95e71965601d631d0f7077fb27fa6a5774a57286",
      "created_at": "2017-06-06T22:15:18Z"
    },
    {
      "event": "referenced",
      "id": 2884047763,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI4ODQwNDc3NjM=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2884047763",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7c7aead1c1b93e64cdca8829988c8b9d8588f0ce",
      "commit_url": "https://api.github.com/repos/pinheadmz/bips/commits/7c7aead1c1b93e64cdca8829988c8b9d8588f0ce",
      "created_at": "2019-12-15T15:33:13Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37046450",
      "pull_request_review_id": null,
      "id": 37046450,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ2NDUw",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 116,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this meant to be **`above`**,  or am I misunderstanding what is meant here by `consensus constrained`?\nIf I am misunderstanding,  then perhaps the conditional should also be switched such that it aligns with comment.\n\n> Sequence numbers equal to or above the SEQUENCE_THRESHOLD are not treated as relative lock-times, nor are they given any consensus-enforced meaning at this point.\n\nFrom [BIP68](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki#specification).  I assume therefore that this comment is wrong?\n",
      "created_at": "2015-08-14T03:03:40Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37046450",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37046450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37046560",
      "pull_request_review_id": null,
      "id": 37046560,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ2NTYw",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 103,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this declared at the top of the scope?\n\n**edit:** seems to be an artefact of https://github.com/bitcoin/bitcoin/commit/bb0b59eb5fed7555eed705cad6e360a7617daf0e#diff-be2905e2f5218ecdbe4e55637dac75f3R1176 \n",
      "created_at": "2015-08-14T03:07:10Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37046560",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37046560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37047399",
      "pull_request_review_id": null,
      "id": 37047399,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3Mzk5",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||\n+            (txToInvSequence >= LOCKTIME_THRESHOLD && nInvSequence >= LOCKTIME_THRESHOLD)\n+        ))\n+            return false;\n+        \n+        // Now that we know we're comparing apples-to-apples, the\n+        // comparison is a simple numeric one.\n+        if (nInvSequence > txInvToSequence)",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 135,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would `return nInvSequence <= txInvToSequence` suffice?\n\nOtherwise, ACK, LGTM.\n",
      "created_at": "2015-08-14T03:38:25Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37047399",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37047399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37054642",
      "pull_request_review_id": null,
      "id": 37054642,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0NjQy",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||\n+            (txToInvSequence >= LOCKTIME_THRESHOLD && nInvSequence >= LOCKTIME_THRESHOLD)\n+        ))\n+            return false;\n+        \n+        // Now that we know we're comparing apples-to-apples, the\n+        // comparison is a simple numeric one.\n+        if (nInvSequence > txInvToSequence)",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 135,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It might, but in practice this code is integrated into the existing `TransactionSignatureChecker::CheckLockTime` so the optimisation wouldn't persist.\n",
      "created_at": "2015-08-14T07:26:17Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37054642",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37054642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37058972",
      "pull_request_review_id": null,
      "id": 37058972,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4OTcy",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 128,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is `LOCKTIME_THRESHOLD` in this context?  It might be useful to specify this so that the example below is more clear.\n\n_edit_: It seems `LOCKTIME_THRESHOLD` is a [constant that has been long declared](https://github.com/bitcoin/bitcoin/blob/0.10/src/main.h#L78) in Bitcoin.   IMHO it would be useful to specify that so that this proposal is easier to implement without having to look up information in the core implementation.\n",
      "created_at": "2015-08-14T08:44:50Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37058972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37058972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37059513",
      "pull_request_review_id": null,
      "id": 37059513,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU5NTEz",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||\n+            (txToInvSequence >= LOCKTIME_THRESHOLD && nInvSequence >= LOCKTIME_THRESHOLD)\n+        ))\n+            return false;\n+        \n+        // Now that we know we're comparing apples-to-apples, the\n+        // comparison is a simple numeric one.\n+        if (nInvSequence > txInvToSequence)",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 135,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah!  I see that in @maaku's commit https://github.com/bitcoin/bitcoin/commit/bb0b59eb5fed7555eed705cad6e360a7617daf0e.   \n",
      "created_at": "2015-08-14T08:53:29Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37059513",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37059513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37060398",
      "pull_request_review_id": null,
      "id": 37060398,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwMzk4",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 128,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I could add this at the top of the code snippet for reference.\n\n``` cpp\n// Threshold for nLockTime: below this value it is interpreted as block number,\n// otherwise as UNIX timestamp.\nstatic const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n\n// Threshold for inverted CTxIn::nSequence: below this value it is interpreted\n// as a relative lock-time, otherwise ignored.\nstatic const uint32_t SEQUENCE_THRESHOLD = (1 << 31);\n```\n",
      "created_at": "2015-08-14T09:06:47Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37060398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37060398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37061170",
      "pull_request_review_id": null,
      "id": 37061170,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxMTcw",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 128,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "dcousens",
        "id": 413395,
        "node_id": "MDQ6VXNlcjQxMzM5NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dcousens",
        "html_url": "https://github.com/dcousens",
        "followers_url": "https://api.github.com/users/dcousens/followers",
        "following_url": "https://api.github.com/users/dcousens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dcousens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dcousens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
        "organizations_url": "https://api.github.com/users/dcousens/orgs",
        "repos_url": "https://api.github.com/users/dcousens/repos",
        "events_url": "https://api.github.com/users/dcousens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dcousens/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that would help a lot.\n",
      "created_at": "2015-08-14T09:19:09Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37061170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37061170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37073484",
      "pull_request_review_id": null,
      "id": 37073484,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDczNDg0",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 128,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OK I have added these.\n",
      "created_at": "2015-08-14T13:00:40Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37073484",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37073484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37302676",
      "pull_request_review_id": null,
      "id": 37302676,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyNjc2",
      "diff_hunk": "@@ -0,0 +1,227 @@\n+<pre>\n+  BIP: XX\n+  Title: CHECKSEQUENCEVERIFY\n+  Authors: BtcDrak <btcdrak@gmail.com>\n+           Mark Friedenbach <mark@friedenbach.org>\t\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-08-10\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes a new opcode (CHECKSEQUENCEVERIFY) for the Bitcoin\n+scripting system that in combination with BIP 68 allows execution\n+pathways of a script to be restricted based on the age of the output\n+being spent.\n+\n+\n+==Summary==\n+\n+CHECKSEQUENCEVERIFY redefines the existing NOP3 opcode. When executed\n+it compares the top item on the stack to the inverse of the nSequence\n+field of the transaction input containing the scriptSig. If the\n+inverse of nSequence is less than the sequence threshold (1 << 31),\n+the transaction version is greater than or equal to 2, and the top\n+item on the stack is less than or equal to the inverted nSequence,\n+script evaluation continues as though a NOP was executed. Otherwise\n+the script fails immediately.\n+\n+BIP 68's redefinition of nSequence prevents a non-final transaction\n+from being selected for inclusion in a block until the corresponding\n+input has reached the specified age, as measured in block heiht or\n+block time. By comparing the argument to CHECKSEQUENCEVERIFY against\n+the nSequence field, we indirectly verify a desired minimum age of the\n+the output being spent; until that relative age has been reached any\n+script execution pathway including the CHECKSEQUENCEVERIFY will fail\n+to validate, causing the transaction not to be selected for inclusion\n+in a block.\n+\n+\n+==Motivation==\n+\n+BIP 68 repurposes the transaction nSequence field meaning by giving\n+sequence numbers new consensus-enforced semantics as a relative\n+lock-time. However, there is no way to build Bitcoin scripts to make\n+decisions based on this field.\n+\n+By making the nSequence field accessible to script, it becomes\n+possible to construct code pathways that only become accessible some\n+minimum time after proof-of-publication. This enables a wide variety\n+of applications in phased protocols such as escrow, payment channels,\n+or bidirectional pegs.\n+\n+\n+==Specification==\n+\n+Refer to the reference implementation, reproduced below, for the precise \n+semantics and detailed rationale for those semantics.\n+\n+    \n+    case OP_NOP3:\n+    {\n+        if (!(flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n+            // not enabled; treat as a NOP3\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS);\n+            }\n+            break;\n+        }\n+        \n+        if (stack.size() < 1)\n+            return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+        \n+        // Note that unlike CHECKLOCKTIMEVERIFY we do not need to\n+        // accept 5-byte bignums since any value greater than or\n+        // equal to SEQUENCE_THRESHOLD (= 1 << 31) will be rejected\n+        // anyway. This limitation just happens to coincide with\n+        // CScriptNum's default 4-byte limit with an explicit sign\n+        // bit.\n+        //\n+        // This means there is a maximum relative lock time of 52\n+        // years, even though the nSequence field in transactions\n+        // themselves is uint32_t and could allow a relative lock\n+        // time of up to 120 years.\n+        const CScriptNum nInvSequence(stacktop(-1), fRequireMinimal);\n+        \n+        // In the rare event that the argument may be < 0 due to\n+        // some arithmetic being done first, you can always use\n+        // 0 MAX CHECKSEQUENCEVERIFY.\n+        if (nInvSequence < 0)\n+            return set_error(serror, SCRIPT_ERR_NEGATIVE_LOCKTIME);\n+        \n+        // Actually compare the specified inverse sequence number\n+        // with the input.\n+        if (!CheckSequence(nInvSequence))\n+            return set_error(serror, SCRIPT_ERR_UNSATISFIED_LOCKTIME);\n+        \n+        break;\n+    }\n+    \n+    bool CheckSequence(const CScriptNum& nInvSequence) const\n+    {\n+        int64_t txToInvSequence;\n+        \n+        // Fail under all circumstances if the transaction's version\n+        // number is not set high enough to enable enforced sequence\n+        // number rules.\n+        if (txTo->nVersion < 2)\n+            return false;\n+        \n+        // Sequence number must be inverted to convert it into a\n+        // relative lock-time.\n+        txToInvSequence = (int64_t)~txTo->vin[nIn].nSequence;\n+        \n+        // Sequence numbers under SEQUENCE_THRESHOLD are not consensus\n+        // constrained.\n+        if (txToInvSequence >= SEQUENCE_THRESHOLD)\n+            return false;\n+        \n+        // There are two types of relative lock-time: lock-by-\n+        // blockheight and lock-by-blocktime, distinguished by\n+        // whether txToInvSequence < LOCKTIME_THRESHOLD.\n+        //\n+        // We want to compare apples to apples, so fail the script\n+        // unless the type of lock-time being tested is the same as\n+        // the lock-time in the transaction input.\n+        if (!(\n+            (txToInvSequence <  LOCKTIME_THRESHOLD && nInvSequence <  LOCKTIME_THRESHOLD) ||\n+            (txToInvSequence >= LOCKTIME_THRESHOLD && nInvSequence >= LOCKTIME_THRESHOLD)\n+        ))\n+            return false;\n+        \n+        // Now that we know we're comparing apples-to-apples, the\n+        // comparison is a simple numeric one.\n+        if (nInvSequence > txInvToSequence)",
      "path": "bip-csv.mediawiki",
      "position": null,
      "original_position": 135,
      "commit_id": "6902f790f174c8af934869dcc5f10f94f816f65d",
      "original_commit_id": "3cd470635ca92e5a9b9c4b8cdd6cf74ce6f9302e",
      "in_reply_to_id": null,
      "user": null,
      "body": "slight spelling error in the variable name\n `if (nInvSequence > txInvToSequence)` should read `if (nInvSequence > txToInvSequence)`\n",
      "created_at": "2015-08-18T14:16:06Z",
      "updated_at": "2015-09-06T23:04:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/179#discussion_r37302676",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/37302676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/179"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}