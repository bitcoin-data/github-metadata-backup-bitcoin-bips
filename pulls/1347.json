{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1347",
    "id": 1007825995,
    "node_id": "PR_kwDOAN28mc48EjRL",
    "html_url": "https://github.com/bitcoin/bips/pull/1347",
    "diff_url": "https://github.com/bitcoin/bips/pull/1347.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1347.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1347/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
    "number": 1347,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP 322: Explain various signature intents, add TODOs",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Improves what is already in the spec, and adds TODOs for things I think need to be addressed.",
    "labels": [
      {
        "id": 275846070,
        "node_id": "MDU6TGFiZWwyNzU4NDYwNzA=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/Proposed%20BIP%20modification",
        "name": "Proposed BIP modification",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 6924377447,
        "node_id": "LA_kwDOAN28mc8AAAABnLmdZw",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/PR%20Author%20action%20required",
        "name": "PR Author action required",
        "description": "Needs updates, has unaddressed review comments, or is otherwise waiting for PR author",
        "color": "e99695",
        "default": false
      }
    ],
    "created_at": "2022-07-25T22:14:02Z",
    "updated_at": "2024-06-29T10:45:02Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "82e9bce1265d5581cb5697a5d7303115848eac39",
    "assignee": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "luke-jr:GSMF-20220725",
      "ref": "GSMF-20220725",
      "sha": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 51330851,
        "node_id": "MDEwOlJlcG9zaXRvcnk1MTMzMDg1MQ==",
        "name": "bips",
        "full_name": "luke-jr/bips",
        "owner": {
          "login": "luke-jr",
          "id": 1095675,
          "node_id": "MDQ6VXNlcjEwOTU2NzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/luke-jr",
          "html_url": "https://github.com/luke-jr",
          "followers_url": "https://api.github.com/users/luke-jr/followers",
          "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
          "organizations_url": "https://api.github.com/users/luke-jr/orgs",
          "repos_url": "https://api.github.com/users/luke-jr/repos",
          "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/luke-jr/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/luke-jr/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/luke-jr/bips",
        "archive_url": "https://api.github.com/repos/luke-jr/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/luke-jr/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/luke-jr/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/luke-jr/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/luke-jr/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/luke-jr/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/luke-jr/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/luke-jr/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/luke-jr/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/luke-jr/bips/contributors",
        "deployments_url": "https://api.github.com/repos/luke-jr/bips/deployments",
        "downloads_url": "https://api.github.com/repos/luke-jr/bips/downloads",
        "events_url": "https://api.github.com/repos/luke-jr/bips/events",
        "forks_url": "https://api.github.com/repos/luke-jr/bips/forks",
        "git_commits_url": "https://api.github.com/repos/luke-jr/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/luke-jr/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/luke-jr/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/luke-jr/bips.git",
        "issue_comment_url": "https://api.github.com/repos/luke-jr/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/luke-jr/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/luke-jr/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/luke-jr/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/luke-jr/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/luke-jr/bips/languages",
        "merges_url": "https://api.github.com/repos/luke-jr/bips/merges",
        "milestones_url": "https://api.github.com/repos/luke-jr/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/luke-jr/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/luke-jr/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/luke-jr/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:luke-jr/bips.git",
        "stargazers_url": "https://api.github.com/repos/luke-jr/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/luke-jr/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/luke-jr/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/luke-jr/bips/subscription",
        "tags_url": "https://api.github.com/repos/luke-jr/bips/tags",
        "teams_url": "https://api.github.com/repos/luke-jr/bips/teams",
        "trees_url": "https://api.github.com/repos/luke-jr/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/luke-jr/bips.git",
        "hooks_url": "https://api.github.com/repos/luke-jr/bips/hooks",
        "svn_url": "https://github.com/luke-jr/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 7,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 14846,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-26T20:43:13Z",
        "created_at": "2016-02-08T22:08:43Z",
        "updated_at": "2024-06-22T20:44:40Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "bf657ddcac8cd02c6f4b04e800c44d9b5fc7e36e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5298,
        "stargazers_count": 9090,
        "watchers_count": 9090,
        "size": 15131,
        "default_branch": "master",
        "open_issues_count": 46,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-28T13:21:11Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-06-29T00:38:25Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 33,
    "deletions": 4,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 32,
    "comments": 13
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGI2YjAxMjZlMmQwNDc5M2JhNTJhNDBmMDVkMjQ1MzhmYTNmMmM5YWQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "tree": {
        "sha": "306f543bc0bac69429f9dbd2d3a6caf7b22449e5",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/306f543bc0bac69429f9dbd2d3a6caf7b22449e5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bf657ddcac8cd02c6f4b04e800c44d9b5fc7e36e",
          "sha": "bf657ddcac8cd02c6f4b04e800c44d9b5fc7e36e",
          "html_url": "https://github.com/bitcoin/bips/commit/bf657ddcac8cd02c6f4b04e800c44d9b5fc7e36e"
        }
      ],
      "message": "BIP 322: Explain various signature intents, add TODOs",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2022-07-25T22:13:13Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2022-07-25T21:58:56Z"
      },
      "sha": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad"
    },
    {
      "event": "labeled",
      "id": 7060114147,
      "node_id": "LE_lADOAN28mc5OhnJAzwAAAAGk0Mrj",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7060114147",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-25T22:14:09Z",
      "label": {
        "name": "Proposed BIP modification",
        "color": "5319e7"
      }
    },
    {
      "event": "assigned",
      "id": 7060115281,
      "node_id": "AE_lADOAN28mc5OhnJAzwAAAAGk0M9R",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7060115281",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-25T22:14:15Z",
      "assignee": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1054747162,
      "node_id": "PRR_kwDOAN28mc4-3ioa",
      "url": null,
      "actor": null,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#pullrequestreview-1054747162",
      "submitted_at": "2022-07-28T21:02:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
    },
    {
      "event": "reviewed",
      "id": 1053586938,
      "node_id": "PRR_kwDOAN28mc4-zHX6",
      "url": null,
      "actor": null,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Minor nits.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#pullrequestreview-1053586938",
      "submitted_at": "2022-08-01T06:03:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
    },
    {
      "event": "commented",
      "id": 1201967351,
      "node_id": "IC_kwDOAN28mc5HpJD3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1201967351",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T03:16:01Z",
      "updated_at": "2022-08-02T03:16:17Z",
      "author_association": "MEMBER",
      "body": "Adding a bunch of TODO entries to a BIP doesn't seem very constructive, and will only confuse everyone. Instead of adding TODOs, perhaps add a section at the bottom with \"Future work\" which lists what follow up BIPs could potentially address. I think BIP-322 on its own adds value, even if it is not addressing every single corner case in the galaxy right now.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1201967351",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1203299111,
      "node_id": "IC_kwDOAN28mc5HuOMn",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1203299111",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T23:10:16Z",
      "updated_at": "2022-08-02T23:10:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "BIP 332 definitely adds value, as it is needed for BIP 129 (legacy format accepted).",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1203299111",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "reviewed",
      "id": 1059579987,
      "node_id": "PRR_kwDOAN28mc4_J-hT",
      "url": null,
      "actor": null,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#pullrequestreview-1059579987",
      "submitted_at": "2022-08-03T00:53:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
    },
    {
      "event": "reviewed",
      "id": 1059580219,
      "node_id": "PRR_kwDOAN28mc4_J-k7",
      "url": null,
      "actor": null,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#pullrequestreview-1059580219",
      "submitted_at": "2022-08-03T00:53:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
    },
    {
      "event": "reviewed",
      "id": 1059580673,
      "node_id": "PRR_kwDOAN28mc4_J-sB",
      "url": null,
      "actor": null,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#pullrequestreview-1059580673",
      "submitted_at": "2022-08-03T00:55:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
    },
    {
      "event": "commented",
      "id": 1203364452,
      "node_id": "IC_kwDOAN28mc5HueJk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1203364452",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T00:58:55Z",
      "updated_at": "2022-08-03T00:58:55Z",
      "author_association": "MEMBER",
      "body": ">Adding a bunch of TODO entries to a BIP doesn't seem very constructive, and will only confuse everyone. Instead of adding TODOs, perhaps add a section at the bottom with \"Future work\" which lists what follow up BIPs could potentially address.\r\n\r\nA couple of them could be moved, but most of them are really things I think the BIP should address upfront before being complete.\r\n\r\n> I think BIP-322 on its own adds value, even if it is not addressing every single corner case in the galaxy right now.\r\n\r\nI'm not sure it does. Nobody seems to have any interest in using current signed messages for what they actually prove. Every attempt I see to sign messages, appear to have something in mind that currently *isn't* supported by signed messages. Even this historical exceptions were conceptually broken (Eligius revolved around address reuse, while #Bitcoin-OTC used it exclusively for secp256k1 authentication and not actual Bitcoin at all)",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1203364452",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1203379101,
      "node_id": "IC_kwDOAN28mc5Huhud",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1203379101",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T01:25:39Z",
      "updated_at": "2022-08-03T01:25:39Z",
      "author_association": "MEMBER",
      "body": ">BIP 332 definitely adds value, as it is needed for BIP 129 (legacy format accepted).\r\n\r\nGlancing at BIP 129, it's not obvious what it's even trying to use BIP 332 for...? :/",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1203379101",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1207563420,
      "node_id": "IC_kwDOAN28mc5H-fSc",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1207563420",
      "actor": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-08T01:53:37Z",
      "updated_at": "2022-08-08T01:53:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Glancing at BIP 129, it's not obvious what it's even trying to use BIP 332 for...? :/\r\n\r\nIt allows you to authenticate the key record according to the xpub or key of the signer",
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1207563420",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1209330414,
      "node_id": "IC_kwDOAN28mc5IFOru",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1209330414",
      "actor": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T12:40:38Z",
      "updated_at": "2022-08-09T12:40:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "In the `Simple` section:\r\n\r\n> A ''simple'' signature consists of a witness stack, consensus encoded as a vector of vectors of bytes, and base64-encoded.\r\n\r\nI think it should be made more clear exactly what data is going to be placed in the witness stack.\r\n\r\nI know that it's the solution to some BIP325 challenge, but as I, and perhaps a lot of other people, am not really sure how that works, it should be made more explicit what needs to be placed on the witness stack to constitute a valid proof.",
      "user": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1209330414",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1211368185,
      "node_id": "IC_kwDOAN28mc5INAL5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1211368185",
      "actor": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T22:57:27Z",
      "updated_at": "2022-08-10T22:57:27Z",
      "author_association": "NONE",
      "body": "> > I think BIP-322 on its own adds value, even if it is not addressing every single corner case in the galaxy right now.\r\n> \r\n> I'm not sure it does. Nobody seems to have any interest in using current signed messages for what they actually prove. \r\n\r\nIt's a foothold for L2 value.",
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1211368185",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1211755176,
      "node_id": "IC_kwDOAN28mc5IOeqo",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1211755176",
      "actor": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T09:35:52Z",
      "updated_at": "2022-08-11T09:35:52Z",
      "author_association": "NONE",
      "body": "> > I think BIP-322 on its own adds value, even if it is not addressing every single corner case in the galaxy right now.\r\n> \r\n> I'm not sure it does. \r\n\r\nI apologize for mixing issues in threads above.  I realized that I've largely been responding to this statement.  I think having a way to show that a UTXO's script can be satisfied is obviously valuable. ",
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1211755176",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1212369570,
      "node_id": "IC_kwDOAN28mc5IQ0qi",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1212369570",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-11T18:53:52Z",
      "updated_at": "2022-08-11T18:53:52Z",
      "author_association": "MEMBER",
      "body": ">I apologize for mixing issues in threads above. I realized that I've largely been responding to this statement. I think having a way to show that a UTXO's script can be satisfied is obviously valuable.\r\n\r\nAs-is, this spec cannot show that (at least not if you care about _who_ can satisfy it, or in what context).",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1212369570",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 1212713226,
      "node_id": "IC_kwDOAN28mc5ISIkK",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1212713226",
      "actor": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-12T04:16:42Z",
      "updated_at": "2022-08-12T04:19:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "It's actually not even necessary to change the behavior of OP_CHECKSIG in this context. It will already hash all inputs, outputs etc. so these can be used in message signatures as-is meaning no revision is necessary except for some new sentences in the BIP that say:\r\n\r\n```\r\n<in Rationale>\r\nBecause `to_sign` is created using the transaction ID that is hashed from `to_spend`, the message signature is cryptographically unique and an additional verification beyond reconstructing `to_spend` and validating all fields is not required.\r\n\r\n<in Specification>\r\nThe message signature must not be placed on the witness stack. Only data for the solution of the scriptPubKey should be placed on the witness stack.\r\n```\r\n\r\n---\r\n\r\nRegarding satisfying UTXO scripts: Why don't we just add the relevant UTXO as a `vin` in `to_sign`? Then it's bundled with the proof that the address is under the signing party's control, to indicate the UTXO is also under their control as well.",
      "user": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-1212713226",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 2080081412,
      "node_id": "IC_kwDOAN28mc57-4YE",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2080081412",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T20:33:29Z",
      "updated_at": "2024-04-26T20:33:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Is this PR still being worked on?",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-2080081412",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "commented",
      "id": 2090701376,
      "node_id": "IC_kwDOAN28mc58nZJA",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2090701376",
      "actor": {
        "login": "ProfEduStream",
        "id": 111052574,
        "node_id": "U_kgDOBp6HHg",
        "avatar_url": "https://avatars.githubusercontent.com/u/111052574?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProfEduStream",
        "html_url": "https://github.com/ProfEduStream",
        "followers_url": "https://api.github.com/users/ProfEduStream/followers",
        "following_url": "https://api.github.com/users/ProfEduStream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProfEduStream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProfEduStream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProfEduStream/subscriptions",
        "organizations_url": "https://api.github.com/users/ProfEduStream/orgs",
        "repos_url": "https://api.github.com/users/ProfEduStream/repos",
        "events_url": "https://api.github.com/users/ProfEduStream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProfEduStream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T14:47:49Z",
      "updated_at": "2024-05-02T14:50:49Z",
      "author_association": "NONE",
      "body": "Hey,\r\n\r\nAs a Bitcoin association, we're currently facing an issue because we're unable to sign an address with our multi-sig wallet.\r\nAfter conducting some research, I came across BIP322 in this thread: [https://bitcointalk.org/index.php?topic=5408898.msg63891940#msg63891940](https://bitcointalk.org/index.php?topic=5408898.msg63891940#msg63891940).\r\n\r\nExplanation:\r\n\r\nAs a Bitcoin association, we offer membership to everyone for a few thousand sats per year. To facilitate this process, we utilize \"Swiss Bitcoin Pay\". It's an application that allows us to easily manage our accounting. Additionally, we onboard merchants with this app because of its user-friendly interface and self-custodial capabilities, making it very convenient. The accounting features are also highly beneficial.\r\n\r\nTo utilize this application in a self-custodial manner, users need to paste a Bitcoin address on the \"Swiss Bitcoin Pay\" dashboard and then sign a message with this address. This serves as a \"Proof-of-Ownership\" and is a legal requirement in some regulated countries. \"Swiss Bitcoin Pay\" is not the only application that requires signing a message as a \"Proof-of-Ownership\". Peach, a non-KYC P2P Bitcoin application, is another example.\r\n\r\nGiven our goal to decentralize our treasury, we naturally opt for a multi-sig wallet, similar to many companies. However, as you know, it's currently impossible to sign a message with a multi-sig wallet.\r\n\r\nConclusion:\r\n\r\nI'm unsure why BIP322 hasn't been pushed or addressed in the past few months/years, but I want to highlight its necessity.\r\nAdditionally, I hope that this comment sheds light on a deficiency in our Bitcoin ecosystem, and I trust that further improvements will be made to enable people to sign a message with a multi-sig wallet.\r\n\r\nI'm available to assist if needed @kallewoof.\r\n@ProfEduStream",
      "user": {
        "login": "ProfEduStream",
        "id": 111052574,
        "node_id": "U_kgDOBp6HHg",
        "avatar_url": "https://avatars.githubusercontent.com/u/111052574?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProfEduStream",
        "html_url": "https://github.com/ProfEduStream",
        "followers_url": "https://api.github.com/users/ProfEduStream/followers",
        "following_url": "https://api.github.com/users/ProfEduStream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProfEduStream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProfEduStream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProfEduStream/subscriptions",
        "organizations_url": "https://api.github.com/users/ProfEduStream/orgs",
        "repos_url": "https://api.github.com/users/ProfEduStream/repos",
        "events_url": "https://api.github.com/users/ProfEduStream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProfEduStream/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-2090701376",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "mentioned",
      "id": 12684552721,
      "node_id": "MEE_lADOAN28mc5OhnJAzwAAAAL0DuoR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12684552721",
      "actor": {
        "login": "ProfEduStream",
        "id": 111052574,
        "node_id": "U_kgDOBp6HHg",
        "avatar_url": "https://avatars.githubusercontent.com/u/111052574?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProfEduStream",
        "html_url": "https://github.com/ProfEduStream",
        "followers_url": "https://api.github.com/users/ProfEduStream/followers",
        "following_url": "https://api.github.com/users/ProfEduStream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProfEduStream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProfEduStream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProfEduStream/subscriptions",
        "organizations_url": "https://api.github.com/users/ProfEduStream/orgs",
        "repos_url": "https://api.github.com/users/ProfEduStream/repos",
        "events_url": "https://api.github.com/users/ProfEduStream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProfEduStream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T14:47:50Z"
    },
    {
      "event": "subscribed",
      "id": 12684552763,
      "node_id": "SE_lADOAN28mc5OhnJAzwAAAAL0Duo7",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12684552763",
      "actor": {
        "login": "ProfEduStream",
        "id": 111052574,
        "node_id": "U_kgDOBp6HHg",
        "avatar_url": "https://avatars.githubusercontent.com/u/111052574?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProfEduStream",
        "html_url": "https://github.com/ProfEduStream",
        "followers_url": "https://api.github.com/users/ProfEduStream/followers",
        "following_url": "https://api.github.com/users/ProfEduStream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProfEduStream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProfEduStream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProfEduStream/subscriptions",
        "organizations_url": "https://api.github.com/users/ProfEduStream/orgs",
        "repos_url": "https://api.github.com/users/ProfEduStream/repos",
        "events_url": "https://api.github.com/users/ProfEduStream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProfEduStream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T14:47:50Z"
    },
    {
      "event": "mentioned",
      "id": 12684596796,
      "node_id": "MEE_lADOAN28mc5OhnJAzwAAAAL0D5Y8",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12684596796",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T14:50:50Z"
    },
    {
      "event": "subscribed",
      "id": 12684596819,
      "node_id": "SE_lADOAN28mc5OhnJAzwAAAAL0D5ZT",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12684596819",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-02T14:50:50Z"
    },
    {
      "event": "commented",
      "id": 2092033174,
      "node_id": "IC_kwDOAN28mc58seSW",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2092033174",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T02:28:54Z",
      "updated_at": "2024-05-03T02:28:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @ProfEduStream, thanks for reaching out. This pull request is proposing some changes to BIP322. Comments in this PR should focus on providing feedback to this proposed change.\r\n\r\nBIP322 is already merged, but as far as I am aware has not been deployed in any software. I do not know the reasons but work on it seems to have stopped. I would suggest that you reach out to the bitcoin developer mailing list if you would like to find out more or make an attempt to restart progress.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#issuecomment-2092033174",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1347"
    },
    {
      "event": "mentioned",
      "id": 12691111775,
      "node_id": "MEE_lADOAN28mc5OhnJAzwAAAAL0cv9f",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12691111775",
      "actor": {
        "login": "ProfEduStream",
        "id": 111052574,
        "node_id": "U_kgDOBp6HHg",
        "avatar_url": "https://avatars.githubusercontent.com/u/111052574?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProfEduStream",
        "html_url": "https://github.com/ProfEduStream",
        "followers_url": "https://api.github.com/users/ProfEduStream/followers",
        "following_url": "https://api.github.com/users/ProfEduStream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProfEduStream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProfEduStream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProfEduStream/subscriptions",
        "organizations_url": "https://api.github.com/users/ProfEduStream/orgs",
        "repos_url": "https://api.github.com/users/ProfEduStream/repos",
        "events_url": "https://api.github.com/users/ProfEduStream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProfEduStream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T02:28:55Z"
    },
    {
      "event": "subscribed",
      "id": 12691111785,
      "node_id": "SE_lADOAN28mc5OhnJAzwAAAAL0cv9p",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12691111785",
      "actor": {
        "login": "ProfEduStream",
        "id": 111052574,
        "node_id": "U_kgDOBp6HHg",
        "avatar_url": "https://avatars.githubusercontent.com/u/111052574?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProfEduStream",
        "html_url": "https://github.com/ProfEduStream",
        "followers_url": "https://api.github.com/users/ProfEduStream/followers",
        "following_url": "https://api.github.com/users/ProfEduStream/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProfEduStream/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProfEduStream/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProfEduStream/subscriptions",
        "organizations_url": "https://api.github.com/users/ProfEduStream/orgs",
        "repos_url": "https://api.github.com/users/ProfEduStream/repos",
        "events_url": "https://api.github.com/users/ProfEduStream/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProfEduStream/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-03T02:28:55Z"
    },
    {
      "event": "labeled",
      "id": 12744387397,
      "node_id": "LE_lADOAN28mc5OhnJAzwAAAAL3n-tF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12744387397",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T13:57:32Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2149539789,
      "node_id": "PRR_kwDOAN28mc6AH1_N",
      "url": null,
      "actor": null,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "5twelve",
        "id": 97030944,
        "node_id": "U_kgDOBciTIA",
        "avatar_url": "https://avatars.githubusercontent.com/u/97030944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5twelve",
        "html_url": "https://github.com/5twelve",
        "followers_url": "https://api.github.com/users/5twelve/followers",
        "following_url": "https://api.github.com/users/5twelve/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5twelve/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5twelve/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5twelve/subscriptions",
        "organizations_url": "https://api.github.com/users/5twelve/orgs",
        "repos_url": "https://api.github.com/users/5twelve/repos",
        "events_url": "https://api.github.com/users/5twelve/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5twelve/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1347#pullrequestreview-2149539789",
      "submitted_at": "2024-06-29T10:45:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/931857115",
      "pull_request_review_id": 1053586938,
      "id": 931857115,
      "node_id": "PRRC_kwDOAN28mc43iwLb",
      "diff_hunk": "@@ -17,22 +17,32 @@ A standard for interoperable signed messages based on the Bitcoin Script format,\n \n == Motivation ==\n \n-The current message signing standard only works for P2PKH (1...) invoice addresses. We propose to extend and generalize the standard by using a Bitcoin Script based approach. This ensures that any coins, no matter what script they are controlled by, can in-principle be signed for. For easy interoperability with existing signing hardware, we also define a signature message format which resembles a Bitcoin transaction (except that it contains an invalid input, so it cannot be spent on any real network).\n+TODO: Proof of sender\n+\n+The current message signing standard only works for P2PKH (1...) invoice addresses, and only proves the intended recipient of an invoice address agrees to the message.\n+We propose to extend and generalize the standard by using a Bitcoin Script based approach.\n+This ensures that any coins, no matter what script they are controlled by, can in-principle be signed for.\n+For easy interoperability with existing signing hardware, we also define a signature message format which resembles a Bitcoin transaction (except that it contains an invalid input, so it cannot be spent on any real network).\n \n Additionally, the current message signature format uses ECDSA signatures which do not commit to the public key, meaning that they do not actually prove knowledge of any secret keys. (Indeed, valid signatures can be tweaked by 3rd parties to become valid signatures on certain related keys.)\n \n+There appears to also be a desire to prove funds availability.",
      "path": "bip-0322.mediawiki",
      "position": 14,
      "original_position": 14,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this sentence needed?",
      "created_at": "2022-07-28T07:09:32Z",
      "updated_at": "2022-08-01T06:03:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r931857115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/931857115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/932667630",
      "pull_request_review_id": 1054747162,
      "id": 932667630,
      "node_id": "PRRC_kwDOAN28mc43l2Du",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lines 111 and 113 seem contradictory.\r\n\r\nSince the signature is over specific UTXOs, if the signature proves that the signer owns the specified amount, that implies that the signer owns those UTXOs, or at least has the ability to spend them as they have to provide valid scriptSigs and witnesses. If the signature does not prove that the signer has the ability to spend those specific UTXOs, then I don't see how the signature proves that they own the specified amount of Bitcoin.",
      "created_at": "2022-07-28T21:02:30Z",
      "updated_at": "2022-07-28T21:02:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r932667630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/932667630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/932971690",
      "pull_request_review_id": 1055155098,
      "id": 932971690,
      "node_id": "PRRC_kwDOAN28mc43nASq",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "eg, MtGox should produce these signatures for their users, while still keeping funds mingled in separate hot/cold wallets. The hot UTXOs might be spent by any unrelated user, but in the meantime serve as proof of an available sum for another user. Two separate users might have proofs for different actual balances yet technically sign using the same UTXO(s).",
      "created_at": "2022-07-29T07:58:59Z",
      "updated_at": "2022-07-29T07:58:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r932971690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/932971690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/933265924",
      "pull_request_review_id": 1055571351,
      "id": 933265924,
      "node_id": "PRRC_kwDOAN28mc43oIIE",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should it say that the signature proves *control* over the UTXOs, but does not prove *ownership* or *unique control*?",
      "created_at": "2022-07-29T13:28:17Z",
      "updated_at": "2022-07-29T13:28:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r933265924",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/933265924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/934162506",
      "pull_request_review_id": 1053586938,
      "id": 934162506,
      "node_id": "PRRC_kwDOAN28mc43rjBK",
      "diff_hunk": "@@ -43,6 +53,8 @@ A ''simple'' signature consists of a witness stack, consensus encoded as a vecto\n \n and then proceed as they would for a full signature.\n \n+It also only can prove the message is signed by the intended recipient of the given invoice address, and cannot prove any control of bitcoins or having had sent any transactions.",
      "path": "bip-0322.mediawiki",
      "position": 39,
      "original_position": 39,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nFurthermore, it can only prove the message is signed by the intended recipient of the given invoice address, and cannot prove any control of bitcoins or having had sent any transactions.\r\n```",
      "created_at": "2022-08-01T05:59:23Z",
      "updated_at": "2022-08-01T06:03:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r934162506",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/934162506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/934186225",
      "pull_request_review_id": 1056808743,
      "id": 934186225,
      "node_id": "PRRC_kwDOAN28mc43rozx",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It doesn't prove control over the UTXOs, though, that's the point. It shows (perhaps not proves absolutely) ownership.",
      "created_at": "2022-08-01T06:42:59Z",
      "updated_at": "2022-08-01T06:43:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r934186225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/934186225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/934186721",
      "pull_request_review_id": 1056809443,
      "id": 934186721,
      "node_id": "PRRC_kwDOAN28mc43ro7h",
      "diff_hunk": "@@ -17,22 +17,32 @@ A standard for interoperable signed messages based on the Bitcoin Script format,\n \n == Motivation ==\n \n-The current message signing standard only works for P2PKH (1...) invoice addresses. We propose to extend and generalize the standard by using a Bitcoin Script based approach. This ensures that any coins, no matter what script they are controlled by, can in-principle be signed for. For easy interoperability with existing signing hardware, we also define a signature message format which resembles a Bitcoin transaction (except that it contains an invalid input, so it cannot be spent on any real network).\n+TODO: Proof of sender\n+\n+The current message signing standard only works for P2PKH (1...) invoice addresses, and only proves the intended recipient of an invoice address agrees to the message.\n+We propose to extend and generalize the standard by using a Bitcoin Script based approach.\n+This ensures that any coins, no matter what script they are controlled by, can in-principle be signed for.\n+For easy interoperability with existing signing hardware, we also define a signature message format which resembles a Bitcoin transaction (except that it contains an invalid input, so it cannot be spent on any real network).\n \n Additionally, the current message signature format uses ECDSA signatures which do not commit to the public key, meaning that they do not actually prove knowledge of any secret keys. (Indeed, valid signatures can be tweaked by 3rd parties to become valid signatures on certain related keys.)\n \n+There appears to also be a desire to prove funds availability.",
      "path": "bip-0322.mediawiki",
      "position": 14,
      "original_position": 14,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 931857115,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Motivation for a new message signing standard that does something the current one does not.",
      "created_at": "2022-08-01T06:43:47Z",
      "updated_at": "2022-08-01T06:43:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r934186721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/934186721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/935654553",
      "pull_request_review_id": 1058857689,
      "id": 935654553,
      "node_id": "PRRC_kwDOAN28mc43xPSZ",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I consider myself pretty knowledgeable, and you've been saying this for many years (about signmessage), and to be honest I've never fully understood what you mean.\r\n\r\nMy understanding is that signing a message (or a transaction) proves control over a UTXO, with the following caveats:\r\n* it may not have been you who did the signing (e.g. you are a Gox user and Gox did the sig)\r\n* it may not have been recent (Gox did it 10 years ago and since then has run into some trouble ... although I suppose you could include a recent headline and/or a challerger-provided nonce to help with this)\r\n* even if it's recent, it is obsolete as soon as it's created (ok, you signed 1 second ago but your signing device caught fire at the same time)\r\n* it may not indicate unique control (Gox may be signing with the same UTXOs for multiple users)\r\n* it may not indicate general-purpose signing ability (maybe your hardware wallet will only sign messages, or only sign BIP322 provably-invalid transactions, etc., and won't actually sign real transactions)\r\n\r\nDoes this match your understanding? The word \"ownership\" feels nebulous to me and I'm not sure what you mean by it.\r\n",
      "created_at": "2022-08-02T14:17:29Z",
      "updated_at": "2022-08-02T14:17:29Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r935654553",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/935654553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936144039",
      "pull_request_review_id": 1059579488,
      "id": 936144039,
      "node_id": "PRRC_kwDOAN28mc43zGyn",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For signed messages to have any meaning, it needs to indicate an intended purpose. Current signed messages indicate only that the message-signer receives/received what was sent to the address in question. They cannot prove control of a UTXO, because it is *expected, by design* for a third-party to produce the signature even if the recipient no longer has a claim to the UTXO received, and may never have had control of it in any case.\r\n\r\nTo prove control of funds, or control of UTXOs (if that indeed has a use case), a signature would need to intend to be usable for that purpose, distinguishable from current signatures, so third-party signing applications could refuse to produce such a signature when it is not valid.",
      "created_at": "2022-08-03T00:52:11Z",
      "updated_at": "2022-08-03T00:52:12Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r936144039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936144039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936144481",
      "pull_request_review_id": 1059579987,
      "id": 936144481,
      "node_id": "PRRC_kwDOAN28mc43zG5h",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?",
      "path": "bip-0322.mediawiki",
      "position": 51,
      "original_position": 51,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This isn't \"future work\", but a matter of compatibility, which BIPs should address.",
      "created_at": "2022-08-03T00:53:20Z",
      "updated_at": "2022-08-03T00:53:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r936144481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936144481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936144656",
      "pull_request_review_id": 1059580219,
      "id": 936144656,
      "node_id": "PRRC_kwDOAN28mc43zG8Q",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?",
      "path": "bip-0322.mediawiki",
      "position": 53,
      "original_position": 53,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems like it should be too trivial to put off as \"future work\". IMO.",
      "created_at": "2022-08-03T00:53:57Z",
      "updated_at": "2022-08-03T00:53:57Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r936144656",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936144656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936145039",
      "pull_request_review_id": 1059580673,
      "id": 936145039,
      "node_id": "PRRC_kwDOAN28mc43zHCP",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility",
      "path": "bip-0322.mediawiki",
      "position": 55,
      "original_position": 55,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Putting this off to a future standard would compromise the privacy benefits.",
      "created_at": "2022-08-03T00:55:01Z",
      "updated_at": "2022-08-03T00:55:01Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r936145039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936145039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936216722",
      "pull_request_review_id": 1059672141,
      "id": 936216722,
      "node_id": "PRRC_kwDOAN28mc43zYiS",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand why or since when stated purpose matters for cryptographic signatures",
      "created_at": "2022-08-03T04:08:46Z",
      "updated_at": "2022-08-03T04:08:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r936216722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936216722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936233908",
      "pull_request_review_id": 1059694621,
      "id": 936233908,
      "node_id": "PRRC_kwDOAN28mc43zcu0",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "???",
      "created_at": "2022-08-03T04:53:27Z",
      "updated_at": "2022-08-03T04:53:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r936233908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936233908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936250883",
      "pull_request_review_id": 1059717236,
      "id": 936250883,
      "node_id": "PRRC_kwDOAN28mc43zg4D",
      "diff_hunk": "@@ -17,22 +17,32 @@ A standard for interoperable signed messages based on the Bitcoin Script format,\n \n == Motivation ==\n \n-The current message signing standard only works for P2PKH (1...) invoice addresses. We propose to extend and generalize the standard by using a Bitcoin Script based approach. This ensures that any coins, no matter what script they are controlled by, can in-principle be signed for. For easy interoperability with existing signing hardware, we also define a signature message format which resembles a Bitcoin transaction (except that it contains an invalid input, so it cannot be spent on any real network).\n+TODO: Proof of sender\n+\n+The current message signing standard only works for P2PKH (1...) invoice addresses, and only proves the intended recipient of an invoice address agrees to the message.\n+We propose to extend and generalize the standard by using a Bitcoin Script based approach.\n+This ensures that any coins, no matter what script they are controlled by, can in-principle be signed for.\n+For easy interoperability with existing signing hardware, we also define a signature message format which resembles a Bitcoin transaction (except that it contains an invalid input, so it cannot be spent on any real network).\n \n Additionally, the current message signature format uses ECDSA signatures which do not commit to the public key, meaning that they do not actually prove knowledge of any secret keys. (Indeed, valid signatures can be tweaked by 3rd parties to become valid signatures on certain related keys.)\n \n+There appears to also be a desire to prove funds availability.",
      "path": "bip-0322.mediawiki",
      "position": 14,
      "original_position": 14,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 931857115,
      "user": {
        "login": "anditto",
        "id": 1005598,
        "node_id": "MDQ6VXNlcjEwMDU1OTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1005598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anditto",
        "html_url": "https://github.com/anditto",
        "followers_url": "https://api.github.com/users/anditto/followers",
        "following_url": "https://api.github.com/users/anditto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/anditto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/anditto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/anditto/subscriptions",
        "organizations_url": "https://api.github.com/users/anditto/orgs",
        "repos_url": "https://api.github.com/users/anditto/repos",
        "events_url": "https://api.github.com/users/anditto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/anditto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe something less ambiguous like \"Proving fund availability is a also a useful feature with practical use cases.\"",
      "created_at": "2022-08-03T05:31:54Z",
      "updated_at": "2022-08-03T05:31:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r936250883",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/936250883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/937240922",
      "pull_request_review_id": 1061143199,
      "id": 937240922,
      "node_id": "PRRC_kwDOAN28mc433Sla",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "Rspigler",
        "id": 24482484,
        "node_id": "MDQ6VXNlcjI0NDgyNDg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24482484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rspigler",
        "html_url": "https://github.com/Rspigler",
        "followers_url": "https://api.github.com/users/Rspigler/followers",
        "following_url": "https://api.github.com/users/Rspigler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Rspigler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Rspigler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
        "organizations_url": "https://api.github.com/users/Rspigler/orgs",
        "repos_url": "https://api.github.com/users/Rspigler/repos",
        "events_url": "https://api.github.com/users/Rspigler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Rspigler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand your statement \"For signed messages to have any meaning, it needs to indicate an intended purpose\", since the mindset of the signer obviously doesn't affect the signature data",
      "created_at": "2022-08-04T00:09:52Z",
      "updated_at": "2022-08-04T00:09:52Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r937240922",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/937240922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/940865491",
      "pull_request_review_id": 1066060601,
      "id": 940865491,
      "node_id": "PRRC_kwDOAN28mc44FHfT",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?",
      "path": "bip-0322.mediawiki",
      "position": 53,
      "original_position": 53,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 936144656,
      "user": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@luke-jr Here's a solution at least for the Silent Transactions. Since they can't decide which address formats they will use for it (there is a lot of to-and-fro between taproot and segwit), and all such address formats can be represented in the Simple format anyway, just write in this BIP that Silent Transactions can use the Simple format to sign their messages, and the scriptPubKey/scriptSig/Witness will all be the same.\r\n\r\n[Why do we need an invalid opcode to redefine in the first place, I thought invalid opcodes in the script are supposed to make the verifier return an inconclusive status.]",
      "created_at": "2022-08-09T03:46:30Z",
      "updated_at": "2022-08-09T03:49:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r940865491",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/940865491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942447703",
      "pull_request_review_id": 1068276569,
      "id": 942447703,
      "node_id": "PRRC_kwDOAN28mc44LJxX",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThe meaning of the signature is not resolved by Bitcoin's blockchain.\r\n```",
      "created_at": "2022-08-10T13:24:54Z",
      "updated_at": "2022-08-10T13:24:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r942447703",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942447703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942889844",
      "pull_request_review_id": 1068908367,
      "id": 942889844,
      "node_id": "PRRC_kwDOAN28mc44M1t0",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Without a meaning, it's not practical to implement correctly.",
      "created_at": "2022-08-10T20:43:36Z",
      "updated_at": "2022-08-10T20:43:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r942889844",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942889844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942890663",
      "pull_request_review_id": 1068909769,
      "id": 942890663,
      "node_id": "PRRC_kwDOAN28mc44M16n",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?",
      "path": "bip-0322.mediawiki",
      "position": 53,
      "original_position": 53,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 936144656,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Making an invalid opcode valid would be useful to provide a separate Tapscript that is valid _only_ for signing messages, but not actual spending.",
      "created_at": "2022-08-10T20:44:47Z",
      "updated_at": "2022-08-10T20:44:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r942890663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942890663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942929133",
      "pull_request_review_id": 1068965006,
      "id": 942929133,
      "node_id": "PRRC_kwDOAN28mc44M_Tt",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is true -- many things can be implemented correctly even though they have \"no meaning\" at the implementation layer. GPG signatures would be a close analogy to this (gnupg has no idea what the bytes you're signing are supposed to indicate, nor what your signature is supposed to mean), but this is also true of e.g. TCP.\r\n\r\nIn this case BIP322 is designed to represent a transaction, possibly with some extra non-transaction data embedded in it, and to demonstrate the ability to produce such a transaction. This can be mechanically defined and correctly implemented without agreeing on what the resulting transactions are supposed to mean.",
      "created_at": "2022-08-10T21:40:20Z",
      "updated_at": "2022-08-10T21:40:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r942929133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942929133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942958811",
      "pull_request_review_id": 1069003756,
      "id": 942958811,
      "node_id": "PRRC_kwDOAN28mc44NGjb",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?",
      "path": "bip-0322.mediawiki",
      "position": 53,
      "original_position": 53,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 936144656,
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If someone wants to hide the specific allocation of outgoing value among tapscript outputs, then it would already be possible to create a branch that spends the UTXO to an OP_RETURN.  Since BIP322-signature-txs cannot be spent, there's no downside to signing that branch.",
      "created_at": "2022-08-10T22:31:29Z",
      "updated_at": "2022-08-10T23:28:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r942958811",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942958811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942962513",
      "pull_request_review_id": 1069008423,
      "id": 942962513,
      "node_id": "PRRC_kwDOAN28mc44NHdR",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Without a meaning, it's not practical to implement correctly.\r\n\r\nI think the signatures do have meaning, but in the realm of human-mediated concerns, rather than the realm of Bitcoin blockchain transaction ordering.\r\n\r\nI don't think that we can proscribe what people will use the signatures for.  It's still useful to have reliable code that allows these signatures to be checked.  This BIP can also warn about the limitations that people will encounter for whatever \"L2\" meaning they build, since BIP322-signature-double-spend protection won't be available.",
      "created_at": "2022-08-10T22:39:03Z",
      "updated_at": "2022-08-10T22:39:04Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r942962513",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942962513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942989191",
      "pull_request_review_id": 1069041694,
      "id": 942989191,
      "node_id": "PRRC_kwDOAN28mc44NN-H",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "GPG only works with messages from one person. It doesn't have a concept of sender, receiver, or funds availability. These things all require distinct proofs, as the person who can produce such a signature may be different people entirely. Without a well-defined meaning at least to this degree, it isn't possible to use signed messages at all.",
      "created_at": "2022-08-10T23:17:17Z",
      "updated_at": "2022-08-10T23:17:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r942989191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/942989191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943001566",
      "pull_request_review_id": 1069057211,
      "id": 943001566,
      "node_id": "PRRC_kwDOAN28mc44NQ_e",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Whether or not the script has been satisfied is meaningful.  How that is tied to a claim is meaning constructed outside the Bitcoin blockchain, by the parties that choose to use BIP322-signatures.  Unlike txs stored in the blockchain, these signatures don't prevent double spending their associated claims.  \r\n\r\nSome people may agree that the ability to satisfy the script at one moment is still valuable, because they know the constraints of their L2 problem domain.",
      "created_at": "2022-08-10T23:44:44Z",
      "updated_at": "2022-08-10T23:44:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r943001566",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943001566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943005431",
      "pull_request_review_id": 1069062134,
      "id": 943005431,
      "node_id": "PRRC_kwDOAN28mc44NR73",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ALL of this is outside the blockchain.\r\n\r\nIf a signature doesn't indicate a purpose, then the parties can't agree on a purpose, because one of them probably won't be able to produce a signature at all.",
      "created_at": "2022-08-10T23:55:09Z",
      "updated_at": "2022-08-10T23:55:09Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r943005431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943005431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943039918",
      "pull_request_review_id": 1069103746,
      "id": 943039918,
      "node_id": "PRRC_kwDOAN28mc44NaWu",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Other metadata used to indicate the purpose can wrap the signature.\r\n\r\nOne approach to this, with well defined structure for wrapping signatures, is the W3C Verifiable Credential Data Model, which is very specific about what a claim is: https://www.w3.org/TR/vc-data-model/#claims",
      "created_at": "2022-08-11T01:43:55Z",
      "updated_at": "2022-08-11T01:56:06Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r943039918",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943039918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943043950",
      "pull_request_review_id": 1069108738,
      "id": 943043950,
      "node_id": "PRRC_kwDOAN28mc44NbVu",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can't even produce the signature until this purpose is defined...",
      "created_at": "2022-08-11T01:58:19Z",
      "updated_at": "2022-08-11T01:58:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r943043950",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943043950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943112127",
      "pull_request_review_id": 1069198532,
      "id": 943112127,
      "node_id": "PRRC_kwDOAN28mc44Nr-_",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?",
      "path": "bip-0322.mediawiki",
      "position": 53,
      "original_position": 53,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 936144656,
      "user": {
        "login": "ZenulAbidin",
        "id": 42585895,
        "node_id": "MDQ6VXNlcjQyNTg1ODk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/42585895?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZenulAbidin",
        "html_url": "https://github.com/ZenulAbidin",
        "followers_url": "https://api.github.com/users/ZenulAbidin/followers",
        "following_url": "https://api.github.com/users/ZenulAbidin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ZenulAbidin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ZenulAbidin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ZenulAbidin/subscriptions",
        "organizations_url": "https://api.github.com/users/ZenulAbidin/orgs",
        "repos_url": "https://api.github.com/users/ZenulAbidin/repos",
        "events_url": "https://api.github.com/users/ZenulAbidin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ZenulAbidin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that we can also redefine the meaning of OP_CHECKSIG in the context of message signing and verifying to hash the virtual transaction that is derived from the message i.e. `to_spend`. [Bitcointalk source](https://bitcointalk.org/index.php?topic=5408898.msg60728854#msg60728854)",
      "created_at": "2022-08-11T05:46:18Z",
      "updated_at": "2022-08-11T05:46:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r943112127",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943112127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943279337",
      "pull_request_review_id": 1069427302,
      "id": 943279337,
      "node_id": "PRRC_kwDOAN28mc44OUzp",
      "diff_hunk": "@@ -76,16 +88,33 @@ The <code>to_sign</code> transaction is:\n \n A full signature consists of the base64-encoding of the <code>to_sign</code> transaction in standard network serialisation once it has been signed.\n \n+This signature, as-is, only proves a message is signed by the intended recipient of the given invoice address which creates the <code>message_challenge</code> script.\n+It does not prove any control of bitcoins or having had sent any transactions.\n+\n+TODO: How does this interact with as-of-yet-unspecified \"Silent Transactions\"?\n+\n+TODO: Some invalid opcode to allow only in various proof types?\n+\n+TODO: A way for the initial signer to delegate to another scriptPubKey; needed for better privacy and CoinJoin/Lightning compatibility\n+\n === Full (Proof of Funds) ===\n \n-A signer may construct a proof of funds, demonstrating control of a set of UTXOs, by constructing a full signature as above, with the following modifications.\n+A signer may construct a proof of funds, demonstrating ownership of an amount of bitcoins, by constructing a full signature as above, with the following modifications.\n \n * <code>message_challenge</code> is unused and shall be set to <code>OP_TRUE</code>\n * Similarly, <code>message_signature</code> is then empty.\n-* All outputs that the signer wishes to demonstrate control of are included as additional inputs of <code>to_sign</code>, and their witness and scriptSig data should be set as though these outputs were actually being spent.\n+* <code>vout[0].nValue</code> should be set to the desired amount of bitcoins to prove ownership of.\n+* The signer must select UTXOs with values sum to at least the desired proof amount, and include them as additional inputs of <code>to_sign</code>. Their witness and scriptSig data should be set as though these outputs were actually being spent.\n \n Unlike an ordinary signature, validators of a proof of funds need access to the current UTXO set, to learn that the claimed inputs exist on the blockchain, and to learn their scriptPubKeys.\n \n+This signature proves only that the message is signed by someone who owns the specified (in nValue) amount of bitcoins.\n+It does not prove anything about the transactions or recipients thereof when the UTXOs were created;\n+it does not prove control or ownership of the specific UTXOs;",
      "path": "bip-0322.mediawiki",
      "position": 72,
      "original_position": 72,
      "commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "original_commit_id": "b6b0126e2d04793ba52a40f05d24538fa3f2c9ad",
      "in_reply_to_id": 932667630,
      "user": {
        "login": "rxgrant",
        "id": 6995442,
        "node_id": "MDQ6VXNlcjY5OTU0NDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6995442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rxgrant",
        "html_url": "https://github.com/rxgrant",
        "followers_url": "https://api.github.com/users/rxgrant/followers",
        "following_url": "https://api.github.com/users/rxgrant/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rxgrant/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rxgrant/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rxgrant/subscriptions",
        "organizations_url": "https://api.github.com/users/rxgrant/orgs",
        "repos_url": "https://api.github.com/users/rxgrant/repos",
        "events_url": "https://api.github.com/users/rxgrant/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rxgrant/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "None of this is new.  Signatures go like this:\r\n\r\n```\r\nprotocol indicating purpose, perhaps just words\r\n--- begin signature ---\r\nsignature(protocol indicating purpose, perhaps just words)\r\n```\r\n \r\nIn the case of the example I offered, the protocol indicating purpose is quite sophisticated.  I belive it's a compelling example that allows you no room to try to derail BIP322 on the grounds that all that meaning needs to be defined inside BIP322.\r\n\r\nP.S.  This argument has moved beyond the proposed patch that started these replies, which I'm not arguing for or against, so I'll move on. ",
      "created_at": "2022-08-11T09:26:27Z",
      "updated_at": "2022-08-11T09:26:28Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1347#discussion_r943279337",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/943279337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1347"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    }
  ]
}