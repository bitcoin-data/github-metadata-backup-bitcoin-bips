{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1349",
    "id": 1020188941,
    "node_id": "PR_kwDOAN28mc48ztkN",
    "html_url": "https://github.com/bitcoin/bips/pull/1349",
    "diff_url": "https://github.com/bitcoin/bips/pull/1349.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1349.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1349/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1349/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1349/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/2cabfe167efc35d6a4501959617284f42c92a65d",
    "number": 1349,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "New BIP 351: Private Payments",
    "user": {
      "login": "alfred-hodler",
      "id": 100861939,
      "node_id": "U_kgDOBgMH8w",
      "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alfred-hodler",
      "html_url": "https://github.com/alfred-hodler",
      "followers_url": "https://api.github.com/users/alfred-hodler/followers",
      "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
      "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
      "repos_url": "https://api.github.com/users/alfred-hodler/repos",
      "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am submitting a new BIP following a discussion on the mailing list.\r\n\r\nLink: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020812.html",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2022-08-08T11:49:17Z",
    "updated_at": "2022-10-05T21:19:36Z",
    "closed_at": "2022-09-29T22:39:42Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-09-29T22:39:42Z",
    "merge_commit_sha": "cf420089a4ed10c50e3ad2834fe13e72e1af7177",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "alfred-hodler:bip-alfredhodler-private-payments",
      "ref": "bip-alfredhodler-private-payments",
      "sha": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 516668177,
        "node_id": "R_kgDOHsu7EQ",
        "name": "bips",
        "full_name": "alfred-hodler/bips",
        "owner": {
          "login": "alfred-hodler",
          "id": 100861939,
          "node_id": "U_kgDOBgMH8w",
          "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/alfred-hodler",
          "html_url": "https://github.com/alfred-hodler",
          "followers_url": "https://api.github.com/users/alfred-hodler/followers",
          "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
          "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
          "repos_url": "https://api.github.com/users/alfred-hodler/repos",
          "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/alfred-hodler/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/alfred-hodler/bips",
        "archive_url": "https://api.github.com/repos/alfred-hodler/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/alfred-hodler/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/alfred-hodler/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/alfred-hodler/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/alfred-hodler/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/alfred-hodler/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/alfred-hodler/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/alfred-hodler/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/alfred-hodler/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/alfred-hodler/bips/contributors",
        "deployments_url": "https://api.github.com/repos/alfred-hodler/bips/deployments",
        "downloads_url": "https://api.github.com/repos/alfred-hodler/bips/downloads",
        "events_url": "https://api.github.com/repos/alfred-hodler/bips/events",
        "forks_url": "https://api.github.com/repos/alfred-hodler/bips/forks",
        "git_commits_url": "https://api.github.com/repos/alfred-hodler/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/alfred-hodler/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/alfred-hodler/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/alfred-hodler/bips.git",
        "issue_comment_url": "https://api.github.com/repos/alfred-hodler/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/alfred-hodler/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/alfred-hodler/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/alfred-hodler/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/alfred-hodler/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/alfred-hodler/bips/languages",
        "merges_url": "https://api.github.com/repos/alfred-hodler/bips/merges",
        "milestones_url": "https://api.github.com/repos/alfred-hodler/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/alfred-hodler/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/alfred-hodler/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/alfred-hodler/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:alfred-hodler/bips.git",
        "stargazers_url": "https://api.github.com/repos/alfred-hodler/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/alfred-hodler/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/alfred-hodler/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/alfred-hodler/bips/subscription",
        "tags_url": "https://api.github.com/repos/alfred-hodler/bips/tags",
        "teams_url": "https://api.github.com/repos/alfred-hodler/bips/teams",
        "trees_url": "https://api.github.com/repos/alfred-hodler/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/alfred-hodler/bips.git",
        "hooks_url": "https://api.github.com/repos/alfred-hodler/bips/hooks",
        "svn_url": "https://github.com/alfred-hodler/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 12978,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-09-15T15:01:54Z",
        "created_at": "2022-07-22T08:18:39Z",
        "updated_at": "2022-07-22T02:03:21Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "43da5dec5eaf0d8194baa66ba3dd976f923f9d07",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5178,
        "stargazers_count": 8116,
        "watchers_count": 8116,
        "size": 13694,
        "default_branch": "master",
        "open_issues_count": 115,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-08T12:03:37Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-06-12T10:53:19Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 270,
    "deletions": 0,
    "changed_files": 2,
    "commits": 20,
    "review_comments": 25,
    "comments": 25
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFlMjQ3YWE2Y2ZlNTEyZDY0N2ZhMTE3OGIxNjEyMTNiNzE4N2QyMjU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae247aa6cfe512d647fa1178b161213b7187d225",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/ae247aa6cfe512d647fa1178b161213b7187d225",
      "tree": {
        "sha": "b4f82091666440a6539ff0275dd8cac50b68a38a",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b4f82091666440a6539ff0275dd8cac50b68a38a"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree b4f82091666440a6539ff0275dd8cac50b68a38a\nparent b505101a2dfc8e61c79c47520d863f860a505d18\nauthor Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1658479892 +0000\ncommitter Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1658480257 +0000\n\nPrivate payments BIP\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmLaZoEACgkQjezhForW\nz+O43BAAhrfgAQSk3ZjQqQu1WBfvtIEFXl3rhh6kujU7fFwaMaU9ARSJaL//UJYr\nFEnVffpSffhxzRMKJPL9mgzFunMQu4cPpEC03INR/JF5gRZe9sPk9CkTwSTzBmhD\n43vDzJ42Z2/vkUV+VVdFc+6M56NFChFea83RkIaX58yidCtHV8fo90o0ZHtENU5B\nEwdHxhzixNCiDXE+851t1pYsxdu+oPv0Y6LbF2e+7F3WKAi4cSdCHEnN8YIMCTSe\npqZ/2wh0ysa+476DPNu3ADdtDvFxduUp2xat5XU9rw1Bci1SQrnM1H49MwijCQH5\naD9ky09Dkyu5GoLEteif3zMH1Qj1qtqgOMvR0M7VtgCcwII4q3+5a8TwRFng7l79\nGUTTK3TJGF1t0O4/k0OIHBVTqjI0TFUs1huKHTgnsJuSGNhgJ8NO8o1b+7kHp4Fr\nl3adfLJ8IW+dLzdutAgVhi7R2sOpyjZnKEAYza+zRNOtqsx21FKftZK0WUE5MV6b\n5kOQ2MTW3prnOSe4lZj5RqArsmqA4J2fAU6yycWL3HiANWxt+E5a8KrNYOsvoZgF\nQzOmC5zI8Z3517V3I7gpkaF/Z1zNLUf01dB5OKEjW+INmbJA2hmq9jQh1Rq/ponq\n3DV7hQ8yR/9hpngfVpmDgbWAfTJdvgw69CvtM9yqGSuszmNtuq0=\n=NiF0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/b505101a2dfc8e61c79c47520d863f860a505d18",
          "sha": "b505101a2dfc8e61c79c47520d863f860a505d18",
          "html_url": "https://github.com/bitcoin/bips/commit/b505101a2dfc8e61c79c47520d863f860a505d18"
        }
      ],
      "message": "Private payments BIP",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-22T08:57:37Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-22T08:51:32Z"
      },
      "sha": "ae247aa6cfe512d647fa1178b161213b7187d225"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFiOTBiOGU3ODdlNTM2ZWJkNDk1ODNlM2E5YjQzODYzYTY5NGQ3NGU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ab90b8e787e536ebd49583e3a9b43863a694d74e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/ab90b8e787e536ebd49583e3a9b43863a694d74e",
      "tree": {
        "sha": "1c2cb9955b67dc24cf7b89ee097cb76b4217a5d3",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/1c2cb9955b67dc24cf7b89ee097cb76b4217a5d3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae247aa6cfe512d647fa1178b161213b7187d225",
          "sha": "ae247aa6cfe512d647fa1178b161213b7187d225",
          "html_url": "https://github.com/bitcoin/bips/commit/ae247aa6cfe512d647fa1178b161213b7187d225"
        }
      ],
      "message": "Rework Motivation section",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-23T07:47:41Z"
      },
      "author": {
        "name": "Clark Moody",
        "email": "clark@clarkmoody.com",
        "date": "2022-07-22T20:40:52Z"
      },
      "sha": "ab90b8e787e536ebd49583e3a9b43863a694d74e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDljNTcwMzVkNWJhMDg3ZTZmNjZmNDQyNWNkODFkMDVhMDQ4MDg5ZWY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9c57035d5ba087e6f66f4425cd81d05a048089ef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/9c57035d5ba087e6f66f4425cd81d05a048089ef",
      "tree": {
        "sha": "157be005ebc7546c78ae6603a71cad49ffcc86a7",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/157be005ebc7546c78ae6603a71cad49ffcc86a7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ab90b8e787e536ebd49583e3a9b43863a694d74e",
          "sha": "ab90b8e787e536ebd49583e3a9b43863a694d74e",
          "html_url": "https://github.com/bitcoin/bips/commit/ab90b8e787e536ebd49583e3a9b43863a694d74e"
        }
      ],
      "message": "Address type flags in a table",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-23T07:47:41Z"
      },
      "author": {
        "name": "Clark Moody",
        "email": "clark@clarkmoody.com",
        "date": "2022-07-22T21:29:46Z"
      },
      "sha": "9c57035d5ba087e6f66f4425cd81d05a048089ef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDEzNDEyMDE2NmM5NTM1NTM0NTYwMDcxNzM4YTM0MmQ4NTRlOTA0YWY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/134120166c9535534560071738a342d854e904af",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/134120166c9535534560071738a342d854e904af",
      "tree": {
        "sha": "7c1c20a0d9d81af042f4089e727a9c42e855d89a",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/7c1c20a0d9d81af042f4089e727a9c42e855d89a"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree 7c1c20a0d9d81af042f4089e727a9c42e855d89a\nparent 9c57035d5ba087e6f66f4425cd81d05a048089ef\nauthor Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1658566650 +0000\ncommitter Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1658566650 +0000\n\nImprove notifications\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmLbt/oACgkQjezhForW\nz+MtPA//VPi8ifZKFAI5Eem6oEIC5M+0r5hPSZ/uNZMJycmDfFBN2rSDfs0GDWkp\nMSd4wnUInf6TitdGzY0AawC4uDBt+axY7h1Y76RkfKbvFDI7FYTzEyL4xQabGskH\ngm4fgxuOQi3bxVw4Vfitp73FHSKZA9KZOtns3W8y1CuCwIeLvxIH8SZdLMj37xZg\nkl0G1GugRaXcrVR9XIgLIxZbe+hxpQELZGxeO9IPQvXYFHG7Xb+cD181ZD5gzGvF\n15YNpuCzQfhvl7erbroU/Al7V5IGmtaSdyvp+NLOkxB/EISyNpcHz6uasRY3UNOr\na+fHyDbpZ8DGkT4WYNzMSoX3KKT62FVueaM2OKjFPSh+EmaVfwtpPoNCw+cAjEe2\ns9H2pGStttFSXwm/o9qy3/nizvcYH7fzbZE1fIot6dXtdIlTZmvC8CaWJ/UhMe4S\n8VotkLLjny6+BdvoGmSJxDBxZmTXdXstD99vho4sYYWed3prhxyHwFjIb3tbyt2c\ngnuli3J1ObFZ0V1PB/GxdmXoXk2yI2uRyZ5TomPbFUximULfZxSVeHN5fb1ECnRF\nbd0H2HCGlWyxlRLU8vWE7UtbjCkBJVC9Un4ONn3ZwKG0QJhgBiC7/yS0D4bESblU\nzgFDD8xTu9PnsGLOb5UHmYIiT56KcpN3YFvqHX0emG5n2b/1/3I=\n=0f8+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9c57035d5ba087e6f66f4425cd81d05a048089ef",
          "sha": "9c57035d5ba087e6f66f4425cd81d05a048089ef",
          "html_url": "https://github.com/bitcoin/bips/commit/9c57035d5ba087e6f66f4425cd81d05a048089ef"
        }
      ],
      "message": "Improve notifications",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-23T08:57:30Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-23T08:57:30Z"
      },
      "sha": "134120166c9535534560071738a342d854e904af"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGZiMThkMTcxMDZiNjExNWQ4MGJmMzNiMjZhZTA4Yzc0Y2Q2ZGVkNGQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fb18d17106b6115d80bf33b26ae08c74cd6ded4d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/fb18d17106b6115d80bf33b26ae08c74cd6ded4d",
      "tree": {
        "sha": "1a96bc96d72b750b061de0b14f18b24f5cc741c8",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/1a96bc96d72b750b061de0b14f18b24f5cc741c8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/134120166c9535534560071738a342d854e904af",
          "sha": "134120166c9535534560071738a342d854e904af",
          "html_url": "https://github.com/bitcoin/bips/commit/134120166c9535534560071738a342d854e904af"
        }
      ],
      "message": "Italic symbol notation instead of <code>",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-26T17:32:52Z"
      },
      "author": {
        "name": "Clark Moody",
        "email": "clark@clarkmoody.com",
        "date": "2022-07-25T19:29:22Z"
      },
      "sha": "fb18d17106b6115d80bf33b26ae08c74cd6ded4d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDk0NzkxNmU1YmEyZTU3MmM2MWVhMGIzMjNlODcwMzVjN2Y0OWMwNTc",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/947916e5ba2e572c61ea0b323e87035c7f49c057",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/947916e5ba2e572c61ea0b323e87035c7f49c057",
      "tree": {
        "sha": "9755fcaaa026eee0c2846ddbaaa1ab58321a7a73",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/9755fcaaa026eee0c2846ddbaaa1ab58321a7a73"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree 9755fcaaa026eee0c2846ddbaaa1ab58321a7a73\nparent fb18d17106b6115d80bf33b26ae08c74cd6ded4d\nauthor Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1658857869 +0000\ncommitter Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1658857869 +0000\n\nUpdate wording\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmLgKY0ACgkQjezhForW\nz+NZoQ//YXi50wi1uUxBPjJRa0ZOmmuITh5OCEi9kPPz4OW/zihLc1GD/q4tkddD\nsq9qImvrnDufxgF0xQup3B6rP0qL/GRRNltFl2AEAMw8n+4P9AcmJVyTgWS8t98k\n7MG+845OgjULdTsznSccZc3yhEPHk2Bkcgz0QW2iya91abOO14WInc7aPCLFH6wi\nkCxgbxz8Py3CBsyR99ragrLpa2EEo4Rpga00VxwSQY9ngPJDJ1koDjJxiiu1Mi4H\nfaEontYxTkKvC/FTWIXA2msgApV1A5A6oTEQPnppbfVaxoTAbjGp5LWl5MIbSEx+\n4r33mns/7tKKH77/XFMsGhtbywuezFLkIWj/HZ1F0LzmLNsc7RNa68WYUVYO7rQe\np26rdvbIq05F8b8Sp2vIzpCvq0+isT6s2sRq57AYN8nh+77GXobqJf3+6v7hy5Tj\nVOjYpXc1z4wYORzbymRGWys7FSQvzTD+mAnNS6KdNf7oFCygisJ33qeoKQx7arc2\n9JJjIySMgV1HgjqOZvE6amUgP8674okr59TG9qDJk21lp5gUHuNAqJRLw/dhPah2\nrYv9BlZLKgc40AZS8i1o+uz77Jl1m36F1QvFj3W8u2sor4izKivRKiZgRXTxID7i\nd89HC91nm46zaSJR9wLx/nSucrD0wPzWAkt9fn4r4hXn5LAA+P8=\n=9uHB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fb18d17106b6115d80bf33b26ae08c74cd6ded4d",
          "sha": "fb18d17106b6115d80bf33b26ae08c74cd6ded4d",
          "html_url": "https://github.com/bitcoin/bips/commit/fb18d17106b6115d80bf33b26ae08c74cd6ded4d"
        }
      ],
      "message": "Update wording",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-26T17:51:09Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-26T17:51:09Z"
      },
      "sha": "947916e5ba2e572c61ea0b323e87035c7f49c057"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDljYWEyN2NjZDQ0NGI3MjU5Mjg5YWRmMmExY2NlMDU5ZTVkOTMyYWE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9caa27ccd444b7259289adf2a1cce059e5d932aa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/9caa27ccd444b7259289adf2a1cce059e5d932aa",
      "tree": {
        "sha": "2b5f7b0a63df3c0f41f69a5564b66f8d9218f603",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/2b5f7b0a63df3c0f41f69a5564b66f8d9218f603"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/947916e5ba2e572c61ea0b323e87035c7f49c057",
          "sha": "947916e5ba2e572c61ea0b323e87035c7f49c057",
          "html_url": "https://github.com/bitcoin/bips/commit/947916e5ba2e572c61ea0b323e87035c7f49c057"
        }
      ],
      "message": "Two potential third-party services",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-30T08:25:04Z"
      },
      "author": {
        "name": "Clark Moody",
        "email": "clark@clarkmoody.com",
        "date": "2022-07-29T17:10:58Z"
      },
      "sha": "9caa27ccd444b7259289adf2a1cce059e5d932aa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGRmOTgzMGE4NTVlY2JhNDM4OTI2MTcyZTc5ODMyYmJkZjEzZDU4NGI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/df9830a855ecba438926172e79832bbdf13d584b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/df9830a855ecba438926172e79832bbdf13d584b",
      "tree": {
        "sha": "bc1714b25f1d578f7e482a4e125781d8c2f81820",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/bc1714b25f1d578f7e482a4e125781d8c2f81820"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9caa27ccd444b7259289adf2a1cce059e5d932aa",
          "sha": "9caa27ccd444b7259289adf2a1cce059e5d932aa",
          "html_url": "https://github.com/bitcoin/bips/commit/9caa27ccd444b7259289adf2a1cce059e5d932aa"
        }
      ],
      "message": "Update authors list",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-30T08:25:04Z"
      },
      "author": {
        "name": "Clark Moody",
        "email": "clark@clarkmoody.com",
        "date": "2022-07-29T17:11:08Z"
      },
      "sha": "df9830a855ecba438926172e79832bbdf13d584b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDA2M2Q3MDIxOWE2MjY4YjIwNTc4ZDhlN2Q4YjgxYWU2N2JjMDc3MjE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/063d70219a6268b20578d8e7d8b81ae67bc07721",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/063d70219a6268b20578d8e7d8b81ae67bc07721",
      "tree": {
        "sha": "b8281c1dcd67401360cf7c2cacc233bcb88b7ee0",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b8281c1dcd67401360cf7c2cacc233bcb88b7ee0"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree b8281c1dcd67401360cf7c2cacc233bcb88b7ee0\nparent df9830a855ecba438926172e79832bbdf13d584b\nauthor Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1659170748 +0000\ncommitter Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1659170748 +0000\n\nImprove wording\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmLk77wACgkQjezhForW\nz+M3bQ//cUVIqqO46kFZAQmY89XLHRWLI4Q+qfG7FTcyf/7TXu0Yz1IvlHYkF/kH\nD2zbkokcLdU832JqB2fMEMJS1rvEfa4mZgdceY6CfZHe/gihAj2h3T17DZX56zmq\nyE6rXxTteLp+Ay2G9hoau8qqAtDmWvJN7Mg9Lwowa5KdyQ6Y9I7SrzZI1T9tCThE\n2y0eYEsXzff79YdQL/nhjej7pcLp7dZP0rL1E30o+oxQEd06+E5bGRwWBEKhfiOe\nRFaGeZmIePo12HH5svcf47OuocBEShKdujC6p6q8KIdsE/YoL3vm5rkUZF3YWq8M\n6vEYxSgQ8KVY16f6hIEPHaDd5lFR8nxEmyS6bEjGs0gElhuS9xEuZOXgfOq+WUYA\naYMuE9c/yfH4RX2YLCZtI3CRnuylC2Mhafvq5DtdKPDaiRStZ3z5juJSJObreBAv\nQQ9ujFWEelCC1d1Nf+miswktJJk/nrmnco71qbHAQDCXoib3p6CuZSGPEOtEAYHa\nqGON8CAJCeBJgpgP+7OpmIHCyYI/HvNPdqiezxNfnj3bL5DEahX1zPghvhGun3k0\nqC3vHWBd8UJtnIWpXVakixrhX9pTvsOezhp1Oc5r2DaZgYAEECjiQAWCyX68wlmw\nAN12qEN5qu1f7BP232T+l3hw+TnaVFNDu4Pv3ML+SPfFu7HhMC8=\n=DzrG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/df9830a855ecba438926172e79832bbdf13d584b",
          "sha": "df9830a855ecba438926172e79832bbdf13d584b",
          "html_url": "https://github.com/bitcoin/bips/commit/df9830a855ecba438926172e79832bbdf13d584b"
        }
      ],
      "message": "Improve wording",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-30T08:45:48Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-07-30T08:45:48Z"
      },
      "sha": "063d70219a6268b20578d8e7d8b81ae67bc07721"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDczMzA0ODQ2ODA0NjUxNjA4YmRlMzAyMzc1OTJkN2FlMDRjMDI5YTY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/73304846804651608bde30237592d7ae04c029a6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/73304846804651608bde30237592d7ae04c029a6",
      "tree": {
        "sha": "b57e46056159d65a1d9f5cb9c4ea842e6495d383",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b57e46056159d65a1d9f5cb9c4ea842e6495d383"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree b57e46056159d65a1d9f5cb9c4ea842e6495d383\nparent 063d70219a6268b20578d8e7d8b81ae67bc07721\nauthor Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1659351601 +0000\ncommitter Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1659351601 +0000\n\nIncorporate feedback\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmLnsjEACgkQjezhForW\nz+OBAxAAttcHFz0piaFBExentuxIvN3NVFNqrlhCvBtSY4KBwLb/TeEDjjuKlpQQ\n9uNUJ/ZHTWG6337p4KXyUvAMwbb8IGX0BxVbFyVZg1BniWQo3jNHnLYW/Lt8p4zx\nxyUXSE+yhCY3MbNlgpWp9wMncAU6UoY9mVf7/rra1thz6ROwYBuOuOIwcpMNcuDH\nMpzqbHEtchUhf6wf1Xw+koKLQVdjGoaopLOJxVQSGoRqypVNJBPxcQKzD2ytPnm8\nKLV7F5x4gnlV1DFq8rjSCXtbthuSulR51wOYBgw/ew5lPeYIe+/TUKkvaTGrFekq\nkpv7jYngwU3UwbqRI5PFqAQC/xznf2VujOsf4OEuPy2KtDc2Qo72P4ZruxKmMVUD\n9yyDUK7hqc7DK4fbCsZz43UkjjbC0hWOleerBFSGtN3Fhf8jLT/XLMJ98gwqa8Ow\nfTaxNtMPIskJArUSyS9uy2HWX0sWkaSA0eIEgf+oyJeap/8hqBA9HnXP0SVbhrgQ\nUFbLmEabI2TDrXEZNSCQipeVEusZXWj78GCw6GpBvu8LnFql8J+09G2hAvxUKDqS\nNPHKPSMG4CigPVnYqHG6cdCsQjXzozHSg+DuH0H0Fbr/j7+0tb8jsS3uAKREGcvi\nXsj1vyi9ss9yxANl5qhC54O9CkRvkoKK0QtPMEbp3xd45/U3dv0=\n=ZPKg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/063d70219a6268b20578d8e7d8b81ae67bc07721",
          "sha": "063d70219a6268b20578d8e7d8b81ae67bc07721",
          "html_url": "https://github.com/bitcoin/bips/commit/063d70219a6268b20578d8e7d8b81ae67bc07721"
        }
      ],
      "message": "Incorporate feedback",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-08-01T11:00:01Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-08-01T11:00:01Z"
      },
      "sha": "73304846804651608bde30237592d7ae04c029a6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDUwZTcwN2JkOGM2ZWQzNmYzNmVhM2M4NDQ3ZjA0M2RlZTVjMmEwZjk",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/50e707bd8c6ed36f36ea3c8447f043dee5c2a0f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/50e707bd8c6ed36f36ea3c8447f043dee5c2a0f9",
      "tree": {
        "sha": "20d624806fa74ec049351e61274b6adb713db4db",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/20d624806fa74ec049351e61274b6adb713db4db"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree 20d624806fa74ec049351e61274b6adb713db4db\nparent 73304846804651608bde30237592d7ae04c029a6\nauthor Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1659356146 +0000\ncommitter Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1659356146 +0000\n\nLeaner notifications\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmLnw/IACgkQjezhForW\nz+Om2w/+O+gg61uXmL4G0UsjglYCS23sPFuO5wUaSC5Hh8O64aTEvOiVaUireK6v\nJrMo3K5ot980m+970Y7ljbdgukdZCL4X3a9E6Ge0KT23sz4A8B04PZQHqw4t5p0R\nBpe4BNEAfoGgR43ln+f2zUWPlnUABV0h/ABPUNlvdHCJS7FvVRFEP5kApzyQgjAk\ni0xUZJC40p7C4jpmEuKZVkmdRjNpiHOr8zVuUKzTafQiUNZ8hUjPVEbdB6bG2gcS\nSo7WnC7vmM2Cg4YhS1ENSgf2ur+eVDIPGqR6RrOvLCdkYypS8eoSzJLLFTt4+h6z\nW/AXRIhT+NBCDns8qRy8DkyM7wQqUisO9fpIl7jLHdWYcSjirLnvmAG6E05Q3f8o\nW4vLtM9BYquaR8TMdfMPK5iJIEXTrKxizeSIjQoGA0YVk0srSlfLaykGcPpYNSdN\nqh4VX/8Z3h6eVsWAVm4ql3PqFyLFyvyWPslx84L/VWKUpAOAT3OZ30ygkc/c9Vtz\ncUTVKfdbQXgCXyikY/fmvvAQFy0f/mfpwhP1En3t7YpR1/ewmgmF9fSXjxa4bS09\nwRmI+r7AFYepqUXNqCOT4yMIcrcPV11yl9WFv/K4wUS2/f+GGz6aF9YUHlp+buOo\n9KPp7oYsYNyYC38giChWuyQI+LovHhDyHq0QjWS0JhO9H/TMQA4=\n=T75y\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/73304846804651608bde30237592d7ae04c029a6",
          "sha": "73304846804651608bde30237592d7ae04c029a6",
          "html_url": "https://github.com/bitcoin/bips/commit/73304846804651608bde30237592d7ae04c029a6"
        }
      ],
      "message": "Leaner notifications",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-08-01T12:15:46Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-08-01T12:15:46Z"
      },
      "sha": "50e707bd8c6ed36f36ea3c8447f043dee5c2a0f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGMwNTM5NjI3NTk0NzViZTFlMDU2NGVjYTgzNjE2NmUyZmZmMDYyZWI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c053962759475be1e0564eca836166e2fff062eb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/c053962759475be1e0564eca836166e2fff062eb",
      "tree": {
        "sha": "52e2924a163868370a7d1453d165d292f762fd23",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/52e2924a163868370a7d1453d165d292f762fd23"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/50e707bd8c6ed36f36ea3c8447f043dee5c2a0f9",
          "sha": "50e707bd8c6ed36f36ea3c8447f043dee5c2a0f9",
          "html_url": "https://github.com/bitcoin/bips/commit/50e707bd8c6ed36f36ea3c8447f043dee5c2a0f9"
        }
      ],
      "message": "added reference to BIP 47",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-08-01T13:11:33Z"
      },
      "author": {
        "name": "pox",
        "email": "47615825+pox@users.noreply.github.com",
        "date": "2022-07-31T07:20:11Z"
      },
      "sha": "c053962759475be1e0564eca836166e2fff062eb"
    },
    {
      "event": "commented",
      "id": 1216923828,
      "node_id": "IC_kwDOAN28mc5IiMi0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1216923828",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:15:25Z",
      "updated_at": "2022-08-16T17:15:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr @kallewoof We're ready for a BIP number assignment.",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1216923828",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7199088353,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAGtGV7h",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7199088353",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:15:25Z"
    },
    {
      "event": "subscribed",
      "id": 7199088365,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAGtGV7t",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7199088365",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:15:25Z"
    },
    {
      "event": "mentioned",
      "id": 7199088380,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAGtGV78",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7199088380",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:15:26Z"
    },
    {
      "event": "subscribed",
      "id": 7199088383,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAGtGV7_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7199088383",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:15:26Z"
    },
    {
      "event": "reviewed",
      "id": 1074919531,
      "node_id": "PRR_kwDOAN28mc5AEfhr",
      "url": null,
      "actor": null,
      "commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#pullrequestreview-1074919531",
      "submitted_at": "2022-08-17T00:53:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
    },
    {
      "event": "reviewed",
      "id": 1075090046,
      "node_id": "PRR_kwDOAN28mc5AFJJ-",
      "url": null,
      "actor": null,
      "commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#pullrequestreview-1075090046",
      "submitted_at": "2022-08-17T06:16:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
    },
    {
      "event": "commented",
      "id": 1219814834,
      "node_id": "IC_kwDOAN28mc5ItOWy",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1219814834",
      "actor": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T18:41:06Z",
      "updated_at": "2022-08-18T18:41:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Feedback is always welcome but ideally we'd get a BIP number at this point because it'll change the test vectors. Not having one also blocks us from publishing the reference implementation.",
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1219814834",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1219988229,
      "node_id": "IC_kwDOAN28mc5It4sF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1219988229",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T21:34:24Z",
      "updated_at": "2022-08-18T21:34:24Z",
      "author_association": "MEMBER",
      "body": "For a number assignment, this needs a section addressing backward compatibility.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1219988229",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDE4NzEzNWM0ZjZlNjBiNjNiZjAyNTQxOWM2ZWIxMTdjMGExYjE4Y2Q",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/187135c4f6e60b63bf025419c6eb117c0a1b18cd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/187135c4f6e60b63bf025419c6eb117c0a1b18cd",
      "tree": {
        "sha": "3ffc53a9e063192caaabacadfef6b8f22ce45e85",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/3ffc53a9e063192caaabacadfef6b8f22ce45e85"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree 3ffc53a9e063192caaabacadfef6b8f22ce45e85\nparent c053962759475be1e0564eca836166e2fff062eb\nauthor Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1660904072 +0000\ncommitter Alfred Hodler <100861939+alfred-hodler@users.noreply.github.com> 1660904072 +0000\n\nUpdates to the BIP\n\n- fix out of range indexing\n- add a note about compressed keys\n- add a note about of-of-band notifications\n- add a backward compatibility section\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmL/YygACgkQjezhForW\nz+OqfQ//VwJGRBk/tuVAfQi6DJH/kKaCaTyE4Rsslv+nkYK/8FKXKLkUi/P27WJQ\nazhne9ioT2EHswAX0EO4bZC4oDUPQTv0+bry5YXMjGDmrjq3VJC5FA3pAgLng+B1\njECWK/S5mi5jlFLhTkul8Q9qrhfNzCZ8BRSP54HT9CgDGbXriFLr9TJvkFG1L/Iv\nL0FY8WwxruU1FdeIGmRe1HyDWTx6QOyy1ynuC1KYgMpkBeszPJEmmWfOqN4DZz0/\novI4G7v1oxbWWs244zfI2dRmAvjETlVZA8LKlcEBOvMI53oYKm5mq8IDxvK+z4k7\nTfQG82gq+8Am0IxD7Lp91KxZkpw4HkWuEMJ3Dphbt9ctlTZOga+Et+LSr7T4nn32\nawX/rH9IZiIcCH9DtdFgxBb6OxE06mIkhcI7fYk5Lp0LH9eiKdozAUkWtQlppLFP\ntxN5MHZgoyvJCGlaJe5bxI8fPgV2OP97f3pdq0oOArDLYqyp206Uv4ciB/0dKoZ6\n7328fUy6FObxkWWBejjKvqjp/nG9ScvbJdOhFGwzhBUUGkbvQK7DLDs6ggN1zGJG\nHCCUISaAM2hMHfPEXokD+6wQ8A5pKXmmSs0XHk4qQnueICPxIxC41g165fC3Yu4X\nO0MZFzmPnmVj26vSgb5PidOb1XG97GA9X5jQEF6fS6xm4NmSsvg=\n=Biym\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c053962759475be1e0564eca836166e2fff062eb",
          "sha": "c053962759475be1e0564eca836166e2fff062eb",
          "html_url": "https://github.com/bitcoin/bips/commit/c053962759475be1e0564eca836166e2fff062eb"
        }
      ],
      "message": "Updates to the BIP\n\n- fix out of range indexing\n- add a note about compressed keys\n- add a note about of-of-band notifications\n- add a backward compatibility section",
      "committer": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-08-19T10:14:32Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "100861939+alfred-hodler@users.noreply.github.com",
        "date": "2022-08-19T10:14:32Z"
      },
      "sha": "187135c4f6e60b63bf025419c6eb117c0a1b18cd"
    },
    {
      "event": "commented",
      "id": 1220506510,
      "node_id": "IC_kwDOAN28mc5Iv3OO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1220506510",
      "actor": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T10:19:36Z",
      "updated_at": "2022-08-19T10:19:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Backward compatibility has been addressed.",
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1220506510",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "reviewed",
      "id": 1079290695,
      "node_id": "PRR_kwDOAN28mc5AVKtH",
      "url": null,
      "actor": null,
      "commit_id": "187135c4f6e60b63bf025419c6eb117c0a1b18cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#pullrequestreview-1079290695",
      "submitted_at": "2022-08-19T19:44:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
    },
    {
      "event": "labeled",
      "id": 7224691664,
      "node_id": "LE_lADOAN28mc5PYPgazwAAAAGuoAvQ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7224691664",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T19:46:55Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "renamed",
      "id": 7224700744,
      "node_id": "RTE_lADOAN28mc5PYPgazwAAAAGuoC9I",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7224700744",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T19:48:52Z",
      "rename": {
        "from": "New BIP: Private Payments",
        "to": "New BIP 351: Private Payments"
      }
    },
    {
      "event": "commented",
      "id": 1221041872,
      "node_id": "IC_kwDOAN28mc5Ix57Q",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1221041872",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T19:49:22Z",
      "updated_at": "2022-08-19T19:49:22Z",
      "author_association": "MEMBER",
      "body": "Assigned BIP 351",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1221041872",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDc1YTZmMjFlM2E2NDFmOTMwYzBjNTgwMjI2NDc5N2ZhN2FjZDEwMDI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/75a6f21e3a641f930c0c5802264797fa7acd1002",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/75a6f21e3a641f930c0c5802264797fa7acd1002",
      "tree": {
        "sha": "db2c7256c15154c17b739367cd9bd4f5b552c616",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/db2c7256c15154c17b739367cd9bd4f5b552c616"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree db2c7256c15154c17b739367cd9bd4f5b552c616\nparent 187135c4f6e60b63bf025419c6eb117c0a1b18cd\nauthor Alfred Hodler <alfred_hodler@protonmail.com> 1661158422 +0000\ncommitter Alfred Hodler <alfred_hodler@protonmail.com> 1661158422 +0000\n\nUpdate BIP number and test vectors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmMDRBYACgkQjezhForW\nz+P2QhAAj8wpAMuKSspfLwrgGcyRgXi7L0uTTaSruilDqXIxvqyiLkMhvX6O1rNa\nUOAoC/9E2xz0ZZb8LkkVosEYDDIKJQgYiQK41RS349CL8IIyLW7xk/oWaCi9eVoN\nuc1g3i4NwBgYwt2ACZ1YSbE69NIqj6V8t338NHE6qvQU7AKJbKUahAvgJnKJRmed\nzAjdDfj/fWXp7WyrAdjJ2+rir8ElrRtVLJYSlAVlBVAU0yj3WiA4md1s7vZQOwtL\ntARVRvjz/klEuuesac1p9FRd3gUBHuxiwH447gb+iclkv1uruWFzxgp+wc9bqhD9\nhkuMFTID76KrGnGyxBWYtga2dl0JmsA7bji+2cMnu5BPwypwFLa1ear7Z1ULG5N8\nFJ8KLZPoynDmFK0oQNyNmRHnjp5GtS+6RCdb1j9bamCXuzi/EItMg21dgmxCwVGm\neZMFoCl07PGmiUuB91/7ocQgcwryeQhM+/UEQo2Fupgt7mjeSA35iwOmo0dPWKHw\nU7a/q+GxvnTOjawaEAfydheAe890iHq+rW84ef6CXBzimrmSMDKG78sTV5rS0vsn\nFKRXOpC9BnUjwajHuzPGOqRFoKxHMqZGZxKbFPQoTey2TyNZGk/B4p2CMbP95S4R\nYYQKJUdwAjLUVSJ1kcKo1Zoxq+XKsl6R8GdYR3WxmvK6zK+T11w=\n=u+hS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/187135c4f6e60b63bf025419c6eb117c0a1b18cd",
          "sha": "187135c4f6e60b63bf025419c6eb117c0a1b18cd",
          "html_url": "https://github.com/bitcoin/bips/commit/187135c4f6e60b63bf025419c6eb117c0a1b18cd"
        }
      ],
      "message": "Update BIP number and test vectors",
      "committer": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T08:53:42Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T08:53:42Z"
      },
      "sha": "75a6f21e3a641f930c0c5802264797fa7acd1002"
    },
    {
      "event": "reviewed",
      "id": 1080118058,
      "node_id": "PRR_kwDOAN28mc5AYUsq",
      "url": null,
      "actor": null,
      "commit_id": "75a6f21e3a641f930c0c5802264797fa7acd1002",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Awilliams76",
        "id": 100906036,
        "node_id": "U_kgDOBgO0NA",
        "avatar_url": "https://avatars.githubusercontent.com/u/100906036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Awilliams76",
        "html_url": "https://github.com/Awilliams76",
        "followers_url": "https://api.github.com/users/Awilliams76/followers",
        "following_url": "https://api.github.com/users/Awilliams76/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Awilliams76/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Awilliams76/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Awilliams76/subscriptions",
        "organizations_url": "https://api.github.com/users/Awilliams76/orgs",
        "repos_url": "https://api.github.com/users/Awilliams76/repos",
        "events_url": "https://api.github.com/users/Awilliams76/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Awilliams76/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#pullrequestreview-1080118058",
      "submitted_at": "2022-08-22T09:03:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGU1NmZiNjQyOTJhZGFiZTg0MTJlMWQzNmY4Njk1MDg3NDJkZTJiM2Q",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e56fb64292adabe8412e1d36f869508742de2b3d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/e56fb64292adabe8412e1d36f869508742de2b3d",
      "tree": {
        "sha": "03a6b30aaad121a99ebc2fc2e17c908896800579",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/03a6b30aaad121a99ebc2fc2e17c908896800579"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 03a6b30aaad121a99ebc2fc2e17c908896800579\nparent 75a6f21e3a641f930c0c5802264797fa7acd1002\nauthor Alfred Hodler <alfred_hodler@protonmail.com> 1661159831 +0000\ncommitter Alfred Hodler <alfred_hodler@protonmail.com> 1661159831 +0000\n\nUpdate the index page\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmMDSZcACgkQjezhForW\nz+OeBw/+JEecjAaUc1rhzQpPDrA7cdk++mNApXXwCv10zed8rFaYadsbmkUSBGGi\nFaN0AbwnyaLsFeZ1EuSedXQ55NQNaS/dKCjYiLxahm9RIFwUCI44VheLThBwpbNd\nKsC+osQzwZGUScmp0cP4OpoJ0RwBldRHqEbKDiYmmEXrP95L/L0U+TmJwvMNNx7D\nQmKmnCmaY2DTF7G789Y+7Y3QO8i32TDYlXdx6tslNvcjKZo9yurQhXYrXDbn82Zw\n6jwh60p8jZgMumN05GnJERBvpB0yKPVa6GdSbVd7mCmKPI6lZcP6uxQhfQ8DLg7T\nnTKqkFsTzwF2yEg8aUc/y9XiWJwfoGCCLwoGNheayMjzvznSPnQvFmPGCEiy4uZb\nsX+pBpUKhd273OSo2Snl1iNAeyTt24MYTGn1fS9Dxb/BGxtsym+ZbG3NU/tbKjS0\n8I8ZTid+94a0xpAgRzijDOa2Ui+5oxNZ+Bh3ORPe+YK8Yq7H4t5/Rz8YdvxZOGwN\nEalIjAIwBWATD7fv8onVkJPyIu3cxJvTrfJfdnp1rCCLQVwv5aC6MGll0Zo+SWP2\nnkORku+ni4AZEsqp9WLGESjAJ4PP8ypQRltFyOniMINfhbKU2rrvEXr3QIn3XSSz\naEJf2oW9jGQi1PTI/C59msF18VqgWlu4hO8ULZ6tDzALa8uZ9EQ=\n=fT7N\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/75a6f21e3a641f930c0c5802264797fa7acd1002",
          "sha": "75a6f21e3a641f930c0c5802264797fa7acd1002",
          "html_url": "https://github.com/bitcoin/bips/commit/75a6f21e3a641f930c0c5802264797fa7acd1002"
        }
      ],
      "message": "Update the index page",
      "committer": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T09:17:11Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T09:17:11Z"
      },
      "sha": "e56fb64292adabe8412e1d36f869508742de2b3d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDEzODVkNjUxODc1OTBmMDM5MGMwY2IxOWI4MmQ1MjcyMDcxMDk3ZGY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1385d65187590f0390c0cb19b82d5272071097df",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/1385d65187590f0390c0cb19b82d5272071097df",
      "tree": {
        "sha": "8af3fe2ad3d2cba704c07c58002c014d9dba3fea",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/8af3fe2ad3d2cba704c07c58002c014d9dba3fea"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8af3fe2ad3d2cba704c07c58002c014d9dba3fea\nparent e56fb64292adabe8412e1d36f869508742de2b3d\nauthor Alfred Hodler <alfred_hodler@protonmail.com> 1661161772 +0000\ncommitter Alfred Hodler <alfred_hodler@protonmail.com> 1661161772 +0000\n\nAdd reference implementation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmMDUSwACgkQjezhForW\nz+M7rA//UHJSjs18qnHZKSViXFG6pacaedyhByZEJqVuh8z3wchIJspOoyEYy5nQ\nmRlZ+kkvWJNw42yXB3O4/1TY6qc83CdF/XeBVYxgA7ZPn3V2SFJSKD3RD/M8sMks\nVCxsLfCClGX1dBX76N7FEfvdvDdD0rnyD90bS0wcgl7uM2Z+QArvlorExJr8RfbB\n7VsDQLvQzbLhKtdewYZ6p77cEF8v73b1WNNSyS6qmV6GnffP/jClL2N+sFO57J0Q\ng/2J5k1WUkDjj5UhHO4b4WVDAiIdMns8IchKUmVoZpTTlO6ptP7susYWSe2NSE0T\nXI1TyQIyirywvon/xacz4UI3SxwVsGeYjQCa8pE84YSNS5zEssxbJeqhREI+kyaX\n+Ut1HcBW7z8404pY9P7vSySAAazolW4D8ZIyYCbpK0LgKl6ll9L+M1gG9rxWcKPq\ndPV1EZfeBq48kzezt+TMMXhm025YuDoT/2Pyn1KD5bm5KK0+Lk9sKk6Xdssg2CHo\n2Et6VxZ6xud+B90+stxos2F3eBfVjh8h9TVyVoWOIY8qHB2suWLAqXRspxNiC/5T\nToVOnvg99lb4br9PLzdoUUWTrTWtzfkOqveN9LwLTnCpsbZA+Xe8WS0gN2+h+dYR\n6sXPoMXtBsDSOSfHZrak9cOE6pLFuB9OXQpjent+R3LRy6Ufe/0=\n=54BX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e56fb64292adabe8412e1d36f869508742de2b3d",
          "sha": "e56fb64292adabe8412e1d36f869508742de2b3d",
          "html_url": "https://github.com/bitcoin/bips/commit/e56fb64292adabe8412e1d36f869508742de2b3d"
        }
      ],
      "message": "Add reference implementation",
      "committer": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T09:49:32Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T09:49:32Z"
      },
      "sha": "1385d65187590f0390c0cb19b82d5272071097df"
    },
    {
      "event": "commented",
      "id": 1222123578,
      "node_id": "IC_kwDOAN28mc5I2CA6",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1222123578",
      "actor": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-22T09:55:12Z",
      "updated_at": "2022-08-22T09:55:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added a link to reference implementation.",
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1222123578",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFjN2I2YzFmNTBlZTY4MGYxZWExYmNlMTQ2YWZkYmNiNTRhNWNhYzg",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ac7b6c1f50ee680f1ea1bce146afdbcb54a5cac8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/ac7b6c1f50ee680f1ea1bce146afdbcb54a5cac8",
      "tree": {
        "sha": "4a2cac731aaf17ed6c2d97de7f3cf1f1105c1917",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/4a2cac731aaf17ed6c2d97de7f3cf1f1105c1917"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4a2cac731aaf17ed6c2d97de7f3cf1f1105c1917\nparent 1385d65187590f0390c0cb19b82d5272071097df\nauthor Alfred Hodler <alfred_hodler@protonmail.com> 1661162634 +0000\ncommitter Alfred Hodler <alfred_hodler@protonmail.com> 1661162634 +0000\n\nAdd Comments-URI; fix author list\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmMDVIoACgkQjezhForW\nz+PoNxAAvt2Znuiblceiu7f+vGvAnRrXBsLYp8ae83GPN1+dZnXyk0KZxZJsyulV\nL11rLy5zhEA9tPcmCl+YHDXKYe0D9MORshaXdstt5ScOUOv/pVSg7Ra2FjFtnEwe\nxQRE5s7qtGdcurHV0ASJbggesyoG5U6mzFzfNMup2W4nZKhNRx3w6kB1u31Y00mg\n7/kp54jludHPN8qY95OGF0wUGGeApEdPlCtD6zGU0MlWbi05LN6uaSAjlDJPppLv\ns6SfNbfpRAuNGxJP0YilFfrWEYHPW1Mpq7ZlTjcc0tu3EqZjvs3dhYRmthP55xsC\nyYoquKPNmsD6ZWybPG8C0vsD7TJY61OOfAbOkZYA+FICoZdTGIQSZtDIVlRDifJ7\n8nwGbUobiM87hAXUWhVUyZsi/FyJCK5kY2buxfkBslZeSFwT3vkl6QieE7H+BgmO\nj+kBQAMxUpUXJ3IP+yn3IQEYDTBuUSv0iLl3XDfzOev3qp1BWev52oq0XYshlw1W\nYsGTucGDx7zLGEkxG2Jbuk62Kf2W50P6+R1U3WG3d8PLH3K3J+f/6cQ8Zb1Rhhr5\n5sGgs8E3RC9Xh9TOLzBf+KMGypDsbu0D7741A04fwpJjYy7JVY9DAVLVoekA/vSx\nE/mg46K/ajRAan0p4yfv4NXCqLkVDFRvFz7Xm0mjtEJ0h8kah8M=\n=PoTN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1385d65187590f0390c0cb19b82d5272071097df",
          "sha": "1385d65187590f0390c0cb19b82d5272071097df",
          "html_url": "https://github.com/bitcoin/bips/commit/1385d65187590f0390c0cb19b82d5272071097df"
        }
      ],
      "message": "Add Comments-URI; fix author list",
      "committer": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T10:03:54Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-22T10:03:54Z"
      },
      "sha": "ac7b6c1f50ee680f1ea1bce146afdbcb54a5cac8"
    },
    {
      "event": "commented",
      "id": 1227299575,
      "node_id": "IC_kwDOAN28mc5JJxr3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1227299575",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T13:57:32Z",
      "updated_at": "2022-08-25T13:57:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "It looks like this is ready for merge.",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1227299575",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1229907143,
      "node_id": "IC_kwDOAN28mc5JTuTH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1229907143",
      "actor": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T07:47:53Z",
      "updated_at": "2022-08-29T07:47:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr we are ready for merge. We'll keep the draft status for now.",
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1229907143",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7276077566,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAGxsCH-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7276077566",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T07:47:53Z"
    },
    {
      "event": "subscribed",
      "id": 7276077573,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAGxsCIF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7276077573",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T07:47:53Z"
    },
    {
      "event": "commented",
      "id": 1230041129,
      "node_id": "IC_kwDOAN28mc5JUPAp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1230041129",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T09:51:34Z",
      "updated_at": "2022-08-29T09:51:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure if @RubenSomsen's feedback in his mailing list [response](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020813.html) has been addressed. He is listed as a co-author so just checking he's happy with this.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1230041129",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7276988375,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAGxvgfX",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7276988375",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T09:51:35Z"
    },
    {
      "event": "subscribed",
      "id": 7276988390,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAGxvgfm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7276988390",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T09:51:35Z"
    },
    {
      "event": "commented",
      "id": 1230101230,
      "node_id": "IC_kwDOAN28mc5JUdru",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1230101230",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T10:31:23Z",
      "updated_at": "2022-08-29T10:31:23Z",
      "author_association": "NONE",
      "body": "Briefly, my thoughts:\r\n\r\n- I think the [Prague discussion](https://gist.github.com/RubenSomsen/21c477c90c942acf45f8e8f5c1ad4fae) and its authors deserve mentioning, seeing as the protocol is the same except for one change (blinding the payment code)\r\n\r\n- I'm not convinced this was a good change, given that it introduces a scanning requirement (albeit more modest than Silent Payments) which complicates light client integration, though on the other hand it does remove the complexity of outsourcing the on-chain notification\r\n\r\n- I don't think any of this matters for BIP assignment",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1230101230",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGJmZmM4NGY2M2FkZmM2ZDQ3MzE3NDI0YjMzZDk5NjlmMzQwOTYyY2M",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bffc84f63adfc6d47317424b33d9969f340962cc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/bffc84f63adfc6d47317424b33d9969f340962cc",
      "tree": {
        "sha": "85d46a88a69391bbdd55df7325a15a00dec39cc0",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/85d46a88a69391bbdd55df7325a15a00dec39cc0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 85d46a88a69391bbdd55df7325a15a00dec39cc0\nparent ac7b6c1f50ee680f1ea1bce146afdbcb54a5cac8\nauthor Alfred Hodler <alfred_hodler@protonmail.com> 1661856340 +0000\ncommitter Alfred Hodler <alfred_hodler@protonmail.com> 1661856340 +0000\n\nAdd a refernce to BIP351\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmMN6lQACgkQjezhForW\nz+OduhAAud9ROZW7W6b9grN90TtlT+cXJV6BmR2Qiam2/7F7QOtsBLy15rXTUduj\n5ZD3b+3lNA7CIrdLS4OLvsrvQqlPyaAZqh2Gx7XcNXnhjQnm1Nohc6RyHLc2ovTb\n7ioDSFVZ5INUBV3gfljOMNutK6FPiNxxXwGU6Do73ow+TGG73R3bqGsavfmppL3Y\nPEFxG7JVs9Dgc0e0coUqotwjrpe5ac9bnRqleGO6qUd4x+edEXBU/jIjFiPmLxWB\ntEbtSrt+5Dt0kt5HOmMdgWBQ3koZydmuJR32/CHOfGg54E2Afh+YjgTkSpHXRSH1\nun3r/wkODlLGy1yxNfL+wu5e6aC4nG+ItrXzMajIY+1COMuav0Xj7lvTdujGfpI+\nw5wyLfEbvYe+MEbZcTtct1MM5G//HHMcXe5EgE01Gr07FGNJZ8As78MMtNuFKJoh\nMyO7hWN8u+AgrgtzyhP3++z6gmZXWmD4NTYm/FBaPUZ227k2hQ84N3t/rTGxcf6i\n4zzxgAu17M05PRjtV5KyyZYkUM+B0o1OKw+svTY/IYQ9vgyhbzC+y0KqL2/c36EI\ng5GPMq6yQVnjaMyvb0haNjiE6XkWQQ0getGMnB8OcnxJhIRHzIK7uwsyOiB+Fe8C\nNf/+FunRbRNQs+X8NiGMxJvyfKBybjZVye5Ctho0gEzC7KmZyIQ=\n=ZljG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ac7b6c1f50ee680f1ea1bce146afdbcb54a5cac8",
          "sha": "ac7b6c1f50ee680f1ea1bce146afdbcb54a5cac8",
          "html_url": "https://github.com/bitcoin/bips/commit/ac7b6c1f50ee680f1ea1bce146afdbcb54a5cac8"
        }
      ],
      "message": "Add a refernce to BIP351",
      "committer": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-30T10:45:40Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-08-30T10:45:40Z"
      },
      "sha": "bffc84f63adfc6d47317424b33d9969f340962cc"
    },
    {
      "event": "commented",
      "id": 1231505015,
      "node_id": "IC_kwDOAN28mc5JZ0Z3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1231505015",
      "actor": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-30T10:59:15Z",
      "updated_at": "2022-08-30T10:59:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added a reference to the Prague discussion.",
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1231505015",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1239976041,
      "node_id": "IC_kwDOAN28mc5J6Ihp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1239976041",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-07T22:35:13Z",
      "updated_at": "2022-09-07T22:35:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK bffc84f",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1239976041",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1240067660,
      "node_id": "IC_kwDOAN28mc5J6e5M",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1240067660",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T00:48:30Z",
      "updated_at": "2022-09-08T00:49:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'm not convinced this was a good change, given that it introduces a scanning requirement\r\n\r\nI agree here. This definitely does not prevent this becoming a BIP... but the reason why Dark Wallet's stealth address protocol and BIP47 never really caught on was the various scanning requirements increasing the implementation difficulty.\r\n\r\nNot saying that there's an \"easily implemented alternative\"... they all have their pros and cons from a wallet dev perspective.\r\n\r\nACK bffc84f",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1240067660",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1240131409,
      "node_id": "IC_kwDOAN28mc5J6udR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1240131409",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T02:06:37Z",
      "updated_at": "2022-09-08T02:18:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "> scanning requirement\r\n\r\nThe required data is the `OP_RETURN` payload, which can be outsourced in a privacy-preserving way to the service described in Appendix B. Such a service would publish bulk `OP_RETURN`s matching the format described here, and wallets would scan against them (ECDH + SHA256 for each) to find matches and discover the stealth addresses. The reference implementation function `detect_notification` helps here as well.\r\n\r\nSo this is a lighter weight alternative to Silent Payments (no full node required) and a more private approach than BIP47 (no reused address).",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1240131409",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1240479926,
      "node_id": "IC_kwDOAN28mc5J8Di2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1240479926",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T09:44:04Z",
      "updated_at": "2022-09-08T09:44:04Z",
      "author_association": "NONE",
      "body": ">The required data is the OP_RETURN payload, which can be outsourced in a privacy-preserving way [...] this is a lighter weight alternative to Silent Payments (no full node required)\r\n\r\nNote that [a very similar mitigation strategy (with a few more steps) exists for Silent Payments](https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8?permalink_comment_id=4113518#gistcomment-4113518). Once every e.g. month or so you'd perform a scan over wifi by receiving a list with one pubkey per as-of-yet unspent transaction (fully spent transactions can be pruned). Senders are expected to send an out-of-band notification of a payment (e.g. email), allowing you to detect the payment immediately, so the monthly scanning only serves as a backup strategy for failed notifications.\r\n\r\nWhile this is a theoretically sound light client implementation, the complexity involved makes me hesitant to make the strong claim that Silent Payments are suitable for light clients.\r\n\r\nIt's also important to note that these non-interactive key generation protocols (all of them) *only* make full sense for wallets that don't hand their xpub to a server (i.e. you'd need compact block filter support). If you *do* hand out the xpub, the server can do the scanning for you, or even better, they can [hand out fresh keys for you](https://gist.github.com/RubenSomsen/960ae7eb52b79cc826d5b6eaa61291f6).\r\n\r\n>this is a lighter weight alternative to Silent Payments (no full node required) and a more private approach than BIP47\r\n\r\nPerhaps, but you should also compare it to the [Prague protocol](https://gist.github.com/RubenSomsen/21c477c90c942acf45f8e8f5c1ad4fae), and this is where I think it compares less favorably. In comparison, the Prague protocol basically trades off the scanning complexity for outsourced notifications. You send a 32 byte key + a 4 byte (non-blinded) identifier to an outsourcer and they publish it on-chain on your behalf. This ensures the sender's inputs won't be correlated with the recipient. The recipient only needs to monitor keys that are associated with their identifier (no scanning).\r\n\r\nAnd [as I mentioned on bitcoin-dev](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020607.html), I think it should also be compared to [this protocol](https://gist.github.com/RobinLinus/4e7467abaf0a0f8a521d5b512dca4833) by @RobinLinus. See the bitcoin-dev post for my description of its benefits.",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1240479926",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7346003692,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAG12x7s",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7346003692",
      "actor": {
        "login": "RobinLinus",
        "id": 12780394,
        "node_id": "MDQ6VXNlcjEyNzgwMzk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12780394?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RobinLinus",
        "html_url": "https://github.com/RobinLinus",
        "followers_url": "https://api.github.com/users/RobinLinus/followers",
        "following_url": "https://api.github.com/users/RobinLinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RobinLinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RobinLinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RobinLinus/subscriptions",
        "organizations_url": "https://api.github.com/users/RobinLinus/orgs",
        "repos_url": "https://api.github.com/users/RobinLinus/repos",
        "events_url": "https://api.github.com/users/RobinLinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RobinLinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T09:44:04Z"
    },
    {
      "event": "subscribed",
      "id": 7346003704,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAG12x74",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7346003704",
      "actor": {
        "login": "RobinLinus",
        "id": 12780394,
        "node_id": "MDQ6VXNlcjEyNzgwMzk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12780394?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RobinLinus",
        "html_url": "https://github.com/RobinLinus",
        "followers_url": "https://api.github.com/users/RobinLinus/followers",
        "following_url": "https://api.github.com/users/RobinLinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RobinLinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RobinLinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RobinLinus/subscriptions",
        "organizations_url": "https://api.github.com/users/RobinLinus/orgs",
        "repos_url": "https://api.github.com/users/RobinLinus/repos",
        "events_url": "https://api.github.com/users/RobinLinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RobinLinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T09:44:04Z"
    },
    {
      "event": "commented",
      "id": 1240942509,
      "node_id": "IC_kwDOAN28mc5J90et",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1240942509",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T16:24:35Z",
      "updated_at": "2022-09-08T16:24:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It's also important to note that these non-interactive key generation protocols (all of them) _only_ make full sense for wallets that don't hand their xpub to a server (i.e. you'd need compact block filter support). If you _do_ hand out the xpub, the server can do the scanning for you, or even better, they can [hand out fresh keys for you](https://gist.github.com/RubenSomsen/960ae7eb52b79cc826d5b6eaa61291f6).\r\n\r\nAgreed. The assumption for all of these proposals is that we are attempting to have good privacy without having to run a server. Other proposals like Lightning Address and those that use the `.well-known` path on servers are able to achieve great privacy once a server enters into the mix.\r\n\r\n> Perhaps, but you should also compare it to the [Prague protocol](https://gist.github.com/RubenSomsen/21c477c90c942acf45f8e8f5c1ad4fae), and this is where I think it compares less favorably. In comparison, the Prague protocol basically trades off the scanning complexity for outsourced notifications. You send a 32 byte key + a 4 byte (non-blinded) identifier to an outsourcer and they publish it on-chain on your behalf. This ensures the sender's inputs won't be correlated with the recipient. The recipient only needs to monitor keys that are associated with their identifier (no scanning).\r\n\r\nSuch a notification service is also described in Appendix C, but it only helps to break the wallet clustering analysis around notification. This BIP blinds the recipient key, which is a strict privacy improvement over the Prague Protocol. Given that every light wallet will need to source `OP_RETURN` data from somewhere (anyone want to write a new block filter for that data - BIP159? 😄 ), a light scanning requirement on a few chunks of data each block should not be too much of a burden, especially for the privacy benefit.\r\n\r\n> And [as I mentioned on bitcoin-dev](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-June/020607.html), I think it should also be compared to [this protocol](https://gist.github.com/RobinLinus/4e7467abaf0a0f8a521d5b512dca4833) by @RobinLinus. See the bitcoin-dev post for my description of its benefits.\r\n\r\nThat is also an interesting idea, but it's not really a spec that can be scrutinized at the level of this BIP.\r\n\r\nOverall, I don't think we need to include an exhaustive comparison to all other proposals & protocols into this BIP in order to merge. That sort of analysis should be left up to mailing list posts or blog posts that help wallets decide which protocols to implement. Indeed, we are not required to amend previous BIPs in light of newer proposals.",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1240942509",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7349438279,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAG2D4dH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7349438279",
      "actor": {
        "login": "RobinLinus",
        "id": 12780394,
        "node_id": "MDQ6VXNlcjEyNzgwMzk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12780394?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RobinLinus",
        "html_url": "https://github.com/RobinLinus",
        "followers_url": "https://api.github.com/users/RobinLinus/followers",
        "following_url": "https://api.github.com/users/RobinLinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RobinLinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RobinLinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RobinLinus/subscriptions",
        "organizations_url": "https://api.github.com/users/RobinLinus/orgs",
        "repos_url": "https://api.github.com/users/RobinLinus/repos",
        "events_url": "https://api.github.com/users/RobinLinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RobinLinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T16:24:35Z"
    },
    {
      "event": "subscribed",
      "id": 7349438287,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAG2D4dP",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7349438287",
      "actor": {
        "login": "RobinLinus",
        "id": 12780394,
        "node_id": "MDQ6VXNlcjEyNzgwMzk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/12780394?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RobinLinus",
        "html_url": "https://github.com/RobinLinus",
        "followers_url": "https://api.github.com/users/RobinLinus/followers",
        "following_url": "https://api.github.com/users/RobinLinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RobinLinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RobinLinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RobinLinus/subscriptions",
        "organizations_url": "https://api.github.com/users/RobinLinus/orgs",
        "repos_url": "https://api.github.com/users/RobinLinus/repos",
        "events_url": "https://api.github.com/users/RobinLinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RobinLinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T16:24:35Z"
    },
    {
      "event": "commented",
      "id": 1242060816,
      "node_id": "IC_kwDOAN28mc5KCFgQ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1242060816",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T14:41:25Z",
      "updated_at": "2022-09-09T14:41:25Z",
      "author_association": "NONE",
      "body": ">strict privacy improvement over the Prague Protocol\r\n\r\nThis seems incorrect to me. The Prague protocol doesn't leak any meaningful information because the sender pubkey is completely fresh and unlinkable. All that is revealed is that some completely anonymous person *probably* intends to pay a known person (or pseudonym) at some point in the future, which is fairly harmless information. The end result is the same, but the Prague protocol replaces scanning with outsourcing.\r\n\r\nWhile this is not in the write-up, in Prague I even argued that it might be acceptable for the sender pubkey to be known as well (which could save more bytes) because anyone could have published the notification (i.e. Carol could link Alice and Bob without their consent), meaning there is full plausible deniability.\r\n\r\n>a new block filter for that data\r\n\r\nI'm not sure if you mean this BIP or the Prague protocol, but afaict in neither case a block filter is required. You just need the OP_RETURN data that is relevant to you, which is every sender/recipient key pair in the case of this BIP and only the sender keys of your specific recipient key in the case of the Prague protocol.\r\n\r\n>interesting idea, but it's not really a spec that can be scrutinized at the level of this BIP\r\n\r\nYes, in my opinion ideally it should have been scrutinized before this BIP was written (i.e. when I made the post on bitcoin-dev), but we're past that point now.\r\n\r\n>I don't think we need to include an exhaustive comparison to all other proposals & protocols into this BIP in order to merge\r\n\r\nI agree, it's not relevant to the question of whether this should be merged. I am merely responding to statements that seemed incomplete/inaccurate to me.",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1242060816",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1242139888,
      "node_id": "IC_kwDOAN28mc5KCYzw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1242139888",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T15:42:35Z",
      "updated_at": "2022-09-09T15:42:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "You're still happy to be a co-author on this BIP though @RubenSomsen despite the above disagreements? An alternative would be you are listed in the acknowledgements rather than as a co-author if you think this is heading in a direction where you disagree with some of what is included in the BIP. Ideally we'd avoid future disputes between co-authors on a BIP if we can.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1242139888",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7357495816,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAG2inoI",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7357495816",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T15:42:35Z"
    },
    {
      "event": "subscribed",
      "id": 7357495831,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAG2inoX",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7357495831",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T15:42:35Z"
    },
    {
      "event": "commented",
      "id": 1242246373,
      "node_id": "IC_kwDOAN28mc5KCyzl",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1242246373",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T17:18:58Z",
      "updated_at": "2022-09-09T17:18:58Z",
      "author_association": "NONE",
      "body": ">An alternative would be you are listed in the acknowledgements\r\n\r\nThat makes more sense to me as well. [On bitcoin-dev](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020813.html) I suggested that the authors of the Prague protocol (namely myself, @afilini, and @Kixunil) be acknowledged, since it seems to have served as an inspiration (as well as Silent Payments). In response [I was made co-author](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-August/020816.html).",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1242246373",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7358110394,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAG2k9q6",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7358110394",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T17:18:58Z"
    },
    {
      "event": "subscribed",
      "id": 7358110398,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAG2k9q-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7358110398",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T17:18:58Z"
    },
    {
      "event": "mentioned",
      "id": 7358110407,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAG2k9rH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7358110407",
      "actor": {
        "login": "afilini",
        "id": 3058409,
        "node_id": "MDQ6VXNlcjMwNTg0MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3058409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/afilini",
        "html_url": "https://github.com/afilini",
        "followers_url": "https://api.github.com/users/afilini/followers",
        "following_url": "https://api.github.com/users/afilini/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/afilini/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/afilini/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/afilini/subscriptions",
        "organizations_url": "https://api.github.com/users/afilini/orgs",
        "repos_url": "https://api.github.com/users/afilini/repos",
        "events_url": "https://api.github.com/users/afilini/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/afilini/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T17:18:58Z"
    },
    {
      "event": "subscribed",
      "id": 7358110418,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAG2k9rS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7358110418",
      "actor": {
        "login": "afilini",
        "id": 3058409,
        "node_id": "MDQ6VXNlcjMwNTg0MDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3058409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/afilini",
        "html_url": "https://github.com/afilini",
        "followers_url": "https://api.github.com/users/afilini/followers",
        "following_url": "https://api.github.com/users/afilini/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/afilini/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/afilini/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/afilini/subscriptions",
        "organizations_url": "https://api.github.com/users/afilini/orgs",
        "repos_url": "https://api.github.com/users/afilini/repos",
        "events_url": "https://api.github.com/users/afilini/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/afilini/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-09T17:18:58Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFhNGYwMzAwNDE0YjM0MTIxZjNiZTQ2NGY5OGU4YjdjYzVmNDhlZmE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/aa4f0300414b34121f3be464f98e8b7cc5f48efa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/aa4f0300414b34121f3be464f98e8b7cc5f48efa",
      "tree": {
        "sha": "c85947d2b5ee0e6708e1f93fdfe50a5e82da6a68",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/c85947d2b5ee0e6708e1f93fdfe50a5e82da6a68"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c85947d2b5ee0e6708e1f93fdfe50a5e82da6a68\nparent bffc84f63adfc6d47317424b33d9969f340962cc\nauthor Alfred Hodler <alfred_hodler@protonmail.com> 1662803676 +0000\ncommitter Alfred Hodler <alfred_hodler@protonmail.com> 1662803676 +0000\n\nUpdate authors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmMcXtwACgkQjezhForW\nz+Newg//RqtGX6LTV65JtxGYO6zyltVkCSDCzo+8gZAkXE7wCzMoV6CfyBhTYKXr\nMUZj9/axDS/IcPGuW2y9kXXSDRCS2H6U4FpYZQzmgL41pWHRWlAdsegJJGbEN+lU\nhgbY+UvyTqbSszBw8F3cflLTexAved4VYsNgwMr9+tyHsqZlMdR/E5g0So3F3WKY\no7P/VxV1cTGyh359N8SW8cWMsbx6TjYjviu1GVDZYQ8LSWH4yJZKUOghZCxUcLZO\nwYsAelyXtkEhCzgbRgtMdgnvsB09FZ6PDa8PIcPcI+JeavQ/Mb6R4i2Yis0V5gHk\n/zW+8RnVJxkwZ4W0AmUfX/NnY5QBMd1/eQc95bMYG4vi9vUju493o+hvNqMhEfw+\nkm1HC+TqU+K40Zk5qNu2jPYJz0bj5Qh62P/yJKQnP88OGtZtcQfNsKJ4lXf06asm\npwzRwx9S8gY9VzVFqgK+EzG6RMR9IvM0BFSaQoCKljH6O40aM/0RPuO06ryG3Cvj\nGTnlOmB15j8Cm2gpqg4SbVjoG1OWOD4a8yxjPOGmaXSBIPjVkgKNtM79arvfoGKi\nhZxEst8eiRwhzGy3PSkEdhOfFPP65yRuZ0E3E+HVcIO7+6Tp6Jlrw5id2hqzcQQ2\nACzsML9cv6ceVqgiB0/LoFbbn1uGvL/cB6Hb5b7mLGBunZe+abs=\n=kiA5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bffc84f63adfc6d47317424b33d9969f340962cc",
          "sha": "bffc84f63adfc6d47317424b33d9969f340962cc",
          "html_url": "https://github.com/bitcoin/bips/commit/bffc84f63adfc6d47317424b33d9969f340962cc"
        }
      ],
      "message": "Update authors",
      "committer": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-09-10T09:54:36Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-09-10T09:54:36Z"
      },
      "sha": "aa4f0300414b34121f3be464f98e8b7cc5f48efa"
    },
    {
      "event": "commented",
      "id": 1247534588,
      "node_id": "IC_kwDOAN28mc5KW938",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1247534588",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T03:26:56Z",
      "updated_at": "2022-09-15T03:26:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK aa4f030",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1247534588",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1248128458,
      "node_id": "IC_kwDOAN28mc5KZO3K",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1248128458",
      "actor": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T13:48:58Z",
      "updated_at": "2022-09-15T13:48:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr this BIP is completed, we have nothing to add to it.",
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1248128458",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "mentioned",
      "id": 7395201172,
      "node_id": "MEE_lADOAN28mc5PYPgazwAAAAG4ydCU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7395201172",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T13:48:59Z"
    },
    {
      "event": "subscribed",
      "id": 7395201211,
      "node_id": "SE_lADOAN28mc5PYPgazwAAAAG4ydC7",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7395201211",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T13:48:59Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDJjYWJmZTE2N2VmYzM1ZDZhNDUwMTk1OTYxNzI4NGY0MmM5MmE2NWQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2cabfe167efc35d6a4501959617284f42c92a65d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2cabfe167efc35d6a4501959617284f42c92a65d",
      "tree": {
        "sha": "f7c4996bccc1db639c71a9fd369b186137a85161",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f7c4996bccc1db639c71a9fd369b186137a85161"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f7c4996bccc1db639c71a9fd369b186137a85161\nparent aa4f0300414b34121f3be464f98e8b7cc5f48efa\nauthor Alfred Hodler <alfred_hodler@protonmail.com> 1663254090 +0000\ncommitter Alfred Hodler <alfred_hodler@protonmail.com> 1663254090 +0000\n\nUpdate BIP351 reference implementation link\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0b8K46HKsW4y4cbmjezhForWz+MFAmMjPkoACgkQjezhForW\nz+MKlg/9FQfoeDQLqeBANptaydmOG0UvPNHNJfqdj4YhkQHPRXuUSzx5cvrCRF5w\nNxJTJnDF8lG0nnF2kMeGeRrjjDBamXtNCvpTTjOE4b4U74Iwm4Xci3/ymhGrviOi\nb1W2jJmZFBqOtqA44IpLi9iLt1t9fq9JPSPV1linFJ7grUce9IX+XHIEYj1dL5YN\nL0rqKeFp8pEe1yK5vVzMLoGJ6g8DFgGIn+QnCGiBSaVPMCHKhOAnKvlRxvk6ifzB\nVdQpLLj0o6XFLLCbEO9+WHnJV9qZlNb4MUhoWCutGCams0SBbI8LbK00c7Q2JXJt\n+sNpJPaF+qvk68nDetbKf7ESiWfO7LvCaSBEvb+hptAsx0PPA5Pf5Ns4Qo7ENBVI\nU/4NJCxvHcWJjcAwf8zRTx3ixZKTnCNBqQutSR8NGGAURLp7QS9BQO2LxFeJS5lo\nOyAZr5NCLDa/a8zklM6Xq0N160wUgvt4G9gI5KFpr23q4Lu2X6lxrfC2lDrsl38k\nwAda/D0JK7Y717UVM1G1nQA2k0DQzU+p4MF58CY+HmbsNiGKY/CZP3ZmRF0ZN3Ft\n5jpuEMrTwraC6sPcIg+O9DRPse4UyIXuAcTmvnHFgzVo68tKViHeAHZWdItyg8E+\nNEeID83QM/ByUVzx6BInVmG49ew2SFpa54+Ezij4HtZpnSnrCvs=\n=mafo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/aa4f0300414b34121f3be464f98e8b7cc5f48efa",
          "sha": "aa4f0300414b34121f3be464f98e8b7cc5f48efa",
          "html_url": "https://github.com/bitcoin/bips/commit/aa4f0300414b34121f3be464f98e8b7cc5f48efa"
        }
      ],
      "message": "Update BIP351 reference implementation link",
      "committer": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-09-15T15:01:30Z"
      },
      "author": {
        "name": "Alfred Hodler",
        "email": "alfred_hodler@protonmail.com",
        "date": "2022-09-15T15:01:30Z"
      },
      "sha": "2cabfe167efc35d6a4501959617284f42c92a65d"
    },
    {
      "event": "merged",
      "id": 7490855397,
      "node_id": "ME_lADOAN28mc5PYPgazwAAAAG-fWHl",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7490855397",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cf420089a4ed10c50e3ad2834fe13e72e1af7177",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/cf420089a4ed10c50e3ad2834fe13e72e1af7177",
      "created_at": "2022-09-29T22:39:42Z"
    },
    {
      "event": "closed",
      "id": 7490855409,
      "node_id": "CE_lADOAN28mc5PYPgazwAAAAG-fWHx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7490855409",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:39:42Z"
    },
    {
      "event": "commented",
      "id": 1262899238,
      "node_id": "IC_kwDOAN28mc5LRlAm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1262899238",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:40:16Z",
      "updated_at": "2022-09-29T22:40:16Z",
      "author_association": "MEMBER",
      "body": "Merged.\r\n\r\nNevertheless, please do address the review comments. I would discourage implementation of anything with on-chain signalling.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1262899238",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1267134766,
      "node_id": "IC_kwDOAN28mc5LhvEu",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1267134766",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T14:55:04Z",
      "updated_at": "2022-10-04T14:55:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Nevertheless, please do address the review comments.\r\n\r\nReading back through the comments, it seems like the feedback that remains to be addressed is:\r\n\r\n- `What are the drawbacks of BOLT12, benefits of this over BOLT12, etc?`\r\n- Objection to using `OP_RETURN`\r\n- Some points from this [mailing list post](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-July/020813.html)",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1267134766",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1268573348,
      "node_id": "IC_kwDOAN28mc5LnOSk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1268573348",
      "actor": {
        "login": "Pantamis",
        "id": 13965245,
        "node_id": "MDQ6VXNlcjEzOTY1MjQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13965245?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Pantamis",
        "html_url": "https://github.com/Pantamis",
        "followers_url": "https://api.github.com/users/Pantamis/followers",
        "following_url": "https://api.github.com/users/Pantamis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Pantamis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Pantamis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Pantamis/subscriptions",
        "organizations_url": "https://api.github.com/users/Pantamis/orgs",
        "repos_url": "https://api.github.com/users/Pantamis/repos",
        "events_url": "https://api.github.com/users/Pantamis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Pantamis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T15:07:18Z",
      "updated_at": "2022-10-05T15:07:18Z",
      "author_association": "NONE",
      "body": "Is there something preventing Alice to add an output in the notification transaction so that she can pay Bob at the same time she notifies him ? (by sending her first payment to P + H(S|0)G in the notification transaction)\r\n\r\nI think it's worth specifying in the BIP whether this is possible or not.",
      "user": {
        "login": "Pantamis",
        "id": 13965245,
        "node_id": "MDQ6VXNlcjEzOTY1MjQ1",
        "avatar_url": "https://avatars.githubusercontent.com/u/13965245?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Pantamis",
        "html_url": "https://github.com/Pantamis",
        "followers_url": "https://api.github.com/users/Pantamis/followers",
        "following_url": "https://api.github.com/users/Pantamis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Pantamis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Pantamis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Pantamis/subscriptions",
        "organizations_url": "https://api.github.com/users/Pantamis/orgs",
        "repos_url": "https://api.github.com/users/Pantamis/repos",
        "events_url": "https://api.github.com/users/Pantamis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Pantamis/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1268573348",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    },
    {
      "event": "commented",
      "id": 1268988647,
      "node_id": "IC_kwDOAN28mc5Lozrn",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1268988647",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T21:19:36Z",
      "updated_at": "2022-10-05T21:19:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Is there something preventing Alice to add an output in the notification transaction so that she can pay Bob at the same time she notifies him ? (by sending her first payment to P + H(S|0)G in the notification transaction)\r\n> \r\n> I think it's worth specifying in the BIP whether this is possible or not.\r\n\r\nThere is nothing preventing this behavior, but I would recommend against it since it leaks information about the stealth address. I agree that an additional section on UTXO handling and notification would be helpful. Appendix C describes a notification service that would completely de-link the two parties (while trusting the third a bit).",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1349#issuecomment-1268988647",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1349"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947358785",
      "pull_request_review_id": 1074919531,
      "id": 947358785,
      "node_id": "PRRC_kwDOAN28mc44d4xB",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 96,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": null,
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n\r\nGleaning from the fact that BIP32 requires it and the payment code also requires it, most people will assume that this is a P2PKH of the compressed key.\r\n\r\nHowever, in past BIPs I have seen many people completely miss things that aren't explicitly spelled out for them, so I would feel better if \"compressed\" was somewhere around here (a note or something)",
      "created_at": "2022-08-17T00:53:48Z",
      "updated_at": "2022-08-17T00:53:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947358785",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947358785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947359599",
      "pull_request_review_id": 1074920550,
      "id": 947359599,
      "node_id": "PRRC_kwDOAN28mc44d49v",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 96,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947358785,
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe `P2PKH<sub>compressed</sub>`",
      "created_at": "2022-08-17T00:55:14Z",
      "updated_at": "2022-08-17T00:55:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947359599",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947359599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947489080",
      "pull_request_review_id": 1075090046,
      "id": 947489080,
      "node_id": "PRRC_kwDOAN28mc44eYk4",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about sharing a BOLT12?",
      "created_at": "2022-08-17T06:12:17Z",
      "updated_at": "2022-08-17T06:16:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947489080",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947489080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947489837",
      "pull_request_review_id": 1075090046,
      "id": 947489837,
      "node_id": "PRRC_kwDOAN28mc44eYwt",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 68,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can't it be derivation-neutral so non-BIP44 wallets can use it?",
      "created_at": "2022-08-17T06:13:40Z",
      "updated_at": "2022-08-17T06:16:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947489837",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947489837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947491049",
      "pull_request_review_id": 1075090046,
      "id": 947491049,
      "node_id": "PRRC_kwDOAN28mc44eZDp",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought part of the point of this BIP was to avoid such spam?\r\n\r\nWhy can't this stay out of band?",
      "created_at": "2022-08-17T06:15:51Z",
      "updated_at": "2022-08-17T06:16:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947491049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947491049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947759288",
      "pull_request_review_id": 1075477314,
      "id": 947759288,
      "node_id": "PRRC_kwDOAN28mc44fai4",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 96,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947358785,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is actually not possible to have an uncompressed key at any point because BIP32 is utilized, which works exclusively with compressed keys.\r\n\r\nBut I agree that we can make this more explicit in order to prevent confusion :+1: ",
      "created_at": "2022-08-17T10:29:17Z",
      "updated_at": "2022-08-17T10:29:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947759288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947759288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947760242",
      "pull_request_review_id": 1075478627,
      "id": 947760242,
      "node_id": "PRRC_kwDOAN28mc44faxy",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489080,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you expand on this?",
      "created_at": "2022-08-17T10:30:16Z",
      "updated_at": "2022-08-17T10:30:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947760242",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947760242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947764277",
      "pull_request_review_id": 1075484103,
      "id": 947764277,
      "node_id": "PRRC_kwDOAN28mc44fbw1",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 68,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489837,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They can still use it, they just have to follow the prescribed BIP32 derivation path. It's simply a matter of convention for the sake of wallet compatibility.\r\n\r\nWe could relax this requirement by stating that one can start the process with *any* extended private key, but then each wallet may end up implementing its own incompatible derivation path that other wallets won't know how to import (see Electrum derivation path mess).",
      "created_at": "2022-08-17T10:34:51Z",
      "updated_at": "2022-08-17T10:34:52Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947764277",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947764277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947770886",
      "pull_request_review_id": 1075492952,
      "id": 947770886,
      "node_id": "PRRC_kwDOAN28mc44fdYG",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947491049,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Notifications can indeed be performed out of band (the original BIP was trying to use Bitmessage), but then we lose the ability to deterministically restore a wallet from seed simply by rescanning the blockchain.\r\n\r\nSo if we were to get rid of OP_RETURNs, we'd either need a centralized directory of notifications that's vulnerable to takedowns, or each user would have to back up their set of notifications (losing it would mean losing funds forever).\r\n\r\nI tried my best to cut the size of these notifications from 80 bytes in BIP47 to half that amount.",
      "created_at": "2022-08-17T10:41:18Z",
      "updated_at": "2022-08-17T10:41:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r947770886",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/947770886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/948088635",
      "pull_request_review_id": 1075956544,
      "id": 948088635,
      "node_id": "PRRC_kwDOAN28mc44gq87",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 68,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489837,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wallets are not intended to be compatible between different software.",
      "created_at": "2022-08-17T15:21:14Z",
      "updated_at": "2022-08-17T15:21:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r948088635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/948088635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/948108161",
      "pull_request_review_id": 1075976800,
      "id": 948108161,
      "node_id": "PRRC_kwDOAN28mc44gvuB",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947491049,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This older draft didn't require notifications at all?\r\n\r\nhttps://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8",
      "created_at": "2022-08-17T15:29:59Z",
      "updated_at": "2022-08-17T15:29:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r948108161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/948108161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949473205",
      "pull_request_review_id": 1077828980,
      "id": 949473205,
      "node_id": "PRRC_kwDOAN28mc44l8-1",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947491049,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Silent Payments is a different standard by different people that I had no part in making. It requires a full node and doesn't work with light clients such as mobile wallets.\r\n\r\nPrivate Payments requires these notifications in order to be compatible with light wallets.",
      "created_at": "2022-08-18T18:36:09Z",
      "updated_at": "2022-08-18T18:36:09Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r949473205",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949473205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949476564",
      "pull_request_review_id": 1077831934,
      "id": 949476564,
      "node_id": "PRRC_kwDOAN28mc44l9zU",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 68,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489837,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The fact that BIP39 and BIP44/49/84 exist and are ubiquitous attests to the fact that wallets indeed try to keep a degree of compatibility.",
      "created_at": "2022-08-18T18:38:38Z",
      "updated_at": "2022-08-18T18:38:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r949476564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949476564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949566547",
      "pull_request_review_id": 1077963340,
      "id": 949566547,
      "node_id": "PRRC_kwDOAN28mc44mTxT",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 68,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489837,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They're not ubiquitous, and even wallets that do use them, do not claim to be compatible with others that do.",
      "created_at": "2022-08-18T20:26:55Z",
      "updated_at": "2022-08-18T20:26:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r949566547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949566547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949592997",
      "pull_request_review_id": 1077996501,
      "id": 949592997,
      "node_id": "PRRC_kwDOAN28mc44maOl",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 68,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489837,
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Survey of wallet derivation paths for reference: https://walletsrecovery.org/",
      "created_at": "2022-08-18T20:54:59Z",
      "updated_at": "2022-08-18T20:54:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r949592997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949592997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949598700",
      "pull_request_review_id": 1078003616,
      "id": 949598700,
      "node_id": "PRRC_kwDOAN28mc44mbns",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947491049,
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm showing `OP_RETURN` at 2.8 GB right now, which is 0.6% of the total chain size and is prunable if full nodes need that space.\r\n\r\nThe history of total `OP_RETURN` size looks like a very large user came online at one point but then stopped after a while.\r\n\r\n![nulldata-totals-graph](https://user-images.githubusercontent.com/1562417/185493625-6887bc74-2283-4882-b9e7-6763e6c45552.png)\r\n\r\nThis protocol does not need to continually place anchors into the chain like other protocols, so the usage should have much less impact.",
      "created_at": "2022-08-18T21:01:44Z",
      "updated_at": "2022-08-18T21:01:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r949598700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949598700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949620053",
      "pull_request_review_id": 1078034663,
      "id": 949620053,
      "node_id": "PRRC_kwDOAN28mc44mg1V",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947491049,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Bitcoin's blockchain is not for storing private backups, or distributing information between users.\r\n\r\nInstead of lazily abusing OP_RETURN, it would be preferable to have an external central directory, but there's no reason the directory couldn't be p2p either. It doesn't require any of the properties of the blockchain (double spend protection).",
      "created_at": "2022-08-18T21:31:43Z",
      "updated_at": "2022-08-18T21:31:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r949620053",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/949620053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950040998",
      "pull_request_review_id": 1078604476,
      "id": 950040998,
      "node_id": "PRRC_kwDOAN28mc44oHmm",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 96,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947358785,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This has been addressed.",
      "created_at": "2022-08-19T10:18:39Z",
      "updated_at": "2022-08-19T10:18:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r950040998",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950040998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950041374",
      "pull_request_review_id": 1078605023,
      "id": 950041374,
      "node_id": "PRRC_kwDOAN28mc44oHse",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947491049,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I expanded on out of band notifications.",
      "created_at": "2022-08-19T10:19:11Z",
      "updated_at": "2022-08-19T10:19:11Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r950041374",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950041374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950513557",
      "pull_request_review_id": 1079290695,
      "id": 950513557,
      "node_id": "PRRC_kwDOAN28mc44p6-V",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..35]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "187135c4f6e60b63bf025419c6eb117c0a1b18cd",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The \"payment code\" here is the address. Script templates and scripts are not addresses.",
      "created_at": "2022-08-19T19:44:09Z",
      "updated_at": "2022-08-19T19:44:09Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r950513557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950513557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950516979",
      "pull_request_review_id": 1079295581,
      "id": 950516979,
      "node_id": "PRRC_kwDOAN28mc44p7zz",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489080,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What are the drawbacks of BOLT12, benefits of this over BOLT12, etc?",
      "created_at": "2022-08-19T19:50:08Z",
      "updated_at": "2022-08-19T19:50:09Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r950516979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950516979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950519032",
      "pull_request_review_id": 1079298561,
      "id": 950519032,
      "node_id": "PRRC_kwDOAN28mc44p8T4",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..36]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).\n+\n+Currently defined flags:\n+\n+{| class=\"wikitable\"\n+! Address Type !! Flag !! Flag Value !! Ordinal Value\n+|-\n+| P2PKH || <code>1 << 0</code> || <code>0x0001</code> || 0\n+|-\n+| P2WPKH || <code>1 << 1</code> || <code>0x0002</code> || 1\n+|-\n+| P2TR || <code>1 << 2</code> || <code>0x0004</code> || 2\n+|}\n+\n+The remaining flags are reserved for future address types.\n+\n+While payment codes use 2-byte bitflag arrays, notifications use ordinal values in the form of a single byte.\n+\n+===Notifications===\n+\n+Notifications are performed by publishing transactions that contain a 40-byte <code>OP_RETURN</code> output. The value of the <code>OP_RETURN</code> is constructed using the following formula:",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 109,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947491049,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Far better to just require a full node, than to spam Bitcoin for the benefit of light wallets (ie, non-Bitcoin users).\r\n\r\n(FWIW, I would discourage implementation of this BIP it it keeps OP_RETURN abuse.)",
      "created_at": "2022-08-19T19:53:56Z",
      "updated_at": "2022-08-19T19:53:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r950519032",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/950519032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/951190232",
      "pull_request_review_id": 1080117136,
      "id": 951190232,
      "node_id": "PRRC_kwDOAN28mc44sgLY",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+\n+==Method==\n+\n+When Alice wants to start paying Bob in private, she imports his payment code into a compatible wallet. Her wallet extracts Bob's public key from the payment code and sends a notification transaction. If Bob finds a notification transaction addressed to himself, he imports Alice's public key contained therein and stores it. Bob then performs ECDH using Alice's public key and his own private key in order to calculate a common set of addresses to watch. Alice calculates the same set of addresses on her end and uses them to send coins to Bob. If Alice engages in coin control, both the initial notification transaction and subsequent payment transactions cannot be attributed to either party. Even if Alice uses coins that are already associated with her, chain analysis will identify her as a sender but Bob's privacy will remain entirely preserved.\n+\n+==Specification==\n+\n+===Definitions===\n+\n+* Alice: sender\n+* Bob: recipient\n+* Payment code: static string that Bob generates and shares with others so that he can receive payments\n+* ''P'': public key contained in Bob's payment code\n+* ''p'': private key associated with Bob's public key ''P''\n+* ''N'': extended public key used by Alice to derive child keys for each Bob she wants to transact with\n+* ''n'': private key associated with Alice's public key ''N''\n+* ''x'': Alice's secret recipient index, unique for each Bob\n+* ''N<sub>x</sub>'': child public key derived from ''N'' at index ''x'' (non-hardened)\n+* ''n<sub>x</sub>'': private key associated with ''N<sub>x</sub>''\n+* ''c'': Alice's transaction count toward Bob\n+* ''P<sub>c</sub>'': Bob's public key at index ''c''\n+* ''p<sub>c</sub>'': Bob's private key at index ''c''\n+* ''A<sub>c</sub>'': Bob's receive address at index ''c''\n+* ''H'': SHA256 hash function\n+* ''*'': EC multiplication\n+* ''+'': EC addition\n+* ''|'': string concatenation\n+* ''[a..b]'': string slicing (inclusive of ''a'', exclusive of ''b'')\n+\n+===Public Key Derivation Path===\n+\n+The derivation path for this BIP follows BIP44. The following BIP32 path levels are defined:\n+\n+<code>\n+m / purpose' / coin_type' / account'\n+</code>\n+\n+<code>purpose</code> is set to 999.\n+\n+''(p, P)'' and ''(n, N)'' are keys associated with the above path, depending on which side is performing the calculation.\n+\n+''N<sub>x</sub>'' keys are the direct non-hardened children of ''N''. For instance, the path of ''N<sub>0</sub>'' from ''N'' is ''m / 0''.\n+\n+===Payment Code Structure and Encoding===\n+\n+* bytes <code>[0..2]</code>: address type flags (2 bytes)\n+* bytes <code>[2..35]</code>: compressed public key P (33 bytes)\n+\n+Payment codes are encoded in bech32m and the human readable part is \"pay\" for mainnet and \"payt\" for testnet (all types), resulting in payment codes that look like \"pay1cqqq8d29g0a7m8ghmycqk5yv24mfh3xg8ptzqcn8xz6d2tjl8ccdnfkpjl7p84\".\n+\n+===Address Types===\n+\n+Address type flags determine which address types a payment code accepts. This is represented by big-endian ordered 16 bits. For instance, a hypothetical payment code that handles all address types will have all defined bits set to 1 (<code>0xffff</code>).",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "187135c4f6e60b63bf025419c6eb117c0a1b18cd",
      "in_reply_to_id": 950513557,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Strictly speaking you're correct, but \"address type\" is a commonly used and understood term. Calling \"p2wpkh\" an address type is easier to understand than calling it a \"script template\". Example from a prominent library: https://docs.rs/bitcoin/latest/bitcoin/util/address/enum.AddressType.html",
      "created_at": "2022-08-22T09:03:04Z",
      "updated_at": "2022-08-22T09:03:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r951190232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/951190232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/951256161",
      "pull_request_review_id": 1080208778,
      "id": 951256161,
      "node_id": "PRRC_kwDOAN28mc44swRh",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489080,
      "user": {
        "login": "alfred-hodler",
        "id": 100861939,
        "node_id": "U_kgDOBgMH8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/100861939?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfred-hodler",
        "html_url": "https://github.com/alfred-hodler",
        "followers_url": "https://api.github.com/users/alfred-hodler/followers",
        "following_url": "https://api.github.com/users/alfred-hodler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfred-hodler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfred-hodler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfred-hodler/subscriptions",
        "organizations_url": "https://api.github.com/users/alfred-hodler/orgs",
        "repos_url": "https://api.github.com/users/alfred-hodler/repos",
        "events_url": "https://api.github.com/users/alfred-hodler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfred-hodler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My understanding is that BOLT12 is specific to Lightning and lives one layer above this, hence I didn't consider it worthwhile to try to compare it with static addresses and payment codes, which all work on-chain.",
      "created_at": "2022-08-22T10:09:46Z",
      "updated_at": "2022-08-22T10:10:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r951256161",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/951256161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984072804",
      "pull_request_review_id": 1126069884,
      "id": 984072804,
      "node_id": "PRRC_kwDOAN28mc46p8Jk",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Private Payments\n+  Author: Alfred Hodler <alfred_hodler@protonmail.com>\n+          Clark Moody <clark@clarkmoody.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2022-07-10\n+  License: MIT\n+</pre>\n+\n+In the following text the BIP number is provisionally set to 999 for technical purposes until a BIP number is assigned.\n+\n+==Abstract==\n+\n+This BIP makes it possible for two parties to transact using addresses that only they can calculate. This is done using exclusively on-chain methods and in a manner that minimizes blockchain footprint. Receiving parties can share their payment codes publicly without a loss of privacy, as every sender will calculate a unique set of addresses for each payment code.\n+\n+==Motivation==\n+\n+A recipient that wishes to receive funds privately has several options. Each has tradeoffs in terms of chain analysis potential, recoverability, and wallet complexity.\n+\n+'''Sharing a static address''' works well enough for one-time payments between two parties as long as the address is shared through a private channel. It does not work well for recurring payments because address reuse leads to a loss of privacy. Using this method for donations exacerbates the problem since the address will serve as a focal point for data collection and analysis. Wallets must not reissue the same address to multiple recipients.\n+\n+'''Sharing a BIP32 extended public key''' works for recurring payments between two parties only. The same key cannot be shared to any other party without leaking the chain of payments. Furthermore, an extended public key does not say anything about address types and makes it possible for a sender to send to a script that a recipient cannot spend from. Alternate [https://github.com/satoshilabs/slips/blob/master/slip-0132.md version bytes] have been proposed to specify address types, but wallet adoption is limited.\n+\n+'''Sharing a BIP380 descriptor containing an extended public key''' solves the address type issue from sharing a raw BIP32 extended key. The drawback is that descriptor support is not widespread, especially in mobile wallets.\n+\n+'''Using a payment server''' works in the case of recipients that have the resources to set up and maintain a payment server that will generate a fresh address for each payment. These are usually businesses and the method is usually out of reach for the average user. The centralized server is vulnerable to takedown remotely and physically.\n+\n+'''Sharing a BIP47 payment code''' addresses most of the above shortcomings. However, it introduces the following problems:\n+\n+* The BIP uses a notification mechanism that relies on publicly known per-recipient notification addresses. If Alice wants to send funds to Bob, she has to use the same notification address that everyone else uses to notify Bob. If Alice is not careful with coin selection, i.e. ensuring that her notification UTXO is not linked to her, she will publicly expose herself as someone who is trying to send funds to Bob and their relationship becomes permanently visible on the blockchain.\n+\n+* The BIP does not say anything about address types. Receiving wallets therefore have to watch all address types that can be created from a single public key. Even then, a sender could send to a script that a receipient cannot spend from.\n+",
      "path": "bip-alfredhodler-privatepayments.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "2cabfe167efc35d6a4501959617284f42c92a65d",
      "original_commit_id": "c053962759475be1e0564eca836166e2fff062eb",
      "in_reply_to_id": 947489080,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps it is debatable in the case of static addresses, but payment codes are definitely a layer above the chain.\r\n\r\nRegardless, they serve the same goals of the BIP, so IMO should be addressed here.",
      "created_at": "2022-09-29T22:37:00Z",
      "updated_at": "2022-09-29T22:37:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1349#discussion_r984072804",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984072804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1349"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    }
  ]
}