{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/2017",
    "id": 2946101330,
    "node_id": "PR_kwDOAN28mc6vmfBS",
    "html_url": "https://github.com/bitcoin/bips/pull/2017",
    "diff_url": "https://github.com/bitcoin/bips/pull/2017.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/2017.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/2017",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/2017/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/2017/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/2017/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/3c718237072c107ced8c3531a487354fbdae55df",
    "number": 2017,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Reduced Data Temporary Softfork",
    "user": {
      "login": "dathonohm",
      "id": 239863417,
      "node_id": "U_kgDODkwGeQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dathonohm",
      "html_url": "https://github.com/dathonohm",
      "followers_url": "https://api.github.com/users/dathonohm/followers",
      "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
      "organizations_url": "https://api.github.com/users/dathonohm/orgs",
      "repos_url": "https://api.github.com/users/dathonohm/repos",
      "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dathonohm/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Due to Bitcoin Core v30 gaining in popularity, it has become necessary to move forward on [@luke-jr's ML proposal](https://gnusha.org/pi/bitcoindev/aN_u-xB2ogn2D834@erisian.com.au/T/#mb71350c5dfb119efeb92c5ee738b6c8225bf15b6) to temporarily limit arbitrary data at the consensus level, which so far has 3 weeks with no objections.\r\n\r\nImplementation for the \"proactive deployment\" is under construction, while the \"reactive deployment\" is feature complete but lacks tests.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2025-10-24T21:28:07Z",
    "updated_at": "2025-10-26T01:28:56Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merged": false,
    "merge_commit_sha": "fb979b4bfc36048a54f2eefbc77f0d0ab6e6cbe6",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "dathonohm:reduced-data",
      "ref": "reduced-data",
      "sha": "3c718237072c107ced8c3531a487354fbdae55df",
      "user": {
        "login": "dathonohm",
        "id": 239863417,
        "node_id": "U_kgDODkwGeQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dathonohm",
        "html_url": "https://github.com/dathonohm",
        "followers_url": "https://api.github.com/users/dathonohm/followers",
        "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
        "organizations_url": "https://api.github.com/users/dathonohm/orgs",
        "repos_url": "https://api.github.com/users/dathonohm/repos",
        "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dathonohm/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1082252356,
        "node_id": "R_kgDOQIHcRA",
        "name": "bips",
        "full_name": "dathonohm/bips",
        "owner": {
          "login": "dathonohm",
          "id": 239863417,
          "node_id": "U_kgDODkwGeQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dathonohm",
          "html_url": "https://github.com/dathonohm",
          "followers_url": "https://api.github.com/users/dathonohm/followers",
          "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
          "organizations_url": "https://api.github.com/users/dathonohm/orgs",
          "repos_url": "https://api.github.com/users/dathonohm/repos",
          "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dathonohm/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/dathonohm/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/dathonohm/bips",
        "archive_url": "https://api.github.com/repos/dathonohm/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dathonohm/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dathonohm/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dathonohm/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dathonohm/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dathonohm/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dathonohm/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dathonohm/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dathonohm/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dathonohm/bips/contributors",
        "deployments_url": "https://api.github.com/repos/dathonohm/bips/deployments",
        "downloads_url": "https://api.github.com/repos/dathonohm/bips/downloads",
        "events_url": "https://api.github.com/repos/dathonohm/bips/events",
        "forks_url": "https://api.github.com/repos/dathonohm/bips/forks",
        "git_commits_url": "https://api.github.com/repos/dathonohm/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dathonohm/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dathonohm/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dathonohm/bips.git",
        "issue_comment_url": "https://api.github.com/repos/dathonohm/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dathonohm/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dathonohm/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dathonohm/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dathonohm/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dathonohm/bips/languages",
        "merges_url": "https://api.github.com/repos/dathonohm/bips/merges",
        "milestones_url": "https://api.github.com/repos/dathonohm/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dathonohm/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dathonohm/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dathonohm/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:dathonohm/bips.git",
        "stargazers_url": "https://api.github.com/repos/dathonohm/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/dathonohm/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dathonohm/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/dathonohm/bips/subscription",
        "tags_url": "https://api.github.com/repos/dathonohm/bips/tags",
        "teams_url": "https://api.github.com/repos/dathonohm/bips/teams",
        "trees_url": "https://api.github.com/repos/dathonohm/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dathonohm/bips.git",
        "hooks_url": "https://api.github.com/repos/dathonohm/bips/hooks",
        "svn_url": "https://github.com/dathonohm/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 16699,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-25T02:58:32Z",
        "created_at": "2025-10-24T00:55:03Z",
        "updated_at": "2025-10-24T00:55:04Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "fd7fe26a7ea279439d2633b4ce833b8b48112b4c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5795,
        "stargazers_count": 10288,
        "watchers_count": 10288,
        "size": 16690,
        "default_branch": "master",
        "open_issues_count": 58,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-24T11:23:31Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-10-25T16:28:36Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 437,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 6,
    "comments": 3
  },
  "events": [
    {
      "event": "labeled",
      "id": 20494586478,
      "node_id": "LE_lADOAN28mc7TqOo1zwAAAATFkpJu",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/20494586478",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-24T22:14:32Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 3379308659,
      "node_id": "PRR_kwDOAN28mc7JbChz",
      "url": null,
      "actor": null,
      "commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-25T01:32:20Z",
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/2017#pullrequestreview-3379308659",
      "submitted_at": "2025-10-25T01:32:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDNjNzE4MjM3MDcyYzEwN2NlZDhjMzUzMWE0ODczNTRmYmRhZTU1ZGY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3c718237072c107ced8c3531a487354fbdae55df",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/3c718237072c107ced8c3531a487354fbdae55df",
      "tree": {
        "sha": "922e01980529d350a57c769961421272680da1e8",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/922e01980529d350a57c769961421272680da1e8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fd7fe26a7ea279439d2633b4ce833b8b48112b4c",
          "sha": "fd7fe26a7ea279439d2633b4ce833b8b48112b4c",
          "html_url": "https://github.com/bitcoin/bips/commit/fd7fe26a7ea279439d2633b4ce833b8b48112b4c"
        }
      ],
      "message": "Reduced Data Temporary Softfork",
      "committer": {
        "name": "Dathon Ohm",
        "email": "dathonohm@proton.me",
        "date": "2025-10-25T02:57:38Z"
      },
      "author": {
        "name": "Dathon Ohm",
        "email": "dathonohm@proton.me",
        "date": "2025-10-24T20:36:58Z"
      },
      "sha": "3c718237072c107ced8c3531a487354fbdae55df"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 20496984764,
      "node_id": "HRFPE_lADOAN28mc7TqOo1zwAAAATFtyq8",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/20496984764",
      "actor": {
        "login": "dathonohm",
        "id": 239863417,
        "node_id": "U_kgDODkwGeQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dathonohm",
        "html_url": "https://github.com/dathonohm",
        "followers_url": "https://api.github.com/users/dathonohm/followers",
        "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
        "organizations_url": "https://api.github.com/users/dathonohm/orgs",
        "repos_url": "https://api.github.com/users/dathonohm/repos",
        "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dathonohm/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3c718237072c107ced8c3531a487354fbdae55df",
      "commit_url": "https://api.github.com/repos/dathonohm/bips/commits/3c718237072c107ced8c3531a487354fbdae55df",
      "created_at": "2025-10-25T02:58:33Z"
    },
    {
      "event": "commented",
      "id": 3446685330,
      "node_id": "IC_kwDOAN28mc7NcD6S",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3446685330",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-25T13:08:03Z",
      "updated_at": "2025-10-25T13:08:03Z",
      "author_association": "NONE",
      "body": "I suggest you add an FAQ item for “why block 987424“. If the intent is to have it be a year out, the height might actually move during discussion, and right now its just a magic number in the document. ",
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/2017#issuecomment-3446685330",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/2017"
    },
    {
      "event": "commented",
      "id": 3446830606,
      "node_id": "IC_kwDOAN28mc7NcnYO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3446830606",
      "actor": {
        "login": "dathonohm",
        "id": 239863417,
        "node_id": "U_kgDODkwGeQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dathonohm",
        "html_url": "https://github.com/dathonohm",
        "followers_url": "https://api.github.com/users/dathonohm/followers",
        "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
        "organizations_url": "https://api.github.com/users/dathonohm/orgs",
        "repos_url": "https://api.github.com/users/dathonohm/repos",
        "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dathonohm/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-25T15:16:33Z",
      "updated_at": "2025-10-25T15:16:33Z",
      "author_association": "NONE",
      "body": "@rot13maxi see the deployment section\r\n\r\n<img width=\"1288\" height=\"494\" alt=\"Screenshot 2025-10-25 at 09 14 55\" src=\"https://github.com/user-attachments/assets/0fb99835-ccfb-4484-af49-4cde5ed3c55c\" />\r\n",
      "user": {
        "login": "dathonohm",
        "id": 239863417,
        "node_id": "U_kgDODkwGeQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dathonohm",
        "html_url": "https://github.com/dathonohm",
        "followers_url": "https://api.github.com/users/dathonohm/followers",
        "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
        "organizations_url": "https://api.github.com/users/dathonohm/orgs",
        "repos_url": "https://api.github.com/users/dathonohm/repos",
        "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dathonohm/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/2017#issuecomment-3446830606",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/2017"
    },
    {
      "event": "mentioned",
      "id": 20503077141,
      "node_id": "MEE_lADOAN28mc7TqOo1zwAAAATGFCEV",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/20503077141",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-25T15:16:35Z"
    },
    {
      "event": "subscribed",
      "id": 20503077148,
      "node_id": "SE_lADOAN28mc7TqOo1zwAAAATGFCEc",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/20503077148",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-25T15:16:35Z"
    },
    {
      "event": "commented",
      "id": 3447036717,
      "node_id": "IC_kwDOAN28mc7NdZst",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3447036717",
      "actor": {
        "login": "portlandhodl",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/portlandhodl",
        "html_url": "https://github.com/portlandhodl",
        "followers_url": "https://api.github.com/users/portlandhodl/followers",
        "following_url": "https://api.github.com/users/portlandhodl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/portlandhodl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/portlandhodl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/portlandhodl/subscriptions",
        "organizations_url": "https://api.github.com/users/portlandhodl/orgs",
        "repos_url": "https://api.github.com/users/portlandhodl/repos",
        "events_url": "https://api.github.com/users/portlandhodl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/portlandhodl/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-25T18:29:44Z",
      "updated_at": "2025-10-25T18:29:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "There is opportunity to also discuss the effect on DoS blocks and the scope of legacy script as a DoS vector.",
      "user": {
        "login": "portlandhodl",
        "id": 3104223,
        "node_id": "MDQ6VXNlcjMxMDQyMjM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/portlandhodl",
        "html_url": "https://github.com/portlandhodl",
        "followers_url": "https://api.github.com/users/portlandhodl/followers",
        "following_url": "https://api.github.com/users/portlandhodl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/portlandhodl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/portlandhodl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/portlandhodl/subscriptions",
        "organizations_url": "https://api.github.com/users/portlandhodl/orgs",
        "repos_url": "https://api.github.com/users/portlandhodl/repos",
        "events_url": "https://api.github.com/users/portlandhodl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/portlandhodl/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/2017#issuecomment-3447036717",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/2017"
    },
    {
      "event": "reviewed",
      "id": 3380379661,
      "node_id": "PRR_kwDOAN28mc7JfIAN",
      "url": null,
      "actor": null,
      "commit_id": "3c718237072c107ced8c3531a487354fbdae55df",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-10-26T01:28:56Z",
      "author_association": "NONE",
      "body": "BIP 444",
      "user": {
        "login": "danielsam",
        "id": 6363142,
        "node_id": "MDQ6VXNlcjYzNjMxNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6363142?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielsam",
        "html_url": "https://github.com/danielsam",
        "followers_url": "https://api.github.com/users/danielsam/followers",
        "following_url": "https://api.github.com/users/danielsam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielsam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielsam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielsam/subscriptions",
        "organizations_url": "https://api.github.com/users/danielsam/orgs",
        "repos_url": "https://api.github.com/users/danielsam/repos",
        "events_url": "https://api.github.com/users/danielsam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielsam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/2017#pullrequestreview-3380379661",
      "submitted_at": "2025-10-26T01:28:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462333228",
      "pull_request_review_id": 3379308659,
      "id": 2462333228,
      "node_id": "PRRC_kwDOAN28mc6SxDks",
      "diff_hunk": "@@ -0,0 +1,437 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: Reduced Data Temporary Softfork\n+  Author: Dathon Ohm <dathonohm+bip@proton.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-10-24\n+  License: BSD-3-Clause\n+  Post-History: https://gnusha.org/pi/bitcoindev/aN_u-xB2ogn2D834@erisian.com.au/T/#mb71350c5dfb119efeb92c5ee738b6c8225bf15b6\n+</pre>\n+\n+==Abstract==\n+\n+Data fields are size-limited at the consensus level temporarily.\n+\n+==Copyright==\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+Blocks with a height from (TBD) until and including 987424 are checked with these additional rules:\n+\n+# New output scriptPubKeys exceeding 34 bytes are invalid, unless the first opcode is OP_RETURN, in which case up to 83 bytes are valid.\n+# OP_PUSHDATA* with payloads larger than 256 bytes are invalid, except for the redeemScript push in BIP16 scriptSigs.\n+# Spending undefined witness (or Tapleaf) versions (ie, not Witness v0/BIP 141 nor Taproot/BIP 341) is invalid.\n+# Witness stacks with a Taproot annex are invalid.\n+# Taproot control blocks larger than 257 bytes (a merkle tree with 128 script leaves) are invalid.\n+# Tapscripts including OP_SUCCESS* opcodes anywhere (even unexecuted) are invalid.\n+# Tapscripts executing the OP_IF or OP_NOTIF instruction (regardless of result) are invalid.\n+\n+==Motivation==\n+\n+The recent release of Bitcoin Core 30 presents a severe threat to Bitcoin's viability.\n+By formally standardizing rules for large-scale data storage (ie, 100kB OP_RETURNs), it proposes to redefine this behavior from an abuse of the system into a supported use case.\n+The true danger lies not merely in the release existing, but in its adoption.\n+The adoption of this release, even if by a minority of users, risks establishing this harmful redefinition as a new de facto standard for the entire network.\n+\n+This official sanction creates an immediate and severe threat.\n+The threat here is distinct from general spam or economic costs, which are typically handled with policy and the fee market.\n+It allows a malicious actor to mine a single transaction with illegal or universally abhorrent content and credibly claim that Bitcoin itself is a system for distributing it, rather than a system that was merely abused.\n+This directly threatens the ability and/or willingness of common people to run fully validating nodes due to the resulting legal and moral risks.\n+\n+A core principle of Bitcoin is \"don't trust, verify\".\n+The nature of Bitcoin requires users to run fully validating nodes, necessarily involving downloading, storing, and transmitting every transaction, even if they are fake/spam \"transactions\".\n+If the blockchain contains content that is illegal to possess or distribute, node operators are forced to choose between violating the law (or their conscience) or shutting down their node.\n+This unacceptable dilemma directly undermines the incentive to validate, leading to inevitable centralization and posing an existential threat to Bitcoin's security model.\n+\n+By enforcing these new rules, this softfork allows the community to reject the standardization of data storage at the consensus level, closing the gap being abused.\n+\n+Some of the rules may be severe limitations, especially on future protocol upgrades, so this softfork is explicitly temporary and self-expiring if no further action is taken to renew/extend them.\n+This also buys time to refine the new rules into less restrictive forms.\n+\n+==Rationale==\n+\n+===Specification nuance===\n+\n+'''Why limit scriptPubKeys to 34 bytes?'''\n+\n+scriptPubKeys must be stored indefinitely in quick-access memory (often RAM) by all fully validating nodes.\n+It generally cannot be pruned.\n+It is also a direct cost to the sender rather than the receiver. For these reasons, modern usage is all 34 bytes or smaller in practice:\n+actual spending conditions have been moved to the witness, and the scriptPubKey simply commits to them in advance with a hash.\n+\n+'''What about OP_RETURN? Why not get rid of it entirely?'''\n+\n+OP_RETURN outputs are provably unspendable, and nodes do not need to store it in the UTXO set.\n+Historically, up to 83 bytes have been tolerated only to avoid unprovably unspendable spam in other output scripts, and no legitimate uses have ever been found.\n+With the advent of pay-to-contract and Taproot, it is now also possible to commit to external data in the Taptree, making even hypothetical use of OP_RETURN deprecated.\n+However, to avoid breaking legacy protocols that still include such outputs, this proposal allows these outputs.\n+\n+'''Why limit other data to 256/257 bytes?'''\n+\n+With modern compression, it is plausible to represent objectionable images (often illegal to even possess) in as few as 300-400 bytes.\n+\n+256 bytes (2048 bits) is also more than sufficient for reasonably large numbers that might be potentially needed in legitimate cryptography, reinforcing Bitcoin's intended purpose as a financial network.\n+\n+'''Won't spammers just spread their data over multiple fields?'''\n+\n+While it is impossible to fully prevent steganography, limiting data sizes ensures such abuses are non-contiguous and obfuscated within another intended meaning (script code, structure, etc).\n+As far as Bitcoin is concerned, the data has some meaning other than the spammers' misinterpretation, and any external code to \"reassemble\" the unintended data is responsible for producing it\n+(it is possible to write code that transforms *any* data into any other data - what matters is that Bitcoin has a well-defined meaning that is distinct from the unsupported one).\n+This proposal also sends a clear message that data storage abuses in general (legal or otherwise) are unwelcome rather than sanctioned or supported.\n+\n+'''Why is there an exception for BIP16 redeemScripts?'''\n+\n+The content of redeemScripts are another script, which is then executed.\n+Its contents are then also subject to the same OP_PUSHDATA* restrictions.\n+Restricting it is not only unnecessary, but would reduce the ability to make use of the intended script capabilities, and could impact legitimate real-world usage.\n+\n+'''Why make spending undefined witness/Tapleaf versions invalid?'''\n+\n+Since they are undefined, witness stacks spending these versions are completely unlimited currently to allow maximum flexibility in future upgrades.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why not make it invalid to send to undefined witness versions?'''\n+\n+This would require the senders of transactions to check the witness version prior to sending, and require additional coordination when a new witness version is intended to become used.\n+\n+'''Why not allow spending undefined witness versions with an empty witness?'''\n+\n+This has no use case, but would require nodes to track these UTXOs in case of potential spending.\n+By making spending invalid, it is possible for nodes to store them instead in slow memory not needed until this softfork expires.\n+(With proper planning, it also makes it possible for a future softfork making use of these witness versions to allow users to receive with an upgraded wallet even prior to activation of the upgrade.)\n+\n+'''Why make the Taproot annex invalid?'''\n+\n+The annex is currently undefined data with unlimited size.\n+It exists for future upgrades, but has no legitimate usage today.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why is the Taproot control block limited to 257 bytes instead of 256?'''\n+\n+The control block is a series of hashes proving the Tapscript is part of the Taptree, plus a single byte with the leaf version and parity bit.\n+See BIP 341 for details.\n+\n+'''Why make OP_SUCCESS* invalid?'''\n+\n+OP_SUCCESS* is meant for future upgrades. See above regarding undefined witness versions.\n+\n+'''Why make OP_IF/OP_NOTIF invalid?'''\n+\n+OP_IF/OP_NOTIF originated in pre-Taproot Bitcoin script language as a way to execute different subscripts based on a condition.\n+With Taproot, the conditions can instead be evaluated off-chain, revealing only the intended verification execution path.\n+Furthermore, when the conditions are met, the intent is that the keypath spend path should be used instead, avoiding publishing any scripts at all.\n+\n+OP_IF is not only redundant for Tapscript, it is also commonly abused today to inject spam that gets skipped at execution.\n+While it is impossible to fully prevent steganography, closing this gap eliminates one common abuse today basically for free, and sends a message that such abuses are not welcome.\n+\n+'''Why is the proposal so simple?'''\n+\n+A more complicated proposal could be envisioned that better balances innovation with safety, but implementing this properly would require extensive refactoring and review, delaying deployment when there is already no time to wait.\n+The rules proposed herein have been intentionally kept very simple to minimise review time and avoid unnecessary risks of overlooking unexpected side effects.\n+\n+'''Why is this softfork temporary?'''\n+\n+The impact of these restrictions would severely constrain future upgrades, potentially forcing them to be designed as a hardfork instead of a softfork.\n+Some restrictions are also not ideal, but an improved limit would be more complicated to develop and test -\n+by deploying these simpler restrictions now, we avoid making the perfect the enemy of the good enough, while still allowing for upgrading the limits to better variants in the future.\n+\n+Over the next year, interested developers can implement and propose a longer-term solution to address the needs of the protocol without the tradeoffs or blunt/simplified changes.\n+\n+===Tradeoffs===\n+\n+'''Are there any tradeoffs?'''\n+\n+Yes:\n+\n+# Limiting Taproot control blocks to 257 bytes directly constrains the size of the on-chain, consensus-enforced script tree. This could complicate or possibly even impede advanced smart contracting like BitVM, which relies on a large number of executable scripts. In the worst case scenario, these use cases may just need to wait until this softfork expires. As they are still in early development, testnet and sidechains should be sufficient for the next year while a more scalable rule is implemented.\n+# Upgrade hooks are not available for other softforks. As softforks need at least a year to activate, this shouldn't be a practical issue.\n+# In some hypothetical cases, OP_IF could require less data than additional tapscripts. If such a use case is discovered, this simply increases the fee until the softfork expires.\n+\n+'''Isn't the limit on Taproot control blocks too restrictive?'''\n+\n+Possibly.\n+The previous limit allows for 340,282,366,920,938,463,463,374,607,431,768,211,456 scripts, which is obviously way more than anyone could ever need.\n+257 bytes allows for 128 scripts, which is plenty for ordinary human-made scenarios.\n+However, it may prove too limiting for advanced off-chain functionality such as used by BitVM.\n+This is an unfortunate tradeoff that (if this softfork is accepted) we have chosen to accept in the short-term for the immediate benefits of this softfork.\n+The intent is to relax this restriction later, when this softfork expires, with a new approach allowing larger trees, yet to be developed.\n+\n+Do note that non-script (or non-Bitcoin-L1 scripts) usage of the taptree does not have this same limitation:\n+just a single of the 128 leaves could very well be an extension of the merkle tree to greater depths than enforced by this softfork.\n+\n+'''Aren't Taptrees intended to be unbalanced?'''\n+\n+While it is true that optimal use of Taptrees may often be unbalanced to favour more-likely-executed scripts, this is optional, and the full capacity (in this case, 128 scripts) can still be used if needed.\n+Additionally, in ideal/ordinary circumstances, neither the Taptree nor a merkle branch through it is ever published:\n+all counterparties ought to evaluate the conditions for spending off-chain and rebroadcast the transaction using the keypath spending.\n+Tapscripts are intended to only be used when one or more parties is unreachable or uncooperative; their existence mainly only serves to deter intentional non-cooperation by making it pointless.\n+\n+===Activation===\n+\n+Due to the unpredictable nature of the crisis this BIP addresses, we should move to limit on-chain data as quickly and orderly as possible, while being ready to react immediately in case illegal data appears in the chain before the new rules activate.\n+Thus this BIP presents two parallel methods of activation: the first proactive, the other reactive.\n+The proactive method involves a flag day activation of the rules, some time in early 2026. If no troublesome content appears in the chain, this BIP will activate smoothly via this proactive method.\n+If, however, some content appears in the chain that causes significant risks, we can fall back to the reactive method, which is a retroactive chain reorganization to invalidate the offending block (and any subsequent blocks) while immediately activating the new rules.\n+The mere existence of this BIP likely reduces the threat, since it demonstrates that, although Bitcoin Core 30 appears to sanction data storage as an official feature of the Bitcoin network, the network has not yet arrived at a consensus regarding this stance since there is an active opposition.\n+\n+===Proactive Deployment===\n+\n+TODO\n+\n+===Reactive Deployment===",
      "path": "bip-????.mediawiki",
      "position": 187,
      "original_position": 187,
      "commit_id": "3c718237072c107ced8c3531a487354fbdae55df",
      "original_commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's not clear to me why have these two headers, Proactive Deployment and Reactive Deployment, both here under Activation and below under Deployment.",
      "created_at": "2025-10-25T01:28:51Z",
      "updated_at": "2025-10-25T01:32:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/2017#discussion_r2462333228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462333228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462333412",
      "pull_request_review_id": 3379308659,
      "id": 2462333412,
      "node_id": "PRRC_kwDOAN28mc6SxDnk",
      "diff_hunk": "@@ -0,0 +1,437 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: Reduced Data Temporary Softfork\n+  Author: Dathon Ohm <dathonohm+bip@proton.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-10-24\n+  License: BSD-3-Clause\n+  Post-History: https://gnusha.org/pi/bitcoindev/aN_u-xB2ogn2D834@erisian.com.au/T/#mb71350c5dfb119efeb92c5ee738b6c8225bf15b6\n+</pre>\n+\n+==Abstract==\n+\n+Data fields are size-limited at the consensus level temporarily.\n+\n+==Copyright==\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+Blocks with a height from (TBD) until and including 987424 are checked with these additional rules:\n+\n+# New output scriptPubKeys exceeding 34 bytes are invalid, unless the first opcode is OP_RETURN, in which case up to 83 bytes are valid.\n+# OP_PUSHDATA* with payloads larger than 256 bytes are invalid, except for the redeemScript push in BIP16 scriptSigs.\n+# Spending undefined witness (or Tapleaf) versions (ie, not Witness v0/BIP 141 nor Taproot/BIP 341) is invalid.\n+# Witness stacks with a Taproot annex are invalid.\n+# Taproot control blocks larger than 257 bytes (a merkle tree with 128 script leaves) are invalid.\n+# Tapscripts including OP_SUCCESS* opcodes anywhere (even unexecuted) are invalid.\n+# Tapscripts executing the OP_IF or OP_NOTIF instruction (regardless of result) are invalid.\n+\n+==Motivation==\n+\n+The recent release of Bitcoin Core 30 presents a severe threat to Bitcoin's viability.\n+By formally standardizing rules for large-scale data storage (ie, 100kB OP_RETURNs), it proposes to redefine this behavior from an abuse of the system into a supported use case.\n+The true danger lies not merely in the release existing, but in its adoption.\n+The adoption of this release, even if by a minority of users, risks establishing this harmful redefinition as a new de facto standard for the entire network.\n+\n+This official sanction creates an immediate and severe threat.\n+The threat here is distinct from general spam or economic costs, which are typically handled with policy and the fee market.\n+It allows a malicious actor to mine a single transaction with illegal or universally abhorrent content and credibly claim that Bitcoin itself is a system for distributing it, rather than a system that was merely abused.\n+This directly threatens the ability and/or willingness of common people to run fully validating nodes due to the resulting legal and moral risks.\n+\n+A core principle of Bitcoin is \"don't trust, verify\".\n+The nature of Bitcoin requires users to run fully validating nodes, necessarily involving downloading, storing, and transmitting every transaction, even if they are fake/spam \"transactions\".\n+If the blockchain contains content that is illegal to possess or distribute, node operators are forced to choose between violating the law (or their conscience) or shutting down their node.\n+This unacceptable dilemma directly undermines the incentive to validate, leading to inevitable centralization and posing an existential threat to Bitcoin's security model.\n+\n+By enforcing these new rules, this softfork allows the community to reject the standardization of data storage at the consensus level, closing the gap being abused.\n+\n+Some of the rules may be severe limitations, especially on future protocol upgrades, so this softfork is explicitly temporary and self-expiring if no further action is taken to renew/extend them.\n+This also buys time to refine the new rules into less restrictive forms.\n+\n+==Rationale==\n+\n+===Specification nuance===\n+\n+'''Why limit scriptPubKeys to 34 bytes?'''\n+\n+scriptPubKeys must be stored indefinitely in quick-access memory (often RAM) by all fully validating nodes.\n+It generally cannot be pruned.\n+It is also a direct cost to the sender rather than the receiver. For these reasons, modern usage is all 34 bytes or smaller in practice:\n+actual spending conditions have been moved to the witness, and the scriptPubKey simply commits to them in advance with a hash.\n+\n+'''What about OP_RETURN? Why not get rid of it entirely?'''\n+\n+OP_RETURN outputs are provably unspendable, and nodes do not need to store it in the UTXO set.\n+Historically, up to 83 bytes have been tolerated only to avoid unprovably unspendable spam in other output scripts, and no legitimate uses have ever been found.\n+With the advent of pay-to-contract and Taproot, it is now also possible to commit to external data in the Taptree, making even hypothetical use of OP_RETURN deprecated.\n+However, to avoid breaking legacy protocols that still include such outputs, this proposal allows these outputs.\n+\n+'''Why limit other data to 256/257 bytes?'''\n+\n+With modern compression, it is plausible to represent objectionable images (often illegal to even possess) in as few as 300-400 bytes.\n+\n+256 bytes (2048 bits) is also more than sufficient for reasonably large numbers that might be potentially needed in legitimate cryptography, reinforcing Bitcoin's intended purpose as a financial network.\n+\n+'''Won't spammers just spread their data over multiple fields?'''\n+\n+While it is impossible to fully prevent steganography, limiting data sizes ensures such abuses are non-contiguous and obfuscated within another intended meaning (script code, structure, etc).\n+As far as Bitcoin is concerned, the data has some meaning other than the spammers' misinterpretation, and any external code to \"reassemble\" the unintended data is responsible for producing it\n+(it is possible to write code that transforms *any* data into any other data - what matters is that Bitcoin has a well-defined meaning that is distinct from the unsupported one).\n+This proposal also sends a clear message that data storage abuses in general (legal or otherwise) are unwelcome rather than sanctioned or supported.\n+\n+'''Why is there an exception for BIP16 redeemScripts?'''\n+\n+The content of redeemScripts are another script, which is then executed.\n+Its contents are then also subject to the same OP_PUSHDATA* restrictions.\n+Restricting it is not only unnecessary, but would reduce the ability to make use of the intended script capabilities, and could impact legitimate real-world usage.\n+\n+'''Why make spending undefined witness/Tapleaf versions invalid?'''\n+\n+Since they are undefined, witness stacks spending these versions are completely unlimited currently to allow maximum flexibility in future upgrades.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why not make it invalid to send to undefined witness versions?'''\n+\n+This would require the senders of transactions to check the witness version prior to sending, and require additional coordination when a new witness version is intended to become used.\n+\n+'''Why not allow spending undefined witness versions with an empty witness?'''\n+\n+This has no use case, but would require nodes to track these UTXOs in case of potential spending.\n+By making spending invalid, it is possible for nodes to store them instead in slow memory not needed until this softfork expires.\n+(With proper planning, it also makes it possible for a future softfork making use of these witness versions to allow users to receive with an upgraded wallet even prior to activation of the upgrade.)\n+\n+'''Why make the Taproot annex invalid?'''\n+\n+The annex is currently undefined data with unlimited size.\n+It exists for future upgrades, but has no legitimate usage today.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why is the Taproot control block limited to 257 bytes instead of 256?'''\n+\n+The control block is a series of hashes proving the Tapscript is part of the Taptree, plus a single byte with the leaf version and parity bit.\n+See BIP 341 for details.\n+\n+'''Why make OP_SUCCESS* invalid?'''\n+\n+OP_SUCCESS* is meant for future upgrades. See above regarding undefined witness versions.\n+\n+'''Why make OP_IF/OP_NOTIF invalid?'''\n+\n+OP_IF/OP_NOTIF originated in pre-Taproot Bitcoin script language as a way to execute different subscripts based on a condition.\n+With Taproot, the conditions can instead be evaluated off-chain, revealing only the intended verification execution path.\n+Furthermore, when the conditions are met, the intent is that the keypath spend path should be used instead, avoiding publishing any scripts at all.\n+\n+OP_IF is not only redundant for Tapscript, it is also commonly abused today to inject spam that gets skipped at execution.\n+While it is impossible to fully prevent steganography, closing this gap eliminates one common abuse today basically for free, and sends a message that such abuses are not welcome.\n+\n+'''Why is the proposal so simple?'''\n+\n+A more complicated proposal could be envisioned that better balances innovation with safety, but implementing this properly would require extensive refactoring and review, delaying deployment when there is already no time to wait.\n+The rules proposed herein have been intentionally kept very simple to minimise review time and avoid unnecessary risks of overlooking unexpected side effects.\n+\n+'''Why is this softfork temporary?'''\n+\n+The impact of these restrictions would severely constrain future upgrades, potentially forcing them to be designed as a hardfork instead of a softfork.\n+Some restrictions are also not ideal, but an improved limit would be more complicated to develop and test -\n+by deploying these simpler restrictions now, we avoid making the perfect the enemy of the good enough, while still allowing for upgrading the limits to better variants in the future.\n+\n+Over the next year, interested developers can implement and propose a longer-term solution to address the needs of the protocol without the tradeoffs or blunt/simplified changes.\n+\n+===Tradeoffs===\n+\n+'''Are there any tradeoffs?'''\n+\n+Yes:\n+\n+# Limiting Taproot control blocks to 257 bytes directly constrains the size of the on-chain, consensus-enforced script tree. This could complicate or possibly even impede advanced smart contracting like BitVM, which relies on a large number of executable scripts. In the worst case scenario, these use cases may just need to wait until this softfork expires. As they are still in early development, testnet and sidechains should be sufficient for the next year while a more scalable rule is implemented.\n+# Upgrade hooks are not available for other softforks. As softforks need at least a year to activate, this shouldn't be a practical issue.\n+# In some hypothetical cases, OP_IF could require less data than additional tapscripts. If such a use case is discovered, this simply increases the fee until the softfork expires.\n+\n+'''Isn't the limit on Taproot control blocks too restrictive?'''\n+\n+Possibly.\n+The previous limit allows for 340,282,366,920,938,463,463,374,607,431,768,211,456 scripts, which is obviously way more than anyone could ever need.\n+257 bytes allows for 128 scripts, which is plenty for ordinary human-made scenarios.\n+However, it may prove too limiting for advanced off-chain functionality such as used by BitVM.\n+This is an unfortunate tradeoff that (if this softfork is accepted) we have chosen to accept in the short-term for the immediate benefits of this softfork.\n+The intent is to relax this restriction later, when this softfork expires, with a new approach allowing larger trees, yet to be developed.\n+\n+Do note that non-script (or non-Bitcoin-L1 scripts) usage of the taptree does not have this same limitation:\n+just a single of the 128 leaves could very well be an extension of the merkle tree to greater depths than enforced by this softfork.\n+\n+'''Aren't Taptrees intended to be unbalanced?'''\n+\n+While it is true that optimal use of Taptrees may often be unbalanced to favour more-likely-executed scripts, this is optional, and the full capacity (in this case, 128 scripts) can still be used if needed.\n+Additionally, in ideal/ordinary circumstances, neither the Taptree nor a merkle branch through it is ever published:\n+all counterparties ought to evaluate the conditions for spending off-chain and rebroadcast the transaction using the keypath spending.\n+Tapscripts are intended to only be used when one or more parties is unreachable or uncooperative; their existence mainly only serves to deter intentional non-cooperation by making it pointless.\n+\n+===Activation===\n+\n+Due to the unpredictable nature of the crisis this BIP addresses, we should move to limit on-chain data as quickly and orderly as possible, while being ready to react immediately in case illegal data appears in the chain before the new rules activate.\n+Thus this BIP presents two parallel methods of activation: the first proactive, the other reactive.\n+The proactive method involves a flag day activation of the rules, some time in early 2026. If no troublesome content appears in the chain, this BIP will activate smoothly via this proactive method.\n+If, however, some content appears in the chain that causes significant risks, we can fall back to the reactive method, which is a retroactive chain reorganization to invalidate the offending block (and any subsequent blocks) while immediately activating the new rules.\n+The mere existence of this BIP likely reduces the threat, since it demonstrates that, although Bitcoin Core 30 appears to sanction data storage as an official feature of the Bitcoin network, the network has not yet arrived at a consensus regarding this stance since there is an active opposition.\n+\n+===Proactive Deployment===\n+\n+TODO\n+\n+===Reactive Deployment===\n+\n+'''Doesn't this proposal activate too soon?'''\n+\n+In short, yes, it does.\n+Unfortunately, due to the release of Bitcoin Core 30 endorsing large data storage and actual illegal content being mined in proposed block <TODO:hash>, the network as it stands is already contaminated.\n+This is not a preemptive measure, but an emergency response to an immediate crisis.\n+Therefore, there is no time for lengthy signaling periods or careful deployment; the only remaining option is immediate and retroactive activation to mitigate the harm.\n+\n+However, because this is a softfork, old nodes will continue to follow the blockchain so long as it attains significant enough hashrate.\n+Even if non-upgraded miners continue to mine (now) invalid blocks, old nodes will continually replace them with valid blocks every time the valid chain overtakes the invalid one.\n+Since this results in an incoherent consensus system, unusable for actual currency, and loss of rewards for the lagging miners, they should quickly adapt and bring the softfork to near 100% compatibility quickly.\n+\n+The true risk is that for an initial period of time, nearly all nodes will cease to function as fully validating nodes.\n+This can only be mitigated by encouraging nodes to upgrade quickly, possibly by backporting the softfork to old and/or niche node software as necessary.\n+Toward this end, the actual changes in this softfork have been kept very simple.\n+\n+'''Does this cause a chain split?'''\n+\n+Generally, softforks do not cause chain splits.\n+However, since we are rejecting an already-mined block proposal, this softfork does indeed cause a chain split.\n+In fact, that is an important part of its purpose:\n+to keep the illegal content storage in block <TODO:hash> out of Bitcoin.\n+\n+To achieve this, the softfork must activate retroactively, invalidating that block and all its descendants.\n+The prior segment of the blockchain including this block will eventually (hopefully quickly) be discarded entirely, as the network adopts the softfork proposed herein.\n+\n+'''What is the expected impact on exchanges and other businesses, and how can they prepare?'''\n+\n+Depending on how quickly miners adopt this softfork, there is potential for significant disruption in the short-term.\n+Any econonomic node that continues to process deposits or payments should consider the risk of reversals or double-spending until the situation has fully resolved.\n+\n+The standard, industry-wide security procedure for any chain split event is to temporarily disable deposits and withdrawls until a single, stable chain has been decisively established with significant proof-of-work.",
      "path": "bip-????.mediawiki",
      "position": 1,
      "original_position": 219,
      "commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "original_commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nThe standard, industry-wide security procedure for any chain split event is to temporarily disable deposits and withdrawals until a single, stable chain has been decisively established with significant proof-of-work.\r\n```\r\n\r\nEdit: will update the spelling linter for the other two false negatives.",
      "created_at": "2025-10-25T01:29:18Z",
      "updated_at": "2025-10-25T01:34:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/2017#discussion_r2462333412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462333412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462333897",
      "pull_request_review_id": 3379308659,
      "id": 2462333897,
      "node_id": "PRRC_kwDOAN28mc6SxDvJ",
      "diff_hunk": "@@ -0,0 +1,437 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: Reduced Data Temporary Softfork\n+  Author: Dathon Ohm <dathonohm+bip@proton.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-10-24\n+  License: BSD-3-Clause\n+  Post-History: https://gnusha.org/pi/bitcoindev/aN_u-xB2ogn2D834@erisian.com.au/T/#mb71350c5dfb119efeb92c5ee738b6c8225bf15b6\n+</pre>\n+\n+==Abstract==\n+\n+Data fields are size-limited at the consensus level temporarily.",
      "path": "bip-????.mediawiki",
      "position": 1,
      "original_position": 17,
      "commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "original_commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\nTemporarily limit the size of data fields at the consensus level.\n```",
      "created_at": "2025-10-25T01:30:56Z",
      "updated_at": "2025-10-25T01:32:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/2017#discussion_r2462333897",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462333897"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462338803",
      "pull_request_review_id": 3379336405,
      "id": 2462338803,
      "node_id": "PRRC_kwDOAN28mc6SxE7z",
      "diff_hunk": "@@ -0,0 +1,437 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: Reduced Data Temporary Softfork\n+  Author: Dathon Ohm <dathonohm+bip@proton.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-10-24\n+  License: BSD-3-Clause\n+  Post-History: https://gnusha.org/pi/bitcoindev/aN_u-xB2ogn2D834@erisian.com.au/T/#mb71350c5dfb119efeb92c5ee738b6c8225bf15b6\n+</pre>\n+\n+==Abstract==\n+\n+Data fields are size-limited at the consensus level temporarily.\n+\n+==Copyright==\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+Blocks with a height from (TBD) until and including 987424 are checked with these additional rules:\n+\n+# New output scriptPubKeys exceeding 34 bytes are invalid, unless the first opcode is OP_RETURN, in which case up to 83 bytes are valid.\n+# OP_PUSHDATA* with payloads larger than 256 bytes are invalid, except for the redeemScript push in BIP16 scriptSigs.\n+# Spending undefined witness (or Tapleaf) versions (ie, not Witness v0/BIP 141 nor Taproot/BIP 341) is invalid.\n+# Witness stacks with a Taproot annex are invalid.\n+# Taproot control blocks larger than 257 bytes (a merkle tree with 128 script leaves) are invalid.\n+# Tapscripts including OP_SUCCESS* opcodes anywhere (even unexecuted) are invalid.\n+# Tapscripts executing the OP_IF or OP_NOTIF instruction (regardless of result) are invalid.\n+\n+==Motivation==\n+\n+The recent release of Bitcoin Core 30 presents a severe threat to Bitcoin's viability.\n+By formally standardizing rules for large-scale data storage (ie, 100kB OP_RETURNs), it proposes to redefine this behavior from an abuse of the system into a supported use case.\n+The true danger lies not merely in the release existing, but in its adoption.\n+The adoption of this release, even if by a minority of users, risks establishing this harmful redefinition as a new de facto standard for the entire network.\n+\n+This official sanction creates an immediate and severe threat.\n+The threat here is distinct from general spam or economic costs, which are typically handled with policy and the fee market.\n+It allows a malicious actor to mine a single transaction with illegal or universally abhorrent content and credibly claim that Bitcoin itself is a system for distributing it, rather than a system that was merely abused.\n+This directly threatens the ability and/or willingness of common people to run fully validating nodes due to the resulting legal and moral risks.\n+\n+A core principle of Bitcoin is \"don't trust, verify\".\n+The nature of Bitcoin requires users to run fully validating nodes, necessarily involving downloading, storing, and transmitting every transaction, even if they are fake/spam \"transactions\".\n+If the blockchain contains content that is illegal to possess or distribute, node operators are forced to choose between violating the law (or their conscience) or shutting down their node.\n+This unacceptable dilemma directly undermines the incentive to validate, leading to inevitable centralization and posing an existential threat to Bitcoin's security model.\n+\n+By enforcing these new rules, this softfork allows the community to reject the standardization of data storage at the consensus level, closing the gap being abused.\n+\n+Some of the rules may be severe limitations, especially on future protocol upgrades, so this softfork is explicitly temporary and self-expiring if no further action is taken to renew/extend them.\n+This also buys time to refine the new rules into less restrictive forms.\n+\n+==Rationale==\n+\n+===Specification nuance===\n+\n+'''Why limit scriptPubKeys to 34 bytes?'''\n+\n+scriptPubKeys must be stored indefinitely in quick-access memory (often RAM) by all fully validating nodes.\n+It generally cannot be pruned.\n+It is also a direct cost to the sender rather than the receiver. For these reasons, modern usage is all 34 bytes or smaller in practice:\n+actual spending conditions have been moved to the witness, and the scriptPubKey simply commits to them in advance with a hash.\n+\n+'''What about OP_RETURN? Why not get rid of it entirely?'''\n+\n+OP_RETURN outputs are provably unspendable, and nodes do not need to store it in the UTXO set.\n+Historically, up to 83 bytes have been tolerated only to avoid unprovably unspendable spam in other output scripts, and no legitimate uses have ever been found.\n+With the advent of pay-to-contract and Taproot, it is now also possible to commit to external data in the Taptree, making even hypothetical use of OP_RETURN deprecated.\n+However, to avoid breaking legacy protocols that still include such outputs, this proposal allows these outputs.\n+\n+'''Why limit other data to 256/257 bytes?'''\n+\n+With modern compression, it is plausible to represent objectionable images (often illegal to even possess) in as few as 300-400 bytes.\n+\n+256 bytes (2048 bits) is also more than sufficient for reasonably large numbers that might be potentially needed in legitimate cryptography, reinforcing Bitcoin's intended purpose as a financial network.\n+\n+'''Won't spammers just spread their data over multiple fields?'''\n+\n+While it is impossible to fully prevent steganography, limiting data sizes ensures such abuses are non-contiguous and obfuscated within another intended meaning (script code, structure, etc).\n+As far as Bitcoin is concerned, the data has some meaning other than the spammers' misinterpretation, and any external code to \"reassemble\" the unintended data is responsible for producing it\n+(it is possible to write code that transforms *any* data into any other data - what matters is that Bitcoin has a well-defined meaning that is distinct from the unsupported one).\n+This proposal also sends a clear message that data storage abuses in general (legal or otherwise) are unwelcome rather than sanctioned or supported.\n+\n+'''Why is there an exception for BIP16 redeemScripts?'''\n+\n+The content of redeemScripts are another script, which is then executed.\n+Its contents are then also subject to the same OP_PUSHDATA* restrictions.\n+Restricting it is not only unnecessary, but would reduce the ability to make use of the intended script capabilities, and could impact legitimate real-world usage.\n+\n+'''Why make spending undefined witness/Tapleaf versions invalid?'''\n+\n+Since they are undefined, witness stacks spending these versions are completely unlimited currently to allow maximum flexibility in future upgrades.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why not make it invalid to send to undefined witness versions?'''\n+\n+This would require the senders of transactions to check the witness version prior to sending, and require additional coordination when a new witness version is intended to become used.\n+\n+'''Why not allow spending undefined witness versions with an empty witness?'''\n+\n+This has no use case, but would require nodes to track these UTXOs in case of potential spending.\n+By making spending invalid, it is possible for nodes to store them instead in slow memory not needed until this softfork expires.\n+(With proper planning, it also makes it possible for a future softfork making use of these witness versions to allow users to receive with an upgraded wallet even prior to activation of the upgrade.)\n+\n+'''Why make the Taproot annex invalid?'''\n+\n+The annex is currently undefined data with unlimited size.\n+It exists for future upgrades, but has no legitimate usage today.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why is the Taproot control block limited to 257 bytes instead of 256?'''\n+\n+The control block is a series of hashes proving the Tapscript is part of the Taptree, plus a single byte with the leaf version and parity bit.\n+See BIP 341 for details.\n+\n+'''Why make OP_SUCCESS* invalid?'''\n+\n+OP_SUCCESS* is meant for future upgrades. See above regarding undefined witness versions.\n+\n+'''Why make OP_IF/OP_NOTIF invalid?'''\n+\n+OP_IF/OP_NOTIF originated in pre-Taproot Bitcoin script language as a way to execute different subscripts based on a condition.\n+With Taproot, the conditions can instead be evaluated off-chain, revealing only the intended verification execution path.\n+Furthermore, when the conditions are met, the intent is that the keypath spend path should be used instead, avoiding publishing any scripts at all.\n+\n+OP_IF is not only redundant for Tapscript, it is also commonly abused today to inject spam that gets skipped at execution.\n+While it is impossible to fully prevent steganography, closing this gap eliminates one common abuse today basically for free, and sends a message that such abuses are not welcome.\n+\n+'''Why is the proposal so simple?'''\n+\n+A more complicated proposal could be envisioned that better balances innovation with safety, but implementing this properly would require extensive refactoring and review, delaying deployment when there is already no time to wait.\n+The rules proposed herein have been intentionally kept very simple to minimise review time and avoid unnecessary risks of overlooking unexpected side effects.\n+\n+'''Why is this softfork temporary?'''\n+\n+The impact of these restrictions would severely constrain future upgrades, potentially forcing them to be designed as a hardfork instead of a softfork.\n+Some restrictions are also not ideal, but an improved limit would be more complicated to develop and test -\n+by deploying these simpler restrictions now, we avoid making the perfect the enemy of the good enough, while still allowing for upgrading the limits to better variants in the future.\n+\n+Over the next year, interested developers can implement and propose a longer-term solution to address the needs of the protocol without the tradeoffs or blunt/simplified changes.\n+\n+===Tradeoffs===\n+\n+'''Are there any tradeoffs?'''\n+\n+Yes:\n+\n+# Limiting Taproot control blocks to 257 bytes directly constrains the size of the on-chain, consensus-enforced script tree. This could complicate or possibly even impede advanced smart contracting like BitVM, which relies on a large number of executable scripts. In the worst case scenario, these use cases may just need to wait until this softfork expires. As they are still in early development, testnet and sidechains should be sufficient for the next year while a more scalable rule is implemented.\n+# Upgrade hooks are not available for other softforks. As softforks need at least a year to activate, this shouldn't be a practical issue.\n+# In some hypothetical cases, OP_IF could require less data than additional tapscripts. If such a use case is discovered, this simply increases the fee until the softfork expires.\n+\n+'''Isn't the limit on Taproot control blocks too restrictive?'''\n+\n+Possibly.\n+The previous limit allows for 340,282,366,920,938,463,463,374,607,431,768,211,456 scripts, which is obviously way more than anyone could ever need.\n+257 bytes allows for 128 scripts, which is plenty for ordinary human-made scenarios.\n+However, it may prove too limiting for advanced off-chain functionality such as used by BitVM.\n+This is an unfortunate tradeoff that (if this softfork is accepted) we have chosen to accept in the short-term for the immediate benefits of this softfork.\n+The intent is to relax this restriction later, when this softfork expires, with a new approach allowing larger trees, yet to be developed.\n+\n+Do note that non-script (or non-Bitcoin-L1 scripts) usage of the taptree does not have this same limitation:\n+just a single of the 128 leaves could very well be an extension of the merkle tree to greater depths than enforced by this softfork.\n+\n+'''Aren't Taptrees intended to be unbalanced?'''\n+\n+While it is true that optimal use of Taptrees may often be unbalanced to favour more-likely-executed scripts, this is optional, and the full capacity (in this case, 128 scripts) can still be used if needed.\n+Additionally, in ideal/ordinary circumstances, neither the Taptree nor a merkle branch through it is ever published:\n+all counterparties ought to evaluate the conditions for spending off-chain and rebroadcast the transaction using the keypath spending.\n+Tapscripts are intended to only be used when one or more parties is unreachable or uncooperative; their existence mainly only serves to deter intentional non-cooperation by making it pointless.\n+\n+===Activation===\n+\n+Due to the unpredictable nature of the crisis this BIP addresses, we should move to limit on-chain data as quickly and orderly as possible, while being ready to react immediately in case illegal data appears in the chain before the new rules activate.\n+Thus this BIP presents two parallel methods of activation: the first proactive, the other reactive.\n+The proactive method involves a flag day activation of the rules, some time in early 2026. If no troublesome content appears in the chain, this BIP will activate smoothly via this proactive method.\n+If, however, some content appears in the chain that causes significant risks, we can fall back to the reactive method, which is a retroactive chain reorganization to invalidate the offending block (and any subsequent blocks) while immediately activating the new rules.\n+The mere existence of this BIP likely reduces the threat, since it demonstrates that, although Bitcoin Core 30 appears to sanction data storage as an official feature of the Bitcoin network, the network has not yet arrived at a consensus regarding this stance since there is an active opposition.\n+\n+===Proactive Deployment===\n+\n+TODO\n+\n+===Reactive Deployment===",
      "path": "bip-????.mediawiki",
      "position": 187,
      "original_position": 187,
      "commit_id": "3c718237072c107ced8c3531a487354fbdae55df",
      "original_commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "in_reply_to_id": 2462333228,
      "user": {
        "login": "dathonohm",
        "id": 239863417,
        "node_id": "U_kgDODkwGeQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dathonohm",
        "html_url": "https://github.com/dathonohm",
        "followers_url": "https://api.github.com/users/dathonohm/followers",
        "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
        "organizations_url": "https://api.github.com/users/dathonohm/orgs",
        "repos_url": "https://api.github.com/users/dathonohm/repos",
        "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dathonohm/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There is a \"rationale\" section here, which is more of an FAQ, and a \"deployment\" section below, which seems customary on softfork bips. I could consolidate these if you like.",
      "created_at": "2025-10-25T01:44:11Z",
      "updated_at": "2025-10-25T01:44:12Z",
      "html_url": "https://github.com/bitcoin/bips/pull/2017#discussion_r2462338803",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462338803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462375379",
      "pull_request_review_id": 3379390551,
      "id": 2462375379,
      "node_id": "PRRC_kwDOAN28mc6SxN3T",
      "diff_hunk": "@@ -0,0 +1,437 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: Reduced Data Temporary Softfork\n+  Author: Dathon Ohm <dathonohm+bip@proton.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-10-24\n+  License: BSD-3-Clause\n+  Post-History: https://gnusha.org/pi/bitcoindev/aN_u-xB2ogn2D834@erisian.com.au/T/#mb71350c5dfb119efeb92c5ee738b6c8225bf15b6\n+</pre>\n+\n+==Abstract==\n+\n+Data fields are size-limited at the consensus level temporarily.",
      "path": "bip-????.mediawiki",
      "position": 1,
      "original_position": 17,
      "commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "original_commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "in_reply_to_id": 2462333897,
      "user": {
        "login": "dathonohm",
        "id": 239863417,
        "node_id": "U_kgDODkwGeQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dathonohm",
        "html_url": "https://github.com/dathonohm",
        "followers_url": "https://api.github.com/users/dathonohm/followers",
        "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
        "organizations_url": "https://api.github.com/users/dathonohm/orgs",
        "repos_url": "https://api.github.com/users/dathonohm/repos",
        "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dathonohm/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-10-25T02:59:01Z",
      "updated_at": "2025-10-25T02:59:02Z",
      "html_url": "https://github.com/bitcoin/bips/pull/2017#discussion_r2462375379",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462375379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462375462",
      "pull_request_review_id": 3379390632,
      "id": 2462375462,
      "node_id": "PRRC_kwDOAN28mc6SxN4m",
      "diff_hunk": "@@ -0,0 +1,437 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: Reduced Data Temporary Softfork\n+  Author: Dathon Ohm <dathonohm+bip@proton.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-10-24\n+  License: BSD-3-Clause\n+  Post-History: https://gnusha.org/pi/bitcoindev/aN_u-xB2ogn2D834@erisian.com.au/T/#mb71350c5dfb119efeb92c5ee738b6c8225bf15b6\n+</pre>\n+\n+==Abstract==\n+\n+Data fields are size-limited at the consensus level temporarily.\n+\n+==Copyright==\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+Blocks with a height from (TBD) until and including 987424 are checked with these additional rules:\n+\n+# New output scriptPubKeys exceeding 34 bytes are invalid, unless the first opcode is OP_RETURN, in which case up to 83 bytes are valid.\n+# OP_PUSHDATA* with payloads larger than 256 bytes are invalid, except for the redeemScript push in BIP16 scriptSigs.\n+# Spending undefined witness (or Tapleaf) versions (ie, not Witness v0/BIP 141 nor Taproot/BIP 341) is invalid.\n+# Witness stacks with a Taproot annex are invalid.\n+# Taproot control blocks larger than 257 bytes (a merkle tree with 128 script leaves) are invalid.\n+# Tapscripts including OP_SUCCESS* opcodes anywhere (even unexecuted) are invalid.\n+# Tapscripts executing the OP_IF or OP_NOTIF instruction (regardless of result) are invalid.\n+\n+==Motivation==\n+\n+The recent release of Bitcoin Core 30 presents a severe threat to Bitcoin's viability.\n+By formally standardizing rules for large-scale data storage (ie, 100kB OP_RETURNs), it proposes to redefine this behavior from an abuse of the system into a supported use case.\n+The true danger lies not merely in the release existing, but in its adoption.\n+The adoption of this release, even if by a minority of users, risks establishing this harmful redefinition as a new de facto standard for the entire network.\n+\n+This official sanction creates an immediate and severe threat.\n+The threat here is distinct from general spam or economic costs, which are typically handled with policy and the fee market.\n+It allows a malicious actor to mine a single transaction with illegal or universally abhorrent content and credibly claim that Bitcoin itself is a system for distributing it, rather than a system that was merely abused.\n+This directly threatens the ability and/or willingness of common people to run fully validating nodes due to the resulting legal and moral risks.\n+\n+A core principle of Bitcoin is \"don't trust, verify\".\n+The nature of Bitcoin requires users to run fully validating nodes, necessarily involving downloading, storing, and transmitting every transaction, even if they are fake/spam \"transactions\".\n+If the blockchain contains content that is illegal to possess or distribute, node operators are forced to choose between violating the law (or their conscience) or shutting down their node.\n+This unacceptable dilemma directly undermines the incentive to validate, leading to inevitable centralization and posing an existential threat to Bitcoin's security model.\n+\n+By enforcing these new rules, this softfork allows the community to reject the standardization of data storage at the consensus level, closing the gap being abused.\n+\n+Some of the rules may be severe limitations, especially on future protocol upgrades, so this softfork is explicitly temporary and self-expiring if no further action is taken to renew/extend them.\n+This also buys time to refine the new rules into less restrictive forms.\n+\n+==Rationale==\n+\n+===Specification nuance===\n+\n+'''Why limit scriptPubKeys to 34 bytes?'''\n+\n+scriptPubKeys must be stored indefinitely in quick-access memory (often RAM) by all fully validating nodes.\n+It generally cannot be pruned.\n+It is also a direct cost to the sender rather than the receiver. For these reasons, modern usage is all 34 bytes or smaller in practice:\n+actual spending conditions have been moved to the witness, and the scriptPubKey simply commits to them in advance with a hash.\n+\n+'''What about OP_RETURN? Why not get rid of it entirely?'''\n+\n+OP_RETURN outputs are provably unspendable, and nodes do not need to store it in the UTXO set.\n+Historically, up to 83 bytes have been tolerated only to avoid unprovably unspendable spam in other output scripts, and no legitimate uses have ever been found.\n+With the advent of pay-to-contract and Taproot, it is now also possible to commit to external data in the Taptree, making even hypothetical use of OP_RETURN deprecated.\n+However, to avoid breaking legacy protocols that still include such outputs, this proposal allows these outputs.\n+\n+'''Why limit other data to 256/257 bytes?'''\n+\n+With modern compression, it is plausible to represent objectionable images (often illegal to even possess) in as few as 300-400 bytes.\n+\n+256 bytes (2048 bits) is also more than sufficient for reasonably large numbers that might be potentially needed in legitimate cryptography, reinforcing Bitcoin's intended purpose as a financial network.\n+\n+'''Won't spammers just spread their data over multiple fields?'''\n+\n+While it is impossible to fully prevent steganography, limiting data sizes ensures such abuses are non-contiguous and obfuscated within another intended meaning (script code, structure, etc).\n+As far as Bitcoin is concerned, the data has some meaning other than the spammers' misinterpretation, and any external code to \"reassemble\" the unintended data is responsible for producing it\n+(it is possible to write code that transforms *any* data into any other data - what matters is that Bitcoin has a well-defined meaning that is distinct from the unsupported one).\n+This proposal also sends a clear message that data storage abuses in general (legal or otherwise) are unwelcome rather than sanctioned or supported.\n+\n+'''Why is there an exception for BIP16 redeemScripts?'''\n+\n+The content of redeemScripts are another script, which is then executed.\n+Its contents are then also subject to the same OP_PUSHDATA* restrictions.\n+Restricting it is not only unnecessary, but would reduce the ability to make use of the intended script capabilities, and could impact legitimate real-world usage.\n+\n+'''Why make spending undefined witness/Tapleaf versions invalid?'''\n+\n+Since they are undefined, witness stacks spending these versions are completely unlimited currently to allow maximum flexibility in future upgrades.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why not make it invalid to send to undefined witness versions?'''\n+\n+This would require the senders of transactions to check the witness version prior to sending, and require additional coordination when a new witness version is intended to become used.\n+\n+'''Why not allow spending undefined witness versions with an empty witness?'''\n+\n+This has no use case, but would require nodes to track these UTXOs in case of potential spending.\n+By making spending invalid, it is possible for nodes to store them instead in slow memory not needed until this softfork expires.\n+(With proper planning, it also makes it possible for a future softfork making use of these witness versions to allow users to receive with an upgraded wallet even prior to activation of the upgrade.)\n+\n+'''Why make the Taproot annex invalid?'''\n+\n+The annex is currently undefined data with unlimited size.\n+It exists for future upgrades, but has no legitimate usage today.\n+Any future upgrade, however, would need more than a year of coordination, so this softfork will not actually restrict it, and only safeguards against abuse in the meantime.\n+\n+'''Why is the Taproot control block limited to 257 bytes instead of 256?'''\n+\n+The control block is a series of hashes proving the Tapscript is part of the Taptree, plus a single byte with the leaf version and parity bit.\n+See BIP 341 for details.\n+\n+'''Why make OP_SUCCESS* invalid?'''\n+\n+OP_SUCCESS* is meant for future upgrades. See above regarding undefined witness versions.\n+\n+'''Why make OP_IF/OP_NOTIF invalid?'''\n+\n+OP_IF/OP_NOTIF originated in pre-Taproot Bitcoin script language as a way to execute different subscripts based on a condition.\n+With Taproot, the conditions can instead be evaluated off-chain, revealing only the intended verification execution path.\n+Furthermore, when the conditions are met, the intent is that the keypath spend path should be used instead, avoiding publishing any scripts at all.\n+\n+OP_IF is not only redundant for Tapscript, it is also commonly abused today to inject spam that gets skipped at execution.\n+While it is impossible to fully prevent steganography, closing this gap eliminates one common abuse today basically for free, and sends a message that such abuses are not welcome.\n+\n+'''Why is the proposal so simple?'''\n+\n+A more complicated proposal could be envisioned that better balances innovation with safety, but implementing this properly would require extensive refactoring and review, delaying deployment when there is already no time to wait.\n+The rules proposed herein have been intentionally kept very simple to minimise review time and avoid unnecessary risks of overlooking unexpected side effects.\n+\n+'''Why is this softfork temporary?'''\n+\n+The impact of these restrictions would severely constrain future upgrades, potentially forcing them to be designed as a hardfork instead of a softfork.\n+Some restrictions are also not ideal, but an improved limit would be more complicated to develop and test -\n+by deploying these simpler restrictions now, we avoid making the perfect the enemy of the good enough, while still allowing for upgrading the limits to better variants in the future.\n+\n+Over the next year, interested developers can implement and propose a longer-term solution to address the needs of the protocol without the tradeoffs or blunt/simplified changes.\n+\n+===Tradeoffs===\n+\n+'''Are there any tradeoffs?'''\n+\n+Yes:\n+\n+# Limiting Taproot control blocks to 257 bytes directly constrains the size of the on-chain, consensus-enforced script tree. This could complicate or possibly even impede advanced smart contracting like BitVM, which relies on a large number of executable scripts. In the worst case scenario, these use cases may just need to wait until this softfork expires. As they are still in early development, testnet and sidechains should be sufficient for the next year while a more scalable rule is implemented.\n+# Upgrade hooks are not available for other softforks. As softforks need at least a year to activate, this shouldn't be a practical issue.\n+# In some hypothetical cases, OP_IF could require less data than additional tapscripts. If such a use case is discovered, this simply increases the fee until the softfork expires.\n+\n+'''Isn't the limit on Taproot control blocks too restrictive?'''\n+\n+Possibly.\n+The previous limit allows for 340,282,366,920,938,463,463,374,607,431,768,211,456 scripts, which is obviously way more than anyone could ever need.\n+257 bytes allows for 128 scripts, which is plenty for ordinary human-made scenarios.\n+However, it may prove too limiting for advanced off-chain functionality such as used by BitVM.\n+This is an unfortunate tradeoff that (if this softfork is accepted) we have chosen to accept in the short-term for the immediate benefits of this softfork.\n+The intent is to relax this restriction later, when this softfork expires, with a new approach allowing larger trees, yet to be developed.\n+\n+Do note that non-script (or non-Bitcoin-L1 scripts) usage of the taptree does not have this same limitation:\n+just a single of the 128 leaves could very well be an extension of the merkle tree to greater depths than enforced by this softfork.\n+\n+'''Aren't Taptrees intended to be unbalanced?'''\n+\n+While it is true that optimal use of Taptrees may often be unbalanced to favour more-likely-executed scripts, this is optional, and the full capacity (in this case, 128 scripts) can still be used if needed.\n+Additionally, in ideal/ordinary circumstances, neither the Taptree nor a merkle branch through it is ever published:\n+all counterparties ought to evaluate the conditions for spending off-chain and rebroadcast the transaction using the keypath spending.\n+Tapscripts are intended to only be used when one or more parties is unreachable or uncooperative; their existence mainly only serves to deter intentional non-cooperation by making it pointless.\n+\n+===Activation===\n+\n+Due to the unpredictable nature of the crisis this BIP addresses, we should move to limit on-chain data as quickly and orderly as possible, while being ready to react immediately in case illegal data appears in the chain before the new rules activate.\n+Thus this BIP presents two parallel methods of activation: the first proactive, the other reactive.\n+The proactive method involves a flag day activation of the rules, some time in early 2026. If no troublesome content appears in the chain, this BIP will activate smoothly via this proactive method.\n+If, however, some content appears in the chain that causes significant risks, we can fall back to the reactive method, which is a retroactive chain reorganization to invalidate the offending block (and any subsequent blocks) while immediately activating the new rules.\n+The mere existence of this BIP likely reduces the threat, since it demonstrates that, although Bitcoin Core 30 appears to sanction data storage as an official feature of the Bitcoin network, the network has not yet arrived at a consensus regarding this stance since there is an active opposition.\n+\n+===Proactive Deployment===\n+\n+TODO\n+\n+===Reactive Deployment===\n+\n+'''Doesn't this proposal activate too soon?'''\n+\n+In short, yes, it does.\n+Unfortunately, due to the release of Bitcoin Core 30 endorsing large data storage and actual illegal content being mined in proposed block <TODO:hash>, the network as it stands is already contaminated.\n+This is not a preemptive measure, but an emergency response to an immediate crisis.\n+Therefore, there is no time for lengthy signaling periods or careful deployment; the only remaining option is immediate and retroactive activation to mitigate the harm.\n+\n+However, because this is a softfork, old nodes will continue to follow the blockchain so long as it attains significant enough hashrate.\n+Even if non-upgraded miners continue to mine (now) invalid blocks, old nodes will continually replace them with valid blocks every time the valid chain overtakes the invalid one.\n+Since this results in an incoherent consensus system, unusable for actual currency, and loss of rewards for the lagging miners, they should quickly adapt and bring the softfork to near 100% compatibility quickly.\n+\n+The true risk is that for an initial period of time, nearly all nodes will cease to function as fully validating nodes.\n+This can only be mitigated by encouraging nodes to upgrade quickly, possibly by backporting the softfork to old and/or niche node software as necessary.\n+Toward this end, the actual changes in this softfork have been kept very simple.\n+\n+'''Does this cause a chain split?'''\n+\n+Generally, softforks do not cause chain splits.\n+However, since we are rejecting an already-mined block proposal, this softfork does indeed cause a chain split.\n+In fact, that is an important part of its purpose:\n+to keep the illegal content storage in block <TODO:hash> out of Bitcoin.\n+\n+To achieve this, the softfork must activate retroactively, invalidating that block and all its descendants.\n+The prior segment of the blockchain including this block will eventually (hopefully quickly) be discarded entirely, as the network adopts the softfork proposed herein.\n+\n+'''What is the expected impact on exchanges and other businesses, and how can they prepare?'''\n+\n+Depending on how quickly miners adopt this softfork, there is potential for significant disruption in the short-term.\n+Any econonomic node that continues to process deposits or payments should consider the risk of reversals or double-spending until the situation has fully resolved.\n+\n+The standard, industry-wide security procedure for any chain split event is to temporarily disable deposits and withdrawls until a single, stable chain has been decisively established with significant proof-of-work.",
      "path": "bip-????.mediawiki",
      "position": 1,
      "original_position": 219,
      "commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "original_commit_id": "53146356eaa96cd495385cce1e115e167fd2a6ad",
      "in_reply_to_id": 2462333412,
      "user": {
        "login": "dathonohm",
        "id": 239863417,
        "node_id": "U_kgDODkwGeQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/239863417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dathonohm",
        "html_url": "https://github.com/dathonohm",
        "followers_url": "https://api.github.com/users/dathonohm/followers",
        "following_url": "https://api.github.com/users/dathonohm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dathonohm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dathonohm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dathonohm/subscriptions",
        "organizations_url": "https://api.github.com/users/dathonohm/orgs",
        "repos_url": "https://api.github.com/users/dathonohm/repos",
        "events_url": "https://api.github.com/users/dathonohm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dathonohm/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-10-25T02:59:14Z",
      "updated_at": "2025-10-25T02:59:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/2017#discussion_r2462375462",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2462375462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/2017"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    }
  ]
}