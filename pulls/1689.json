{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1689",
    "id": 2142431937,
    "node_id": "PR_kwDOAN28mc5_surB",
    "html_url": "https://github.com/bitcoin/bips/pull/1689",
    "diff_url": "https://github.com/bitcoin/bips/pull/1689.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1689.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1689",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1689/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1689/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1689/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/4f5d87adc8bed41db534e2a3ec31096eb24a0851",
    "number": 1689,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Bip Draft: Discrete Log Equality Proofs (DLEQ)",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This BIP specifies a standard way to generate and verify DLEQ proofs. This is motivated by sending to silent payments in PSBTs. However, there are also other uses where DLEQs could be useful, so it would be good to have this BIP for others to reference.\r\n\r\nThis is inspired by https://github.com/discreetlogcontracts/dlcspecs/blob/master/ECDSA-adaptor.md#proof-of-discrete-logarithm-equality, but is a little more specific.\r\nThere is an implementation of that already at https://github.com/BlockstreamResearch/secp256k1-zkp/blob/master/src/modules/ecdsa_adaptor/dleq_impl.h, which this BIP attempts to be compatible with.\r\n\r\nInital ML post: https://groups.google.com/g/bitcoindev/c/MezoKV5md7s",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-10-24T01:47:02Z",
    "updated_at": "2024-11-08T17:49:36Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "66451bd7ff5e5d0a6a9dea7fe0c842e88c2f5e80",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "andrewtoth:dleq",
      "ref": "dleq",
      "sha": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 224773098,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjQ3NzMwOTg=",
        "name": "bips",
        "full_name": "andrewtoth/bips",
        "owner": {
          "login": "andrewtoth",
          "id": 237213,
          "node_id": "MDQ6VXNlcjIzNzIxMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewtoth",
          "html_url": "https://github.com/andrewtoth",
          "followers_url": "https://api.github.com/users/andrewtoth/followers",
          "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
          "repos_url": "https://api.github.com/users/andrewtoth/repos",
          "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/andrewtoth/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/andrewtoth/bips",
        "archive_url": "https://api.github.com/repos/andrewtoth/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/andrewtoth/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/andrewtoth/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/andrewtoth/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/andrewtoth/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/andrewtoth/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/andrewtoth/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/andrewtoth/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/andrewtoth/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/andrewtoth/bips/contributors",
        "deployments_url": "https://api.github.com/repos/andrewtoth/bips/deployments",
        "downloads_url": "https://api.github.com/repos/andrewtoth/bips/downloads",
        "events_url": "https://api.github.com/repos/andrewtoth/bips/events",
        "forks_url": "https://api.github.com/repos/andrewtoth/bips/forks",
        "git_commits_url": "https://api.github.com/repos/andrewtoth/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/andrewtoth/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/andrewtoth/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/andrewtoth/bips.git",
        "issue_comment_url": "https://api.github.com/repos/andrewtoth/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/andrewtoth/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/andrewtoth/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/andrewtoth/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/andrewtoth/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/andrewtoth/bips/languages",
        "merges_url": "https://api.github.com/repos/andrewtoth/bips/merges",
        "milestones_url": "https://api.github.com/repos/andrewtoth/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/andrewtoth/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/andrewtoth/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/andrewtoth/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:andrewtoth/bips.git",
        "stargazers_url": "https://api.github.com/repos/andrewtoth/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/andrewtoth/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/andrewtoth/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/andrewtoth/bips/subscription",
        "tags_url": "https://api.github.com/repos/andrewtoth/bips/tags",
        "teams_url": "https://api.github.com/repos/andrewtoth/bips/teams",
        "trees_url": "https://api.github.com/repos/andrewtoth/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/andrewtoth/bips.git",
        "hooks_url": "https://api.github.com/repos/andrewtoth/bips/hooks",
        "svn_url": "https://github.com/andrewtoth/bips",
        "homepage": "bitcoin.org",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 15659,
        "default_branch": "bip-schnorr",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-03T03:24:02Z",
        "created_at": "2019-11-29T03:52:22Z",
        "updated_at": "2019-11-29T03:52:24Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "40e91fdb94481fd3705d1426d7f20191c6b89a35",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5369,
        "stargazers_count": 9381,
        "watchers_count": 9381,
        "size": 15636,
        "default_branch": "master",
        "open_issues_count": 43,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-08T17:22:48Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-11-08T17:22:54Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 92,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 18,
    "comments": 2
  },
  "events": [
    {
      "event": "commented",
      "id": 2435713753,
      "node_id": "IC_kwDOAN28mc6RLgrZ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2435713753",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T16:14:35Z",
      "updated_at": "2024-10-24T16:14:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "There was some previous discussion on this gist before making this PR\r\nhttps://gist.github.com/andrewtoth/df97c3260cc8d12f09d3855ee61322ea",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1689#issuecomment-2435713753",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1689"
    },
    {
      "event": "reviewed",
      "id": 2393282873,
      "node_id": "PRR_kwDOAN28mc6Oppk5",
      "url": null,
      "actor": null,
      "commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1689#pullrequestreview-2393282873",
      "submitted_at": "2024-10-24T17:17:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
    },
    {
      "event": "renamed",
      "id": 14858110216,
      "node_id": "RTE_lADOAN28mc6blGxezwAAAAN1nMUI",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14858110216",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T20:00:31Z",
      "rename": {
        "from": "Bip Draft: DLEQ",
        "to": "Bip Draft: Discrete Log Equality Proofs (DLEQ)"
      }
    },
    {
      "event": "labeled",
      "id": 14858112735,
      "node_id": "LE_lADOAN28mc6blGxezwAAAAN1nM7f",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14858112735",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T20:00:43Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 2393653109,
      "node_id": "PRR_kwDOAN28mc6OrD91",
      "url": null,
      "actor": null,
      "commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1689#pullrequestreview-2393653109",
      "submitted_at": "2024-10-24T20:31:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
    },
    {
      "event": "reviewed",
      "id": 2393673331,
      "node_id": "PRR_kwDOAN28mc6OrI5z",
      "url": null,
      "actor": null,
      "commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1689#pullrequestreview-2393673331",
      "submitted_at": "2024-10-24T20:43:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
    },
    {
      "event": "labeled",
      "id": 14912290615,
      "node_id": "LE_lADOAN28mc6blGxezwAAAAN41383",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14912290615",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T20:23:55Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2398781147,
      "node_id": "PRR_kwDOAN28mc6O-n7b",
      "url": null,
      "actor": null,
      "commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1689#pullrequestreview-2398781147",
      "submitted_at": "2024-10-28T11:25:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
    },
    {
      "event": "reviewed",
      "id": 2405230279,
      "node_id": "PRR_kwDOAN28mc6PXObH",
      "url": null,
      "actor": null,
      "commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1689#pullrequestreview-2405230279",
      "submitted_at": "2024-11-01T04:46:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDRmNWQ4N2FkYzhiZWQ0MWRiNTM0ZTJhM2VjMzEwOTZlYjI0YTA4NTE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "tree": {
        "sha": "161d4abee97344ae7d049c63efa18a84487076f2",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/161d4abee97344ae7d049c63efa18a84487076f2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 161d4abee97344ae7d049c63efa18a84487076f2\nparent 52894e1aa7af27f4ae7836a391643124c71e2639\nauthor Andrew Toth <andrewstoth@gmail.com> 1729734086 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1730604237 -0400\n\nBip Draft: DLEQ\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmcm7M8ACgkQYAB6/Ik4\nsBiZpA/+LssqaQcLsSeEOYOrZwBcjlFP6bHcYUtmq8ljep2sYILiJsEwDt20Atr3\n1iMgSiZhLcOpTENSqP+Z9t/7ruNDSMzPNIoICQPJhIgaUwuOUDTUbYGIAXHmWXvC\nnr+AzSIgJwsS65Eip7I29Hs3D2e7QdLGeUQyGGDYz/Nr5Uo68wHi2JKfQAQoQAcu\n2YhaH9PHg3Gqw8Zn8hoG7elSVwH/TVRnVPFDFj7m8qwmULUpN/a1o0HcxsYMy4bY\nQUkz5LAvNp/DGbQV9VLIrn2qouVbakVocTGyDoQbftyckOH4N3BVrYrEEC7cIEQU\n2k4VsYsy1N0oAqRnbOdE92rByeHCjX4hYSsY+WcHZOpH1yn5KsbUVZp/pG7RcnuV\nVB7oXAxo42MPsq2i14JuEtcO9HMbzRzlC3DIgBifWl4a9H802oMoVYmlYr0+VPC2\n2wOmTeIrX/6P+bA/27ZbWr3reozVd19aYrVNsjD/f5dXOf1hdTWKIdLwAFJzmJZe\nS+vmSO9rK47ENsoyWymBONHcodbEN6iVWF5Yb5jDjFh9OkBmChDCdsf1Lws1UaGR\nakzgoTxYzQAupLfDIGqoGUbDqaM56lh2zsjO2Cw5yIKr/Yfc1aJzOY5QdBZlUpj6\nmhVRPfjraUCHcN+vpAa3YSA77USsZKZ4edvgZT0wvrgtdNnSAvo=\n=TWqg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/52894e1aa7af27f4ae7836a391643124c71e2639",
          "sha": "52894e1aa7af27f4ae7836a391643124c71e2639",
          "html_url": "https://github.com/bitcoin/bips/commit/52894e1aa7af27f4ae7836a391643124c71e2639"
        }
      ],
      "message": "Bip Draft: DLEQ",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-11-03T03:23:57Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-10-24T01:41:26Z"
      },
      "sha": "4f5d87adc8bed41db534e2a3ec31096eb24a0851"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15092311810,
      "node_id": "HRFPE_lADOAN28mc6blGxezwAAAAODkmcC",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15092311810",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:24:03Z"
    },
    {
      "event": "commented",
      "id": 2453279411,
      "node_id": "IC_kwDOAN28mc6SOhKz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2453279411",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:30:56Z",
      "updated_at": "2024-11-03T03:30:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for your comments @jonatack, @stratospher, @theStack. I've also updated the BIP to include the generator G as an input, and so the BIP is no longer specific to secp256k1. This was mentioned on the mailing list as an improvement to make this standard work with other curves as well.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1689#issuecomment-2453279411",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1689"
    },
    {
      "event": "mentioned",
      "id": 15092462859,
      "node_id": "MEE_lADOAN28mc6blGxezwAAAAODlLUL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15092462859",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:30:57Z"
    },
    {
      "event": "subscribed",
      "id": 15092462862,
      "node_id": "SE_lADOAN28mc6blGxezwAAAAODlLUO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15092462862",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:30:58Z"
    },
    {
      "event": "mentioned",
      "id": 15092462866,
      "node_id": "MEE_lADOAN28mc6blGxezwAAAAODlLUS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15092462866",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:30:58Z"
    },
    {
      "event": "subscribed",
      "id": 15092462869,
      "node_id": "SE_lADOAN28mc6blGxezwAAAAODlLUV",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15092462869",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:30:58Z"
    },
    {
      "event": "mentioned",
      "id": 15092462873,
      "node_id": "MEE_lADOAN28mc6blGxezwAAAAODlLUZ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15092462873",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:30:58Z"
    },
    {
      "event": "subscribed",
      "id": 15092462877,
      "node_id": "SE_lADOAN28mc6blGxezwAAAAODlLUd",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15092462877",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-03T03:30:58Z"
    },
    {
      "event": "unlabeled",
      "id": 15124603188,
      "node_id": "UNLE_lADOAN28mc6blGxezwAAAAOFfyE0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15124603188",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T18:02:11Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "review_requested",
      "id": 15221216645,
      "node_id": "RRE_lADOAN28mc6blGxezwAAAAOLQVWF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15221216645",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T17:28:54Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15221217324,
      "node_id": "RRE_lADOAN28mc6blGxezwAAAAOLQVgs",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15221217324",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T17:28:55Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815426758",
      "pull_request_review_id": 2393282873,
      "id": 1815426758,
      "node_id": "PRRC_kwDOAN28mc5sNTbG",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "typo\r\n```suggestion\r\n* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cbytes(C))''.\r\n```",
      "created_at": "2024-10-24T17:09:15Z",
      "updated_at": "2024-10-24T17:17:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1815426758",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815426758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815440632",
      "pull_request_review_id": 2393282873,
      "id": 1815440632,
      "node_id": "PRRC_kwDOAN28mc5sNWz4",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Let ''proof = bytes(32, e) || bytes(32, (k + ea) mod n)''.\n+* If ''VerifyProof(A, B, C, proof)'' (see below) returns failure, abort.\n+* Return the proof ''proof''.\n+\n+=== DLEQ Proof Verification ===\n+\n+Input:\n+* The public key of the secret key used in the proof generation ''A'': a point on the curve\n+* The public key used in the proof generation ''B'': a point on the curve\n+* The result of multiplying the secret and public keys used in the proof generation ''C'': a point on the curve\n+* A proof ''proof'': a 64-byte array\n+\n+The algorithm ''VerifyProof(A, B, C, proof)'' is defined as:\n+* Let ''e = int(proof[0:32])''.\n+* Let ''s = int(proof[32:64])''; fail if ''s &ge; n''.\n+* Let ''R<sub>1</sub> = s⋅G - e⋅A''.\n+* Fail if ''is_infinite(R<sub>1</sub>)''.\n+* Fail if ''not has_even_y(R<sub>1</sub>)''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 69,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "that seems not necessary and would make roughly every second (valid) proof verification fail (probably a leftover from a previous variant where x-only pubkeys were used?), same as two lines below\r\n```suggestion\r\n```\r\n",
      "created_at": "2024-10-24T17:17:32Z",
      "updated_at": "2024-10-24T17:17:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1815440632",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815440632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815661330",
      "pull_request_review_id": 2393653109,
      "id": 1815661330,
      "node_id": "PRRC_kwDOAN28mc5sOMsS",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Let ''proof = bytes(32, e) || bytes(32, (k + ea) mod n)''.\n+* If ''VerifyProof(A, B, C, proof)'' (see below) returns failure, abort.\n+* Return the proof ''proof''.\n+\n+=== DLEQ Proof Verification ===\n+\n+Input:\n+* The public key of the secret key used in the proof generation ''A'': a point on the curve\n+* The public key used in the proof generation ''B'': a point on the curve\n+* The result of multiplying the secret and public keys used in the proof generation ''C'': a point on the curve\n+* A proof ''proof'': a 64-byte array\n+\n+The algorithm ''VerifyProof(A, B, C, proof)'' is defined as:\n+* Let ''e = int(proof[0:32])''.\n+* Let ''s = int(proof[32:64])''; fail if ''s &ge; n''.\n+* Let ''R<sub>1</sub> = s⋅G - e⋅A''.\n+* Fail if ''is_infinite(R<sub>1</sub>)''.\n+* Fail if ''not has_even_y(R<sub>1</sub>)''.\n+* Let ''R<sub>2</sub> = s⋅B - e⋅C''.\n+* Fail if ''is_infinite(R<sub>2</sub>)''.\n+* Fail if ''not has_even_y(R<sub>2</sub>)''.\n+* Fail if ''e ≠ int(hash<sub>BIP?/DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Return success iff no failure occurred before reaching this point.\n+\n+== Test Vectors and Reference Code ==\n+\n+TBD\n+\n+== Changelog ==",
      "path": "bip-DLEQ.mediawiki",
      "position": 82,
      "original_position": 80,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe add a section on backwards compatibility, run `git grep -A2 Backward` on the repo root for ideas.",
      "created_at": "2024-10-24T20:31:25Z",
      "updated_at": "2024-10-24T20:31:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1815661330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815661330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815673491",
      "pull_request_review_id": 2393673331,
      "id": 1815673491,
      "node_id": "PRRC_kwDOAN28mc5sOPqT",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 3,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Consider adding `Layer: Applications` above this line (run `git grep -C6 \"Layer: Applications\"` on the repository for info).",
      "created_at": "2024-10-24T20:43:53Z",
      "updated_at": "2024-10-24T20:44:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1815673491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815673491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1818882900",
      "pull_request_review_id": 2398781147,
      "id": 1818882900,
      "node_id": "PRRC_kwDOAN28mc5safNU",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Let ''proof = bytes(32, e) || bytes(32, (k + ea) mod n)''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "pedantic nit: I think the `s` scalar deserves to be assigned explicitly before serialization, also to be symmetric to the verification part:\r\n```suggestion\r\n* Let ''s = (k + e⋅a) mod n''.\r\n* Let ''proof = bytes(32, e) || bytes(32, s)''.\r\n```",
      "created_at": "2024-10-28T11:17:57Z",
      "updated_at": "2024-10-28T11:25:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1818882900",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1818882900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1818891568",
      "pull_request_review_id": 2398781147,
      "id": 1818891568,
      "node_id": "PRRC_kwDOAN28mc5sahUw",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 51,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "for a consistent naming of the tagged hashes, could use the same scheme as in BIP0340, i.e.\r\n- \"BIP0???/aux\" (for calculating `t`)\r\n- \"BIP0???/nonce\" (for calculating `k`) and \r\n- \"BIP0???/challenge\" (for calculating `e`; used both in proof generation and verification).",
      "created_at": "2024-10-28T11:24:46Z",
      "updated_at": "2024-10-28T11:25:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1818891568",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1818891568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1822817640",
      "pull_request_review_id": 2405230279,
      "id": 1822817640,
      "node_id": "PRRC_kwDOAN28mc5spf1o",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array",
      "path": "bip-DLEQ.mediawiki",
      "position": 40,
      "original_position": 38,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "is it recommended to use a different `r` every time? I guess there's no risk of `a` being leaked with same `r` here.",
      "created_at": "2024-10-30T14:58:42Z",
      "updated_at": "2024-11-01T04:46:32Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1822817640",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1822817640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1824660791",
      "pull_request_review_id": 2405230279,
      "id": 1824660791,
      "node_id": "PRRC_kwDOAN28mc5swh03",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "micro-nit: maybe call it `GenerateProof`. (similar to `VerifyProof` below)",
      "created_at": "2024-10-31T15:18:32Z",
      "updated_at": "2024-11-01T04:46:32Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1824660791",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1824660791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895066",
      "pull_request_review_id": 2411773361,
      "id": 1826895066,
      "node_id": "PRRC_kwDOAN28mc5s5DTa",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1815426758,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-11-03T03:24:13Z",
      "updated_at": "2024-11-03T03:24:13Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895066",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895096",
      "pull_request_review_id": 2411773383,
      "id": 1826895096,
      "node_id": "PRRC_kwDOAN28mc5s5DT4",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Let ''proof = bytes(32, e) || bytes(32, (k + ea) mod n)''.\n+* If ''VerifyProof(A, B, C, proof)'' (see below) returns failure, abort.\n+* Return the proof ''proof''.\n+\n+=== DLEQ Proof Verification ===\n+\n+Input:\n+* The public key of the secret key used in the proof generation ''A'': a point on the curve\n+* The public key used in the proof generation ''B'': a point on the curve\n+* The result of multiplying the secret and public keys used in the proof generation ''C'': a point on the curve\n+* A proof ''proof'': a 64-byte array\n+\n+The algorithm ''VerifyProof(A, B, C, proof)'' is defined as:\n+* Let ''e = int(proof[0:32])''.\n+* Let ''s = int(proof[32:64])''; fail if ''s &ge; n''.\n+* Let ''R<sub>1</sub> = s⋅G - e⋅A''.\n+* Fail if ''is_infinite(R<sub>1</sub>)''.\n+* Fail if ''not has_even_y(R<sub>1</sub>)''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 69,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1815440632,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed.",
      "created_at": "2024-11-03T03:24:35Z",
      "updated_at": "2024-11-03T03:24:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895096",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895133",
      "pull_request_review_id": 2411773398,
      "id": 1826895133,
      "node_id": "PRRC_kwDOAN28mc5s5DUd",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 3,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1815673491,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added.",
      "created_at": "2024-11-03T03:24:45Z",
      "updated_at": "2024-11-03T03:24:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895190",
      "pull_request_review_id": 2411773411,
      "id": 1826895190,
      "node_id": "PRRC_kwDOAN28mc5s5DVW",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Let ''proof = bytes(32, e) || bytes(32, (k + ea) mod n)''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1818882900,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-11-03T03:25:02Z",
      "updated_at": "2024-11-03T03:25:02Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895190",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895220",
      "pull_request_review_id": 2411773442,
      "id": 1826895220,
      "node_id": "PRRC_kwDOAN28mc5s5DV0",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 51,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1818891568,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, although this breaks compatibility with https://github.com/BlockstreamResearch/secp256k1-zkp/blob/master/src/modules/ecdsa_adaptor/dleq_impl.h. I'm not sure it's feasible to be completely compatible with that implementation though.",
      "created_at": "2024-11-03T03:25:39Z",
      "updated_at": "2024-11-03T03:25:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895268",
      "pull_request_review_id": 2411773461,
      "id": 1826895268,
      "node_id": "PRRC_kwDOAN28mc5s5DWk",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:",
      "path": "bip-DLEQ.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1824660791,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-11-03T03:25:59Z",
      "updated_at": "2024-11-03T03:26:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895268",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895607",
      "pull_request_review_id": 2411773646,
      "id": 1826895607,
      "node_id": "PRRC_kwDOAN28mc5s5Db3",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Let ''proof = bytes(32, e) || bytes(32, (k + ea) mod n)''.\n+* If ''VerifyProof(A, B, C, proof)'' (see below) returns failure, abort.\n+* Return the proof ''proof''.\n+\n+=== DLEQ Proof Verification ===\n+\n+Input:\n+* The public key of the secret key used in the proof generation ''A'': a point on the curve\n+* The public key used in the proof generation ''B'': a point on the curve\n+* The result of multiplying the secret and public keys used in the proof generation ''C'': a point on the curve\n+* A proof ''proof'': a 64-byte array\n+\n+The algorithm ''VerifyProof(A, B, C, proof)'' is defined as:\n+* Let ''e = int(proof[0:32])''.\n+* Let ''s = int(proof[32:64])''; fail if ''s &ge; n''.\n+* Let ''R<sub>1</sub> = s⋅G - e⋅A''.\n+* Fail if ''is_infinite(R<sub>1</sub>)''.\n+* Fail if ''not has_even_y(R<sub>1</sub>)''.\n+* Let ''R<sub>2</sub> = s⋅B - e⋅C''.\n+* Fail if ''is_infinite(R<sub>2</sub>)''.\n+* Fail if ''not has_even_y(R<sub>2</sub>)''.\n+* Fail if ''e ≠ int(hash<sub>BIP?/DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Return success iff no failure occurred before reaching this point.\n+\n+== Test Vectors and Reference Code ==\n+\n+TBD\n+\n+== Changelog ==",
      "path": "bip-DLEQ.mediawiki",
      "position": 82,
      "original_position": 80,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1815661330,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure there's anything to be backwards compatible with? This would be a new standard?\r\nPerhaps it could discuss compatibility with https://github.com/BlockstreamResearch/secp256k1-zkp/blob/master/src/modules/ecdsa_adaptor/dleq_impl.h or any other widely used implementations (Joinmarket)?",
      "created_at": "2024-11-03T03:28:37Z",
      "updated_at": "2024-11-03T03:28:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895607",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895628",
      "pull_request_review_id": 2411773682,
      "id": 1826895628,
      "node_id": "PRRC_kwDOAN28mc5s5DcM",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array",
      "path": "bip-DLEQ.mediawiki",
      "position": 40,
      "original_position": 38,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1822817640,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We could recommend this, perhaps as a footnote?",
      "created_at": "2024-11-03T03:29:02Z",
      "updated_at": "2024-11-03T03:29:03Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1826895628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1826895628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1834836724",
      "pull_request_review_id": 2424539038,
      "id": 1834836724,
      "node_id": "PRRC_kwDOAN28mc5tXWL0",
      "diff_hunk": "@@ -0,0 +1,90 @@\n+<pre>\n+  BIP: ?\n+  Title: Discrete Log Equality Proofs over secp256k1\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ruben Somsen <rsomsen@gmail.com>\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-2-Clause\n+  Created: 2024-06-29\n+  Post-History: TBD\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a standard for 64-byte zero-knowledge ''discrete logarithm equality proofs'' (DLEQ proofs) over the elliptic curve ''secp256k1''. For given elliptic curve points ''A'', ''B'', and ''C'', the prover proves knowledge of a scalar ''a'' such that ''A = a⋅G'' and ''C = a⋅B'' without revealing anything about ''a''. This can, for instance, be useful in ECDH: if ''A'' and ''B'' are ECDH public keys, and ''C'' is their ECDH shared secret computed as ''C = a⋅B'', the proof establishes that the same secret key ''a'' is used for generating both ''A'' and ''C'' without revealing ''a''.\n+\n+=== Copyright ===\n+\n+This document is licensed under the 2-clause BSD license.\n+\n+=== Motivation ===\n+\n+[https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352] requires senders to compute output scripts using ECDH shared secrets from the same secret keys used to sign the inputs. Generating an incorrect signature will produce an invalid transaction that will be rejected by consensus. An incorrectly generated output script can still be consensus-valid, meaning funds may be lost if it gets broadcast.\n+By producing a DLEQ proof for the generated ECDH shared secrets, the signing entity can prove to other entities that the output scripts have been generated correctly without revealing the private keys.\n+\n+== Specification ==\n+\n+All conventions and notations are used as defined in [https://github.com/bitcoin/bips/blob/master/bip-0327.mediawiki#user-content-Notation BIP327].\n+\n+=== DLEQ Proof Generation ===\n+\n+Input:\n+* The secret key ''a'': a 256-bit unsigned integer\n+* The public key ''B'': a point on the curve\n+* Auxiliary random data ''r'': a 32-byte array\n+\n+The algorithm ''Prove(a, B, r)'' is defined as:\n+* Fail if ''a = 0'' or ''a &ge; n''.\n+* Fail if ''is_infinite(B)''.\n+* Let ''A = a⋅G''.\n+* Let ''C = a⋅B''.\n+* Let ''t'' be the byte-wise xor of ''bytes(32, a)'' and ''hash<sub>BIP?/aux</sub>(r)''.\n+* Let ''rand = hash<sub>DLEQ</sub>(t || cbytes(A) || cytes(C))''.\n+* Let ''k = int(rand) mod n''.\n+* Fail if ''k = 0''.\n+* Let ''R<sub>1</sub> = k⋅G''.\n+* Let ''R<sub>2</sub> = k⋅B''.\n+* Let ''e = int(hash<sub>DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Let ''proof = bytes(32, e) || bytes(32, (k + ea) mod n)''.\n+* If ''VerifyProof(A, B, C, proof)'' (see below) returns failure, abort.\n+* Return the proof ''proof''.\n+\n+=== DLEQ Proof Verification ===\n+\n+Input:\n+* The public key of the secret key used in the proof generation ''A'': a point on the curve\n+* The public key used in the proof generation ''B'': a point on the curve\n+* The result of multiplying the secret and public keys used in the proof generation ''C'': a point on the curve\n+* A proof ''proof'': a 64-byte array\n+\n+The algorithm ''VerifyProof(A, B, C, proof)'' is defined as:\n+* Let ''e = int(proof[0:32])''.\n+* Let ''s = int(proof[32:64])''; fail if ''s &ge; n''.\n+* Let ''R<sub>1</sub> = s⋅G - e⋅A''.\n+* Fail if ''is_infinite(R<sub>1</sub>)''.\n+* Fail if ''not has_even_y(R<sub>1</sub>)''.\n+* Let ''R<sub>2</sub> = s⋅B - e⋅C''.\n+* Fail if ''is_infinite(R<sub>2</sub>)''.\n+* Fail if ''not has_even_y(R<sub>2</sub>)''.\n+* Fail if ''e ≠ int(hash<sub>BIP?/DLEQ</sub>(cbytes(A) || cbytes(B) || cbytes(C) || cbytes(R<sub>1</sub>) || cbytes(R<sub>2</sub>)))''.\n+* Return success iff no failure occurred before reaching this point.\n+\n+== Test Vectors and Reference Code ==\n+\n+TBD\n+\n+== Changelog ==",
      "path": "bip-DLEQ.mediawiki",
      "position": 82,
      "original_position": 80,
      "commit_id": "4f5d87adc8bed41db534e2a3ec31096eb24a0851",
      "original_commit_id": "2aab0766e309604e927b888ec42b948f14a2ba8f",
      "in_reply_to_id": 1815661330,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Perhaps\r\n\r\n```mediawiki\r\n==Backwards Compatibility==\r\n\r\nThis proposal is compatible with all older clients.\r\n```\r\n\r\n> Perhaps it could discuss compatibility with [BlockstreamResearch/secp256k1-zkp@master/src/modules/ecdsa_adaptor/dleq_impl.h](https://github.com/BlockstreamResearch/secp256k1-zkp/blob/master/src/modules/ecdsa_adaptor/dleq_impl.h) or any other widely used implementations (Joinmarket)?\r\n\r\nYes, it might be useful to add in a `Compatibility` section (perhaps somewhat like BIP197) with respect to those.\r\n\r\n```mediawiki\r\n==Compatibility==\r\n\r\nBIP 197 is compatible with [https://github.com/ethereum/EIPs/pull/1850 ERC 1850] for [https://arxiv.org/pdf/1901.05117.pdf atomic loans] with Ethereum. Can be extended in the future to be compatible with other HTLC and smart contract compatible chains.\r\n```\r\n\r\n",
      "created_at": "2024-11-08T17:49:35Z",
      "updated_at": "2024-11-08T17:49:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1689#discussion_r1834836724",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1834836724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1689"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    }
  ]
}