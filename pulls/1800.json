{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1800",
    "id": 2420072801,
    "node_id": "PR_kwDOAN28mc6QP2Fh",
    "html_url": "https://github.com/bitcoin/bips/pull/1800",
    "diff_url": "https://github.com/bitcoin/bips/pull/1800.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1800.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1800",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1800/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1800/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1800/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/098894f04f41494b0329a3e0479e27f33f841812",
    "number": 1800,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Consensus Cleanup BIP draft",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This is a BIP draft for a Consensus Cleanup soft fork.\r\n\r\nThis proposal builds upon Matt Corallo's 2019 [proposal](https://github.com/TheBlueMatt/bips/blob/7f9670b643b7c943a0cc6d2197d3eabe661050c2/bip-XXXX.mediawiki), which i set to revive at the end of 2023. I eventually shared my research in a [Delving Bitcoin post](https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710) in early 2024 (along with a [semi-private companion post](https://delvingbitcoin.org/t/worst-block-validation-time-inquiry/711) for the redacted sensitive details). A number of people contributed ideas, testing and otherwise fruitful discussion. This led to settling on a list of mitigations, which [i updated the mailing list about](https://gnusha.org/pi/bitcoindev/jiyMlvTX8BnG71f75SqChQZxyhZDQ65kldcugeIDJVJsvK4hadCO3GT46xFc7_cUlWdmOCG0B_WIz0HAO5ZugqYTuX5qxnNLRBn3MopuATI=@protonmail.com) in February 2025.\r\n\r\nI think it's now ready to be officially published as a BIP.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2025-03-26T17:22:35Z",
    "updated_at": "2025-03-26T21:13:55Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merged": false,
    "merge_commit_sha": "dd59752b10a50902d0fb19ea9b7cf390c8ae5e83",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "darosior:consensus_cleanup",
      "ref": "consensus_cleanup",
      "sha": "098894f04f41494b0329a3e0479e27f33f841812",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 208778505,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMDg3Nzg1MDU=",
        "name": "bips",
        "full_name": "darosior/bips",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/darosior/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bips",
        "archive_url": "https://api.github.com/repos/darosior/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bips/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bips/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bips/downloads",
        "events_url": "https://api.github.com/repos/darosior/bips/events",
        "forks_url": "https://api.github.com/repos/darosior/bips/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bips.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bips/languages",
        "merges_url": "https://api.github.com/repos/darosior/bips/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bips.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bips/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bips/tags",
        "teams_url": "https://api.github.com/repos/darosior/bips/teams",
        "trees_url": "https://api.github.com/repos/darosior/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bips.git",
        "hooks_url": "https://api.github.com/repos/darosior/bips/hooks",
        "svn_url": "https://github.com/darosior/bips",
        "homepage": "bitcoin.org",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 15385,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-26T16:14:00Z",
        "created_at": "2019-09-16T11:02:25Z",
        "updated_at": "2019-09-16T11:02:26Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "02ad0e01c2a9189124e05a52afe97ef90a3b7f1f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5549,
        "stargazers_count": 9817,
        "watchers_count": 9817,
        "size": 15459,
        "default_branch": "master",
        "open_issues_count": 32,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-24T18:55:28Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-03-26T16:45:56Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 207,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 28,
    "comments": 0
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDA5ODg5NGYwNGY0MTQ5NGIwMzI5YTNlMDQ3OWUyN2YzM2Y4NDE4MTI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/098894f04f41494b0329a3e0479e27f33f841812",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/098894f04f41494b0329a3e0479e27f33f841812",
      "tree": {
        "sha": "cda8055a80e94ab0364720c2d204785641e527ed",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/cda8055a80e94ab0364720c2d204785641e527ed"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/8a75e437c502f08cfc3d0b9ea1faf9391309f275",
          "sha": "8a75e437c502f08cfc3d0b9ea1faf9391309f275",
          "html_url": "https://github.com/bitcoin/bips/commit/8a75e437c502f08cfc3d0b9ea1faf9391309f275"
        }
      ],
      "message": "Consensus Cleanup BIP draft",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-03-26T16:13:53Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-03-03T21:29:40Z"
      },
      "sha": "098894f04f41494b0329a3e0479e27f33f841812"
    },
    {
      "event": "labeled",
      "id": 16998146212,
      "node_id": "LE_lADOAN28mc6v2lm4zwAAAAP1KyCk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16998146212",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-26T18:28:29Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 2718524343,
      "node_id": "PRR_kwDOAN28mc6iCWO3",
      "url": null,
      "actor": null,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "First pass of review, mostly copy editing suggestions so far.",
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1800#pullrequestreview-2718524343",
      "submitted_at": "2025-03-26T20:19:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
    },
    {
      "event": "reviewed",
      "id": 2718634239,
      "node_id": "PRR_kwDOAN28mc6iCxD_",
      "url": null,
      "actor": null,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1800#pullrequestreview-2718634239",
      "submitted_at": "2025-03-26T21:13:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014938858",
      "pull_request_review_id": 2718524343,
      "id": 2014938858,
      "node_id": "PRRC_kwDOAN28mc54GYbq",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract",
      "path": "bip-cc.md",
      "position": 14,
      "original_position": 14,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(applies to the other headings as well)\r\n```suggestion\r\n## Abstract\r\n```",
      "created_at": "2025-03-26T20:17:01Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014938858",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014938858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 14,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014938905",
      "pull_request_review_id": 2718524343,
      "id": 2014938905,
      "node_id": "PRRC_kwDOAN28mc54GYcZ",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.",
      "path": "bip-cc.md",
      "position": 18,
      "original_position": 18,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The abstract should usually start with \"This BIP/document proposes/introduces...\", something like:\r\n```suggestion\r\nThis document proposes changes to consensus rules in order to fix the timewarp attack, reduce the worst case block\r\nvalidation time, prevent Merkle tree weaknesses and avoid duplicate transactions without\r\n[bip-0030][BIP30] validation.\r\n```",
      "created_at": "2025-03-26T20:17:04Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014938905",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014938905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": 16,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014938968",
      "pull_request_review_id": 2718524343,
      "id": 2014938968,
      "node_id": "PRRC_kwDOAN28mc54GYdY",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin",
      "path": "bip-cc.md",
      "position": 22,
      "original_position": 22,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nThis proposal addresses a number of long-standing vulnerabilities and weaknesses in the Bitcoin\r\n```",
      "created_at": "2025-03-26T20:17:06Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014938968",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014938968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939010",
      "pull_request_review_id": 2718524343,
      "id": 2014939010,
      "node_id": "PRRC_kwDOAN28mc54GYeC",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin",
      "path": "bip-cc.md",
      "position": 23,
      "original_position": 23,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nprotocol. Bundling these fixes together allows to overcome the fixed cost of deploying a Bitcoin\r\n```",
      "created_at": "2025-03-26T20:17:08Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939061",
      "pull_request_review_id": 2718524343,
      "id": 2014939061,
      "node_id": "PRRC_kwDOAN28mc54GYe1",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,",
      "path": "bip-cc.md",
      "position": 26,
      "original_position": 26,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A bullet list might be better than paragraphs for describing the individual vulnerabilities.",
      "created_at": "2025-03-26T20:17:11Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939061",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939100",
      "pull_request_review_id": 2718524343,
      "id": 2014939100,
      "node_id": "PRRC_kwDOAN28mc54GYfc",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to",
      "path": "bip-cc.md",
      "position": 37,
      "original_position": 37,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nminutes up to more than an hour on lower-end devices. Long block validation times are a nuisance to\r\n```",
      "created_at": "2025-03-26T20:17:13Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939100",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939153",
      "pull_request_review_id": 2718524343,
      "id": 2014939153,
      "node_id": "PRRC_kwDOAN28mc54GYgR",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.",
      "path": "bip-cc.md",
      "position": 40,
      "original_position": 40,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This sentence needs improving, how about:\r\n```suggestion\r\nbe used by miners to attack their competition, creating perverse incentives and centralization\r\npressures and reducing network security.\r\n```",
      "created_at": "2025-03-26T20:17:15Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": 39,
      "original_start_line": 39,
      "start_side": "RIGHT",
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939208",
      "pull_request_review_id": 2718524343,
      "id": 2014939208,
      "node_id": "PRRC_kwDOAN28mc54GYhI",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate",
      "path": "bip-cc.md",
      "position": 42,
      "original_position": 42,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nIn computing a block's Merkle root, a 64-byte transaction can be interpreted as an intermediate\r\n```",
      "created_at": "2025-03-26T20:17:18Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939208",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939249",
      "pull_request_review_id": 2718524343,
      "id": 2014939249,
      "node_id": "PRRC_kwDOAN28mc54GYhx",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on",
      "path": "bip-cc.md",
      "position": 44,
      "original_position": 44,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\npretending a 64-byte block transaction is an inner node, as well as to pretend the inner nodes on\r\n```",
      "created_at": "2025-03-26T20:17:20Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939309",
      "pull_request_review_id": 2718524343,
      "id": 2014939309,
      "node_id": "PRRC_kwDOAN28mc54GYit",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field",
      "path": "bip-cc.md",
      "position": 51,
      "original_position": 51,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "utreexo is usually not capitalized:\r\n```suggestion\r\nperformed by utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\r\n```",
      "created_at": "2025-03-26T20:17:22Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939309",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939366",
      "pull_request_review_id": 2718524343,
      "id": 2014939366,
      "node_id": "PRRC_kwDOAN28mc54GYjm",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.",
      "path": "bip-cc.md",
      "position": 53,
      "original_position": 53,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The \"Bitcoin\" disambiguation is definitely not needed here:\r\n```suggestion\r\nhaving to parse Script.\r\n```",
      "created_at": "2025-03-26T20:17:25Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939366",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939437",
      "pull_request_review_id": 2718524343,
      "id": 2014939437,
      "node_id": "PRRC_kwDOAN28mc54GYkt",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:",
      "path": "bip-cc.md",
      "position": 59,
      "original_position": 59,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just like in the previous section, a bullet list might be better than paragraphs for describing the individual fixes. (see also [the original consensus cleanup draft](https://github.com/TheBlueMatt/bips/blob/cleanup-softfork/bip-XXXX.mediawiki) for formatting)",
      "created_at": "2025-03-26T20:17:27Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939437",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 59,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939587",
      "pull_request_review_id": 2718524343,
      "id": 2014939587,
      "node_id": "PRRC_kwDOAN28mc54GYnD",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or",
      "path": "bip-cc.md",
      "position": 60,
      "original_position": 60,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not all implementation call the timestamp `nTime`, so just calling it \"timestamp\" might be preferable.",
      "created_at": "2025-03-26T20:17:32Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939587",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 60,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939656",
      "pull_request_review_id": 2718524343,
      "id": 2014939656,
      "node_id": "PRRC_kwDOAN28mc54GYoI",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.",
      "path": "bip-cc.md",
      "position": 73,
      "original_position": 73,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This should probably be rewritten, as it first introduces one accounting method (count the number of `CHECKSIG` and `CHECKMULTISIG` and check if the count is less than or equal to 2500) and only then changes the accounting for `CHECKMULTISIG`.",
      "created_at": "2025-03-26T20:17:35Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939656",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": 65,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939899",
      "pull_request_review_id": 2718524343,
      "id": 2014939899,
      "node_id": "PRRC_kwDOAN28mc54GYr7",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is",
      "path": "bip-cc.md",
      "position": 83,
      "original_position": 83,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nthe timewarp and Murch–Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\r\n```",
      "created_at": "2025-03-26T20:17:47Z",
      "updated_at": "2025-03-26T20:19:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014939899",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014939899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940039",
      "pull_request_review_id": 2718524343,
      "id": 2014940039,
      "node_id": "PRRC_kwDOAN28mc54GYuH",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous",
      "path": "bip-cc.md",
      "position": 86,
      "original_position": 86,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nfrom being lower than the previous block's, with a two-hour grace period. A [previous\r\n```",
      "created_at": "2025-03-26T20:17:53Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014940039",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 86,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940095",
      "pull_request_review_id": 2718524343,
      "id": 2014940095,
      "node_id": "PRRC_kwDOAN28mc54GYu_",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for",
      "path": "bip-cc.md",
      "position": 87,
      "original_position": 87,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nproposal][BIP-XXXX] to fix timewarp used a ten-minute grace period instead, also adopted for\r\n```",
      "created_at": "2025-03-26T20:17:56Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014940095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 87,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940158",
      "pull_request_review_id": 2718524343,
      "id": 2014940158,
      "node_id": "PRRC_kwDOAN28mc54GYv-",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].",
      "path": "bip-cc.md",
      "position": 89,
      "original_position": 89,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nblock rate increase under attack, a two-hour grace period is used here[^4].\r\n```",
      "created_at": "2025-03-26T20:17:59Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014940158",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940265",
      "pull_request_review_id": 2718524343,
      "id": 2014940265,
      "node_id": "PRRC_kwDOAN28mc54GYxp",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different",
      "path": "bip-cc.md",
      "position": 102,
      "original_position": 102,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nIn the presence of 64-byte transactions a block header's Merkle root may be valid for different\r\n```",
      "created_at": "2025-03-26T20:18:04Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014940265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940353",
      "pull_request_review_id": 2718524343,
      "id": 2014940353,
      "node_id": "PRRC_kwDOAN28mc54GYzB",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be",
      "path": "bip-cc.md",
      "position": 103,
      "original_position": 103,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nsets of transactions. This is because in the Merkle tree construction a 64-byte transaction may be\r\n```",
      "created_at": "2025-03-26T20:18:09Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014940353",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940762",
      "pull_request_review_id": 2718524343,
      "id": 2014940762,
      "node_id": "PRRC_kwDOAN28mc54GY5a",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be\n+interpreted as the catenation of two 32 bytes hashes, or the catenation of two 32 bytes hashes may",
      "path": "bip-cc.md",
      "position": 104,
      "original_position": 104,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\ninterpreted as the catenation of two 32-byte hashes, or the catenation of two 32-byte hashes may\r\n```",
      "created_at": "2025-03-26T20:18:23Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014940762",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940891",
      "pull_request_review_id": 2718524343,
      "id": 2014940891,
      "node_id": "PRRC_kwDOAN28mc54GY7b",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be\n+interpreted as the catenation of two 32 bytes hashes, or the catenation of two 32 bytes hashes may\n+be interpreted as a transaction. The former allows to fake a block inclusion proof and the latter\n+makes it such that for a valid block the Merkle root in the block header is not a unique identifier\n+for the corresponding list of valid transactions[^8]. 64 bytes transactions can only contain an",
      "path": "bip-cc.md",
      "position": 107,
      "original_position": 107,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nfor the corresponding list of valid transactions[^8]. 64-byte transactions can only contain an\r\n```",
      "created_at": "2025-03-26T20:18:28Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014940891",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014940891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941105",
      "pull_request_review_id": 2718524343,
      "id": 2014941105,
      "node_id": "PRRC_kwDOAN28mc54GY-x",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be\n+interpreted as the catenation of two 32 bytes hashes, or the catenation of two 32 bytes hashes may\n+be interpreted as a transaction. The former allows to fake a block inclusion proof and the latter\n+makes it such that for a valid block the Merkle root in the block header is not a unique identifier\n+for the corresponding list of valid transactions[^8]. 64 bytes transactions can only contain an\n+output Script that lets anyone spend the funds, or burns them.  They have also been non-standard for",
      "path": "bip-cc.md",
      "position": 108,
      "original_position": 108,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\noutput script that lets anyone spend the funds, or burns them.  They have also been non-standard for\r\n```",
      "created_at": "2025-03-26T20:18:35Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014941105",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941296",
      "pull_request_review_id": 2718524343,
      "id": 2014941296,
      "node_id": "PRRC_kwDOAN28mc54GZBw",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be\n+interpreted as the catenation of two 32 bytes hashes, or the catenation of two 32 bytes hashes may\n+be interpreted as a transaction. The former allows to fake a block inclusion proof and the latter\n+makes it such that for a valid block the Merkle root in the block header is not a unique identifier\n+for the corresponding list of valid transactions[^8]. 64 bytes transactions can only contain an\n+output Script that lets anyone spend the funds, or burns them.  They have also been non-standard for\n+6 years at the time this is written. It was suggested the known vulnerabilities could instead be\n+mitigated by committing to the Merkle tree depth in the header's version field[^9]. The authors\n+believe it is preferable to address the root cause by invalidating 64 bytes transactions. This",
      "path": "bip-cc.md",
      "position": 111,
      "original_position": 111,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nbelieve it is preferable to address the root cause by invalidating 64-byte transactions. This\r\n```",
      "created_at": "2025-03-26T20:18:41Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014941296",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941385",
      "pull_request_review_id": 2718524343,
      "id": 2014941385,
      "node_id": "PRRC_kwDOAN28mc54GZDJ",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be\n+interpreted as the catenation of two 32 bytes hashes, or the catenation of two 32 bytes hashes may\n+be interpreted as a transaction. The former allows to fake a block inclusion proof and the latter\n+makes it such that for a valid block the Merkle root in the block header is not a unique identifier\n+for the corresponding list of valid transactions[^8]. 64 bytes transactions can only contain an\n+output Script that lets anyone spend the funds, or burns them.  They have also been non-standard for\n+6 years at the time this is written. It was suggested the known vulnerabilities could instead be\n+mitigated by committing to the Merkle tree depth in the header's version field[^9]. The authors\n+believe it is preferable to address the root cause by invalidating 64 bytes transactions. This\n+approach also fixes the vulnerability without developers of SPV verifiers having to implement the\n+mitigation or to know it is necessary in the first place.\n+\n+Several blocks prior to [bip-0034][BIP34] activation contain a coinbase transaction such as its",
      "path": "bip-cc.md",
      "position": 115,
      "original_position": 115,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nSeveral blocks prior to [bip-0034][BIP34] activation contain a coinbase transaction whose\r\n```",
      "created_at": "2025-03-26T20:18:45Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014941385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941449",
      "pull_request_review_id": 2718524343,
      "id": 2014941449,
      "node_id": "PRRC_kwDOAN28mc54GZEJ",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be\n+interpreted as the catenation of two 32 bytes hashes, or the catenation of two 32 bytes hashes may\n+be interpreted as a transaction. The former allows to fake a block inclusion proof and the latter\n+makes it such that for a valid block the Merkle root in the block header is not a unique identifier\n+for the corresponding list of valid transactions[^8]. 64 bytes transactions can only contain an\n+output Script that lets anyone spend the funds, or burns them.  They have also been non-standard for\n+6 years at the time this is written. It was suggested the known vulnerabilities could instead be\n+mitigated by committing to the Merkle tree depth in the header's version field[^9]. The authors\n+believe it is preferable to address the root cause by invalidating 64 bytes transactions. This\n+approach also fixes the vulnerability without developers of SPV verifiers having to implement the\n+mitigation or to know it is necessary in the first place.\n+\n+Several blocks prior to [bip-0034][BIP34] activation contain a coinbase transaction such as its\n+scriptSig contains a valid [bip-0034][BIP34] commitment to a future block height. This offers an\n+opportunity to duplicate these coinbase transactions in the future[^10] and for this reason\n+[bip-0030][BIP30] validation will need to be re-activated from block 1,983,702. A simple way to\n+prevent this is to mandate that future coinbase transactions vary slightly from coinbase\n+transactions before [bip-0034][BIP34] activation. There are multiple ways of achieving this, but\n+enforcing the timelock for the coinbase transaction makes it so all coinbase transactions past\n+Consensus Cleanup activation could not have been valid before this height and therefore cannot be a\n+duplicate[^11].\n+\n+# Backward compatibility\n+\n+This proposal only tightens the block validation rules: there is no block that is valid under the\n+rules proposed in this BIP but not under the existing Bitcoin consensus rules. As a consequence\n+these changes are backward-compatible with unupgraded node software. That said, the authors strongly\n+encourage node operators to upgrade in order to fully validate all consensus rules.\n+\n+# Acknowledgements\n+\n+This document builds upon an [earlier proposal][BIP-XXXX] by one of the authors.\n+\n+The authors would like to thank everyone involved in researching the most appropriate mitigation for\n+each of these bugs. We would like to thank in particular Anthony Towns and Sjors Provoost for their\n+direct contributions to this proposal, as well as @0xb10c and Brian Groll for providing the authors\n+with data to analyze the proposed mitigations.\n+\n+# Copyright\n+\n+This document is licensed under the Creative Commons CC0 1.0 Universal license.\n+\n+\n+[^0]: Block 1,983,702 is the earliest future block which could contain a duplicate coinbase\n+transaction while still respecting [bip-0034][BIP34]. See [this post][Delving duplicable] for a list\n+of all such future blocks.\n+[^1]: Technically this limit *cannot* apply to a coinbase transaction as the size of its sole\n+input's scriptSig is limited.\n+[^2]: The locktime validation, which is also performed for coinbase transactions, enforces that the\n+nLockTime value is the last block at which a transaction is invalid, not the first one at which it\n+is valid.\n+[^3]: The timewarp attack is described [here][SE timewarp] and the Murch-Zawy attack [here][Delving",
      "path": "bip-cc.md",
      "position": 154,
      "original_position": 154,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n[^3]: The timewarp attack is described [here][SE timewarp] and the Murch–Zawy attack [here][Delving\r\n```",
      "created_at": "2025-03-26T20:18:49Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014941449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 154,
      "original_line": 154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941559",
      "pull_request_review_id": 2718524343,
      "id": 2014941559,
      "node_id": "PRRC_kwDOAN28mc54GZF3",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;\n+- if `N % 2016` is equal to `2015` the `nTime` field of the block must be set to a value higher than\n+  or equal to the value of the `nTime` field of block at height `N-2015`.\n+\n+A limit is set on the number of potentially executed signature operations in validating a\n+transaction. It applies to all transactions in the block except the coinbase transaction[^1]. For\n+each input in the transaction, count the number of `CHECKSIG` and `CHECKMULTISIG` in the input\n+scriptSig and previous output's scriptPubKey, including the P2SH redeemScript. If the total is\n+strictly higher than `2500`, the transaction is invalid. The accounting is the same as for\n+[bip-0016][BIP16 specs]: a `CHECKSIG` operation accounts for `1` and a `CHECKMULTISIG` accounts for\n+the number of public keys associated, or `20` if the number of public keys is greater than `16`. A\n+`CHECKMULTISIG` not directly preceded by a minimally-pushed number between `1` and `16` (included)\n+accounts for `20`.\n+\n+Transactions whose (witness-stripped) serialized size is exactly 64 bytes are made invalid.\n+\n+The coinbase transaction's `nLockTime` field must be set to the height of the block minus `1`[^2]\n+and its `nSequence` field must not be equal to `0xffffffff`.\n+\n+# Rationale\n+\n+The restrictions on the timestamp of the first and last blocks of a difficulty adjustment period fix\n+the timewarp and Murch-Zawy vulnerabilities[^3]. The latter poses mostly theoretical concerns but is\n+extremely low risk to fix: the duration of an adjustment period has never been, and should never be,\n+negative. The former is fixed by preventing the timestamp of the first block of a difficulty period\n+to be lower than the previous block's, with a two hours grace period. A [previous\n+proposal][BIP-XXXX] to fix timewarp used a ten minutes grace period instead, also adopted for\n+[testnet4][BIP94 timewarp]. Out of an abundance of caution and because it only trivially worsens the\n+block rate increase under attack, a two hours grace period is used here[^4].\n+\n+Disabling some Script operations and functionalities was [previously proposed][BIP-XXXX] to reduce\n+the worst case block validation time but was met with resistance due to confiscation concerns[^5]. A\n+delicate balance needs to be struck between minimizing the confiscation risks of a mitigation, even\n+if merely theoretical, and bounding the costs one could impose on all other users of the system. To\n+this effect a limit on the number of potentially executed signature operations pinpoints exactly the\n+harmful behaviour, leaving maximum flexibility in how Script functionalities may have been used.\n+Such a limit reduces the worst case block validation time by a factor of 40 and drastically\n+increases the preparation cost of an attack to make it uneconomical for a miner[^6]. The `2500`\n+value was chosen as the tightest value that did not make any non-pathological standard transaction\n+invalid[^7].\n+\n+In the presence of 64 bytes transactions a block header's Merkle root may be valid for different\n+sets of transactions. This is because in the Merkle tree construction a 64 bytes transaction may be\n+interpreted as the catenation of two 32 bytes hashes, or the catenation of two 32 bytes hashes may\n+be interpreted as a transaction. The former allows to fake a block inclusion proof and the latter\n+makes it such that for a valid block the Merkle root in the block header is not a unique identifier\n+for the corresponding list of valid transactions[^8]. 64 bytes transactions can only contain an\n+output Script that lets anyone spend the funds, or burns them.  They have also been non-standard for\n+6 years at the time this is written. It was suggested the known vulnerabilities could instead be\n+mitigated by committing to the Merkle tree depth in the header's version field[^9]. The authors\n+believe it is preferable to address the root cause by invalidating 64 bytes transactions. This\n+approach also fixes the vulnerability without developers of SPV verifiers having to implement the\n+mitigation or to know it is necessary in the first place.\n+\n+Several blocks prior to [bip-0034][BIP34] activation contain a coinbase transaction such as its\n+scriptSig contains a valid [bip-0034][BIP34] commitment to a future block height. This offers an\n+opportunity to duplicate these coinbase transactions in the future[^10] and for this reason\n+[bip-0030][BIP30] validation will need to be re-activated from block 1,983,702. A simple way to\n+prevent this is to mandate that future coinbase transactions vary slightly from coinbase\n+transactions before [bip-0034][BIP34] activation. There are multiple ways of achieving this, but\n+enforcing the timelock for the coinbase transaction makes it so all coinbase transactions past\n+Consensus Cleanup activation could not have been valid before this height and therefore cannot be a\n+duplicate[^11].\n+\n+# Backward compatibility\n+\n+This proposal only tightens the block validation rules: there is no block that is valid under the\n+rules proposed in this BIP but not under the existing Bitcoin consensus rules. As a consequence\n+these changes are backward-compatible with unupgraded node software. That said, the authors strongly\n+encourage node operators to upgrade in order to fully validate all consensus rules.\n+\n+# Acknowledgements\n+\n+This document builds upon an [earlier proposal][BIP-XXXX] by one of the authors.\n+\n+The authors would like to thank everyone involved in researching the most appropriate mitigation for\n+each of these bugs. We would like to thank in particular Anthony Towns and Sjors Provoost for their\n+direct contributions to this proposal, as well as @0xb10c and Brian Groll for providing the authors\n+with data to analyze the proposed mitigations.\n+\n+# Copyright\n+\n+This document is licensed under the Creative Commons CC0 1.0 Universal license.\n+\n+\n+[^0]: Block 1,983,702 is the earliest future block which could contain a duplicate coinbase\n+transaction while still respecting [bip-0034][BIP34]. See [this post][Delving duplicable] for a list\n+of all such future blocks.\n+[^1]: Technically this limit *cannot* apply to a coinbase transaction as the size of its sole\n+input's scriptSig is limited.\n+[^2]: The locktime validation, which is also performed for coinbase transactions, enforces that the\n+nLockTime value is the last block at which a transaction is invalid, not the first one at which it\n+is valid.\n+[^3]: The timewarp attack is described [here][SE timewarp] and the Murch-Zawy attack [here][Delving\n+Murch-Zawy].\n+[^4]: A bug in testnet4 pushed blocks' timestamps in the future when exploited, revealing how some\n+broken pool software may produce blocks that don't respect a 10 minutes grace period. Some [raised\n+concerns][Sjors grace period] similarly broken software might be used on mainnet. Using a grace\n+period of 2 hours instead of 10 minutes only reduces the expected block interval time under attack\n+by ~2.2 seconds. See [this post][grace period debate summary] for more.\n+[^5]: The argument is about someone having a timelocked presigned transaction using some of those\n+features in its output script. The transaction cannot be mined before activation. Such outputs would\n+not be covered by an amnesty for old UTxOs. See for instance [here][O'Connor OP_CODESEPARATOR] and\n+[here][O'Connor sighash type] for discussions on this topic.\n+[^6]: It is important to reduce the worst case block validation time as well as the ratio of\n+validation time imposed over preparation cost. The former is to limit the damages an externally\n+motivated attacker can do. The latter is to disincentivize miners slowing down their competition by\n+mining expensive blocks. See [this thread][ML thread validation time] for more.\n+[^7]: A non-pathological transaction would have a public key per signature operation and at least\n+one signature per input. Per standardness a single P2SH input may not have more than 15 signature\n+operations. Even by using 1-of-15 `CHECKMULTISIG`s a transaction would bump against the maximum\n+standard transaction size before running into the newly introduced limit. To run against the newly\n+introduced limit but not the transaction size a transaction would need to spend P2SH inputs with a\n+redeem script similar to `CHECKSIG DROP CHECKSIG DROP ..`. This type of redeem script serves no",
      "path": "bip-cc.md",
      "position": 174,
      "original_position": 174,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nredeem script similar to `CHECKSIG DROP CHECKSIG DROP ...`. This type of redeem script serves no\r\n```",
      "created_at": "2025-03-26T20:18:53Z",
      "updated_at": "2025-03-26T20:19:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2014941559",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2014941559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 174,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2015007365",
      "pull_request_review_id": 2718634239,
      "id": 2015007365,
      "node_id": "PRRC_kwDOAN28mc54GpKF",
      "diff_hunk": "@@ -0,0 +1,207 @@\n+```\n+  BIP: ?\n+  Title: Consensus Cleanup\n+  Author: Antoine Poinsot <mail@antoinep.com>\n+          Matt Corallo <bips@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-?\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2025-03-17\n+  License: CC0-1.0\n+```\n+\n+# Abstract\n+\n+Introduce new consensus rules in order to fix the timewarp attack, reduce the worst case block\n+validation, prevent Merkle tree weaknesses and avoid duplicate transactions without\n+[bip-0030][BIP30] validation.\n+\n+# Motivation\n+\n+This proposal addresses a number of long standing vulnerabilities and weaknesses in the Bitcoin\n+protocol. Bundling those fixes together allows to overcome the fixed cost of deploying a Bitcoin\n+soft fork.\n+\n+The timewarp bug permits a majority hashrate attacker to arbitrarily increase the block rate,\n+allowing them to steal block subsidy from future miners, and increase validation costs to nodes that\n+have to deal with the increased average transaction rate. By strategically setting the block\n+timestamp, the timewarp bug lets miners bring down the difficulty to its minimum within 38 days of\n+starting the attack. The existence of this bug not only significantly empowers a 51% attacker, but\n+also makes it notably harder to reason about miners' incentives. It could indeed be in the interest\n+of short-sighted miners as well as short-sighted users to exploit this vulnerability in a small\n+enough proportion to increase the block rate without fatally hurting the network, as the effectively\n+increased block space would - all others things equal - bring fee rates down for users.\n+\n+Specially crafted blocks may be expensive to process, with validation times ranging from a few\n+minutes up to more than a hour on lower end devices. Long block validation times are a nuisance to\n+users, increasing the cost to independently fully validate the consensus rules. In addition they can\n+be used by miners to attack their competition, creating perverse incentives, centralization\n+pressures and reduced network security.\n+\n+In computing a block's Merkle root, a 64 bytes transaction can be interpreted as an intermediate\n+node in the tree in addition to a leaf. This makes it possible to fake inclusion proofs by\n+pretending a 64 bytes block transaction is an inner node, as well as to pretend the inner nodes on\n+one level of the tree are the actual block transactions.\n+\n+Since [bip-0034][BIP34] activation, explicit [bip-0030][BIP30] validation is not necessary until\n+block height 1,983,702[^0].  Mandating new coinbase transactions be different from the early\n+[bip-0034][BIP34] violations makes it possible to get rid of [bip-0030][BIP30] validation forever.\n+Besides its unnecessary cost, another downside of [bip-0030][BIP30] validation is that it cannot be\n+performed by Utreexo clients. Finally, leveraging the coinbase transaction's `nLockTime` field\n+allows applications to recover the block height corresponding to a coinbase transaction without\n+having to parse Bitcoin Script.\n+\n+# Specification\n+\n+For all blocks after activation the following new rules apply.\n+\n+Given a block at height `N`:\n+- if `N % 2016` is equal to `0` the `nTime` field of the block must be set to a value higher than or\n+  equal to the value of the `nTime` field of block at height `N-1` minus `7200`;",
      "path": "bip-cc.md",
      "position": 61,
      "original_position": 61,
      "commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "original_commit_id": "098894f04f41494b0329a3e0479e27f33f841812",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe reword this to make it clearer that `minus 7200`  is subtracted from the value of `nTime`, and not from `height N-1` (so that no one unfamiliar with the context could read it as  \"block at height N - 7201\").",
      "created_at": "2025-03-26T21:13:55Z",
      "updated_at": "2025-03-26T21:13:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1800#discussion_r2015007365",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2015007365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1800"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 61,
      "original_line": 61,
      "side": "RIGHT"
    }
  ]
}