{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1787",
    "id": 2380396025,
    "node_id": "PR_kwDOAN28mc6N4fX5",
    "html_url": "https://github.com/bitcoin/bips/pull/1787",
    "diff_url": "https://github.com/bitcoin/bips/pull/1787.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1787.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1787/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/8e032140fcda56c85349bee8c63fe75bd08102dd",
    "number": 1787,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Draft: Wallet Recognition Standard for Taproot Token (TSB-P)",
    "user": {
      "login": "GobiShanthan",
      "id": 73505570,
      "node_id": "MDQ6VXNlcjczNTA1NTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GobiShanthan",
      "html_url": "https://github.com/GobiShanthan",
      "followers_url": "https://api.github.com/users/GobiShanthan/followers",
      "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
      "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
      "repos_url": "https://api.github.com/users/GobiShanthan/repos",
      "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This pull request introduces a new Bitcoin Improvement Proposal (BIP):\r\n\r\n**Programmable Bitcoin Token Standard (PBTS)**\r\n\r\nPBTS provides a Layer 1 token standard leveraging Bitcoin Script and Taproot to enable the creation, transfer, and verification of native programmable tokens directly on Bitcoin. It introduces structured programmability without requiring changes to Bitcoin’s consensus rules.\r\n\r\n### Key Highlights:\r\n\r\n- **Layer 1 Implementation:** Tokens are fully validated and transferred on Bitcoin's base layer without external dependencies.\r\n- **Taproot Optimized:** Minimal impact on scalability, with optimized transaction size and fees.\r\n- **Structured Programmability:** Enables predefined execution paths, such as vesting contracts, milestone-based escrows, and oracle integration.\r\n\r\nFull details are available in the proposed BIP markdown file:  \r\n- [bip-pbts.md](bip-pbts.md)\r\n\r\nFeedback, suggestions, and discussion are welcome.\r\n",
    "labels": [
      {
        "id": 6924377447,
        "node_id": "LA_kwDOAN28mc8AAAABnLmdZw",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/PR%20Author%20action%20required",
        "name": "PR Author action required",
        "description": "Needs updates, has unaddressed review comments, or is otherwise waiting for PR author",
        "color": "e99695",
        "default": false
      }
    ],
    "created_at": "2025-03-08T22:49:35Z",
    "updated_at": "2025-05-07T18:28:50Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merged": false,
    "merge_commit_sha": "b6c68f09554bd26ab18161f4815ddd0fdf58ba32",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "GobiShanthan:pbts-bip",
      "ref": "pbts-bip",
      "sha": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 945203164,
        "node_id": "R_kgDOOFan3A",
        "name": "bips",
        "full_name": "GobiShanthan/bips",
        "owner": {
          "login": "GobiShanthan",
          "id": 73505570,
          "node_id": "MDQ6VXNlcjczNTA1NTcw",
          "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GobiShanthan",
          "html_url": "https://github.com/GobiShanthan",
          "followers_url": "https://api.github.com/users/GobiShanthan/followers",
          "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
          "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
          "repos_url": "https://api.github.com/users/GobiShanthan/repos",
          "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/GobiShanthan/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/GobiShanthan/bips",
        "archive_url": "https://api.github.com/repos/GobiShanthan/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/GobiShanthan/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/GobiShanthan/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/GobiShanthan/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/GobiShanthan/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/GobiShanthan/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/GobiShanthan/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/GobiShanthan/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/GobiShanthan/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/GobiShanthan/bips/contributors",
        "deployments_url": "https://api.github.com/repos/GobiShanthan/bips/deployments",
        "downloads_url": "https://api.github.com/repos/GobiShanthan/bips/downloads",
        "events_url": "https://api.github.com/repos/GobiShanthan/bips/events",
        "forks_url": "https://api.github.com/repos/GobiShanthan/bips/forks",
        "git_commits_url": "https://api.github.com/repos/GobiShanthan/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/GobiShanthan/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/GobiShanthan/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/GobiShanthan/bips.git",
        "issue_comment_url": "https://api.github.com/repos/GobiShanthan/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/GobiShanthan/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/GobiShanthan/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/GobiShanthan/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/GobiShanthan/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/GobiShanthan/bips/languages",
        "merges_url": "https://api.github.com/repos/GobiShanthan/bips/merges",
        "milestones_url": "https://api.github.com/repos/GobiShanthan/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/GobiShanthan/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/GobiShanthan/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/GobiShanthan/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:GobiShanthan/bips.git",
        "stargazers_url": "https://api.github.com/repos/GobiShanthan/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/GobiShanthan/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/GobiShanthan/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/GobiShanthan/bips/subscription",
        "tags_url": "https://api.github.com/repos/GobiShanthan/bips/tags",
        "teams_url": "https://api.github.com/repos/GobiShanthan/bips/teams",
        "trees_url": "https://api.github.com/repos/GobiShanthan/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/GobiShanthan/bips.git",
        "hooks_url": "https://api.github.com/repos/GobiShanthan/bips/hooks",
        "svn_url": "https://github.com/GobiShanthan/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 15354,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-28T05:15:18Z",
        "created_at": "2025-03-08T22:21:25Z",
        "updated_at": "2025-03-08T22:21:25Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c5220f8c3b43821efa3841a6c5e90af9ce5519e8",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5588,
        "stargazers_count": 9905,
        "watchers_count": 9905,
        "size": 16096,
        "default_branch": "master",
        "open_issues_count": 39,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-01T03:07:28Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-05-07T06:16:01Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
      }
    },
    "author_association": "NONE",
    "draft": true,
    "additions": 684,
    "deletions": 0,
    "changed_files": 1,
    "commits": 3,
    "review_comments": 27,
    "comments": 8
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZlZjJlZGQzMGEwMjBhZDc0OWFjZjUxMzI2NDQwODEwOTBmYzM5Zjk",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6ef2edd30a020ad749acf5132644081090fc39f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6ef2edd30a020ad749acf5132644081090fc39f9",
      "tree": {
        "sha": "beb387d6a5c51ecff1930a761f3bf536d63af578",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/beb387d6a5c51ecff1930a761f3bf536d63af578"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/33231097c2f71ec7aa780a4e181bedd8581d8171",
          "sha": "33231097c2f71ec7aa780a4e181bedd8581d8171",
          "html_url": "https://github.com/bitcoin/bips/commit/33231097c2f71ec7aa780a4e181bedd8581d8171"
        }
      ],
      "message": "Propose new BIP for Programmable Bitcoin Token Standard (PBTS)",
      "committer": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:25:43Z"
      },
      "author": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:25:43Z"
      },
      "sha": "6ef2edd30a020ad749acf5132644081090fc39f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZlYjJlYjc2MTUzOTJkYzFiY2VkZjJkZTEwYzRkNTg1YmI0Njg0MTY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "tree": {
        "sha": "e145d16eb88e8345827fd4398cf36315033a057c",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/e145d16eb88e8345827fd4398cf36315033a057c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6ef2edd30a020ad749acf5132644081090fc39f9",
          "sha": "6ef2edd30a020ad749acf5132644081090fc39f9",
          "html_url": "https://github.com/bitcoin/bips/commit/6ef2edd30a020ad749acf5132644081090fc39f9"
        }
      ],
      "message": " removed implementation link until further notice",
      "committer": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:45:28Z"
      },
      "author": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:45:28Z"
      },
      "sha": "6eb2eb7615392dc1bcedf2de10c4d585bb468416"
    },
    {
      "event": "reviewed",
      "id": 2678967038,
      "node_id": "PRR_kwDOAN28mc6frcr-",
      "url": null,
      "actor": null,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#pullrequestreview-2678967038",
      "submitted_at": "2025-03-12T16:02:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
    },
    {
      "event": "commented",
      "id": 2724900167,
      "node_id": "IC_kwDOAN28mc6iaq1H",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2724900167",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T14:35:38Z",
      "updated_at": "2025-03-18T02:53:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "As I read it, this proposal is either a client-side validation scheme or requires a consensus change (or both), while claiming to be neither. The latter contradiction makes the comparison with existing schemes seem skewed. Especially, it is not at all obvious why this n-th standard for tokens is supposed to obsolete all others.\r\n\r\nThis proposal should be improved to clarify what it is trying to achieve and how it is achieving that. There seems to be an underlying misunderstanding either about how consensus works or what mechanisms are necessary to achieve enforcement and validation as described in this document.\r\n\r\nI would appreciate it if future responses to questions were more to the point. The prior responses mostly repeat claims from the proposal, but barely address the main gist of my questions. Just because other networks have allowed themselves to be fully cannibalized by tokenization and the ensuing speculation and gambling, it is by no means obvious to me how tokens improve Bitcoin.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2724900167",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "commented",
      "id": 2728263686,
      "node_id": "IC_kwDOAN28mc6ingAG",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2728263686",
      "actor": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-17T06:04:16Z",
      "updated_at": "2025-03-17T06:04:16Z",
      "author_association": "NONE",
      "body": "Thank you for your thoughtful feedback. I appreciate your concerns and will address them directly:\r\n\r\nRegarding enforcement without consensus changes:\r\nTBS uses standard Bitcoin Script to enforce token rules. Token supply is maintained through transaction structure - when tokens are transferred, the transaction must spend existing token UTXOs and create outputs with identical token commitments where input and output amounts match exactly. This conservation is enforced through Bitcoin's existing UTXO model and script validation.\r\n\r\nOn the apparent contradiction:\r\nYou're right that TBS requires compatible wallet software to create valid token transactions (similar to multisig). However, unlike pure client-side validation, the token rules are enforced directly through Bitcoin's consensus mechanisms when validating scripts - any node can verify token transactions without external systems.\r\nOn comparison with other standards:\r\n\r\nI don't claim TBS would necessarily obsolete all others - different approaches have different tradeoffs. The goal is to offer a standard that minimizes blockchain bloat and aligns with Bitcoin's security model.\r\nOn improving Bitcoin:\r\n\r\nI understand your concern about tokenization's effects on other networks. My observation is simply that token activity is already happening on Bitcoin, and a well-designed standard might help reduce negative externalities like excessive data storage.\r\nI've edited my previous replies to be more direct and on-point. I apologize for my lengthy earlier responses. I'm fairly new to this process and would genuinely appreciate your guidance on how to improve this proposal.\r\n\r\n If you have any further questions, I would be happy to answer them.",
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2728263686",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "reviewed",
      "id": 2692740268,
      "node_id": "PRR_kwDOAN28mc6gf_Ss",
      "url": null,
      "actor": null,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This feature is at least heavily underspecified, if not outright technically unsound. This pull request seems premature to me: at the least it would require a more technically compelling description of the feature and a comprehensive Specification. If work is to continue on this effort, I would suggest exploring a proof of concept in regard to analyzing the enforcement properties of the described mechanism.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#pullrequestreview-2692740268",
      "submitted_at": "2025-03-18T04:38:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
    },
    {
      "event": "convert_to_draft",
      "id": 16819937594,
      "node_id": "CTDE_lADOAN28mc6tJ6a4zwAAAAPqi-E6",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16819937594",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T04:40:28Z"
    },
    {
      "event": "labeled",
      "id": 16819987459,
      "node_id": "LE_lADOAN28mc6tJ6a4zwAAAAPqjKQD",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16819987459",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T04:45:40Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "commented",
      "id": 2802770657,
      "node_id": "IC_kwDOAN28mc6nDuLh",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2802770657",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-14T19:20:57Z",
      "updated_at": "2025-04-14T19:20:57Z",
      "author_association": "MEMBER",
      "body": "Tend to suggest this PR be closed per discussions above (e.g. among others in https://github.com/bitcoin/bips/pull/1787#pullrequestreview-2692740268 and https://github.com/bitcoin/bips/pull/1787#discussion_r1991802274) as out-of-scope, perhaps technically unsound, and not proposed beforehand on the bitcoin-dev mailing list.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2802770657",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "commented",
      "id": 2803078199,
      "node_id": "IC_kwDOAN28mc6nE5Q3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2803078199",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-14T21:33:59Z",
      "updated_at": "2025-04-14T21:33:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Given that the Specification does not appear to achieve what the proposal’s Abstract promises and there has been no response to the substantial review in over four weeks, I am going to close this PR. Please let us know if you are still working on this so we can reopen it, or open another PR after a new version of your idea has been presented to the mailing list.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2803078199",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "closed",
      "id": 17256212533,
      "node_id": "CE_lADOAN28mc6tJ6a4zwAAAAQEjOg1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/17256212533",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-14T21:33:59Z"
    },
    {
      "event": "unlabeled",
      "id": 17256930183,
      "node_id": "UNLE_lADOAN28mc6tJ6a4zwAAAAQEl9uH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/17256930183",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-14T22:30:51Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "commented",
      "id": 2803476942,
      "node_id": "IC_kwDOAN28mc6nGanO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2803476942",
      "actor": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T01:19:32Z",
      "updated_at": "2025-04-15T01:19:32Z",
      "author_association": "NONE",
      "body": "  I’m currently working on revisions and expect to have them ready soon.\r\nI’ll post an updated version that addresses the feedback once it’s\r\nfinalized. Appreciate your patience, and I’ll follow up shortly.\r\n\r\nOn Mon, Apr 14, 2025 at 5:34 PM murchandamus ***@***.***>\r\nwrote:\r\n\r\n> Given that the Specification does not appear to achieve what the\r\n> proposal’s Abstract promises and there has been no response to the\r\n> substantial review in over four weeks, I am going to close this PR. Please\r\n> let us know if you are still working on this so we can reopen it, or open\r\n> another PR after a new version of your idea has been presented to the\r\n> mailing list.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/bitcoin/bips/pull/1787#issuecomment-2803078199>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ARQZWIU3I2XQYVA6SHE5MX32ZQSVZAVCNFSM6AAAAABYTQILQOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDQMBTGA3TQMJZHE>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n> *murchandamus* left a comment (bitcoin/bips#1787)\r\n> <https://github.com/bitcoin/bips/pull/1787#issuecomment-2803078199>\r\n>\r\n> Given that the Specification does not appear to achieve what the\r\n> proposal’s Abstract promises and there has been no response to the\r\n> substantial review in over four weeks, I am going to close this PR. Please\r\n> let us know if you are still working on this so we can reopen it, or open\r\n> another PR after a new version of your idea has been presented to the\r\n> mailing list.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/bitcoin/bips/pull/1787#issuecomment-2803078199>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ARQZWIU3I2XQYVA6SHE5MX32ZQSVZAVCNFSM6AAAAABYTQILQOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDQMBTGA3TQMJZHE>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2803476942",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "reopened",
      "id": 17273994326,
      "node_id": "REE_lADOAN28mc6tJ6a4zwAAAAQFnDxW",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/17273994326",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T17:51:10Z"
    },
    {
      "event": "labeled",
      "id": 17273996578,
      "node_id": "LE_lADOAN28mc6tJ6a4zwAAAAQFnEUi",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/17273996578",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T17:51:21Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "commented",
      "id": 2807030705,
      "node_id": "IC_kwDOAN28mc6nT-Ox",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2807030705",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T17:54:13Z",
      "updated_at": "2025-04-15T17:54:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Okay, I reopened this pull request",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2807030705",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "commented",
      "id": 2807273514,
      "node_id": "IC_kwDOAN28mc6nU5gq",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2807273514",
      "actor": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T19:32:11Z",
      "updated_at": "2025-04-15T19:32:11Z",
      "author_association": "NONE",
      "body": "Thank you\r\n\r\n\r\nOn Tue, Apr 15, 2025 at 1:54 PM murchandamus ***@***.***>\r\nwrote:\r\n\r\n> Okay, I reopened this pull request\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/bitcoin/bips/pull/1787#issuecomment-2807030705>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ARQZWISQ4TYFU7DN3G4ZJU32ZVBVXAVCNFSM6AAAAABYTQILQOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDQMBXGAZTANZQGU>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n> *murchandamus* left a comment (bitcoin/bips#1787)\r\n> <https://github.com/bitcoin/bips/pull/1787#issuecomment-2807030705>\r\n>\r\n> Okay, I reopened this pull request\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/bitcoin/bips/pull/1787#issuecomment-2807030705>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ARQZWISQ4TYFU7DN3G4ZJU32ZVBVXAVCNFSM6AAAAABYTQILQOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDQMBXGAZTANZQGU>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2807273514",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDhlMDMyMTQwZmNkYTU2Yzg1MzQ5YmVlOGM2M2ZlNzViZDA4MTAyZGQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/8e032140fcda56c85349bee8c63fe75bd08102dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/8e032140fcda56c85349bee8c63fe75bd08102dd",
      "tree": {
        "sha": "dca0551a51491f857145bb82ed28640839498e77",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/dca0551a51491f857145bb82ed28640839498e77"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6eb2eb7615392dc1bcedf2de10c4d585bb468416",
          "sha": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
          "html_url": "https://github.com/bitcoin/bips/commit/6eb2eb7615392dc1bcedf2de10c4d585bb468416"
        }
      ],
      "message": "new proposal",
      "committer": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-04-28T05:15:03Z"
      },
      "author": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-04-28T05:15:03Z"
      },
      "sha": "8e032140fcda56c85349bee8c63fe75bd08102dd"
    },
    {
      "event": "commented",
      "id": 2834022533,
      "node_id": "IC_kwDOAN28mc6o68CF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2834022533",
      "actor": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-28T05:29:54Z",
      "updated_at": "2025-04-28T05:29:54Z",
      "author_association": "NONE",
      "body": "Hi everyone,\r\n\r\nFirst, I just want to say thank you very much to everyone who took the time to review, ask questions, and challenge the original version of my proposal. I truly appreciate all the advice and critical feedback. It helped me realize many important points I had overlooked, and it gave me the opportunity to dive deeper, refine my thinking, and improve both the technical design and my understanding of Bitcoin’s principles.\r\n\r\nI’m sincerely grateful for the patience, the detailed technical explanations, and for pushing me to think more clearly.\r\n\r\nI would especially like to thank @murchandamus — your detailed feedback, questions, and explanations helped me significantly improve the proposal.\r\nI truly appreciate the time and effort you put into providing such thorough and technical feedback.\r\n\r\nI’d like to respond point-by-point to the key concerns raised previously:\r\n\r\n1. Enforcement vs Client-side Validation:\r\nI now fully recognize that my earlier PBTS (now renamed TSB-P) proposal incorrectly implied that token conservation could be enforced on-chain without consensus changes. That was a misunderstanding on my part.\r\nThe updated TSB-P is explicitly a wallet recognition standard only — similar to BIP39 (seed phrases) or BIP21 (payment URIs).\r\nNo claims are made about token enforcement by Bitcoin nodes; it is purely a voluntary pattern recognized at the wallet level.\r\n\r\n2. Use of OP_CAT and Transaction Introspection:\r\nI now understand that OP_CAT is not available in Bitcoin Script today, and that transaction introspection is not possible without a consensus change like covenants.\r\nThe updated TSB-P proposal completely avoids OP_CAT, introspection, or any claims of enforcing token conservation. It simply standardizes a Taproot leaf script format for wallet display purposes.\r\n\r\n3. Mailing List Submission:\r\nI realize now that I should have posted the early draft to the bitcoin-dev mailing list first. I would like to kindly ask:\r\n👉 Would it be appropriate for me to now post the updated TSB-P draft there for community feedback before submitting an updated PR here?\r\nIf yes, I would be very happy to do so and follow any recommended guidelines or suggestions you have.\r\n\r\n4. Scope Clarification:\r\nBased on your feedback, I’ve made sure that the new TSB-P proposal does not claim to \"improve Bitcoin\" at the protocol level. It aims to improve wallet interoperability only — no consensus changes, no protocol modifications, no on-chain token rules — simply a way for wallets to recognize token-like scripts if they choose to.\r\n\r\nAdditional Notes:\r\n\r\nI have already updated the PR branch with the new TSB-P version based on the feedback.\r\n\r\nI am still actively working on refinements and would love to continue improving it with more input.\r\n\r\nI truly welcome any further comments, critiques, or suggestions to help make this proposal stronger and more aligned with Bitcoin’s philosophy.\r\n\r\nOnce again, I am very thankful for the opportunity to learn from this process, and I deeply appreciate the time and energy the reviewers have invested.\r\n\r\nI look forward to continuing to improve based on your guidance and hope to eventually contribute something valuable back to the Bitcoin ecosystem.\r\n\r\nPlease let me know how you'd prefer me to proceed — I’m ready to post to the mailing list if that would be helpful.\r\n\r\nThank you again! 🙏\r\n\r\n— Gobi Shanthan",
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#issuecomment-2834022533",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787"
    },
    {
      "event": "mentioned",
      "id": 17427206843,
      "node_id": "MEE_lADOAN28mc6tJ6a4zwAAAAQOvhK7",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/17427206843",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-28T05:29:55Z"
    },
    {
      "event": "subscribed",
      "id": 17427206853,
      "node_id": "SE_lADOAN28mc6tJ6a4zwAAAAQOvhLF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/17427206853",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-28T05:29:55Z"
    },
    {
      "event": "renamed",
      "id": 17560975069,
      "node_id": "RTE_lADOAN28mc6tJ6a4zwAAAAQWtzbd",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/17560975069",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T17:51:18Z",
      "rename": {
        "from": "Propose new BIP for Programmable Bitcoin Token Standard (PBTS)",
        "to": "Draft: Wallet Recognition Standard for Taproot Token (TSB-P)"
      }
    },
    {
      "event": "reviewed",
      "id": 2822677407,
      "node_id": "PRR_kwDOAN28mc6oPqOf",
      "url": null,
      "actor": null,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I gave the latest iteration a skim read. \r\n\r\n1. This proposal currently does not meet the minimum requirements for a review as it does not fulfill the formatting requirements.\r\n2. As BIP 2 states, \"the BIP should provide a concise technical specification of the feature and a rationale for the feature.\" This proposal’s heavy use of lists, unnecessary verbosity, and buzz-wordy phrasing is reminiscent of LLM-generated text. The quality of the proposal could be improved drastically by trimming and rewording the sections to focus on the relevant details. Please aim to address an audience of engineers and researchers.\r\n3. This proposal should provide a comparison to other similar proposals such as BRC-20, Taproot Assets, Open Assets, and Runes, if it intends to convince the reader that there is a reason for it to be adopted.\r\n3. It is not clear to me that a token standard would be on-topic here, as it is my understanding that the community expects this repository to focus on technology that supports the Bitcoin currency.\r\n",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#pullrequestreview-2822677407",
      "submitted_at": "2025-05-07T18:25:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991767450",
      "pull_request_review_id": 2678967038,
      "id": 1991767450,
      "node_id": "PRRC_kwDOAN28mc52t_Wa",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 6,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This title clashes with \"PSBTs\" and will lead to confusion should this BIP get adopted. Would you be open to considering a different name?",
      "created_at": "2025-03-12T15:33:07Z",
      "updated_at": "2025-03-12T16:02:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991767450",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991767450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991802274",
      "pull_request_review_id": 2678967038,
      "id": 1991802274,
      "node_id": "PRRC_kwDOAN28mc52uH2i",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 33,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In the Motivation, could you please expand on the issue this proposal addresses and how this proposal improves Bitcoin? It’s not obvious to me how a token standard improves Bitcoin.\r\n\r\nIt is an open question whether colored coin protocols and other token schemes are on-topic for this repository.",
      "created_at": "2025-03-12T15:50:56Z",
      "updated_at": "2025-03-12T16:06:03Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991802274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991802274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991820833",
      "pull_request_review_id": 2678967038,
      "id": 1991820833,
      "node_id": "PRRC_kwDOAN28mc52uMYh",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 97,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You claim that no consensus change is necessary, but it is not clear to me how the special meaning of this new output type is supposed to be enforced without new consensus rules. Could you perhaps clarify this point?",
      "created_at": "2025-03-12T16:00:31Z",
      "updated_at": "2025-03-12T16:02:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991820833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991820833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991823527",
      "pull_request_review_id": 2678967038,
      "id": 1991823527,
      "node_id": "PRRC_kwDOAN28mc52uNCn",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)\n+\n+2. **Example Issuance Script**:\n+```\n+<token_metadata_hash> OP_DROP\n+<issuer_pubkey> OP_CHECKSIG\n+```\n+\n+### Token Contracts\n+\n+PBTS supports several programmable contract types that define how tokens can be transferred and under what conditions they can be spent:\n+\n+#### 1. Auto-Vest (Time-Locked) Contracts\n+\n+Time-locked transfers where tokens become available to the recipient only after a specific date, using Bitcoin's CHECKLOCKTIMEVERIFY opcode.\n+\n+**Script Pattern**:\n+```\n+IF\n+    <locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSE\n+    <issuer_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 2. Milestone-Based Escrow\n+\n+Structured transfers with multiple release stages, each requiring specific conditions like time thresholds and multi-signature approvals.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Milestone 1\n+    <milestone1_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m1> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Milestone 2\n+    <milestone2_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m2> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 3. Oracle-Ready Contracts\n+\n+Contracts designed to work with external data oracles, containing placeholder structures for future oracle implementation.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Oracle verification\n+    <oracle_pubkey> OP_CHECKSIGVERIFY\n+    <condition_hash> OP_SHA256 <expected_result_hash> OP_EQUALVERIFY\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+### Token Transfer\n+\n+PBTS token transfers involve creating transactions that spend from token-containing UTXOs and create new UTXOs with the appropriate scripts to maintain token properties and conditions.\n+\n+1. **Standard Transfer**:\n+   * Spends from a token UTXO\n+   * Creates new outputs with token metadata preserved\n+   * May split tokens across multiple outputs (for partial transfers)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 169,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I seem to be missing something. How are these transactions fashioned to enforce adherence to the token supply limit?",
      "created_at": "2025-03-12T16:02:00Z",
      "updated_at": "2025-03-12T16:02:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991823527",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991823527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991831640",
      "pull_request_review_id": 2679076491,
      "id": 1991831640,
      "node_id": "PRRC_kwDOAN28mc52uPBY",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 6,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991767450,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree, it is too similar in naming to PSBTs.",
      "created_at": "2025-03-12T16:05:56Z",
      "updated_at": "2025-03-12T16:05:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991831640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991831640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992330782",
      "pull_request_review_id": 2679931500,
      "id": 1992330782,
      "node_id": "PRRC_kwDOAN28mc52wI4e",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 6,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991767450,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": " Thank you for your feedback! We recognize the potential confusion with PSBT (Partially Signed Bitcoin Transactions). To avoid this, we have renamed PBTS to TSB (Token Standard on Bitcoin). This ensures clarity and better represents the proposal's goal: establishing a unified standard for Bitcoin-native tokens.\r\n",
      "created_at": "2025-03-12T21:37:48Z",
      "updated_at": "2025-03-12T21:37:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992330782",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992330782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992335087",
      "pull_request_review_id": 2679940083,
      "id": 1992335087,
      "node_id": "PRRC_kwDOAN28mc52wJ7v",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 97,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991820833,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "TBS doesn't require consensus changes because it doesn't introduce any \"special meaning\" at the consensus level. Instead, it uses existing Bitcoin Script capabilities to create self-enforcing token rules.\r\nHere's specifically how it works:\r\nThe token properties (like ID and supply) are committed to in standard Taproot outputs through Bitcoin Script patterns. For example:\r\n<token_metadata_hash> OP_DROP\r\n<issuer_pubkey> OP_CHECKSIG\r\n\r\nWhere token_metadata_hash is a hash of the token's properties including ID and supply.\r\nWhen transferring tokens, spending conditions enforce token rules through standard script validation:\r\n\r\nTo spend a token output, the transaction must provide valid signatures and satisfy all script conditions\r\nNew outputs must preserve the token's properties through identical script commitments\r\nThe sum of token amounts in the outputs must match the inputs (preventing inflation)\r\n\r\nCrucially, this doesn't require Bitcoin nodes to understand the concept of \"tokens\" - they simply enforce normal script execution rules. The token semantics are interpreted by compatible wallet software, but the validation happens through standard Bitcoin transaction verification.\r\nIt's similar to how multisig wallets work - Bitcoin consensus rules don't understand the higher-level concept of \"shared custody,\" but they enforce the script conditions that implement it.\r\n",
      "created_at": "2025-03-12T21:41:36Z",
      "updated_at": "2025-03-17T06:05:24Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992335087",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992335087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992336135",
      "pull_request_review_id": 2679941801,
      "id": 1992336135,
      "node_id": "PRRC_kwDOAN28mc52wKMH",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)\n+\n+2. **Example Issuance Script**:\n+```\n+<token_metadata_hash> OP_DROP\n+<issuer_pubkey> OP_CHECKSIG\n+```\n+\n+### Token Contracts\n+\n+PBTS supports several programmable contract types that define how tokens can be transferred and under what conditions they can be spent:\n+\n+#### 1. Auto-Vest (Time-Locked) Contracts\n+\n+Time-locked transfers where tokens become available to the recipient only after a specific date, using Bitcoin's CHECKLOCKTIMEVERIFY opcode.\n+\n+**Script Pattern**:\n+```\n+IF\n+    <locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSE\n+    <issuer_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 2. Milestone-Based Escrow\n+\n+Structured transfers with multiple release stages, each requiring specific conditions like time thresholds and multi-signature approvals.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Milestone 1\n+    <milestone1_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m1> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Milestone 2\n+    <milestone2_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m2> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 3. Oracle-Ready Contracts\n+\n+Contracts designed to work with external data oracles, containing placeholder structures for future oracle implementation.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Oracle verification\n+    <oracle_pubkey> OP_CHECKSIGVERIFY\n+    <condition_hash> OP_SHA256 <expected_result_hash> OP_EQUALVERIFY\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+### Token Transfer\n+\n+PBTS token transfers involve creating transactions that spend from token-containing UTXOs and create new UTXOs with the appropriate scripts to maintain token properties and conditions.\n+\n+1. **Standard Transfer**:\n+   * Spends from a token UTXO\n+   * Creates new outputs with token metadata preserved\n+   * May split tokens across multiple outputs (for partial transfers)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 169,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991823527,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you for your question on token supply enforcement. This is indeed a critical aspect of the proposal.\r\nThe token supply limit is enforced through a combination of transaction structure and script verification without requiring consensus changes:\r\n\r\nGenesis Commitment:\r\nWhen tokens are initially created, a specific UTXO contains the total supply commitment:\r\nCopy<token_id> <total_supply> <metadata_hash> OP_CAT OP_CAT OP_SHA256 <genesis_commitment_hash> OP_EQUALVERIFY\r\n<issuer_pubkey> OP_CHECKSIG\r\n\r\nConservation in Transfers:\r\nFor any transfer, the transaction must:\r\n\r\nSpend from one or more UTXOs containing token commitments\r\nCreate new outputs with identical token ID and metadata commitments\r\nEnsure numerical conservation of the token amount\r\n\r\n\r\nExample Transfer Mechanism:\r\nCopy// Input\r\nUTXO with token_amount_in (e.g., 100 tokens)\r\n\r\n// Outputs\r\nOutput1: <token_id> <amount1> <metadata_hash> OP_CAT OP_CAT OP_SHA256 <token_commitment> OP_EQUALVERIFY <recipient1_pubkey> OP_CHECKSIG\r\nOutput2: <token_id> <amount2> <metadata_hash> OP_CAT OP_CAT OP_SHA256 <token_commitment> OP_EQUALVERIFY <recipient2_pubkey> OP_CHECKSIG\r\nThe transaction is only valid if amount1 + amount2 = token_amount_in\r\n\r\nThe key insight is that Bitcoin's existing UTXO model inherently enforces conservation:\r\n\r\nYou can only spend what exists\r\nYou can't double-spend the same UTXO\r\nScript verification ensures the token metadata remains consistent\r\n\r\nBy encoding token amounts directly in the output scripts and requiring validation of these values during transfers, the supply limit is enforced through regular Bitcoin transaction validation rules.\r\nNo new outputs containing valid token commitments can be created without spending existing ones, and the amount validation in the scripts ensures no inflation occurs during transfers.\r\n",
      "created_at": "2025-03-12T21:42:42Z",
      "updated_at": "2025-03-17T05:57:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992336135",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992336135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992363783",
      "pull_request_review_id": 2679983027,
      "id": 1992363783,
      "node_id": "PRRC_kwDOAN28mc52wQ8H",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 33,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991802274,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We initially submitted TBS as a standard BIP, but it should have been an informational BIP—apologies for the mistake. Regarding comparisons, I understand skepticism about another token standard; TBS isn’t meant to replace others but to provide a more Bitcoin-native approach that aligns with its security and validation model. While it’s an open question whether token protocols belong in this repository, token activity is already happening on Bitcoin (e.g., Ordinals), often inefficiently. TBS aims to improve Bitcoin by offering a structured, UTXO-based standard that optimizes Taproot, reducing blockchain bloat and improving transaction efficiency compared to ad-hoc tokenization methods.",
      "created_at": "2025-03-12T22:08:20Z",
      "updated_at": "2025-03-17T06:05:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992363783",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992363783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000089161",
      "pull_request_review_id": 2692740268,
      "id": 2000089161,
      "node_id": "PRRC_kwDOAN28mc53NvBJ",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 70,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems to me that you might mean \"BRC20\" tokens here, when you refer to \"Ordinals\". The term Ordinals refers to a concept of assigning serial numbers to each satoshi in the order they were minted and tracking these satoshis per some defined rules through the history of the Bitcoin transaction graph.",
      "created_at": "2025-03-18T02:57:25Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000089161",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000089161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000092123",
      "pull_request_review_id": 2692740268,
      "id": 2000092123,
      "node_id": "PRRC_kwDOAN28mc53Nvvb",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 6,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991767450,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could you please update the title of this PR, the title of the BIP, and the content of the document to reflect the new name?",
      "created_at": "2025-03-18T03:01:16Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000092123",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000092123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000092674",
      "pull_request_review_id": 2692740268,
      "id": 2000092674,
      "node_id": "PRRC_kwDOAN28mc53Nv4C",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 21,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "E.g., here and in many other places it still says \"PBTS\"",
      "created_at": "2025-03-18T03:02:07Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000092674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000092674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000095181",
      "pull_request_review_id": 2692740268,
      "id": 2000095181,
      "node_id": "PRRC_kwDOAN28mc53NwfN",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 33,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991802274,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There seems to be a misunderstanding here. I am not complaining about the type of the BIP, I’m pointing out that many members of this community are of the opinion that this repository should only collect proposals that further the Bitcoin currency. Colored coin protocols and token standards are inherently about other assets.",
      "created_at": "2025-03-18T03:06:04Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000095181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000095181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000101043",
      "pull_request_review_id": 2692740268,
      "id": 2000101043,
      "node_id": "PRRC_kwDOAN28mc53Nx6z",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 82,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The Specification section should provide a formal description of the new feature that is precise and comprehensive enough to allow implementation of the feature.",
      "created_at": "2025-03-18T03:10:27Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000101043",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000101043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000133806",
      "pull_request_review_id": 2692740268,
      "id": 2000133806,
      "node_id": "PRRC_kwDOAN28mc53N56u",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 97,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991820833,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The token properties (like ID and supply) are committed to in standard Taproot outputs through Bitcoin Script patterns. For example:\r\n> <token_metadata_hash> OP_DROP\r\n> <issuer_pubkey> OP_CHECKSIG\r\n\r\nThe leaf script `<hash> OP_DROP <pubkey> OP_CHECKSIG` can be satisfied by providing merely a signature corresponding to the pubkey and the transaction in the witness:\r\n\r\n    <sig> <hash> OP_DROP <pubkey> OP_CHECKSIG\r\n\r\nis processed as follows. The signature is pushed on the stack, the hash is pushed on the stack, the hash is dropped, the pubkey is pushed on the stack, then OP_CHECKSIG checks whether the signature is a valid signature of the transaction by the private key corresponding to the pubkey. Please elaborate how this script commits to the token properties and how that can be used to enforce and validate the tokens.\r\n\r\n> Where token_metadata_hash is a hash of the token's properties including ID and supply.\r\n\r\nAs described, the token_metadata_hash is just dropped, so as far as I can tell, any data can be provided here to the same effect.\r\n\r\n> When transferring tokens, spending conditions enforce token rules through standard script validation:\r\n>\r\n> To spend a token output, the transaction must provide valid signatures and satisfy all script conditions\r\n\r\nThe only relevant condition that I see here appears to require a signature from a specific key.\r\n\r\n> New outputs must preserve the token's properties through identical script commitments\r\n\r\nHow is it enforced that subsequent outputs preserve the token properties? I do not see any mechanism that encumbers the subsequent outputs, nor does the above described output script require any such thing. What transaction introspection mechanism are you using to read the \"token_metadata_hash\" from the prior output? How is it ensured that the new outputs contain the identical script commitments. Are you proposing new consensus rules that enforce this? If so, what are these new consensus rules? It seems to me that if you can pull this off without new consensus rules, the proponents fighting for several years to introduce some covenant proposals would be excited to learn in detail how you manage to do that.\r\n\r\n> The sum of token amounts in the outputs must match the inputs (preventing inflation)\r\n\r\nHow is the token amount preserved? We threw away the token_metadata_hash in the output script, and we don’t have any mechanism to enforce any properties for the new outputs.\r\n\r\n> Crucially, this doesn't require Bitcoin nodes to understand the concept of \"tokens\" - they simply enforce normal script execution rules. \r\n\r\nThe described scripts  indeed do not require Bitcoin nodes to understand anything about tokens, because they in fact simple ignore all information about the tokens and only enforce the normal script execution rules, which do not whatsoever seem to ensure the persistence of tokens.\r\n\r\n> The token semantics are interpreted by compatible wallet software, but the validation happens through standard Bitcoin transaction verification.\r\n\r\nIf the token semantics are only interpreted by compatible wallet software, we are talking about a client-side validation scheme.\r\n\r\n> It's similar to how multisig wallets work - Bitcoin consensus rules don't understand the higher-level concept of \"shared custody,\" but they enforce the script conditions that implement it.\r\n\r\nNo? OP_CHECKMULTISIG and OP_CHECKSIGADD are part of the Script language and explicitly count the number of signatures.",
      "created_at": "2025-03-18T03:38:23Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000133806",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000133806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000138718",
      "pull_request_review_id": 2692740268,
      "id": 2000138718,
      "node_id": "PRRC_kwDOAN28mc53N7He",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)\n+\n+2. **Example Issuance Script**:\n+```\n+<token_metadata_hash> OP_DROP\n+<issuer_pubkey> OP_CHECKSIG\n+```\n+\n+### Token Contracts\n+\n+PBTS supports several programmable contract types that define how tokens can be transferred and under what conditions they can be spent:\n+\n+#### 1. Auto-Vest (Time-Locked) Contracts\n+\n+Time-locked transfers where tokens become available to the recipient only after a specific date, using Bitcoin's CHECKLOCKTIMEVERIFY opcode.\n+\n+**Script Pattern**:\n+```\n+IF\n+    <locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSE\n+    <issuer_pubkey> OP_CHECKSIG\n+ENDIF\n+```",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 121,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This script appears to allow the issuer to always spend the UTXO and the recipient to also spend the UTXO after some time. The script does not seem to exhibit any characteristics that enforce any special behavior regarding tokens.",
      "created_at": "2025-03-18T03:43:21Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000138718",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000138718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 114,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000139658",
      "pull_request_review_id": 2692740268,
      "id": 2000139658,
      "node_id": "PRRC_kwDOAN28mc53N7WK",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)\n+\n+2. **Example Issuance Script**:\n+```\n+<token_metadata_hash> OP_DROP\n+<issuer_pubkey> OP_CHECKSIG\n+```\n+\n+### Token Contracts\n+\n+PBTS supports several programmable contract types that define how tokens can be transferred and under what conditions they can be spent:\n+\n+#### 1. Auto-Vest (Time-Locked) Contracts\n+\n+Time-locked transfers where tokens become available to the recipient only after a specific date, using Bitcoin's CHECKLOCKTIMEVERIFY opcode.\n+\n+**Script Pattern**:\n+```\n+IF\n+    <locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSE\n+    <issuer_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 2. Milestone-Based Escrow\n+\n+Structured transfers with multiple release stages, each requiring specific conditions like time thresholds and multi-signature approvals.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Milestone 1\n+    <milestone1_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m1> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Milestone 2\n+    <milestone2_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m2> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 141,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This may be describing a decaying multisig, but again doesn’t appear to introduce any handling of tokens.",
      "created_at": "2025-03-18T03:44:52Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000139658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000139658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 129,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000150674",
      "pull_request_review_id": 2692740268,
      "id": 2000150674,
      "node_id": "PRRC_kwDOAN28mc53N-CS",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)\n+\n+2. **Example Issuance Script**:\n+```\n+<token_metadata_hash> OP_DROP\n+<issuer_pubkey> OP_CHECKSIG\n+```\n+\n+### Token Contracts\n+\n+PBTS supports several programmable contract types that define how tokens can be transferred and under what conditions they can be spent:\n+\n+#### 1. Auto-Vest (Time-Locked) Contracts\n+\n+Time-locked transfers where tokens become available to the recipient only after a specific date, using Bitcoin's CHECKLOCKTIMEVERIFY opcode.\n+\n+**Script Pattern**:\n+```\n+IF\n+    <locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSE\n+    <issuer_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 2. Milestone-Based Escrow\n+\n+Structured transfers with multiple release stages, each requiring specific conditions like time thresholds and multi-signature approvals.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Milestone 1\n+    <milestone1_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m1> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Milestone 2\n+    <milestone2_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m2> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 3. Oracle-Ready Contracts\n+\n+Contracts designed to work with external data oracles, containing placeholder structures for future oracle implementation.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Oracle verification\n+    <oracle_pubkey> OP_CHECKSIGVERIFY\n+    <condition_hash> OP_SHA256 <expected_result_hash> OP_EQUALVERIFY\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+### Token Transfer\n+\n+PBTS token transfers involve creating transactions that spend from token-containing UTXOs and create new UTXOs with the appropriate scripts to maintain token properties and conditions.\n+\n+1. **Standard Transfer**:\n+   * Spends from a token UTXO\n+   * Creates new outputs with token metadata preserved\n+   * May split tokens across multiple outputs (for partial transfers)",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 169,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991823527,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Thank you for your question on token supply enforcement. This is indeed a critical aspect of the proposal. The token supply limit is enforced through a combination of transaction structure and script verification without requiring consensus changes:\r\n> \r\n> Genesis Commitment: When tokens are initially created, a specific UTXO contains the total supply commitment: Copy<token_id> <total_supply> <metadata_hash> OP_CAT OP_CAT OP_SHA256 <genesis_commitment_hash> OP_EQUALVERIFY <issuer_pubkey> OP_CHECKSIG\r\n\r\nWhile there is a proposal to [reinstate](https://github.com/bitcoin/bips/blob/master/bip-0347.mediawiki) OP_CAT in Tapscript, it is currently not part of Bitcoin’s Script language or Tapscript language, so I’m afraid, that this does not match your prior claim that your proposal doesn’t require consensus change.\r\n\r\nFurther, none of the inputs to the OP_EQUALVERIFY in the following depend on the content of the transaction.\r\n\r\n> <token_id> <total_supply> <metadata_hash> OP_CAT OP_CAT OP_SHA256 <genesis_commitment_hash> OP_EQUALVERIFY <issuer_pubkey> OP_CHECKSIG\r\n\r\nSo, this is trivially true, regardless of where you direct the funds from the UTXO.\r\n\r\n> Conservation in Transfers: For any transfer, the transaction must:\r\n> \r\n> Spend from one or more UTXOs containing token commitments Create new outputs with identical token ID and metadata commitments Ensure numerical conservation of the token amount\r\n\r\nYou seem to be describing the intended behavior, but the point of a Specification is to provide precise and comprehensive instructions how this behavior is achieved.\r\n\r\n> \r\n> Example Transfer Mechanism: Copy// Input UTXO with token_amount_in (e.g., 100 tokens)\r\n> \r\n> // Outputs Output1: <token_id> <metadata_hash> OP_CAT OP_CAT OP_SHA256 <token_commitment> OP_EQUALVERIFY <recipient1_pubkey> OP_CHECKSIG Output2: <token_id> <metadata_hash> OP_CAT OP_CAT OP_SHA256 <token_commitment> OP_EQUALVERIFY <recipient2_pubkey> OP_CHECKSIG The transaction is only valid if amount1 + amount2 = token_amount_in\r\n\r\nHow do you enforce that a transaction is only valid when the two output amounts match the \"token_amount_in\". Where was \"token_amount_in\" provided? Where are these values compared? How does validation fail when they don’t add up?\r\n\r\n> The key insight is that Bitcoin's existing UTXO model inherently enforces conservation:\r\n> \r\n> You can only spend what exists You can't double-spend the same UTXO Script verification ensures the token metadata remains consistent\r\n\r\nI have yet to see a hint of a mechanism that enforces metadata consistency.\r\n\r\n> By encoding token amounts directly in the output scripts and requiring validation of these values during transfers, the supply limit is enforced through regular Bitcoin transaction validation rules. No new outputs containing valid token commitments can be created without spending existing ones, and the amount validation in the scripts ensures no inflation occurs during transfers.\r\n\r\nSounds great in theory, however, I seem to be unable to find a description of the mechanism that enforces token commitments, or amount consistency.",
      "created_at": "2025-03-18T03:59:58Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000150674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000150674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000160009",
      "pull_request_review_id": 2692740268,
      "id": 2000160009,
      "node_id": "PRRC_kwDOAN28mc53OAUJ",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 15,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don’t seem to have any emails received via the Bitcoin Developer Mailing List that pertain to this proposal.",
      "created_at": "2025-03-18T04:11:32Z",
      "updated_at": "2025-03-18T04:38:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2000160009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2000160009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2042786992",
      "pull_request_review_id": 2765423373,
      "id": 2042786992,
      "node_id": "PRRC_kwDOAN28mc55wnSw",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.",
      "path": "bip-pbst.md",
      "position": null,
      "original_position": 33,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991802274,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I’m pointing out that many members of this community are of the opinion that this repository should only collect proposals that further the Bitcoin currency. Colored coin protocols and token standards are inherently about other assets.\r\n\r\nAgree with @murchandamus here. This proposal, along with token protocols in general, seem off-topic and out-of-scope for the bitcoin-dev mail list (was this proposal submitted there for feedback?) and the BIPs repository.",
      "created_at": "2025-04-14T19:13:12Z",
      "updated_at": "2025-04-14T19:13:13Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2042786992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2042786992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078179256",
      "pull_request_review_id": 2822677407,
      "id": 2078179256,
      "node_id": "PRRC_kwDOAN28mc573n-4",
      "diff_hunk": "@@ -0,0 +1,684 @@\n+BIP: XXX\n+\n+Layer: Applications\n+\n+Title: Wallet Recognition Standard for Taproot Token (TSB-P)",
      "path": "bip-tbs-p.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The title exceeds the limit of 44 characters.",
      "created_at": "2025-05-07T17:52:23Z",
      "updated_at": "2025-05-07T18:25:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2078179256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078179256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078180761",
      "pull_request_review_id": 2822677407,
      "id": 2078180761,
      "node_id": "PRRC_kwDOAN28mc573oWZ",
      "diff_hunk": "@@ -0,0 +1,684 @@\n+BIP: XXX\n+\n+Layer: Applications\n+\n+Title: Wallet Recognition Standard for Taproot Token (TSB-P)\n+\n+Author: Gobi Shanthan \\<gobi@torram.xyz\\>, Lee Raj. \\<lee@torram.xyz\\>\n+\n+Comments-Summary: A standard for wallet interoperability in token pattern recognition\n+\n+Status: Draft\n+\n+Type: Informational",
      "path": "bip-tbs-p.md",
      "position": 13,
      "original_position": 13,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is a Standards Track BIP",
      "created_at": "2025-05-07T17:52:46Z",
      "updated_at": "2025-05-07T18:25:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2078180761",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078180761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078183056",
      "pull_request_review_id": 2822677407,
      "id": 2078183056,
      "node_id": "PRRC_kwDOAN28mc573o6Q",
      "diff_hunk": "@@ -0,0 +1,684 @@\n+BIP: XXX",
      "path": "bip-tbs-p.md",
      "position": 1,
      "original_position": 1,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The preamble does not match the formatting requirements. Please fix it so this proposal can be reviewed. You can find an example of a Markdown formatted preamble e.g. in BIP  3. ",
      "created_at": "2025-05-07T17:53:19Z",
      "updated_at": "2025-05-07T18:25:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2078183056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078183056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078186598",
      "pull_request_review_id": 2822677407,
      "id": 2078186598,
      "node_id": "PRRC_kwDOAN28mc573pxm",
      "diff_hunk": "@@ -0,0 +1,684 @@\n+BIP: XXX\n+\n+Layer: Applications\n+\n+Title: Wallet Recognition Standard for Taproot Token (TSB-P)\n+\n+Author: Gobi Shanthan \\<gobi@torram.xyz\\>, Lee Raj. \\<lee@torram.xyz\\>\n+\n+Comments-Summary: A standard for wallet interoperability in token pattern recognition\n+\n+Status: Draft\n+\n+Type: Informational\n+\n+Created: 2025-04-20\n+\n+License: BSD-2-Clause\n+\n+Discussions-To: [[bitcoin-dev@lists.linuxfoundation.org](mailto:bitcoin-dev@lists.linuxfoundation.org)]",
      "path": "bip-tbs-p.md",
      "position": 19,
      "original_position": 19,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The Discussions-To header is only necessary if you wish to discuss in another place than the Bitcoin Developer mailing list. Also, your link is outdated. Linux Foundation Lists were discontinued. You can find the actual mailing list address in BIP 2 or BIP 3.",
      "created_at": "2025-05-07T17:55:12Z",
      "updated_at": "2025-05-07T18:25:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2078186598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078186598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078190992",
      "pull_request_review_id": 2822677407,
      "id": 2078190992,
      "node_id": "PRRC_kwDOAN28mc573q2Q",
      "diff_hunk": "@@ -0,0 +1,684 @@\n+BIP: XXX\n+\n+Layer: Applications\n+\n+Title: Wallet Recognition Standard for Taproot Token (TSB-P)\n+\n+Author: Gobi Shanthan \\<gobi@torram.xyz\\>, Lee Raj. \\<lee@torram.xyz\\>\n+\n+Comments-Summary: A standard for wallet interoperability in token pattern recognition\n+\n+Status: Draft\n+\n+Type: Informational\n+\n+Created: 2025-04-20\n+\n+License: BSD-2-Clause\n+\n+Discussions-To: [[bitcoin-dev@lists.linuxfoundation.org](mailto:bitcoin-dev@lists.linuxfoundation.org)]\n+\n+# Abstract",
      "path": "bip-tbs-p.md",
      "position": 21,
      "original_position": 21,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Markdown documents can only have one first level headline. (Sub-)section headers are prefixed with two or more hash signs.",
      "created_at": "2025-05-07T17:57:40Z",
      "updated_at": "2025-05-07T18:25:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2078190992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078190992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078197271",
      "pull_request_review_id": 2822677407,
      "id": 2078197271,
      "node_id": "PRRC_kwDOAN28mc573sYX",
      "diff_hunk": "@@ -0,0 +1,684 @@\n+BIP: XXX\n+\n+Layer: Applications\n+\n+Title: Wallet Recognition Standard for Taproot Token (TSB-P)\n+\n+Author: Gobi Shanthan \\<gobi@torram.xyz\\>, Lee Raj. \\<lee@torram.xyz\\>\n+\n+Comments-Summary: A standard for wallet interoperability in token pattern recognition\n+\n+Status: Draft\n+\n+Type: Informational\n+\n+Created: 2025-04-20\n+\n+License: BSD-2-Clause\n+\n+Discussions-To: [[bitcoin-dev@lists.linuxfoundation.org](mailto:bitcoin-dev@lists.linuxfoundation.org)]\n+\n+# Abstract\n+\n+This document proposes a wallet interoperability standard for recognizing and interpreting token patterns in Taproot transactions, similar to how BIP39 standardized seed phrases without modifying consensus rules. The Token Standard on Bitcoin - Programmable (TSB-P) defines a structured format within Taproot leaf scripts that allows wallets to consistently identify, display, and interpret token information embedded in standard Bitcoin transactions.\n+\n+By creating a \"BIP39 for token recognition,\" this specification aims to improve user experience, reduce implementation fragmentation, and standardize representation of token-related activities on Bitcoin without requiring consensus changes or modifying Bitcoin's primary purpose as a currency.\n+\n+# Motivation\n+\n+## The Need for Wallet Interoperability\n+\n+Bitcoin wallets currently lack a standardized approach to recognizing and displaying token-related transactions, resulting in several challenges:\n+\n+1. **Inconsistent User Experience**: The same token-representing UTXO may appear differently across wallets or not be recognized at all\n+2. **Implementation Fragmentation**: Wallet developers must create custom token detection logic\n+3. **Excessive Blockchain Usage**: Some token approaches create unnecessary data bloat\n+4. **User Confusion**: Difficult to distinguish between token types and behaviors\n+\n+## Relationship to Other Standards\n+\n+This proposal draws inspiration from several successful Bitcoin standards:\n+\n+- **BIP39**: Standardized seed phrases for wallets without changing consensus rules\n+- **BIP21**: Standardized payment request URIs for consistent wallet handling\n+- **BIP329**: Standardized wallet labels for better interoperability\n+\n+Each of these standards improved Bitcoin's usability through wallet interoperability without requiring protocol modifications. TSB-P follows this pattern by standardizing how wallets recognize token-related patterns.\n+\n+## Benefits of Standardization\n+\n+A standardized wallet recognition pattern for token-representing UTXOs would:\n+\n+1. **Improve User Experience**: Tokens are displayed consistently across compatible wallets\n+2. **Simplify Wallet Development**: Standard patterns are easier to implement\n+3. **Reduce Blockchain Impact**: Efficient representation using Taproot's advantages\n+4. **Enable Advanced Features**: Support for time-locks, multisig, and other Bitcoin Script features\n+\n+Importantly, this standard does not seek to modify Bitcoin's consensus rules or create new token validation systems. It simply standardizes how wallets interpret specific Taproot script patterns, similar to how BIP39 standardized seed phrase interpretation.\n+\n+# Specification\n+\n+## Wallet Recognition Pattern Structure\n+\n+This BIP defines a standardized Taproot leaf script pattern that compatible wallets should recognize and interpret:\n+\n+```\n+OP_TRUE\n+OP_IF\n+  <\"TSB\">                  # 3-byte marker\n+  <tokenID>                # 16 bytes identifier",
      "path": "bip-tbs-p.md",
      "position": 69,
      "original_position": 69,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why is this 16 bytes? Do you really need to be able to distinguish up to 2<super>128</super> different tokens?",
      "created_at": "2025-05-07T18:01:14Z",
      "updated_at": "2025-05-07T18:25:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2078197271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078197271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078202841",
      "pull_request_review_id": 2822677407,
      "id": 2078202841,
      "node_id": "PRRC_kwDOAN28mc573tvZ",
      "diff_hunk": "@@ -0,0 +1,684 @@\n+BIP: XXX\n+\n+Layer: Applications\n+\n+Title: Wallet Recognition Standard for Taproot Token (TSB-P)\n+\n+Author: Gobi Shanthan \\<gobi@torram.xyz\\>, Lee Raj. \\<lee@torram.xyz\\>\n+\n+Comments-Summary: A standard for wallet interoperability in token pattern recognition\n+\n+Status: Draft\n+\n+Type: Informational\n+\n+Created: 2025-04-20\n+\n+License: BSD-2-Clause\n+\n+Discussions-To: [[bitcoin-dev@lists.linuxfoundation.org](mailto:bitcoin-dev@lists.linuxfoundation.org)]\n+\n+# Abstract\n+\n+This document proposes a wallet interoperability standard for recognizing and interpreting token patterns in Taproot transactions, similar to how BIP39 standardized seed phrases without modifying consensus rules. The Token Standard on Bitcoin - Programmable (TSB-P) defines a structured format within Taproot leaf scripts that allows wallets to consistently identify, display, and interpret token information embedded in standard Bitcoin transactions.\n+\n+By creating a \"BIP39 for token recognition,\" this specification aims to improve user experience, reduce implementation fragmentation, and standardize representation of token-related activities on Bitcoin without requiring consensus changes or modifying Bitcoin's primary purpose as a currency.\n+\n+# Motivation\n+\n+## The Need for Wallet Interoperability\n+\n+Bitcoin wallets currently lack a standardized approach to recognizing and displaying token-related transactions, resulting in several challenges:\n+\n+1. **Inconsistent User Experience**: The same token-representing UTXO may appear differently across wallets or not be recognized at all\n+2. **Implementation Fragmentation**: Wallet developers must create custom token detection logic\n+3. **Excessive Blockchain Usage**: Some token approaches create unnecessary data bloat\n+4. **User Confusion**: Difficult to distinguish between token types and behaviors\n+\n+## Relationship to Other Standards\n+\n+This proposal draws inspiration from several successful Bitcoin standards:\n+\n+- **BIP39**: Standardized seed phrases for wallets without changing consensus rules\n+- **BIP21**: Standardized payment request URIs for consistent wallet handling\n+- **BIP329**: Standardized wallet labels for better interoperability\n+\n+Each of these standards improved Bitcoin's usability through wallet interoperability without requiring protocol modifications. TSB-P follows this pattern by standardizing how wallets recognize token-related patterns.\n+\n+## Benefits of Standardization\n+\n+A standardized wallet recognition pattern for token-representing UTXOs would:\n+\n+1. **Improve User Experience**: Tokens are displayed consistently across compatible wallets\n+2. **Simplify Wallet Development**: Standard patterns are easier to implement\n+3. **Reduce Blockchain Impact**: Efficient representation using Taproot's advantages\n+4. **Enable Advanced Features**: Support for time-locks, multisig, and other Bitcoin Script features\n+\n+Importantly, this standard does not seek to modify Bitcoin's consensus rules or create new token validation systems. It simply standardizes how wallets interpret specific Taproot script patterns, similar to how BIP39 standardized seed phrase interpretation.\n+\n+# Specification\n+\n+## Wallet Recognition Pattern Structure\n+\n+This BIP defines a standardized Taproot leaf script pattern that compatible wallets should recognize and interpret:\n+\n+```\n+OP_TRUE\n+OP_IF\n+  <\"TSB\">                  # 3-byte marker\n+  <tokenID>                # 16 bytes identifier\n+  <amount>                 # 8 bytes (uint64 big-endian)\n+  <typeCode>               # 1 byte token type\n+  OP_DROP                  # Drop markers from stack\n+  OP_DROP\n+  OP_DROP\n+  OP_DROP\n+  <metadata>               # Variable length user data\n+  <timestamp>              # 8 bytes (uint64 big-endian)\n+  OP_DROP                  # Drop optional fields\n+  OP_DROP\n+  <programmable_logic>     # Spending conditions\n+OP_ENDIF\n+```",
      "path": "bip-tbs-p.md",
      "position": 82,
      "original_position": 82,
      "commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "original_commit_id": "8e032140fcda56c85349bee8c63fe75bd08102dd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If I count right this token encoding has 45 bytes + \"metadata\" + \"programmable_logic\" in addition to requiring an output and input. I don’t see how that qualifies as \"reduced blockchain impact\", especially if compared with Runes.",
      "created_at": "2025-05-07T18:05:05Z",
      "updated_at": "2025-05-07T18:25:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r2078202841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2078202841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    }
  ]
}