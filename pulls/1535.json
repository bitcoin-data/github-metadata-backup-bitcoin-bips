{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1535",
    "id": 1667835923,
    "node_id": "PR_kwDOAN28mc5jaSgT",
    "html_url": "https://github.com/bitcoin/bips/pull/1535",
    "diff_url": "https://github.com/bitcoin/bips/pull/1535.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1535.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1535/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/d2932bd00d16992d90df82d2a37db79c355046c4",
    "number": 1535,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "BIPâ€¯348: OP_CHECKSIGFROMSTACK",
    "user": {
      "login": "reardencode",
      "id": 730881,
      "node_id": "MDQ6VXNlcjczMDg4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reardencode",
      "html_url": "https://github.com/reardencode",
      "followers_url": "https://api.github.com/users/reardencode/followers",
      "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
      "organizations_url": "https://api.github.com/users/reardencode/orgs",
      "repos_url": "https://api.github.com/users/reardencode/repos",
      "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/reardencode/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This BIP is based on the BCH OP_CHECKDATASIG work, as well as postings from the bitcoin dev mailing list in [this thread](https://www.mail-archive.com/bitcoin-dev@lists.linuxfoundation.org/msg10211.html). Some differences appear due to the activation of bips 340, 341, and 342 (taproot) since those were developed.\r\n\r\nOP_CHECKSIGFROMSTACK is an OP_SUCCESS upgrade available only in BIP342 tapscript.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 6924377447,
        "node_id": "LA_kwDOAN28mc8AAAABnLmdZw",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/PR%20Author%20action%20required",
        "name": "PR Author action required",
        "description": "Needs updates, has unaddressed review comments, or is otherwise waiting for PR author",
        "color": "e99695",
        "default": false
      }
    ],
    "created_at": "2024-01-07T18:32:39Z",
    "updated_at": "2024-11-26T19:36:20Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "642f3e00a86c200fea6e8091eb7356d24901158d",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "reardencode:csfs",
      "ref": "csfs",
      "sha": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 446110042,
        "node_id": "R_kgDOGpcZWg",
        "name": "bips",
        "full_name": "reardencode/bips",
        "owner": {
          "login": "reardencode",
          "id": 730881,
          "node_id": "MDQ6VXNlcjczMDg4MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/reardencode",
          "html_url": "https://github.com/reardencode",
          "followers_url": "https://api.github.com/users/reardencode/followers",
          "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
          "organizations_url": "https://api.github.com/users/reardencode/orgs",
          "repos_url": "https://api.github.com/users/reardencode/repos",
          "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/reardencode/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/reardencode/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/reardencode/bips",
        "archive_url": "https://api.github.com/repos/reardencode/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/reardencode/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/reardencode/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/reardencode/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/reardencode/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/reardencode/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/reardencode/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/reardencode/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/reardencode/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/reardencode/bips/contributors",
        "deployments_url": "https://api.github.com/repos/reardencode/bips/deployments",
        "downloads_url": "https://api.github.com/repos/reardencode/bips/downloads",
        "events_url": "https://api.github.com/repos/reardencode/bips/events",
        "forks_url": "https://api.github.com/repos/reardencode/bips/forks",
        "git_commits_url": "https://api.github.com/repos/reardencode/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/reardencode/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/reardencode/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/reardencode/bips.git",
        "issue_comment_url": "https://api.github.com/repos/reardencode/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/reardencode/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/reardencode/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/reardencode/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/reardencode/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/reardencode/bips/languages",
        "merges_url": "https://api.github.com/repos/reardencode/bips/merges",
        "milestones_url": "https://api.github.com/repos/reardencode/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/reardencode/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/reardencode/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/reardencode/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:reardencode/bips.git",
        "stargazers_url": "https://api.github.com/repos/reardencode/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/reardencode/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/reardencode/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/reardencode/bips/subscription",
        "tags_url": "https://api.github.com/repos/reardencode/bips/tags",
        "teams_url": "https://api.github.com/repos/reardencode/bips/teams",
        "trees_url": "https://api.github.com/repos/reardencode/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/reardencode/bips.git",
        "hooks_url": "https://api.github.com/repos/reardencode/bips/hooks",
        "svn_url": "https://github.com/reardencode/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 15837,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-26T19:24:07Z",
        "created_at": "2022-01-09T14:22:40Z",
        "updated_at": "2022-01-11T15:47:49Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "532c4c10f2e04b3dca7d39ce1b1a4bdbf0c88e52",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5384,
        "stargazers_count": 9445,
        "watchers_count": 9445,
        "size": 15664,
        "default_branch": "master",
        "open_issues_count": 39,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-25T22:18:04Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-11-26T16:08:36Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 149,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 37,
    "comments": 15
  },
  "events": [
    {
      "event": "subscribed",
      "id": 11412458971,
      "node_id": "SE_lADOAN28mc57VhshzwAAAAKoPE3b",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11412458971",
      "actor": {
        "login": "gpatkinson",
        "id": 8332802,
        "node_id": "MDQ6VXNlcjgzMzI4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8332802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gpatkinson",
        "html_url": "https://github.com/gpatkinson",
        "followers_url": "https://api.github.com/users/gpatkinson/followers",
        "following_url": "https://api.github.com/users/gpatkinson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gpatkinson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gpatkinson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gpatkinson/subscriptions",
        "organizations_url": "https://api.github.com/users/gpatkinson/orgs",
        "repos_url": "https://api.github.com/users/gpatkinson/repos",
        "events_url": "https://api.github.com/users/gpatkinson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gpatkinson/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T01:12:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11478495300,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAKsK_BE",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11478495300",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T17:18:33Z"
    },
    {
      "event": "reviewed",
      "id": 1828860460,
      "node_id": "PRR_kwDOAN28mc5tAjIs",
      "url": null,
      "actor": null,
      "commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-1828860460",
      "submitted_at": "2024-01-18T05:41:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "reviewed",
      "id": 2016079039,
      "node_id": "PRR_kwDOAN28mc54Kuy_",
      "url": null,
      "actor": null,
      "commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-2016079039",
      "submitted_at": "2024-04-23T01:48:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "labeled",
      "id": 12568619647,
      "node_id": "LE_lADOAN28mc57VhshzwAAAALtJep_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12568619647",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-23T03:37:30Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 2018670045,
      "node_id": "PRR_kwDOAN28mc54UnXd",
      "url": null,
      "actor": null,
      "commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-2018670045",
      "submitted_at": "2024-04-24T02:08:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12598245063,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAALu6fbH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12598245063",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T21:21:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12598440486,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAALu7PIm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12598440486",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T21:41:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12598587769,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAALu7zF5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12598587769",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T21:58:46Z"
    },
    {
      "event": "commented",
      "id": 2075916591,
      "node_id": "IC_kwDOAN28mc57u_kv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2075916591",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T21:59:17Z",
      "updated_at": "2024-04-24T21:59:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated to match the BIN, and with @Roasbeef 's comments. TYVM!",
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2075916591",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "mentioned",
      "id": 12598592183,
      "node_id": "MEE_lADOAN28mc57VhshzwAAAALu70K3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12598592183",
      "actor": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T21:59:18Z"
    },
    {
      "event": "subscribed",
      "id": 12598592198,
      "node_id": "SE_lADOAN28mc57VhshzwAAAALu70LG",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12598592198",
      "actor": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T21:59:18Z"
    },
    {
      "event": "labeled",
      "id": 12598629162,
      "node_id": "LE_lADOAN28mc57VhshzwAAAALu79Mq",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12598629162",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T22:04:07Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12601463023,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAALvGxDv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12601463023",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T04:53:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12601585289,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAALvHO6J",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12601585289",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T05:09:12Z"
    },
    {
      "event": "reviewed",
      "id": 2034287706,
      "node_id": "PRR_kwDOAN28mc55QMRa",
      "url": null,
      "actor": null,
      "commit_id": "0267f3fe4726254e411f3b2cce94721125f7f12d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-2034287706",
      "submitted_at": "2024-05-01T19:18:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "labeled",
      "id": 12745588255,
      "node_id": "LE_lADOAN28mc57VhshzwAAAAL3sj4f",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12745588255",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T15:14:25Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12808565272,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAL7czIY",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12808565272",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-14T21:42:45Z"
    },
    {
      "event": "commented",
      "id": 2111195930,
      "node_id": "IC_kwDOAN28mc591ksa",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2111195930",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-14T21:50:18Z",
      "updated_at": "2024-05-14T21:50:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed preamble.\r\n\r\nThere's still 2 open conversations around this one:\r\n* Should it add CSFSA (after discussions in ATX with Rusty and Rob, I'm inclined to add it)\r\n* Should CSFSV be tapscript only (I'm inclined to add this functionality to legacy scripts as well, but may be in the minority there)\r\n\r\nI'll post on the mailing list for additional opinions on these topics, but not sure whether it makes sense for the BIP to get numbered and merged as is while still potentially subject to those revisions.",
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2111195930",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "commented",
      "id": 2125037024,
      "node_id": "IC_kwDOAN28mc5-qX3g",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2125037024",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T15:06:04Z",
      "updated_at": "2024-05-22T15:06:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "@reardencode: If you feel that your proposal is not ready to be merged, please convert the pull request to a Draft.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2125037024",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "mentioned",
      "id": 12896239449,
      "node_id": "MEE_lADOAN28mc57VhshzwAAAAMArP9Z",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12896239449",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T15:06:06Z"
    },
    {
      "event": "subscribed",
      "id": 12896239465,
      "node_id": "SE_lADOAN28mc57VhshzwAAAAMArP9p",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12896239465",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T15:06:06Z"
    },
    {
      "event": "unlabeled",
      "id": 12896246335,
      "node_id": "UNLE_lADOAN28mc57VhshzwAAAAMArRo_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12896246335",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T15:06:34Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "reviewed",
      "id": 2072170318,
      "node_id": "PRR_kwDOAN28mc57gs9O",
      "url": null,
      "actor": null,
      "commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ProofOfKeags",
        "id": 4033651,
        "node_id": "MDQ6VXNlcjQwMzM2NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4033651?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProofOfKeags",
        "html_url": "https://github.com/ProofOfKeags",
        "followers_url": "https://api.github.com/users/ProofOfKeags/followers",
        "following_url": "https://api.github.com/users/ProofOfKeags/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProofOfKeags/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProofOfKeags/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProofOfKeags/subscriptions",
        "organizations_url": "https://api.github.com/users/ProofOfKeags/orgs",
        "repos_url": "https://api.github.com/users/ProofOfKeags/repos",
        "events_url": "https://api.github.com/users/ProofOfKeags/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProofOfKeags/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-2072170318",
      "submitted_at": "2024-05-22T19:21:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "reviewed",
      "id": 2416318115,
      "node_id": "PRR_kwDOAN28mc6QBhaj",
      "url": null,
      "actor": null,
      "commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Jesus5432",
        "id": 171294169,
        "node_id": "U_kgDOCjW92Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/171294169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jesus5432",
        "html_url": "https://github.com/Jesus5432",
        "followers_url": "https://api.github.com/users/Jesus5432/followers",
        "following_url": "https://api.github.com/users/Jesus5432/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Jesus5432/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Jesus5432/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Jesus5432/subscriptions",
        "organizations_url": "https://api.github.com/users/Jesus5432/orgs",
        "repos_url": "https://api.github.com/users/Jesus5432/repos",
        "events_url": "https://api.github.com/users/Jesus5432/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Jesus5432/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-2416318115",
      "submitted_at": "2024-11-05T17:43:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "convert_to_draft",
      "id": 15191239442,
      "node_id": "CTDE_lADOAN28mc57VhshzwAAAAOJd-sS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15191239442",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-07T19:44:13Z"
    },
    {
      "event": "commented",
      "id": 2463081230,
      "node_id": "IC_kwDOAN28mc6Sz6MO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2463081230",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-07T19:48:02Z",
      "updated_at": "2024-11-07T19:48:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "I converted this to draft since @reardencode indicated that this would likely need more changes before being ready for number assignment and merge. Given that this hasnâ€™t been updated in half a year, is this still in progress?",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2463081230",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "mentioned",
      "id": 15191350807,
      "node_id": "MEE_lADOAN28mc57VhshzwAAAAOJeZ4X",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15191350807",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-07T19:48:03Z"
    },
    {
      "event": "subscribed",
      "id": 15191350818,
      "node_id": "SE_lADOAN28mc57VhshzwAAAAOJeZ4i",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15191350818",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-07T19:48:03Z"
    },
    {
      "event": "commented",
      "id": 2463278340,
      "node_id": "IC_kwDOAN28mc6S0qUE",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2463278340",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-07T21:40:30Z",
      "updated_at": "2024-11-07T21:40:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Definitely still WIP. Just hasn't been much reason to advance the conversation around the two specific questions I mentioned given the state of the broader conversation around bitcoin's future consensus changes.\r\n\r\nI am a bit confused about the need to have those questions answered before merging. Is the intention of the BIPs repository only to hold final specifications for consensus changes, or to enable iterating on consensus changes before proposing a document for numbering and merging?",
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2463278340",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "commented",
      "id": 2465052536,
      "node_id": "IC_kwDOAN28mc6S7bd4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2465052536",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T15:32:43Z",
      "updated_at": "2024-11-08T15:32:43Z",
      "author_association": "MEMBER",
      "body": "@reardencode per your question in https://github.com/bitcoin/bips/pull/1535#issuecomment-2111195930 and above, the current process is that of BIP 2. Iteration while in Draft status seems to be expected, but a BIP may only change status from Draft to Proposed when the author deems it is complete. An incomplete and unofficial simplified requirement list might be: (for number assignment) dev ML discussion, is high-quality, technically sound and complete, keeps with Bitcoin philosophy, well-scoped, has motivation, accurate title, addresses backwards compatibility, no BIP number conflicts, and (for draft merge): preamble, acceptable copyright, complete header (with status and type, correct layer if provided).",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2465052536",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "mentioned",
      "id": 15218180794,
      "node_id": "MEE_lADOAN28mc57VhshzwAAAAOLEwK6",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15218180794",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T15:32:44Z"
    },
    {
      "event": "subscribed",
      "id": 15218180824,
      "node_id": "SE_lADOAN28mc57VhshzwAAAAOLEwLY",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15218180824",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T15:32:44Z"
    },
    {
      "event": "commented",
      "id": 2465819787,
      "node_id": "IC_kwDOAN28mc6S-WyL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2465819787",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T22:03:21Z",
      "updated_at": "2024-11-08T22:03:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I am a bit confused about the need to have those questions answered before merging. Is the intention of the BIPs repository only to hold final specifications for consensus changes, or to enable iterating on consensus changes before proposing a document for numbering and merging?\r\n\r\n\r\nYou had written above\r\n\r\n> I'll post on the mailing list for additional opinions on these topics, but not sure whether it makes sense for the BIP to get numbered and merged as is while still potentially subject to those revisions.\r\n\r\nwhich I interpreted as a request to hold off while the situation might still be developing. I take it that I misunderstood you?",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2465819787",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "commented",
      "id": 2477466044,
      "node_id": "IC_kwDOAN28mc6TqyG8",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2477466044",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T21:41:57Z",
      "updated_at": "2024-11-14T21:41:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> which I interpreted as a request to hold off while the situation might still be developing. I take it that I misunderstood you?\r\n\r\nGotcha. Yeah, I honestly just don't know whether it makes sense to number and merge the BIP with outstanding questions like those or not. Since we're back in motion LNHANCE, I'll follow through and see what opinions appear :)\r\n\r\nThanks!",
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2477466044",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "commented",
      "id": 2477478994,
      "node_id": "IC_kwDOAN28mc6Tq1RS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2477478994",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T21:51:14Z",
      "updated_at": "2024-11-14T21:51:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "@reardencode: Preferably, as much as possible of the proposal is in place before it is put forth for an Editor review. Open questions tend to signal that a BIP may still be developing directionally and editors may be holding off due to that. ;)\r\n\r\nIf the open questions concern minor details, or have been resolved, please let us know that it is ready for an editor review.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2477478994",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "mentioned",
      "id": 15304798085,
      "node_id": "MEE_lADOAN28mc57VhshzwAAAAOQPK-F",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15304798085",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T21:51:15Z"
    },
    {
      "event": "subscribed",
      "id": 15304798097,
      "node_id": "SE_lADOAN28mc57VhshzwAAAAOQPK-R",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15304798097",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T21:51:15Z"
    },
    {
      "event": "commented",
      "id": 2478495124,
      "node_id": "IC_kwDOAN28mc6TutWU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2478495124",
      "actor": {
        "login": "moonsettler",
        "id": 90689674,
        "node_id": "MDQ6VXNlcjkwNjg5Njc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/90689674?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moonsettler",
        "html_url": "https://github.com/moonsettler",
        "followers_url": "https://api.github.com/users/moonsettler/followers",
        "following_url": "https://api.github.com/users/moonsettler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moonsettler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moonsettler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moonsettler/subscriptions",
        "organizations_url": "https://api.github.com/users/moonsettler/orgs",
        "repos_url": "https://api.github.com/users/moonsettler/repos",
        "events_url": "https://api.github.com/users/moonsettler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moonsettler/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T10:22:23Z",
      "updated_at": "2024-11-15T10:23:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "> There's still 2 open conversations around this one:\r\n> \r\n>     * Should it add CSFSA (after discussions in ATX with Rusty and Rob, I'm inclined to add it)\r\n> \r\n>     * Should CSFSV be tapscript only (I'm inclined to add this functionality to legacy scripts as well, but may be in the minority there)\r\n\r\nFor what it's worth, I also think signature aggregation will be the dominant form of CSFS use. LNhance at it's core is CTV + CSFS, and so it makes sense to have both of those available in pre-tapscript.\r\n\r\nNo strong opinion on CHECKSIGFROMSTACKADD, agree with the general reasoning.\r\n\r\nIt's a bit weird to backport Schnorr this way, and the NOP upgrade path leaving 3 elements on the stack is also unfortunate. On the other hand, reverting CSFSV to use ECDSA in pre-tapscript would force us to consider implementing script multisig, to do anything really worthwhile there.",
      "user": {
        "login": "moonsettler",
        "id": 90689674,
        "node_id": "MDQ6VXNlcjkwNjg5Njc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/90689674?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moonsettler",
        "html_url": "https://github.com/moonsettler",
        "followers_url": "https://api.github.com/users/moonsettler/followers",
        "following_url": "https://api.github.com/users/moonsettler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moonsettler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moonsettler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moonsettler/subscriptions",
        "organizations_url": "https://api.github.com/users/moonsettler/orgs",
        "repos_url": "https://api.github.com/users/moonsettler/repos",
        "events_url": "https://api.github.com/users/moonsettler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moonsettler/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2478495124",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "commented",
      "id": 2495660648,
      "node_id": "IC_kwDOAN28mc6UwMJo",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2495660648",
      "actor": {
        "login": "moonsettler",
        "id": 90689674,
        "node_id": "MDQ6VXNlcjkwNjg5Njc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/90689674?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moonsettler",
        "html_url": "https://github.com/moonsettler",
        "followers_url": "https://api.github.com/users/moonsettler/followers",
        "following_url": "https://api.github.com/users/moonsettler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moonsettler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moonsettler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moonsettler/subscriptions",
        "organizations_url": "https://api.github.com/users/moonsettler/orgs",
        "repos_url": "https://api.github.com/users/moonsettler/repos",
        "events_url": "https://api.github.com/users/moonsettler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moonsettler/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-23T21:31:36Z",
      "updated_at": "2024-11-23T21:31:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Posted this on the ML, but also adding here too. I think we are getting very close to finalizing this proposal.\r\n\r\n> Can anyone think of a reason to keep OP_CHECKSIGFROMSTACKVERIFY as NOP5 available\r\n> in legacy script?\r\n> \r\n> Currently Brandon and I are leaning towards simply removing CSFSV from LNhance and\r\n> from the CSFS BIP.\r\n> \r\n> Reasoning:\r\n> * CSFS is more likely to be used in Symmetry\r\n> * In case where CSFSV is desired OP_CSFS OP_VERIFY is perfectly workable.\r\n> * Simplifies code\r\n> * Don't have an actual use case for CSFSV in legacy rn\r\n> * Upgradeable NOPs are scarce\r\n> * Backporting tapscript would bring all functionality to legacy",
      "user": {
        "login": "moonsettler",
        "id": 90689674,
        "node_id": "MDQ6VXNlcjkwNjg5Njc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/90689674?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moonsettler",
        "html_url": "https://github.com/moonsettler",
        "followers_url": "https://api.github.com/users/moonsettler/followers",
        "following_url": "https://api.github.com/users/moonsettler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moonsettler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moonsettler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moonsettler/subscriptions",
        "organizations_url": "https://api.github.com/users/moonsettler/orgs",
        "repos_url": "https://api.github.com/users/moonsettler/repos",
        "events_url": "https://api.github.com/users/moonsettler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moonsettler/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2495660648",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15431048966,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOXwx8G",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15431048966",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9df2dbc74f5158555ccca4d75ca3e650ac219a19",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/9df2dbc74f5158555ccca4d75ca3e650ac219a19",
      "created_at": "2024-11-26T06:37:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15431059015,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOXw0ZH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15431059015",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5645ecd89cf922e7e8501b14906d70bc8a66dbc4",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/5645ecd89cf922e7e8501b14906d70bc8a66dbc4",
      "created_at": "2024-11-26T06:38:42Z"
    },
    {
      "event": "commented",
      "id": 2500085797,
      "node_id": "IC_kwDOAN28mc6VBEgl",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2500085797",
      "actor": {
        "login": "moonsettler",
        "id": 90689674,
        "node_id": "MDQ6VXNlcjkwNjg5Njc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/90689674?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moonsettler",
        "html_url": "https://github.com/moonsettler",
        "followers_url": "https://api.github.com/users/moonsettler/followers",
        "following_url": "https://api.github.com/users/moonsettler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moonsettler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moonsettler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moonsettler/subscriptions",
        "organizations_url": "https://api.github.com/users/moonsettler/orgs",
        "repos_url": "https://api.github.com/users/moonsettler/repos",
        "events_url": "https://api.github.com/users/moonsettler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moonsettler/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T09:22:51Z",
      "updated_at": "2024-11-26T09:22:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can we change the name of this PR and remove (VERIFY) to more accurately reflect the latest state of the proposal?",
      "user": {
        "login": "moonsettler",
        "id": 90689674,
        "node_id": "MDQ6VXNlcjkwNjg5Njc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/90689674?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moonsettler",
        "html_url": "https://github.com/moonsettler",
        "followers_url": "https://api.github.com/users/moonsettler/followers",
        "following_url": "https://api.github.com/users/moonsettler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moonsettler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moonsettler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moonsettler/subscriptions",
        "organizations_url": "https://api.github.com/users/moonsettler/orgs",
        "repos_url": "https://api.github.com/users/moonsettler/repos",
        "events_url": "https://api.github.com/users/moonsettler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moonsettler/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2500085797",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15437944214,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYLFWW",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15437944214",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/426eb8912df0af642f4e31ed49c8a5831341edd8",
      "created_at": "2024-11-26T15:16:20Z"
    },
    {
      "event": "renamed",
      "id": 15437948935,
      "node_id": "RTE_lADOAN28mc57VhshzwAAAAOYLGgH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15437948935",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T15:16:39Z",
      "rename": {
        "from": "Add bip-csfs OP_CHECKSIGFROMSTACK(VERIFY)",
        "to": "Add bip-csfs OP_CHECKSIGFROMSTACK"
      }
    },
    {
      "event": "commented",
      "id": 2501113345,
      "node_id": "IC_kwDOAN28mc6VE_YB",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2501113345",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T15:18:43Z",
      "updated_at": "2024-11-26T15:18:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated with an additional example, removed CSFSV, and all earlier review comments addressed.",
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2501113345",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "ready_for_review",
      "id": 15437978928,
      "node_id": "RFRE_lADOAN28mc57VhshzwAAAAOYLN0w",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15437978928",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T15:18:45Z"
    },
    {
      "event": "reviewed",
      "id": 2462336832,
      "node_id": "PRR_kwDOAN28mc6SxEdA",
      "url": null,
      "actor": null,
      "commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Letâ€™s call this BIPâ€¯348.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-2462336832",
      "submitted_at": "2024-11-26T18:46:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "renamed",
      "id": 15440890826,
      "node_id": "RTE_lADOAN28mc57VhshzwAAAAOYWUvK",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15440890826",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T18:49:29Z",
      "rename": {
        "from": "Add bip-csfs OP_CHECKSIGFROMSTACK",
        "to": "BIPâ€¯348: OP_CHECKSIGFROMSTACK"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15440931666,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYWetS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15440931666",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "320b3b8459af23f7ff26b5ecd1d8a5269d3b63bb",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/320b3b8459af23f7ff26b5ecd1d8a5269d3b63bb",
      "created_at": "2024-11-26T18:53:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15440943965,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYWhtd",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15440943965",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7676dda84545ab2c1512081d7da4a1f4bb2ad5ea",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/7676dda84545ab2c1512081d7da4a1f4bb2ad5ea",
      "created_at": "2024-11-26T18:55:07Z"
    },
    {
      "event": "reviewed",
      "id": 2462455538,
      "node_id": "PRR_kwDOAN28mc6Sxhby",
      "url": null,
      "actor": null,
      "commit_id": "7676dda84545ab2c1512081d7da4a1f4bb2ad5ea",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#pullrequestreview-2462455538",
      "submitted_at": "2024-11-26T18:59:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441129250,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYXO8i",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15441129250",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fb3e7325a364d0561a7771fbcfc23f13f9cc4984",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/fb3e7325a364d0561a7771fbcfc23f13f9cc4984",
      "created_at": "2024-11-26T19:14:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441153485,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYXU3N",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15441153485",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af58e9585079da45735446fb823f6a0aa5edce87",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/af58e9585079da45735446fb823f6a0aa5edce87",
      "created_at": "2024-11-26T19:17:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441160876,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYXWqs",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15441160876",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db6aab2770824441d7c45be56cc629c4a0ed45c8",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/db6aab2770824441d7c45be56cc629c4a0ed45c8",
      "created_at": "2024-11-26T19:18:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441176937,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYXalp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15441176937",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b37d316895054da349a21b56acb3f830cb7043a3",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/b37d316895054da349a21b56acb3f830cb7043a3",
      "created_at": "2024-11-26T19:19:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441208559,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYXiTv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15441208559",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ce09486cadcfd8670750c86101d256589f88c049",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/ce09486cadcfd8670750c86101d256589f88c049",
      "created_at": "2024-11-26T19:23:04Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGQyOTMyYmQwMGQxNjk5MmQ5MGRmODJkMmEzN2RiNzljMzU1MDQ2YzQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d2932bd00d16992d90df82d2a37db79c355046c4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/d2932bd00d16992d90df82d2a37db79c355046c4",
      "tree": {
        "sha": "72d5b058dbc6be6b8d298948c5cf3f876a2f1e7a",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/72d5b058dbc6be6b8d298948c5cf3f876a2f1e7a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 72d5b058dbc6be6b8d298948c5cf3f876a2f1e7a\nparent 532c4c10f2e04b3dca7d39ce1b1a4bdbf0c88e52\nauthor Brandon Black <freedom@reardencode.com> 1713994853 -0700\ncommitter Brandon Black <freedom@reardencode.com> 1732649039 -0800\n\nAdd BIP 0348 - CHECKSGIFROMSTACK\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEbYiTraaCgxqXdFiVyx8dk3S1j9wFAmdGIE8ACgkQyx8dk3S1\nj9xBxw//dqUlyELdBF+sGAUQJPL9HevGi09/tucmFCxmfo79m+Rp8TZUhyzIHV8B\niC50YmAJfDQgIW4c0yZzHT0fdeYbZcmwZdBl/l91L7y+68NHRk6a/G18dVudJWQh\nejetDVD7JV1+kT+WS9BgkFPCCYsn1DSrMBxEwkcxe8yvGpaYU7tokhNAMK8iiD1x\neYziCO79WRKilKiKADOjcKoU9iC1FJby/CWcaPeOprBz/5dOBHc/sXDzVzMrHjyc\nmT+ae1v/W8ciQpBpCmq875iraqkezz34BX5IWd+PIO6c55Rnu5pjVCUcggeeYH9f\nJqxNb08fSBtx3Z1EMb133TQBm3dtNuElAhtp7Z5szJPOUxM4AKODZhq9gK/Zoxec\nYFqBFPzFAsmKH9Zv1lxrTBe436Kqomsjn/ql8kVbwW8hTcRfB8vu9nnnBgPfjBO6\nFpxPv+xATboIcnfBsDs+m6Ele2Bm4IlGI3ONgrf7zqpN+beu1iR0s+RaV7qxZovr\nD1W03FdZsTPEFcTgHVq+edWkv/Dmkqxa394qT4Bu5xOIIna0cuDyGyLB2uJAB4yh\nNs7wwyd4ro+bW+r97yDIn6zSM+Yn/QG8lijuCNJcTB/C36D/gQjXjCSEJ2fZprn8\nQxZgIv/+Nal3f+cv6zMqAd76ohiZ6H0Le2U01V2LNJHI63QELD4=\n=IySk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/532c4c10f2e04b3dca7d39ce1b1a4bdbf0c88e52",
          "sha": "532c4c10f2e04b3dca7d39ce1b1a4bdbf0c88e52",
          "html_url": "https://github.com/bitcoin/bips/commit/532c4c10f2e04b3dca7d39ce1b1a4bdbf0c88e52"
        }
      ],
      "message": "Add BIP 0348 - CHECKSGIFROMSTACK",
      "committer": {
        "name": "Brandon Black",
        "email": "freedom@reardencode.com",
        "date": "2024-11-26T19:23:59Z"
      },
      "author": {
        "name": "Brandon Black",
        "email": "freedom@reardencode.com",
        "date": "2024-04-24T21:40:53Z"
      },
      "sha": "d2932bd00d16992d90df82d2a37db79c355046c4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15441218685,
      "node_id": "HRFPE_lADOAN28mc57VhshzwAAAAOYXkx9",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15441218685",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "commit_url": "https://api.github.com/repos/reardencode/bips/commits/d2932bd00d16992d90df82d2a37db79c355046c4",
      "created_at": "2024-11-26T19:24:09Z"
    },
    {
      "event": "commented",
      "id": 2501753498,
      "node_id": "IC_kwDOAN28mc6VHbqa",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2501753498",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T19:26:00Z",
      "updated_at": "2024-11-26T19:26:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "I believe I've addressed your comments. Thanks much!\r\n\r\nWould love you to read over the new text I added in the Lightning Symmetry section.",
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2501753498",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    },
    {
      "event": "review_requested",
      "id": 15441237476,
      "node_id": "RRE_lADOAN28mc57VhshzwAAAAOYXpXk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15441237476",
      "actor": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T19:26:09Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2501768499,
      "node_id": "IC_kwDOAN28mc6VHfUz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2501768499",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T19:35:06Z",
      "updated_at": "2024-11-26T19:36:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would love you to read over the new text I added in the Lightning Symmetry section.\r\n\r\nLGTM\r\n\r\nNit: In the future, if you donâ€™t reposition all the linebreaks, itâ€™s much easier to see what was changed in text. :nerd_face:\r\n\r\nI.e. itâ€™s harder to discern what all the changes are in\r\n\r\n```diff\r\n-`OP_CHECKSIGFROMSTACK` (CSFS) can be used in Lightning Symmetry channels.\r\n-The construction `OP_CHECKTEMPLATEVERIFY <pubkey> OP_CHECKSIGFROMSTACK` with a\r\n-spend stack containing the CTV hash and a signature for it is logically\r\n-equivalent to `<bip118_pubkey> OP_CHECKSIG` and a signature over\r\n-`SIGHASH_ALL|SIGHASH_ANYPREVOUTANYSCRIPT`. The `OP_CHECKSIGFROMSTACK`\r\n-construction is 8 vBytes larger.\r\n+`OP_CHECKSIGFROMSTACK` (CSFS) can be used to implement Lightning Symmetry\r\n+channels. The construction `OP_CHECKTEMPLATEVERIFY <pubkey>\r\n+OP_CHECKSIGFROMSTACK` with a spend stack containing the CTV hash and a\r\n+signature for it is logically equivalent to `<bip118_pubkey> OP_CHECKSIG` and\r\n+a signature over `SIGHASH_ALL|SIGHASH_ANYPREVOUTANYSCRIPT`. The\r\n+`OP_CHECKSIGFROMSTACK` construction is 8 vBytes larger.\r\n```\r\n\r\nthan in\r\n\r\n```diff\r\n-`OP_CHECKSIGFROMSTACK` (CSFS) can be used in Lightning Symmetry channels.\r\n+`OP_CHECKSIGFROMSTACK` (CSFS) can be used to implement Lightning Symmetry channels.\r\n```\r\n",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1535#issuecomment-2501768499",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1535"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1456926309",
      "pull_request_review_id": 1828860460,
      "id": 1456926309,
      "node_id": "PRRC_kwDOAN28mc5W1u5l",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 10,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Why is Public Domain no longer acceptable for new BIPs?\r\n> \r\n>  * In some jurisdictions, public domain is not recognised as a legitimate legal action, leaving the BIP simply copyrighted with no redistribution or modification allowed at all.\r\n",
      "created_at": "2024-01-18T05:41:20Z",
      "updated_at": "2024-01-18T05:41:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1456926309",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1456926309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575533213",
      "pull_request_review_id": 2016079039,
      "id": 1575533213,
      "node_id": "PRRC_kwDOAN28mc5d6Lqd",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 21,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": null,
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why split across two extension mechanisms instead of just focusing on the modern path (op success)? ",
      "created_at": "2024-04-23T01:29:11Z",
      "updated_at": "2024-04-23T01:48:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1575533213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575533213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575534772",
      "pull_request_review_id": 2016079039,
      "id": 1575534772,
      "node_id": "PRRC_kwDOAN28mc5d6MC0",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": null,
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is the ref to BIP 137 here a typo? 137 is primarily about the old Bitcoin signed message scheme. ",
      "created_at": "2024-04-23T01:32:34Z",
      "updated_at": "2024-04-23T01:48:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1575534772",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575534772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575535584",
      "pull_request_review_id": 2016079039,
      "id": 1575535584,
      "node_id": "PRRC_kwDOAN28mc5d6MPg",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:\n+** If the signature is not the empty vector, the signature is validated against the public key and message using ECDSA. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a BIP340 public key, nor a BIP137 compressed public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": null,
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Public key types were only introduced in segwit v1 ([BIP 342](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#cite_note-6)), so this wouldn't apply to a version of this op code that also exists under the segwit v0 paradigm. ",
      "created_at": "2024-04-23T01:34:15Z",
      "updated_at": "2024-04-23T01:48:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1575535584",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575535584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575536432",
      "pull_request_review_id": 2016079039,
      "id": 1575536432,
      "node_id": "PRRC_kwDOAN28mc5d6Mcw",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:\n+** If the signature is not the empty vector, the signature is validated against the public key and message using ECDSA. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a BIP340 public key, nor a BIP137 compressed public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+** If the signature is the empty vector:\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, the script MUST fail and terminate immediately.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, an empty vector is pushed onto the stack, and execution continues with the next opcode.\n+** If the signature is not the empty vector:\n+*** For tapscript 0xc0, the opcode is counted towards the sigops budget as described in BIP341.\n+*** For legacy and segwit v0, the opcode is counted towards the sigops limit, as described in BIP141",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 49,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": null,
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The sig ops budget is described in BIP 342: https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#resource-limits",
      "created_at": "2024-04-23T01:36:02Z",
      "updated_at": "2024-04-23T01:48:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1575536432",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575536432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575539916",
      "pull_request_review_id": 2016079039,
      "id": 1575539916,
      "node_id": "PRRC_kwDOAN28mc5d6NTM",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:\n+** If the signature is not the empty vector, the signature is validated against the public key and message using ECDSA. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a BIP340 public key, nor a BIP137 compressed public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+** If the signature is the empty vector:\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, the script MUST fail and terminate immediately.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, an empty vector is pushed onto the stack, and execution continues with the next opcode.\n+** If the signature is not the empty vector:\n+*** For tapscript 0xc0, the opcode is counted towards the sigops budget as described in BIP341.\n+*** For legacy and segwit v0, the opcode is counted towards the sigops limit, as described in BIP141\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, execution continues without any further changes to the stack.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, a 1-byte value 0x01 is pushed onto the stack.",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 51,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": null,
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wonder if there's a use for a `OP_CHECKSIGFROMSTACKADD` variant...\r\n\r\nSo something that would be compatible with usage of `OP_CHECKSIGADD`. On the other hand, it is possible to replicate such behavior with `OP_CHECKSIGFROMSTACK` in combination with other existing op codes, eg: \r\n```\r\nOP_TOALTSTACK (assuming the number N is on the top of the stack)\r\n<pubkey> OP_CHECKSIGFROMSTACK\r\nOP_IF\r\n    OP_DROP (drop the 0x01 pushed in the success case)\r\n    OP_FROMALTSACK (bring back the accumulator) \r\n    1 OP_ADD (acc += 1)\r\nOP_ELSE\r\n    OP_DROP (drop the empty vector) \r\n    OP_FROMALTSACK (put unchanged accumulator back on the stack)\r\nOP_ENDIF\r\n```",
      "created_at": "2024-04-23T01:43:06Z",
      "updated_at": "2024-04-23T01:48:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1575539916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1575539916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1577142355",
      "pull_request_review_id": 2018670045,
      "id": 1577142355,
      "node_id": "PRRC_kwDOAN28mc5eAUhT",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:\n+** If the signature is not the empty vector, the signature is validated against the public key and message using ECDSA. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a BIP340 public key, nor a BIP137 compressed public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+** If the signature is the empty vector:\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, the script MUST fail and terminate immediately.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, an empty vector is pushed onto the stack, and execution continues with the next opcode.\n+** If the signature is not the empty vector:\n+*** For tapscript 0xc0, the opcode is counted towards the sigops budget as described in BIP341.\n+*** For legacy and segwit v0, the opcode is counted towards the sigops limit, as described in BIP141\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, execution continues without any further changes to the stack.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, a 1-byte value 0x01 is pushed onto the stack.\n+\n+==Design Considerations==\n+\n+# Message hashing: ECDSA requires the message to be securely hashed to 32-bytes before being used in the signing protocol, so a SHA256 hash is taken before the message is passed for ECDSA signing. BIP340 is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to BIP340 signing.\n+# Verify NOP upgrade: To bring both ECDSA and BIP340 signing to bitcoin script, a NOP upgrade path was chosen for <code>OP_CHECKSIGFROMSTACKVERIFY</code>. This necessarily means leaving the 3 arguments on the stack when executing <code>OP_CHECKSIGFROMSTACKVERIFY</code>. Scripts will need to drop or otherwise manage these stack elements.\n+# Add/multisig: No concession is made to <code>OP_CHECKMULTISIG</code> or <code>OP_CHECKSIGADD</code> semantics with <code>OP_CHECKSIGFROMSTACK(VERIFY)</code>. In Tapscript, add semantics can be implemented with 1 additional vByte per key (<code>OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD OP_TOALTSTACK</code>).\n+# Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for future bitcoin upgrades, such as <code>OP_CAT</code>.\n+# BIP118-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing OP_INTERNALKEY or separately introducing that key type for all Tapscript signature checking operations in a separate change.\n+# Unknown key lengths: The semantics of other signature checking opcodes in their respective script types (legacy, segwit-v0, tapscript-c0) are applied.\n+\n+==Resource Limits==\n+\n+These opcodes are treated identically to other signature checking opcodes and\n+count against the various sigops limits and budgets in their respective script\n+types.\n+\n+==Motivation==\n+\n+===LN Symmetry===\n+\n+When combined with <code>OP_CHECKTEMPLATEVERIFY</code> (BIP119/CTV),\n+<code>OP_CHECKSIGFROMSTACK</code> (CSFS) can be used in Lightning Symmetry channels.\n+The construction <code>OP_CHECKTEMPLATEVERIFY <pubkey> OP_CHECKSIGFROMSTACK</code> is\n+logically equivalent to <code><bip118_pubkey> OP_CHECKSIG</code> and a signature over\n+<code>SIGHASH_ALL|SIGHASH_ANYPREVOUTANYSCRIPT</code>. The <code>OP_CHECKSIGFROMSTACK</code>\n+construction is 8 vBytes larger.\n+\n+===Delegation===\n+\n+Using a script like:\n+<code>OP_DUP <pubkey> OP_CHECKSIGFROMSTACK OP_DROP OP_CHECKSIG</code>\n+A script can delegate signing to another key.\n+\n+==Reference Implementation==\n+\n+A reference implementation is provided in provided here:\n+\n+https://github.com/brandonblack/bitcoin/commit/5aae0503ceab93101c459748347a111e4a4852c4\n+\n+==Backward Compatibility==\n+\n+By constraining the behavior of an OP_SUCCESS opcode and an OP_NOP opcode,\n+deployment of the BIP can be done in a backwards compatible, soft-fork manner.\n+If anyone were to rely on the OP_SUCCESS behavior of\n+<code>OP_SUCCESS204</code>, <code>OP_CHECKSIGFROMSTACK</code> would invalidate\n+their spend.\n+\n+==Deployment==\n+\n+TBD\n+\n+==Credits==\n+\n+Reference implementation was made with reference to the implementation in",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 105,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": null,
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Perhaps this should also credit Jeremy (as he made a mailing list post soliciting feedback for a design in 2021), and also the authors of the proposal he directly references in the ML? ",
      "created_at": "2024-04-24T02:08:50Z",
      "updated_at": "2024-04-24T02:08:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1577142355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1577142355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578551895",
      "pull_request_review_id": 2020991309,
      "id": 1578551895,
      "node_id": "PRRC_kwDOAN28mc5eFspX",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:\n+** If the signature is not the empty vector, the signature is validated against the public key and message using ECDSA. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a BIP340 public key, nor a BIP137 compressed public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": 1575535584,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Signature verification for CHECKSIGFROMSTACK is done the same regardless of the script context.",
      "created_at": "2024-04-24T21:43:40Z",
      "updated_at": "2024-04-24T21:43:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1578551895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578551895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578552421",
      "pull_request_review_id": 2020992151,
      "id": 1578552421,
      "node_id": "PRRC_kwDOAN28mc5eFsxl",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": 1575534772,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These legacy keys are no longer supported - sorry for the waste of time, this PR had gotten out of date while I was working on this document as [a BIN](https://github.com/bitcoin-inquisition/binana/blob/master/2024/BIN-2024-0003.md)",
      "created_at": "2024-04-24T21:44:24Z",
      "updated_at": "2024-04-24T21:44:24Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1578552421",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578552421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578562450",
      "pull_request_review_id": 2021011304,
      "id": 1578562450,
      "node_id": "PRRC_kwDOAN28mc5eFvOS",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 21,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": 1575533213,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Checking signatures from the stack is something that _can_ be supported on all script types (i.e. is compatible with NOP upgrade), and there are use cases where segwit v0 scripts still make the most sense vs. tapscripts.\r\n\r\nIf supporting legacy and segwitv0 where possible for new opcodes is not something that others value, switching CSFSV to an OP_SUCCESS upgrade would make sense.",
      "created_at": "2024-04-24T21:53:30Z",
      "updated_at": "2024-04-24T21:53:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1578562450",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578562450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578565594",
      "pull_request_review_id": 2021014825,
      "id": 1578565594,
      "node_id": "PRRC_kwDOAN28mc5eFv_a",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:\n+** If the signature is not the empty vector, the signature is validated against the public key and message using ECDSA. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a BIP340 public key, nor a BIP137 compressed public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+** If the signature is the empty vector:\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, the script MUST fail and terminate immediately.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, an empty vector is pushed onto the stack, and execution continues with the next opcode.\n+** If the signature is not the empty vector:\n+*** For tapscript 0xc0, the opcode is counted towards the sigops budget as described in BIP341.\n+*** For legacy and segwit v0, the opcode is counted towards the sigops limit, as described in BIP141\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, execution continues without any further changes to the stack.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, a 1-byte value 0x01 is pushed onto the stack.",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 51,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": 1575539916,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep. I had the same internal conversation and concluded that the rare cases where CSFSA behavior is needed using the altstack is an acceptable alternative.\r\n\r\nCompared to standard CHECKSIG where CHECKMULTISIG was in active use on legacy/segwitv0 wallets, new wallets or protocols built on CSFS are much more likely to use MuSig2 or FROST when multiple signers are insolved, or (as BitGo's 2-of-3 MuSig2/tapscript wallet does) to have the different signing combinations split between tapscript paths where CSFSV+CSFS are more efficient than CSFSA.",
      "created_at": "2024-04-24T21:56:52Z",
      "updated_at": "2024-04-24T21:56:52Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1578565594",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1578565594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1586700498",
      "pull_request_review_id": 2034287706,
      "id": 1586700498,
      "node_id": "PRRC_kwDOAN28mc5ekyDS",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+| BIP-XXXX   | `CHECKSIGFROMSTACK`\n+| :--------- | :------------------\n+| Layer      | Consensus (soft fork)\n+| Author     | Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+| Discussion | https://delvingbitcoin.org/t/lnhance-bips-and-implementation/376/9\n+| Status     | Draft\n+| Type       | Standards Track\n+| Created    | 2023-12-22\n+| License    | BSD-3-CLAUSE",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 9,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "0267f3fe4726254e411f3b2cce94721125f7f12d",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please use the [preamble format](https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki#bip-header-preamble) specified in BIP2.",
      "created_at": "2024-05-01T19:18:16Z",
      "updated_at": "2024-05-01T19:18:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1586700498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1586700498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610532450",
      "pull_request_review_id": 2072170318,
      "id": 1610532450,
      "node_id": "PRRC_kwDOAN28mc5f_sZi",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+We propose replacing `OP_NOP5` (0xb4) in bitcoin script with\n+`OP_CHECKSIGFROMSTACKVERIFY`. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in [BIP 342]), we propose `OP_CHECKSIGFROMSTACK`\n+to replace `OP_SUCCESS204` (0xcc).\n+\n+`OP_CHECKSIGFROMSTACK` and `OP_CHECKSIGFROMSTACKVERIFY`\n+have semantics similar to `OP_CHECKSIG` and\n+`OP_CHECKSIGVERIFY` respectively, as specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 35,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "in_reply_to_id": null,
      "user": {
        "login": "ProofOfKeags",
        "id": 4033651,
        "node_id": "MDQ6VXNlcjQwMzM2NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4033651?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProofOfKeags",
        "html_url": "https://github.com/ProofOfKeags",
        "followers_url": "https://api.github.com/users/ProofOfKeags/followers",
        "following_url": "https://api.github.com/users/ProofOfKeags/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProofOfKeags/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProofOfKeags/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProofOfKeags/subscriptions",
        "organizations_url": "https://api.github.com/users/ProofOfKeags/orgs",
        "repos_url": "https://api.github.com/users/ProofOfKeags/repos",
        "events_url": "https://api.github.com/users/ProofOfKeags/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProofOfKeags/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I'd like to offer the suggestion that the push order goes:\r\n\r\n`<msg> <sig> <key>` instead of `<sig> <msg> <key>`. The current `CHECKSIG` ordering is `<sig> <key>` and it seems odd to me that we would make the CSFS opcode put the msg *between* these other pushes. Alternatively you could go `<sig> <key> <msg>` and it would seem to me as equally intuitive. As is though it feels like a gotcha.\r\n\r\nIs there a specific reason this choice was made that I hadn't considered?",
      "created_at": "2024-05-22T19:21:44Z",
      "updated_at": "2024-05-22T19:21:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1610532450",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610532450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1628457143",
      "pull_request_review_id": 2100311992,
      "id": 1628457143,
      "node_id": "PRRC_kwDOAN28mc5hEEi3",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+We propose replacing `OP_NOP5` (0xb4) in bitcoin script with\n+`OP_CHECKSIGFROMSTACKVERIFY`. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in [BIP 342]), we propose `OP_CHECKSIGFROMSTACK`\n+to replace `OP_SUCCESS204` (0xcc).\n+\n+`OP_CHECKSIGFROMSTACK` and `OP_CHECKSIGFROMSTACKVERIFY`\n+have semantics similar to `OP_CHECKSIG` and\n+`OP_CHECKSIGVERIFY` respectively, as specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 35,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "in_reply_to_id": 1610532450,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Anything that comes from the input stack should be before things that are provided by the locking script, so `sig` definitely comes first. Depending on particulars `msg` might come from the input stack or the locking script, and `key` always comes from the locking script. Examples:\r\n* `<delegate-sig> <sig> <delegate-key> || DUP TOALT <key> CSFS VERIFY FROMALT CHECKSIG`\r\n* `<sig> <hash> || CTV <key> CSFS`\r\n* `<sig> || <flags> TXHASH <key> CSFS`\r\n* `<sig> <settlement-hash> <update-hash> || CTV SHA256 CAT <key> CSFS`",
      "created_at": "2024-06-05T21:21:42Z",
      "updated_at": "2024-06-07T18:11:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1628457143",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1628457143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1631539492",
      "pull_request_review_id": 2105114206,
      "id": 1631539492,
      "node_id": "PRRC_kwDOAN28mc5hP1Ek",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+We propose replacing `OP_NOP5` (0xb4) in bitcoin script with\n+`OP_CHECKSIGFROMSTACKVERIFY`. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in [BIP 342]), we propose `OP_CHECKSIGFROMSTACK`\n+to replace `OP_SUCCESS204` (0xcc).\n+\n+`OP_CHECKSIGFROMSTACK` and `OP_CHECKSIGFROMSTACKVERIFY`\n+have semantics similar to `OP_CHECKSIG` and\n+`OP_CHECKSIGVERIFY` respectively, as specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 35,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "in_reply_to_id": 1610532450,
      "user": {
        "login": "ProofOfKeags",
        "id": 4033651,
        "node_id": "MDQ6VXNlcjQwMzM2NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4033651?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProofOfKeags",
        "html_url": "https://github.com/ProofOfKeags",
        "followers_url": "https://api.github.com/users/ProofOfKeags/followers",
        "following_url": "https://api.github.com/users/ProofOfKeags/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProofOfKeags/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProofOfKeags/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProofOfKeags/subscriptions",
        "organizations_url": "https://api.github.com/users/ProofOfKeags/orgs",
        "repos_url": "https://api.github.com/users/ProofOfKeags/repos",
        "events_url": "https://api.github.com/users/ProofOfKeags/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProofOfKeags/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Retracted.\r\n\r\nI understand the general direction of what you're getting at but I have to admit that I'm not following the specific use cases where `<msg>` might come from the witness instead of the script. It makes sense to me why you'd want `<msg>` in the script, what's lest clear is under what conditions it is useful to let the witness define it.",
      "created_at": "2024-06-07T18:05:38Z",
      "updated_at": "2024-06-07T18:05:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1631539492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1631539492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1631544967",
      "pull_request_review_id": 2105123096,
      "id": 1631544967,
      "node_id": "PRRC_kwDOAN28mc5hP2aH",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+We propose replacing `OP_NOP5` (0xb4) in bitcoin script with\n+`OP_CHECKSIGFROMSTACKVERIFY`. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in [BIP 342]), we propose `OP_CHECKSIGFROMSTACK`\n+to replace `OP_SUCCESS204` (0xcc).\n+\n+`OP_CHECKSIGFROMSTACK` and `OP_CHECKSIGFROMSTACKVERIFY`\n+have semantics similar to `OP_CHECKSIG` and\n+`OP_CHECKSIGVERIFY` respectively, as specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 35,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "in_reply_to_id": 1610532450,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In any kind of delegation (see the first example above) the message is provided by the witness (i.e. the thing you're delegating to by signing). Here's a powerful example:\r\n\r\n`<delegate_sig> <sig> <delegate_pubkey> <locktime> || CLTV SHA256 CAT <pubkey> CSFS VERIFY CHECKSIG`\r\n\r\nDelegate to a key but only after `<locktime>`, with different locktimes per delegate key.",
      "created_at": "2024-06-07T18:11:45Z",
      "updated_at": "2024-06-07T18:11:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1631544967",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1631544967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1631573434",
      "pull_request_review_id": 2105174559,
      "id": 1631573434,
      "node_id": "PRRC_kwDOAN28mc5hP9W6",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+We propose replacing `OP_NOP5` (0xb4) in bitcoin script with\n+`OP_CHECKSIGFROMSTACKVERIFY`. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in [BIP 342]), we propose `OP_CHECKSIGFROMSTACK`\n+to replace `OP_SUCCESS204` (0xcc).\n+\n+`OP_CHECKSIGFROMSTACK` and `OP_CHECKSIGFROMSTACKVERIFY`\n+have semantics similar to `OP_CHECKSIG` and\n+`OP_CHECKSIGVERIFY` respectively, as specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 35,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "in_reply_to_id": 1610532450,
      "user": {
        "login": "ProofOfKeags",
        "id": 4033651,
        "node_id": "MDQ6VXNlcjQwMzM2NTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4033651?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ProofOfKeags",
        "html_url": "https://github.com/ProofOfKeags",
        "followers_url": "https://api.github.com/users/ProofOfKeags/followers",
        "following_url": "https://api.github.com/users/ProofOfKeags/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ProofOfKeags/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ProofOfKeags/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ProofOfKeags/subscriptions",
        "organizations_url": "https://api.github.com/users/ProofOfKeags/orgs",
        "repos_url": "https://api.github.com/users/ProofOfKeags/repos",
        "events_url": "https://api.github.com/users/ProofOfKeags/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ProofOfKeags/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Forgive me but I have to expand this out because it doesn't make sense to me:\r\n\r\nWitness:\r\n1. delegate signature is pushed onto the stack: `<delegate_sig>`\r\n2. the signature authorizing the delegate is pushed: `<delegate_sig> <authorizing_sig>`\r\n3. the delegate pubkey is pushed: `<delegate_sig> <authorizing_sig> <delegate_pubkey>`\r\n4. locktime is pushed: `<delegate_sig> <authorizing_sig> <delegate_pubkey> <locktime>`\r\n\r\nScript:\r\n5. locktime is checked: `<delegate_sig> <authorizing_sig> <delegate_pubkey> <locktime>`\r\n6. locktime is hashed: `<delegate_sig> <authorizing_sig> <delegate_pubkey> <locktime_hash>`\r\n7. locktime hash combined with delegate pubkey: `<delegate_sig> <authorizing_sig> <delegate_pubkey || locktime_hash>`\r\n8. authorizing pubkey is pushed: `<delegate_sig> <authorizing_sig> <delegate_pubkey || locktime_hash> <authorizing_pubkey>`\r\n9. CSFS(V) operation(s) checks that the delegate pubkey is authorized after the locktime by checking the `key || locktime` message was signed by `authorizing_sig`: `<delegate_sig>`\r\n10. CHECKSIG operation fails because we don't have a key? Maybe you forgot a dup somewhere? Maybe I don't understand script as well as I thought? idk.\r\n\r\nAssuming this is roughly what you meant, then I'd imagine in this case the authorizing signature would be pre-signed and distributed. Then at transaction time the delegate presents the authorizing signature along with their key and assigned locktime.\r\n\r\nAssuming all of this is a fair reading, then I think I get what you mean with `<msg>` having an interesting use case wherein it could be:\r\n1. provided by the script\r\n2. provided by the witness\r\n3. collaboratively derived from witness and script participation.\r\n\r\n... which seems pretty cool. I'd love if you can correct either my understanding or your example for completeness, but otherwise I'm satisfied with this and this thread can be resolved.",
      "created_at": "2024-06-07T18:41:35Z",
      "updated_at": "2024-06-07T18:41:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1631573434",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1631573434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1857871081",
      "pull_request_review_id": 2460486781,
      "id": 1857871081,
      "node_id": "PRRC_kwDOAN28mc5uvNzp",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+We propose replacing `OP_NOP5` (0xb4) in bitcoin script with\n+`OP_CHECKSIGFROMSTACKVERIFY`. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in [BIP 342]), we propose `OP_CHECKSIGFROMSTACK`\n+to replace `OP_SUCCESS204` (0xcc).\n+\n+`OP_CHECKSIGFROMSTACK` and `OP_CHECKSIGFROMSTACKVERIFY`\n+have semantics similar to `OP_CHECKSIG` and\n+`OP_CHECKSIGVERIFY` respectively, as specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 35,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "a15c86aab2263941f209f60913cd9650e4e12131",
      "in_reply_to_id": 1610532450,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry for the long delay. You're quite correct that the example I gave does not work. Apparently I should have waited for Taproot Wizards new neovim script plugin. I believe this works for 3 more opcodes :(\r\n\r\n`<sig> <delegate_sig> <delegate_pubkey> <locktime> || CLTV SHA256 OVER CAT TOALT CHECKSIGVERIFY FROMALT <pubkey> CSFS`\r\n\r\n1. the signature authorizing the delegate is pushed: `<authorizing_sig>`\r\n2. delegate signature is pushed onto the stack: `<authorizing_sig> <delegate_sig>`\r\n3. the delegate pubkey is pushed: `<authorizing_sig> <delegate_sig> <delegate_pubkey>`\r\n4. locktime is pushed: `<authorizing_sig> <delegate_sig> <delegate_pubkey> <locktime>`\r\n5. locktime is checked: `<authorizing_sig> <delegate_sig> <delegate_pubkey> <locktime>`\r\n6. locktime is hashed: `<authorizing_sig> <delegate_sig> <delegate_pubkey> <locktime_hash>`\r\n7. delegate pubkey is copied over: `<authorizing_sig> <delegate_sig> <delegate_pubkey> <locktime_hash> <delegate_pubkey>`\r\n8. locktime hash combined with delegate pubkey: `<authorizing_sig> <delegate_sig> <delegate_pubkey> <locktime_hash || delegate_pubkey>`\r\n9. concatenation is moved to alt stack: `<authorizing_sig> <delegate_sig> <delegate_pubkey>`\r\n10. CHECKSIGVERIFY validates the signature from the delegated key: `<authorizing_sig>`\r\n11. concatenation is moved from alt stack: `<authorizing_sig> <locktime_hash || delegate_pubkey>`\r\n12. authorizing pubkey is pushed: `<authorizing_sig> <locktime_hash || delegate_pubkey> <authorizing_pubkey>`\r\n10. CSFS operation(s) checks that the delegate pubkey is authorized after the locktime by checking the `locktime || key` message was signed by `authorizing_sig`: `TRUE`\r\n\r\nThanks for checking the script.",
      "created_at": "2024-11-26T06:25:46Z",
      "updated_at": "2024-11-26T06:25:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1857871081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1857871081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1858736847",
      "pull_request_review_id": 2461864575,
      "id": 1858736847,
      "node_id": "PRRC_kwDOAN28mc5uyhLP",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: CHECKSIGFROMSTACK\n+  Author: Brandon Black <freedom@reardencode.com>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-12-22\n+  License: PD\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes two new opcode for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+==Summary==\n+\n+We propose replacing OP_NOP5 (0xb4) in bitcoin script with\n+<code>OP_CHECKSIGFROMSTACKVERIFY</code>. When verifying taproot script spends having\n+leaf version 0xc0 (as defined in BIP342), we propose <code>OP_CHECKSIGFROMSTACK</code>\n+to replace <code>OP_SUCCESS204</code> (0xcc).\n+\n+<code>OP_CHECKSIGFROMSTACK</code> and <code>OP_CHECKSIGFROMSTACKVERIFY</code>\n+have semantics similar to <code>OP_CHECKSIG</code> and\n+<code>OP_CHECKSIGVERIFY</code> respectively, as specified below.\n+\n+For legacy and segwit v0 scripts, 32-byte and 33-byte keys are supported for\n+BIP340 signature verification and ECDSA signature verification respectively.\n+\n+==Specification==\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* For <code>OP_CHECKSIGFROMSTACK</code> the top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in BIP340:\n+** If the signature is not the empty vector, the signature is validated against the public key and message according to BIP340. Validation failure in this case immediately terminates script execution with failure.\n+* For legacy and segwit v0 scripts, if the public key size is 33 bytes and its first byte is 0x02 or 0x03, it is considered a compressed public key as described in BIP137:\n+** If the signature is not the empty vector, the signature is validated against the public key and message using ECDSA. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a BIP340 public key, nor a BIP137 compressed public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+** If the signature is the empty vector:\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, the script MUST fail and terminate immediately.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, an empty vector is pushed onto the stack, and execution continues with the next opcode.\n+** If the signature is not the empty vector:\n+*** For tapscript 0xc0, the opcode is counted towards the sigops budget as described in BIP341.\n+*** For legacy and segwit v0, the opcode is counted towards the sigops limit, as described in BIP141\n+*** For <code>OP_CHECKSIGFROMSTACKVERIFY</code>, execution continues without any further changes to the stack.\n+*** For <code>OP_CHECKSIGFROMSTACK</code>, a 1-byte value 0x01 is pushed onto the stack.",
      "path": "bip-csfs.mediawiki",
      "position": null,
      "original_position": 51,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "5df867cb879ae80cf3f9a7c3dfb6289892760a8a",
      "in_reply_to_id": 1575539916,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Keeping this BIP to 1 opcode. Other CSFS(A/V) variants can be added later if they are specifically needed.",
      "created_at": "2024-11-26T15:17:39Z",
      "updated_at": "2024-11-26T15:17:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1858736847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1858736847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859014869",
      "pull_request_review_id": 2462336832,
      "id": 1859014869,
      "node_id": "PRRC_kwDOAN28mc5uzlDV",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 15,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this was overlooked after CSFSV got removed:\r\n\r\n```suggestion\r\nThis BIP describes a new opcode for the purpose of checking cryptographic\r\n```",
      "created_at": "2024-11-26T17:56:14Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859014869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859014869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859023329",
      "pull_request_review_id": 2462336832,
      "id": 1859023329,
      "node_id": "PRRC_kwDOAN28mc5uznHh",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 24,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This mentions OP_CSFSV, was that supposed to say just `OP_CHECKSIGFROMSTACK` or is this sentence obsolete?",
      "created_at": "2024-11-26T18:03:12Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859023329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859023329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859024159",
      "pull_request_review_id": 2462336832,
      "id": 1859024159,
      "node_id": "PRRC_kwDOAN28mc5uznUf",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 49,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is this \"(VERIFY)\" obsolete or shorthand for `OP_CSFS OP_VERIFY` here?\r\n\r\n```suggestion\r\n3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\r\n```",
      "created_at": "2024-11-26T18:03:58Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859024159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859024159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859027960",
      "pull_request_review_id": 2462336832,
      "id": 1859027960,
      "node_id": "PRRC_kwDOAN28mc5uzoP4",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 28,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This feels a bit out-of-context because keys have not been mentioned at all so far.",
      "created_at": "2024-11-26T18:07:31Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859027960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859027960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859048471",
      "pull_request_review_id": 2462336832,
      "id": 1859048471,
      "node_id": "PRRC_kwDOAN28mc5uztQX",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 38,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Iâ€™m not sure whether this is intentional, but previously we treat a 32-byte key as a BIPâ€¯340 public key. I assume if it were out-of-range, the signature validation would fail.\r\nHowever here, rather than repeating that the lengths 0-byte and 32-byte are excluded, the criterion appears to be \"not zero and not a BIPâ€¯340 public key\". I assume this is covered by the previous line, but what if a 32-byte value were provided that is out of range, would this line apply or not? \r\n\r\nIs it possible that this should read:\r\n\r\n```suggestion\r\n* If the public key size is not zero bytes and not 32 bytes; the public key is of an unknown public key type. Signature verification for unknown public key types succeeds as if signature verification for a known public key type had succeeded.\r\n```",
      "created_at": "2024-11-26T18:25:50Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859048471",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859048471"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859051524",
      "pull_request_review_id": 2462336832,
      "id": 1859051524,
      "node_id": "PRRC_kwDOAN28mc5uzuAE",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 50,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be easier to follow if the title of BIPâ€¯347 were mentioned:\r\n\r\n```suggestion\r\n4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as [BIP 347] (OP_CAT).\r\n```\r\n\r\nIt also isnâ€™t clear to me why this link text is code formatted.",
      "created_at": "2024-11-26T18:28:24Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859051524",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859051524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859058110",
      "pull_request_review_id": 2462336832,
      "id": 1859058110,
      "node_id": "PRRC_kwDOAN28mc5uzvm-",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 51,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I expect that not all readers know all BIPâ€¯numbers by heart, so it might be easier to follow if proposals were referred to by name rather than just number:\r\n\r\n```suggestion\r\n5. APO-style ([BIP 118]) Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing `OP_INTERNALKEY` ([BIP 349]) or separately introducing that key type for all Tapscript signature checking operations in a separate change.\r\n```\r\n\r\nNote that the latter link is currently broken, because BIPâ€¯349 is not merged yet.",
      "created_at": "2024-11-26T18:34:13Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859058110",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859058110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859060859",
      "pull_request_review_id": 2462336832,
      "id": 1859060859,
      "node_id": "PRRC_kwDOAN28mc5uzwR7",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.\n+\n+## Resource Limits\n+\n+These opcodes are treated identically to other signature checking opcodes and\n+count against the various sigops limits and budgets in their respective script\n+types.\n+\n+## Motivation\n+\n+### LN Symmetry\n+\n+When combined with [BIP 119] (`OP_CHECKTEMPLATEVERIFY`/CTV),\n+`OP_CHECKSIGFROMSTACK` (CSFS) can be used in Lightning Symmetry channels.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 64,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What do you mean with \"can be used in Lightning Symmetry channels\"? Do you mean that the two opcodes together can replicate the behavior of APO?\r\n\r\n```suggestion\r\nWhen combined with [BIP 119] (`OP_CHECKTEMPLATEVERIFY`/CTV),\r\n`OP_CHECKSIGFROMSTACK` (CSFS) can be used to implement Lightning Symmetry channels.\r\n```\r\n\r\n```suggestion\r\nWhen combined with [BIP 119] (`OP_CHECKTEMPLATEVERIFY`/CTV),\r\n`OP_CHECKSIGFROMSTACK` (CSFS) can be used to replicate Lightning Symmetry channels.\r\n```",
      "created_at": "2024-11-26T18:36:44Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859060859",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859060859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859068216",
      "pull_request_review_id": 2462336832,
      "id": 1859068216,
      "node_id": "PRRC_kwDOAN28mc5uzyE4",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 16,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Iâ€™m not sure \"other than bitcoin transactions\" is accurate. Would perhaps this fit better?\r\n\r\n```suggestion\r\nsignatures in bitcoin scripts against data on the stack.\r\n```",
      "created_at": "2024-11-26T18:41:25Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859068216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859068216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859071054",
      "pull_request_review_id": 2462336832,
      "id": 1859071054,
      "node_id": "PRRC_kwDOAN28mc5uzyxO",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 9,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nCreated: 2024-11-26\r\n```",
      "created_at": "2024-11-26T18:43:53Z",
      "updated_at": "2024-11-26T18:46:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859071054",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859071054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859088830",
      "pull_request_review_id": 2462455132,
      "id": 1859088830,
      "node_id": "PRRC_kwDOAN28mc5uz3G-",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 51,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": 1859058110,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, my bad, itâ€™s not that itâ€™s not merged, but that it is a markdown file rather than mediawiki.",
      "created_at": "2024-11-26T18:59:35Z",
      "updated_at": "2024-11-26T18:59:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859088830",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859088830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859089101",
      "pull_request_review_id": 2462455538,
      "id": 1859089101,
      "node_id": "PRRC_kwDOAN28mc5uz3LN",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: 348\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0348\n+Status: Draft\n+Type: Standards Track\n+Created: 2024-11-26\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data from the stack.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.\n+\n+## Resource Limits\n+\n+These opcodes are treated identically to other signature checking opcodes and\n+count against the various sigops limits and budgets in their respective script\n+types.\n+\n+## Motivation\n+\n+### LN Symmetry\n+\n+When combined with [BIP 119] (`OP_CHECKTEMPLATEVERIFY`/CTV),\n+`OP_CHECKSIGFROMSTACK` (CSFS) can be used in Lightning Symmetry channels.\n+The construction `OP_CHECKTEMPLATEVERIFY <pubkey> OP_CHECKSIGFROMSTACK` with a\n+spend stack containing the CTV hash and a signature for it is logically\n+equivalent to `<bip118_pubkey> OP_CHECKSIG` and a signature over\n+`SIGHASH_ALL|SIGHASH_ANYPREVOUTANYSCRIPT`. The `OP_CHECKSIGFROMSTACK`\n+construction is 8 vBytes larger.\n+\n+### Delegation\n+\n+Using a script like:\n+`<pubkey> SWAP IF 2 PICK SWAP CSFS VERIFY ENDIF CHECKSIG`\n+either direct verification or delegation can be achieved by the following\n+unlock stacks: `<sig> 0` or `<dsig> <dpubkey> <sig> 1`\n+\n+### Advanced delegation when combined with [OP_PAIRCOMMIT] or OP_CAT\n+\n+Using a script like:\n+`CLTV OVER PAIRCOMMIT TOALT CHECKSIGVERIFY FROMALT <pubkey> CSFS`\n+or:\n+`CLTV SHA256 OVER CAT TOALT CHECKSIGVERIFY FROMALT <pubkey> CSFS`\n+with the unlock stack:\n+`<sig> <delegate_sig> <delegate_pubkey> <locktime>`\n+\n+Delegates to a public key after a lock time, enabling delegation to various\n+keys after various associated times.\n+\n+## Reference Implementation\n+\n+A reference implementation is provided in provided here:\n+\n+https://github.com/bitcoin/bitcoin/pull/29270\n+\n+## Backward Compatibility\n+\n+By constraining the behavior of an OP_SUCCESS opcode,\n+deployment of the BIP can be done in a backwards compatible, soft-fork manner.\n+If anyone were to rely on the OP_SUCCESS behavior of\n+`OP_SUCCESS204`, `OP_CHECKSIGFROMSTACK` would invalidate\n+their spend.\n+\n+## Deployment\n+\n+TBD\n+\n+## Credits\n+\n+Reference implementation was made with reference to the implementation in\n+Elements and started by moonsettler.\n+\n+## Copyright\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+[BIP 119]: https://github.com/bitcoin/bips/blob/master/bip-0119.mediawiki\n+\n+[BIP 118]: https://github.com/bitcoin/bips/blob/master/bip-0118.mediawiki\n+\n+[BIP 340]: https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n+\n+[BIP 341]: https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki\n+\n+[BIP 342]: https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki\n+\n+[BIP 349]: https://github.com/bitcoin/bips/blob/master/bip-0349.mediawiki",
      "path": "bip-0348.md",
      "position": null,
      "original_position": 127,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "7676dda84545ab2c1512081d7da4a1f4bb2ad5ea",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n[BIP 349]: https://github.com/bitcoin/bips/blob/master/bip-0349.md\r\n```",
      "created_at": "2024-11-26T18:59:48Z",
      "updated_at": "2024-11-26T18:59:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859089101",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859089101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859089811",
      "pull_request_review_id": 2462456682,
      "id": 1859089811,
      "node_id": "PRRC_kwDOAN28mc5uz3WT",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 38,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": 1859048471,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe I copied that text from BIP340. Your wording is more clear.",
      "created_at": "2024-11-26T19:00:29Z",
      "updated_at": "2024-11-26T19:00:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859089811",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859089811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859097028",
      "pull_request_review_id": 2462468188,
      "id": 1859097028,
      "node_id": "PRRC_kwDOAN28mc5uz5HE",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 51,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": 1859058110,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "am confused, the PR shows merged.",
      "created_at": "2024-11-26T19:07:13Z",
      "updated_at": "2024-11-26T19:07:13Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859097028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859097028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859098004",
      "pull_request_review_id": 2462469462,
      "id": 1859098004,
      "node_id": "PRRC_kwDOAN28mc5uz5WU",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 51,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": 1859058110,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ah, had the link wrong - `md`",
      "created_at": "2024-11-26T19:08:00Z",
      "updated_at": "2024-11-26T19:08:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859098004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859098004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859100948",
      "pull_request_review_id": 2462474105,
      "id": 1859100948,
      "node_id": "PRRC_kwDOAN28mc5uz6EU",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.\n+\n+## Resource Limits\n+\n+These opcodes are treated identically to other signature checking opcodes and\n+count against the various sigops limits and budgets in their respective script\n+types.\n+\n+## Motivation\n+\n+### LN Symmetry\n+\n+When combined with [BIP 119] (`OP_CHECKTEMPLATEVERIFY`/CTV),\n+`OP_CHECKSIGFROMSTACK` (CSFS) can be used in Lightning Symmetry channels.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 64,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": 1859060859,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For the purposes of Lightning Symmetry, when not attempting to build an alternative Lightning Symmetry that has endogenous fees, CSFS+CTV are a minimal substitute for APO. CSFS+CTV+PC+IKEY (LNHANCE) are byte-wise and composability-wise better substitute to APO.",
      "created_at": "2024-11-26T19:10:46Z",
      "updated_at": "2024-11-26T19:10:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859100948",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859100948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859106056",
      "pull_request_review_id": 2462484590,
      "id": 1859106056,
      "node_id": "PRRC_kwDOAN28mc5uz7UI",
      "diff_hunk": "@@ -0,0 +1,133 @@\n+```\n+BIP: XXX\n+Layer: Consensus (soft fork)\n+Title: CHECKSIGFROMSTACK\n+Author: Brandon Black <freedom@reardencode.com>, Jeremy Rubin <j@rubin.io>\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2023-12-22\n+License: BSD-3-CLAUSE\n+```\n+\n+## Abstract\n+\n+This BIP describes two new opcodes for the purpose of checking cryptographic\n+signatures in bitcoin scripts against data other than bitcoin transactions.\n+\n+## Summary\n+\n+When verifying taproot script spends having leaf version 0xc0 (as defined in\n+[BIP 342]), we propose `OP_CHECKSIGFROMSTACK` to replace `OP_SUCCESS204`\n+(0xcc).\n+\n+`OP_CHECKSIGFROMSTACKVERIFY` has semantics similar to `OP_CHECKSIG`, as\n+specified below.\n+\n+Only 32-byte keys are constrained. Similar to [BIP 341] unknown key types, for\n+other key lengths no signature verification is performed.\n+\n+## Specification\n+\n+* If fewer than 3 elements are on the stack, the script MUST fail and terminate immediately.\n+* The public key (top element), message (second to top element), and signature (third from top element) are read from the stack.\n+* The top three elements are popped from the stack.\n+* If the public key size is zero, the script MUST fail and terminate immediately.\n+* If the public key size is 32 bytes, it is considered to be a public key as described in [BIP 340]:\n+    * If the signature is not the empty vector, the signature is validated against the public key and message according to [BIP 340]. Validation failure in this case immediately terminates script execution with failure.\n+* If the public key size is not zero, and it is not a [BIP 340] public key; the public key is of an unknown public key type, and no actual signature verification is applied. During script execution of signature opcodes they behave exactly as known public key types except that signature validation is considered to be successful.\n+* If the script did not fail and terminate before this step, regardless of the public key type:\n+    * If the signature is the empty vector: An empty vector is pushed onto the stack, and execution continues with the next opcode.\n+    * If the signature is not the empty vector:\n+        * The opcode is counted towards the sigops budget as described in [BIP 342].\n+        * A 1-byte value 0x01 is pushed onto the stack.\n+\n+## Design Considerations\n+\n+1. Message hashing: [BIP 340] is compatible with any size of message and does not require it to be a securely hashed input, so the message is not hashed prior to [BIP 340] verification.\n+2. Lack of verify semantics: Adding a single opcode for this purpose keeps the implementation and design simple. An earlier draft had a verify variant as a NOP upgrade, and if this funcationality is later brought to legacy scripts, that would be a good time to add a verify variant.\n+3. Add/multisig: No concession is made to `OP_CHECKMULTISIG` or `OP_CHECKSIGADD` semantics with `OP_CHECKSIGFROMSTACK(VERIFY)`. In Tapscript, add semantics can be implemented with 1 additional vByte per key (`OP_TOALTSTACK OP_CHECKSIGFROMSTACK OP_FROMALTSTACK OP_ADD`).\n+4. Splitting R/S on the stack: Implementing split/separate signatures is left as an exercise for other bitcoin upgrades, such as `[BIP 347]`.\n+5. [BIP 118]-style Taproot internal key: Rather than introducing an additional key type in this change, we suggest implementing [BIP 349] or separately introducing that key type for all Tapscript signature checking operations in a separate change.\n+\n+## Resource Limits\n+\n+These opcodes are treated identically to other signature checking opcodes and\n+count against the various sigops limits and budgets in their respective script\n+types.\n+\n+## Motivation\n+\n+### LN Symmetry\n+\n+When combined with [BIP 119] (`OP_CHECKTEMPLATEVERIFY`/CTV),\n+`OP_CHECKSIGFROMSTACK` (CSFS) can be used in Lightning Symmetry channels.",
      "path": "bip-csfs.md",
      "position": null,
      "original_position": 64,
      "commit_id": "d2932bd00d16992d90df82d2a37db79c355046c4",
      "original_commit_id": "426eb8912df0af642f4e31ed49c8a5831341edd8",
      "in_reply_to_id": 1859060859,
      "user": {
        "login": "reardencode",
        "id": 730881,
        "node_id": "MDQ6VXNlcjczMDg4MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/730881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reardencode",
        "html_url": "https://github.com/reardencode",
        "followers_url": "https://api.github.com/users/reardencode/followers",
        "following_url": "https://api.github.com/users/reardencode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reardencode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reardencode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reardencode/subscriptions",
        "organizations_url": "https://api.github.com/users/reardencode/orgs",
        "repos_url": "https://api.github.com/users/reardencode/repos",
        "events_url": "https://api.github.com/users/reardencode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reardencode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a brief summary of this to the BIP",
      "created_at": "2024-11-26T19:14:38Z",
      "updated_at": "2024-11-26T19:14:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1535#discussion_r1859106056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1859106056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1535"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    }
  ]
}