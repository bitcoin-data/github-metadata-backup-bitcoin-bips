{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1787",
    "id": 2380396025,
    "node_id": "PR_kwDOAN28mc6N4fX5",
    "html_url": "https://github.com/bitcoin/bips/pull/1787",
    "diff_url": "https://github.com/bitcoin/bips/pull/1787.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1787.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1787",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1787/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/6eb2eb7615392dc1bcedf2de10c4d585bb468416",
    "number": 1787,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Propose new BIP for Programmable Bitcoin Token Standard (PBTS)",
    "user": {
      "login": "GobiShanthan",
      "id": 73505570,
      "node_id": "MDQ6VXNlcjczNTA1NTcw",
      "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GobiShanthan",
      "html_url": "https://github.com/GobiShanthan",
      "followers_url": "https://api.github.com/users/GobiShanthan/followers",
      "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
      "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
      "repos_url": "https://api.github.com/users/GobiShanthan/repos",
      "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This pull request introduces a new Bitcoin Improvement Proposal (BIP):\r\n\r\n**Programmable Bitcoin Token Standard (PBTS)**\r\n\r\nPBTS provides a Layer 1 token standard leveraging Bitcoin Script and Taproot to enable the creation, transfer, and verification of native programmable tokens directly on Bitcoin. It introduces structured programmability without requiring changes to Bitcoin’s consensus rules.\r\n\r\n### Key Highlights:\r\n\r\n- **Layer 1 Implementation:** Tokens are fully validated and transferred on Bitcoin's base layer without external dependencies.\r\n- **Taproot Optimized:** Minimal impact on scalability, with optimized transaction size and fees.\r\n- **Structured Programmability:** Enables predefined execution paths, such as vesting contracts, milestone-based escrows, and oracle integration.\r\n\r\nFull details are available in the proposed BIP markdown file:  \r\n- [bip-pbts.md](bip-pbts.md)\r\n\r\nFeedback, suggestions, and discussion are welcome.\r\n",
    "labels": [],
    "created_at": "2025-03-08T22:49:35Z",
    "updated_at": "2025-03-12T22:11:31Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merged": false,
    "merge_commit_sha": "141a2a6c2e8f4a7044b85401ae44343dfb32d604",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "GobiShanthan:pbts-bip",
      "ref": "pbts-bip",
      "sha": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 945203164,
        "node_id": "R_kgDOOFan3A",
        "name": "bips",
        "full_name": "GobiShanthan/bips",
        "owner": {
          "login": "GobiShanthan",
          "id": 73505570,
          "node_id": "MDQ6VXNlcjczNTA1NTcw",
          "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/GobiShanthan",
          "html_url": "https://github.com/GobiShanthan",
          "followers_url": "https://api.github.com/users/GobiShanthan/followers",
          "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
          "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
          "repos_url": "https://api.github.com/users/GobiShanthan/repos",
          "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/GobiShanthan/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/GobiShanthan/bips",
        "archive_url": "https://api.github.com/repos/GobiShanthan/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/GobiShanthan/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/GobiShanthan/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/GobiShanthan/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/GobiShanthan/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/GobiShanthan/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/GobiShanthan/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/GobiShanthan/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/GobiShanthan/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/GobiShanthan/bips/contributors",
        "deployments_url": "https://api.github.com/repos/GobiShanthan/bips/deployments",
        "downloads_url": "https://api.github.com/repos/GobiShanthan/bips/downloads",
        "events_url": "https://api.github.com/repos/GobiShanthan/bips/events",
        "forks_url": "https://api.github.com/repos/GobiShanthan/bips/forks",
        "git_commits_url": "https://api.github.com/repos/GobiShanthan/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/GobiShanthan/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/GobiShanthan/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/GobiShanthan/bips.git",
        "issue_comment_url": "https://api.github.com/repos/GobiShanthan/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/GobiShanthan/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/GobiShanthan/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/GobiShanthan/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/GobiShanthan/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/GobiShanthan/bips/languages",
        "merges_url": "https://api.github.com/repos/GobiShanthan/bips/merges",
        "milestones_url": "https://api.github.com/repos/GobiShanthan/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/GobiShanthan/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/GobiShanthan/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/GobiShanthan/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:GobiShanthan/bips.git",
        "stargazers_url": "https://api.github.com/repos/GobiShanthan/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/GobiShanthan/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/GobiShanthan/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/GobiShanthan/bips/subscription",
        "tags_url": "https://api.github.com/repos/GobiShanthan/bips/tags",
        "teams_url": "https://api.github.com/repos/GobiShanthan/bips/teams",
        "trees_url": "https://api.github.com/repos/GobiShanthan/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/GobiShanthan/bips.git",
        "hooks_url": "https://api.github.com/repos/GobiShanthan/bips/hooks",
        "svn_url": "https://github.com/GobiShanthan/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 16117,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-08T22:47:55Z",
        "created_at": "2025-03-08T22:21:25Z",
        "updated_at": "2025-03-08T22:21:25Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "33231097c2f71ec7aa780a4e181bedd8581d8171",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5523,
        "stargazers_count": 9769,
        "watchers_count": 9769,
        "size": 15347,
        "default_branch": "master",
        "open_issues_count": 36,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-10T20:56:09Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-03-12T22:53:47Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 305,
    "deletions": 0,
    "changed_files": 1,
    "commits": 2,
    "review_comments": 10,
    "comments": 0
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZlZjJlZGQzMGEwMjBhZDc0OWFjZjUxMzI2NDQwODEwOTBmYzM5Zjk",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6ef2edd30a020ad749acf5132644081090fc39f9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6ef2edd30a020ad749acf5132644081090fc39f9",
      "tree": {
        "sha": "beb387d6a5c51ecff1930a761f3bf536d63af578",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/beb387d6a5c51ecff1930a761f3bf536d63af578"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/33231097c2f71ec7aa780a4e181bedd8581d8171",
          "sha": "33231097c2f71ec7aa780a4e181bedd8581d8171",
          "html_url": "https://github.com/bitcoin/bips/commit/33231097c2f71ec7aa780a4e181bedd8581d8171"
        }
      ],
      "message": "Propose new BIP for Programmable Bitcoin Token Standard (PBTS)",
      "committer": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:25:43Z"
      },
      "author": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:25:43Z"
      },
      "sha": "6ef2edd30a020ad749acf5132644081090fc39f9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZlYjJlYjc2MTUzOTJkYzFiY2VkZjJkZTEwYzRkNTg1YmI0Njg0MTY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "tree": {
        "sha": "e145d16eb88e8345827fd4398cf36315033a057c",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/e145d16eb88e8345827fd4398cf36315033a057c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6ef2edd30a020ad749acf5132644081090fc39f9",
          "sha": "6ef2edd30a020ad749acf5132644081090fc39f9",
          "html_url": "https://github.com/bitcoin/bips/commit/6ef2edd30a020ad749acf5132644081090fc39f9"
        }
      ],
      "message": " removed implementation link until further notice",
      "committer": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:45:28Z"
      },
      "author": {
        "name": "unknown",
        "email": "gobishanthan04@gmail.com",
        "date": "2025-03-08T22:45:28Z"
      },
      "sha": "6eb2eb7615392dc1bcedf2de10c4d585bb468416"
    },
    {
      "event": "reviewed",
      "id": 2678967038,
      "node_id": "PRR_kwDOAN28mc6frcr-",
      "url": null,
      "actor": null,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1787#pullrequestreview-2678967038",
      "submitted_at": "2025-03-12T16:02:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991767450",
      "pull_request_review_id": 2678967038,
      "id": 1991767450,
      "node_id": "PRRC_kwDOAN28mc52t_Wa",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)",
      "path": "bip-pbst.md",
      "position": 6,
      "original_position": 6,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This title clashes with \"PSBTs\" and will lead to confusion should this BIP get adopted. Would you be open to considering a different name?",
      "created_at": "2025-03-12T15:33:07Z",
      "updated_at": "2025-03-12T16:02:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991767450",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991767450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991802274",
      "pull_request_review_id": 2678967038,
      "id": 1991802274,
      "node_id": "PRRC_kwDOAN28mc52uH2i",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.",
      "path": "bip-pbst.md",
      "position": 33,
      "original_position": 33,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In the Motivation, could you please expand on the issue this proposal addresses and how this proposal improves Bitcoin? It’s not obvious to me how a token standard improves Bitcoin.\r\n\r\nIt is an open question whether colored coin protocols and other token schemes are on-topic for this repository.",
      "created_at": "2025-03-12T15:50:56Z",
      "updated_at": "2025-03-12T16:06:03Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991802274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991802274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991820833",
      "pull_request_review_id": 2678967038,
      "id": 1991820833,
      "node_id": "PRRC_kwDOAN28mc52uMYh",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)",
      "path": "bip-pbst.md",
      "position": 97,
      "original_position": 97,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You claim that no consensus change is necessary, but it is not clear to me how the special meaning of this new output type is supposed to be enforced without new consensus rules. Could you perhaps clarify this point?",
      "created_at": "2025-03-12T16:00:31Z",
      "updated_at": "2025-03-12T16:02:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991820833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991820833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": 92,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991823527",
      "pull_request_review_id": 2678967038,
      "id": 1991823527,
      "node_id": "PRRC_kwDOAN28mc52uNCn",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)\n+\n+2. **Example Issuance Script**:\n+```\n+<token_metadata_hash> OP_DROP\n+<issuer_pubkey> OP_CHECKSIG\n+```\n+\n+### Token Contracts\n+\n+PBTS supports several programmable contract types that define how tokens can be transferred and under what conditions they can be spent:\n+\n+#### 1. Auto-Vest (Time-Locked) Contracts\n+\n+Time-locked transfers where tokens become available to the recipient only after a specific date, using Bitcoin's CHECKLOCKTIMEVERIFY opcode.\n+\n+**Script Pattern**:\n+```\n+IF\n+    <locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSE\n+    <issuer_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 2. Milestone-Based Escrow\n+\n+Structured transfers with multiple release stages, each requiring specific conditions like time thresholds and multi-signature approvals.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Milestone 1\n+    <milestone1_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m1> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Milestone 2\n+    <milestone2_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m2> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 3. Oracle-Ready Contracts\n+\n+Contracts designed to work with external data oracles, containing placeholder structures for future oracle implementation.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Oracle verification\n+    <oracle_pubkey> OP_CHECKSIGVERIFY\n+    <condition_hash> OP_SHA256 <expected_result_hash> OP_EQUALVERIFY\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+### Token Transfer\n+\n+PBTS token transfers involve creating transactions that spend from token-containing UTXOs and create new UTXOs with the appropriate scripts to maintain token properties and conditions.\n+\n+1. **Standard Transfer**:\n+   * Spends from a token UTXO\n+   * Creates new outputs with token metadata preserved\n+   * May split tokens across multiple outputs (for partial transfers)",
      "path": "bip-pbst.md",
      "position": 169,
      "original_position": 169,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I seem to be missing something. How are these transactions fashioned to enforce adherence to the token supply limit?",
      "created_at": "2025-03-12T16:02:00Z",
      "updated_at": "2025-03-12T16:02:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991823527",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991823527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": 166,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": 169,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991831640",
      "pull_request_review_id": 2679076491,
      "id": 1991831640,
      "node_id": "PRRC_kwDOAN28mc52uPBY",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)",
      "path": "bip-pbst.md",
      "position": 6,
      "original_position": 6,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991767450,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree, it is too similar in naming to PSBTs.",
      "created_at": "2025-03-12T16:05:56Z",
      "updated_at": "2025-03-12T16:05:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1991831640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1991831640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992330782",
      "pull_request_review_id": 2679931500,
      "id": 1992330782,
      "node_id": "PRRC_kwDOAN28mc52wI4e",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)",
      "path": "bip-pbst.md",
      "position": 6,
      "original_position": 6,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991767450,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": " Thank you for your feedback! We recognize the potential confusion with PSBT (Partially Signed Bitcoin Transactions). To avoid this, we have renamed PBTS to TSB (Token Standard on Bitcoin). This ensures clarity and better represents the proposal's goal: establishing a unified standard for Bitcoin-native tokens.\r\n",
      "created_at": "2025-03-12T21:37:48Z",
      "updated_at": "2025-03-12T21:37:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992330782",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992330782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992335087",
      "pull_request_review_id": 2679940083,
      "id": 1992335087,
      "node_id": "PRRC_kwDOAN28mc52wJ7v",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)",
      "path": "bip-pbst.md",
      "position": 97,
      "original_position": 97,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991820833,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How TSB Functions Without Consensus Changes\r\n\r\nTSB  leverages existing Bitcoin protocol features—specifically Taproot and Bitcoin Script—to create and enforce token rules without requiring any modifications to Bitcoin's consensus layer:\r\n1. Script-Based Enforcement Rather Than Protocol-Level Rules\r\nTSB tokens are encoded and validated entirely through standard Bitcoin transactions and scripts:\r\nToken Creation: Tokens are created by crafting Taproot outputs with specific script structures that encode token metadata and rules.\r\nToken Transfer: When transferring tokens, spending conditions are enforced through script execution during regular transaction validation.\r\nSupply Constraints: Total supply rules are maintained through carefully structured scripts that prevent unauthorized token creation.\r\n\r\n2. Commitment-Based Verification\r\nTSB uses Taproot's commitment structure to enforce token rules:\r\nWhen a token is created, its properties (ID, supply, metadata) are committed to in the Taproot output.\r\nAny future transfers must adhere to these commitments to be considered valid token transactions.\r\nThese commitments are verified using standard Bitcoin Script operations that already exist.\r\n\r\n3. Wallet-Level Implementation\r\nLike other application-layer protocols on Bitcoin:\r\nSpecialized wallets recognize TSB token patterns and create compliant transactions\r\nToken validation occurs within standard Bitcoin Script execution\r\nNo changes to Bitcoin nodes or mining software are required\r\n\r\n\r\n4. Why This Isn't A Consensus Change\r\nBitcoin nodes will continue to validate transactions using existing rules:\r\nNo new opcodes are required\r\nNo changes to transaction validation logic\r\nNo modifications to block validation\r\nThe key insight is that TSB doesn't require the Bitcoin protocol to \"understand\" tokens specifically. It just requires that Bitcoin continues to enforce its existing script validation rules, which TSB leverages to create token-like behavior through carefully designed transaction patterns.\r\n",
      "created_at": "2025-03-12T21:41:36Z",
      "updated_at": "2025-03-12T21:41:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992335087",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992335087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": 92,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992336135",
      "pull_request_review_id": 2679941801,
      "id": 1992336135,
      "node_id": "PRRC_kwDOAN28mc52wKMH",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.\n+\n+## Key Benefits\n+\n+1. **No Additional Layers**  \n+   * Execution happens directly in **Bitcoin transactions**  \n+   * Complete validation on **Layer 1**  \n+   * No external dependencies for validation\n+\n+2. **Predefined & Deterministic Execution**  \n+   * No infinite loops or dynamic state modifications  \n+   * Predictable execution paths  \n+   * Fixed state transitions\n+\n+3. **Minimal Impact**  \n+   * Utilizes existing **Taproot** and **Script** functionality  \n+   * No consensus changes required  \n+   * Standard transaction format\n+\n+4. **Scalability & Efficiency**  \n+   * **Merkle proof-based validation**  \n+   * Minimal transaction sizes through Taproot optimization  \n+   * Compatible with future Bitcoin scaling solutions\n+\n+5. **Security Model**  \n+   * No external validators required  \n+   * Fully **self-custodial**  \n+   * Bitcoin-native security\n+\n+6. **Programmable Conditions**\n+   * Time-locked transfers (vesting)\n+   * Milestone-based escrow with multiple release stages\n+   * Multi-signature requirements\n+   * Prepared for oracle integration\n+\n+## Comparison with Existing Bitcoin Token Standards\n+\n+| Feature                    | Ordinals                 | Runes           | PBTS                         |\n+|----------------------------|--------------------------|-----------------|------------------------------|\n+| UTXO-Based                 | ❌ No (Inscriptions)     | ✅ Yes          | ✅ Yes                       |\n+| Requires External Indexer? | ✅ Yes                   | ✅ Yes          | ❌ No                        |\n+| Efficient for Tokens?      | ❌ No                    | ✅ Somewhat     | ✅ Fully Optimized           |\n+| Scalability Impact         | ❌ High Blockchain Bloat | ⚠️ Medium       | ✅ Minimal (Uses Taproot)    |\n+| Bitcoin Script-Based?      | ❌ No                    | ✅ Yes          | ✅ Yes (Taproot-Optimized)   |\n+| Consensus Changes Required?| ❌ No                    | ❌ No           | ❌ No                        |\n+| Transaction Cost           | ❌ Expensive             | ⚠️ Medium       | ✅ Efficient                 |\n+| Programmable Conditions    | ❌ No                    | ⚠️ Limited      | ✅ Yes                       |\n+| Fully On-Chain Validation  | ❌ No                    | ❌ No           | ✅ Yes                       |\n+\n+## Specification\n+\n+### Overview\n+\n+PBTS tokens are created, transferred, and validated directly on Bitcoin's Layer 1 using Taproot scripts to enable complex programmable conditions without requiring any modifications to the Bitcoin protocol.\n+\n+### Token Creation\n+\n+A **PBTS token** is created by locking a **UTXO** with a **Taproot script** that commits to a token issuance structure. The token metadata is encoded in the transaction output using a standardized format:\n+\n+1. **Token Issuance Format**:\n+   * The output script is a Taproot output that contains:\n+     * Token ID: A 32-byte identifier (Hash of Issuer's Public Key + Script Hash)\n+     * Total Supply: Fixed integer representing the maximum possible supply\n+     * Decimals: Integer representing the decimal places (typically 8 to match satoshis)\n+     * Metadata Commitment: Optional hash of off-chain metadata (name, symbol, description)\n+\n+2. **Example Issuance Script**:\n+```\n+<token_metadata_hash> OP_DROP\n+<issuer_pubkey> OP_CHECKSIG\n+```\n+\n+### Token Contracts\n+\n+PBTS supports several programmable contract types that define how tokens can be transferred and under what conditions they can be spent:\n+\n+#### 1. Auto-Vest (Time-Locked) Contracts\n+\n+Time-locked transfers where tokens become available to the recipient only after a specific date, using Bitcoin's CHECKLOCKTIMEVERIFY opcode.\n+\n+**Script Pattern**:\n+```\n+IF\n+    <locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSE\n+    <issuer_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 2. Milestone-Based Escrow\n+\n+Structured transfers with multiple release stages, each requiring specific conditions like time thresholds and multi-signature approvals.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Milestone 1\n+    <milestone1_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m1> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Milestone 2\n+    <milestone2_locktime> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <m2> <pubkey1> <pubkey2> <pubkeyN> <n> OP_CHECKMULTISIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+#### 3. Oracle-Ready Contracts\n+\n+Contracts designed to work with external data oracles, containing placeholder structures for future oracle implementation.\n+\n+**Script Pattern**:\n+```\n+IF\n+    # Oracle verification\n+    <oracle_pubkey> OP_CHECKSIGVERIFY\n+    <condition_hash> OP_SHA256 <expected_result_hash> OP_EQUALVERIFY\n+    <receiver_pubkey> OP_CHECKSIG\n+ELSEIF\n+    # Expiry condition (return to sender)\n+    <expiry_time> OP_CHECKLOCKTIMEVERIFY OP_DROP\n+    <sender_pubkey> OP_CHECKSIG\n+ENDIF\n+```\n+\n+### Token Transfer\n+\n+PBTS token transfers involve creating transactions that spend from token-containing UTXOs and create new UTXOs with the appropriate scripts to maintain token properties and conditions.\n+\n+1. **Standard Transfer**:\n+   * Spends from a token UTXO\n+   * Creates new outputs with token metadata preserved\n+   * May split tokens across multiple outputs (for partial transfers)",
      "path": "bip-pbst.md",
      "position": 169,
      "original_position": 169,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991823527,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How TSB Enforces Adherence to the Token Supply Limit\r\n\r\nTSB ensures strict token supply limits by leveraging Taproot script commitments and UTXO-based validation. Since Bitcoin enforces its own transaction rules at the protocol level, TSB integrates supply constraints directly into Bitcoin’s consensus layer, preventing unauthorized token creation.\r\n\r\n1. Fixed Supply Commitment at Issuance\r\nThe total token supply is permanently committed at the time of issuance. This is embedded in the Taproot output, ensuring that no additional tokens can ever be created.\r\n Token Issuance Script (Genesis Commitment)\r\n# TSB Token Genesis Script\r\n<token_metadata_hash> OP_DROP\r\n<issuer_pubkey> OP_CHECKSIG\r\n\r\nHow this enforces the supply limit:\r\nThe token’s metadata hash includes the total supply, ensuring it is fixed and immutable.\r\nThe issuer’s public key controls initial distribution, preventing unauthorized issuance.\r\nThe supply limit is enforced within the Taproot output, making it part of Bitcoin’s consensus rules.\r\n\r\n\r\n2. Enforcing Supply Conservation in Transfers\r\nTSB tokens must originate from an existing UTXO that references the original issuance, ensuring that no new tokens can be introduced.\r\nToken Transfer Validation Script\r\n# TSB Token Transfer Script (Preserving Supply)\r\n<token_metadata_hash> OP_DROP\r\n<prev_utxo_commitment> OP_CHECKSIGVERIFY\r\n<receiver_pubkey> OP_CHECKSIG\r\n\r\nHow this maintains supply integrity:\r\nTokens can only be spent if they reference a valid prior UTXO, preventing unauthorized creation.\r\nThe script ensures that ownership is transferred while preserving the original issuance constraints.\r\nBitcoin’s UTXO model inherently prevents overspending, enforcing a strict conservation principle.\r\n\r\n3. Preventing Inflation in Multi-Output Transactions\r\nWhen splitting tokens across multiple recipients, TSB scripts ensure that the sum of the outputs exactly matches the input, preventing supply inflation.\r\nMulti-Output Conservation Script\r\n# Ensuring Token Outputs Sum to Input\r\n<token_metadata_hash> OP_DROP\r\n<input_utxo_amount>\r\n<output1_amount> <output2_amount> OP_ADD\r\nOP_EQUALVERIFY  # Ensures total outputs = inputs\r\n<receiver_pubkey> OP_CHECKSIG\r\n\r\nWhy this prevents excess token creation:\r\nThe sum of all token outputs must always match the input amount.\r\nAny attempt to create excess tokens fails validation before confirmation.\r\nBitcoin’s consensus rules reject transactions that do not satisfy these conditions, ensuring strict supply enforcement.\r\n\r\n4. Leveraging Taproot for Efficient Supply Enforcement\r\nTSB utilizes Taproot’s Merkleized script structure to ensure supply constraints remain intact while allowing flexible spending conditions.\r\nTaproot Spending Paths for TSB Tokens\r\n{\r\n  # Path 1: Standard Transfer\r\n  <token_metadata_hash> <prev_utxo_commitment> OP_CHECKSIGVERIFY <receiver_pubkey> OP_CHECKSIG,\r\n\r\n  # Path 2: Expiry Condition (Reclaim Unspent Tokens)\r\n  <timelock> OP_CHECKLOCKTIMEVERIFY OP_DROP <sender_pubkey> OP_CHECKSIG\r\n}\r\n\r\n\r\n How Taproot optimizes enforcement:\r\nOnly authorized transactions can modify token ownership, ensuring strict adherence to supply constraints.\r\nUnused tokens can be reclaimed if they remain unspent for a predefined period.\r\nAll transactions inherit issuance rules cryptographically, preventing supply violations.\r\n\r\n\r\nTSB ensures token supply limits are enforced natively within Bitcoin’s consensus rules. By embedding constraints in Taproot commitments, Bitcoin Script validation, and the UTXO model, TSB eliminates the need for external tracking. Every transaction must reference prior UTXOs, enforcing strict supply conservation at the protocol level.\r\nThis guarantees a fully Bitcoin-native token system where supply constraints cannot be bypassed, altered, or inflated, ensuring long-term security and stability. \r\n",
      "created_at": "2025-03-12T21:42:42Z",
      "updated_at": "2025-03-12T21:42:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992336135",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992336135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": 166,
      "original_start_line": 166,
      "start_side": "RIGHT",
      "line": 169,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992363783",
      "pull_request_review_id": 2679983027,
      "id": 1992363783,
      "node_id": "PRRC_kwDOAN28mc52wQ8H",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.",
      "path": "bip-pbst.md",
      "position": 33,
      "original_position": 33,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991802274,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The Token Standard on Bitcoin (TSB) directly improves Bitcoin in several ways:\r\nFirst, TSB addresses existing blockchain bloat and efficiency issues. Token activities already occur on Bitcoin through methods like Ordinals/BRC-20, which store excessive data and consume block space inefficiently. By implementing an optimized standard with Taproot-optimized transactions and efficient UTXO management, TSB reduces this bloat, decreasing overall transaction costs and resource requirements for running full nodes—benefiting all Bitcoin users.\r\nSecond, TSB strengthens Bitcoin's security model. Current token implementations often require centralized indexers or off-chain validation, introducing new trust assumptions into Bitcoin's ecosystem. TSB ensures all token validation occurs on-chain using Bitcoin Script, making tokens fully verifiable by any Bitcoin node without specialized software or external dependencies. This preserves Bitcoin's trustless nature even as token usage grows.\r\n\r\nThird, TSB expands Bitcoin's utility without requiring consensus changes. By enabling programmable token functionality through existing Bitcoin Script capabilities, TSB increases Bitcoin's relevance and competitiveness against alternative blockchains that offer token functionality. This helps preserve Bitcoin's network effects and value proposition in the broader cryptocurrency ecosystem.\r\n\r\nRegarding repository relevance: TSB standardizes how Bitcoin transactions are structured and validated for token operations, similar to how other BIPs standardize transaction formats and script execution. As token activity already exists on Bitcoin, providing a standard implementation path for wallets, exchanges, and nodes aligns with the BIP process's goal of improving Bitcoin's protocol-level standards and interoperability.",
      "created_at": "2025-03-12T22:08:20Z",
      "updated_at": "2025-03-12T22:08:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992363783",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992363783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992366659",
      "pull_request_review_id": 2679987360,
      "id": 1992366659,
      "node_id": "PRRC_kwDOAN28mc52wRpD",
      "diff_hunk": "@@ -0,0 +1,305 @@\n+# BIP-XXXX: Programmable Bitcoin Token Standard (PBTS)\n+\n+```\n+BIP: XXXX\n+Layer: Applications\n+Title: Programmable Bitcoin Token Standard (PBTS)\n+Author: Gobi Shanthan <gobi@torram.xyz>, Lee Raj. <lee@torram.xyz>\n+Comments-Summary: No comments yet.\n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+Status: Draft\n+Type: Standards Track\n+Created: 2025-02-11\n+License: BSD-2-Clause\n+Discussions-To: bitcoin-dev@lists.linuxfoundation.org\n+Post-History: 2025-02-11\n+Requires: 340, 341, 342\n+```\n+\n+## Abstract\n+\n+The **Programmable Bitcoin Token Standard (PBTS)** introduces a method to create, transfer, and validate native Bitcoin-based tokens using **Bitcoin Script** and **Taproot**. PBTS enhances Bitcoin's Layer 1 functionality by enabling **tokenized assets** with programmable conditions without compromising security, decentralization, or predictability. Unlike Ethereum or Solana, PBTS **does not introduce Turing-complete smart contracts** but leverages **structured pre-commitments** and **Taproot optimizations** to enable secure, efficient programmable tokens.\n+\n+PBTS is a **non-consensus-breaking, backward-compatible** standard that ensures tokens remain verifiable and transferable without requiring modifications to Bitcoin's core protocol.\n+\n+## Copyright\n+\n+This BIP is licensed under the BSD 2-clause license.\n+\n+## Motivation\n+\n+Bitcoin adheres to the principles of **minimalism and security**, which have made it the most robust and decentralized blockchain. PBTS aligns with this philosophy by introducing **programmability without complexity**, ensuring that Bitcoin's core remains unchanged while extending its utility in a predictable and efficient way.\n+\n+Bitcoin currently lacks a **native** token standard that enables **flexible** and **fully Layer 1** token issuance with programmable conditions. Existing solutions such as **Ordinals, RGB, and Runes** either rely on **external tracking mechanisms** or **Layer 2 solutions** that introduce centralization risks. PBTS provides a **UTXO-based**, predefined, and non-intrusive method for issuing tokens that remain completely **verifiable on Bitcoin's base layer** with advanced programmable features like time-locked vesting and milestone-based escrow.",
      "path": "bip-pbst.md",
      "position": 33,
      "original_position": 33,
      "commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "original_commit_id": "6eb2eb7615392dc1bcedf2de10c4d585bb468416",
      "in_reply_to_id": 1991802274,
      "user": {
        "login": "GobiShanthan",
        "id": 73505570,
        "node_id": "MDQ6VXNlcjczNTA1NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/73505570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GobiShanthan",
        "html_url": "https://github.com/GobiShanthan",
        "followers_url": "https://api.github.com/users/GobiShanthan/followers",
        "following_url": "https://api.github.com/users/GobiShanthan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GobiShanthan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GobiShanthan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GobiShanthan/subscriptions",
        "organizations_url": "https://api.github.com/users/GobiShanthan/orgs",
        "repos_url": "https://api.github.com/users/GobiShanthan/repos",
        "events_url": "https://api.github.com/users/GobiShanthan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GobiShanthan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "for additional information to expand on the Bip \r\n\r\n 1. Ecosystem Fragmentation\r\nThe Bitcoin token ecosystem is currently highly fragmented with multiple competing standards:\r\nOrdinals/BRC-20 use inscription-based approaches that are inefficient and difficult to scale\r\nRGB utilizes client-side validation that's hard to integrate with existing Bitcoin infrastructure\r\nRunes and similar proposals use different methodologies for tracking ownership\r\nColored Coins introduced early approaches that lacked standardization\r\nThis fragmentation creates several critical problems:\r\nDevelopers must build separate infrastructure for each token standard\r\nWallets need custom implementations to support different token types\r\nToken interoperability is nearly impossible between standards\r\nUsers face a confusing experience with inconsistent token behaviors\r\nLiquidity becomes fragmented across multiple token ecosystems\r\n\r\n2. Limited Expressivity and Programmability\r\nCurrent Bitcoin token solutions offer extremely limited programmability:\r\nMost existing token standards can only perform simple transfers\r\nComplex conditional logic (vesting schedules, escrow, etc.) is difficult or impossible\r\nBusiness logic requiring multi-stage releases can't be encoded on-chain\r\nToken behaviors can't adapt to external conditions or time-based parameters\r\nDevelopers are forced to implement business logic off-chain, reducing security\r\n\r\n3. Off-Chain Dependency Risks\r\nMany token standards require external systems for validation:\r\nReliance on centralized indexers creates single points of failure\r\nExternal validation layers introduce additional trust assumptions\r\nPotential for censorship or manipulation by indexer operators\r\nScaling challenges when indexers must process high transaction volumes\r\nToken validity can't be independently verified by standard Bitcoin nodes\r\nHow PBTS Improves Bitcoin\r\n\r\n1. Enhanced Utility Through Expressivity\r\nPBTS dramatically increases what's possible with Bitcoin tokens:\r\nProgrammable token behavior \r\nTime-locked vesting\r\nMilestone-based releases \r\nOracle integration \r\nMulti-signature governance \r\nAll this additional expressivity remains within Bitcoin's secure, deterministic execution environment - providing predictability without the risks of Turing-complete smart contracts.\r\n\r\n2. Unifying the Token Ecosystem\r\nPBTS creates a universal foundation for Bitcoin-based tokens:\r\nProvides a common language and interface for all token applications\r\nCreates consistent standards for wallet integration and user experience\r\nEnables interoperability between different token implementations\r\nConsolidates development resources around a single robust standard\r\nEncourages ecosystem-wide innovations rather than siloed development\r\nSimilar to how ERC-20 standardized Ethereum's token ecosystem in its early days, PBTS could create a coherent framework for Bitcoin's token economy.\r\n\r\n\r\n3. True Layer 1 Security and Validation\r\nPBTS ensures that tokens benefit from Bitcoin's full security model:\r\nComplete validation directly through Bitcoin Script execution\r\nNo external dependencies for determining token validity or ownership\r\nToken rules enforced by standard Bitcoin consensus mechanisms\r\nFully verifiable by any Bitcoin node without specialized software\r\nResistant to censorship or manipulation by indexer operators\r\n\r\n4. Efficiency and Scalability Optimizations\r\nThe proposal emphasizes Bitcoin-compatible efficiency:\r\nTaproot optimization significantly reduces transaction sizes\r\nStructured script templates minimize blockchain bloat\r\nCompatibility with future Bitcoin scaling solutions\r\nEfficient batching capabilities for token operations\r\n\r\n5. Future-Proof Design\r\nApplications built on a well-designed standard would remain compatible with future Bitcoin protocol improvements.\r\nBy providing a standardized, expressive, and secure token framework that operates entirely within Bitcoin's existing security model, PBTS creates a foundation for a robust token ecosystem that enhances Bitcoin's utility without compromising its core principles or requiring consensus changes.\r\n",
      "created_at": "2025-03-12T22:11:31Z",
      "updated_at": "2025-03-12T22:11:31Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1787#discussion_r1992366659",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1992366659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1787"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    }
  ]
}