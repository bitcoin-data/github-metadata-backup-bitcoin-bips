{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1551",
    "id": 1720766605,
    "node_id": "PR_kwDOAN28mc5mkNCN",
    "html_url": "https://github.com/bitcoin/bips/pull/1551",
    "diff_url": "https://github.com/bitcoin/bips/pull/1551.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1551.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1551/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/8ca9811c7c8b091599dea49210ef1c88a95efeba",
    "number": 1551,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Add BIP 353: DNS Payment Instructions",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "User behavior has clearly indicated a strong demand for the resolution of human-readable names into payment instructions. This BIP defines a protocol to do so using only the DNS, providing for the ability to query such resolutions privately, while utilizing DNSSEC to provide compact and simple to verify proofs of mappings.\r\n\r\nI'd like to hereby request a BIP number assignment. What is the current approach to do so - since the mailing list has died, is a post on delving bitcoin the appropriate place to publish BIP drafts?",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 6924377447,
        "node_id": "LA_kwDOAN28mc8AAAABnLmdZw",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/PR%20Author%20action%20required",
        "name": "PR Author action required",
        "description": "Needs updates, has unaddressed review comments, or is otherwise waiting for PR author",
        "color": "e99695",
        "default": false
      }
    ],
    "created_at": "2024-02-10T22:49:54Z",
    "updated_at": "2024-06-04T17:14:45Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merge_commit_sha": "2dfffd4103293aa35ad85cf119c873b8d97fe52b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "TheBlueMatt:2024-02-dns-payment-instructions",
      "ref": "2024-02-dns-payment-instructions",
      "sha": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 57929990,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkyOTk5MA==",
        "name": "bips",
        "full_name": "TheBlueMatt/bips",
        "owner": {
          "login": "TheBlueMatt",
          "id": 649246,
          "node_id": "MDQ6VXNlcjY0OTI0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBlueMatt",
          "html_url": "https://github.com/TheBlueMatt",
          "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
          "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
          "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
          "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheBlueMatt/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/TheBlueMatt/bips",
        "archive_url": "https://api.github.com/repos/TheBlueMatt/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheBlueMatt/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheBlueMatt/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheBlueMatt/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheBlueMatt/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheBlueMatt/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheBlueMatt/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheBlueMatt/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheBlueMatt/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheBlueMatt/bips/contributors",
        "deployments_url": "https://api.github.com/repos/TheBlueMatt/bips/deployments",
        "downloads_url": "https://api.github.com/repos/TheBlueMatt/bips/downloads",
        "events_url": "https://api.github.com/repos/TheBlueMatt/bips/events",
        "forks_url": "https://api.github.com/repos/TheBlueMatt/bips/forks",
        "git_commits_url": "https://api.github.com/repos/TheBlueMatt/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheBlueMatt/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheBlueMatt/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheBlueMatt/bips.git",
        "issue_comment_url": "https://api.github.com/repos/TheBlueMatt/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheBlueMatt/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheBlueMatt/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheBlueMatt/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheBlueMatt/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheBlueMatt/bips/languages",
        "merges_url": "https://api.github.com/repos/TheBlueMatt/bips/merges",
        "milestones_url": "https://api.github.com/repos/TheBlueMatt/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheBlueMatt/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheBlueMatt/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheBlueMatt/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheBlueMatt/bips.git",
        "stargazers_url": "https://api.github.com/repos/TheBlueMatt/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/TheBlueMatt/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheBlueMatt/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/TheBlueMatt/bips/subscription",
        "tags_url": "https://api.github.com/repos/TheBlueMatt/bips/tags",
        "teams_url": "https://api.github.com/repos/TheBlueMatt/bips/teams",
        "trees_url": "https://api.github.com/repos/TheBlueMatt/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheBlueMatt/bips.git",
        "hooks_url": "https://api.github.com/repos/TheBlueMatt/bips/hooks",
        "svn_url": "https://github.com/TheBlueMatt/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 8,
        "stargazers_count": 44,
        "watchers_count": 44,
        "size": 13718,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-03T21:17:55Z",
        "created_at": "2016-05-03T00:30:51Z",
        "updated_at": "2024-04-03T13:20:07Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "70d9b07ab80ab3c267ece48f74e4e2250226d0cc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5270,
        "stargazers_count": 9073,
        "watchers_count": 9073,
        "size": 15073,
        "default_branch": "master",
        "open_issues_count": 46,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-04T13:21:46Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-06-04T16:28:38Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 137,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 50,
    "comments": 47
  },
  "events": [
    {
      "event": "commented",
      "id": 1937372263,
      "node_id": "IC_kwDOAN28mc5zefRn",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937372263",
      "actor": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T00:38:19Z",
      "updated_at": "2024-02-11T00:38:19Z",
      "author_association": "NONE",
      "body": "I like this! It's implicit in the example, but maybe say explicitly that the combination of USER + DOMAIN should be rendered as an email address, i.e., `USER@DOMAIN`.",
      "user": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937372263",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937373033,
      "node_id": "IC_kwDOAN28mc5zefdp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937373033",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T00:41:42Z",
      "updated_at": "2024-02-11T00:41:42Z",
      "author_association": "MEMBER",
      "body": "> What is the current approach to do so - since the mailing list has died, is a post on delving bitcoin the appropriate place to publish BIP drafts?\n\nThis was just announced yesterday, but looks like https://groups.google.com/group/bitcoindev will be the new mailing list hosting (?)\n\n",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937373033",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "reviewed",
      "id": 1874284498,
      "node_id": "PRR_kwDOAN28mc5vt0_S",
      "url": null,
      "actor": null,
      "commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1874284498",
      "submitted_at": "2024-02-11T00:41:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "commented",
      "id": 1937376657,
      "node_id": "IC_kwDOAN28mc5zegWR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937376657",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T00:55:02Z",
      "updated_at": "2024-02-11T00:55:02Z",
      "author_association": "NONE",
      "body": "IMO a `.well-known` path would be better. Among things that use internet identifiers, Mastodon, Nostr, and Lightning all use `.well-known` paths. Only email and Bluesky use DNS records. Resolving DNS records has a higher barrier in most environments, and is nearly impossible to resolve in client-side JS without relying on a third-party service.",
      "user": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937376657",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937383689,
      "node_id": "IC_kwDOAN28mc5zeiEJ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937383689",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T01:26:37Z",
      "updated_at": "2024-02-11T01:26:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "> IMO a `.well-known` path would be better. Among things that use internet identifiers, Mastodon, Nostr, and Lightning all use `.well-known` paths. Only email and Bluesky use DNS records. Resolving DNS records has a higher barrier in most environments, and is nearly impossible to resolve in client-side JS without relying on a third-party service.\r\n\r\n@alexgleason the draft BIP addresses this directly with its own concerns in the opposite direction: \"(a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure\".\r\n\r\nI'm not actually sure I understand (a), but (b) and (c) seem like really strong points to me.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937383689",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "mentioned",
      "id": 11766030733,
      "node_id": "MEE_lADOAN28mc5-4gpyzwAAAAK9T2GN",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11766030733",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T01:26:38Z"
    },
    {
      "event": "subscribed",
      "id": 11766030737,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK9T2GR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11766030737",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T01:26:38Z"
    },
    {
      "event": "commented",
      "id": 1937385080,
      "node_id": "IC_kwDOAN28mc5zeiZ4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937385080",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T01:32:32Z",
      "updated_at": "2024-02-11T01:32:32Z",
      "author_association": "NONE",
      "body": "> (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure\r\n\r\nYou could allow HTTP .well-known with .onion / .i2p, then these two problems disappear (but other problems arises, of course, for example, Tor is often not reliable on phones, etc).\r\n\r\nProbably both DNS TXT and HTTP(S) .well-known methods could be standardized.",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937385080",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937400169,
      "node_id": "IC_kwDOAN28mc5zemFp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937400169",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T02:36:18Z",
      "updated_at": "2024-02-11T02:36:18Z",
      "author_association": "NONE",
      "body": "> I'm not actually sure I understand (a), but (b) and (c) seem like really strong points to me.\r\n\r\nIt means that just because you can upload a file to a `.well-known` path, doesn't mean you actually own the domain.\r\n\r\nAs for (c), the \"bloated TLS stack\" is pretty convenient to deal with in most languages. You are likely doing HTTP stuff anyway, but for DNS you'll need to add a new library and learn how to use it. It's less developer friendly.\r\n\r\nThe privacy concern of (b) is understandable. But IMO it's the wrong trade-off, because it's inconvenient while not even being fool-proof. You can track requests either way if you run a DNS server.\r\n\r\nAlso, importantly, if you're building a system to expose _many_ addresses (not just one-offs), it becomes impractical to update DNS records for every new user. You HAVE to use a `.well-known ` path. Any custodial service would need to do it like that.",
      "user": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937400169",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937414630,
      "node_id": "IC_kwDOAN28mc5zepnm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937414630",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T03:57:41Z",
      "updated_at": "2024-02-11T03:57:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "@alexgleason \r\n\r\n> for DNS you'll need to add a new library and learn how to use it. It's less developer friendly.\r\n\r\nSure.  I think it's a tradeoff between that and the other disadvantages listed in the BIP.  I think it'd be nice to have better privacy (at least in some cases) and not to tie Bitcoin standards to TLS.\r\n\r\n>  if you're building a system to expose many addresses (not just one-offs), it becomes impractical to update DNS records for every new user. You HAVE to use a .well-known path. Any custodial service would need to do it like that.\r\n\r\nOr they could just run their own DNS server connected to their database.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937414630",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "mentioned",
      "id": 11766192479,
      "node_id": "MEE_lADOAN28mc5-4gpyzwAAAAK9Udlf",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11766192479",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T03:57:42Z"
    },
    {
      "event": "subscribed",
      "id": 11766192481,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK9Udlh",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11766192481",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T03:57:42Z"
    },
    {
      "event": "commented",
      "id": 1937428067,
      "node_id": "IC_kwDOAN28mc5zes5j",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937428067",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:06:18Z",
      "updated_at": "2024-02-11T05:09:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "> (a) lacking succinct proofs of namespace to public key mappings\n\nThis one is quite important. If you want to have a hardware wallet (which is not online and does not have a TCP stack in it), you really want to be able to hand it a succinct cryptographic proof that the given name matches the given address. You cannot do this with TLS, but DNSSEC makes this trivial (I implemented a validation library http://http-dns-prover.as397444.net/)\n\nRegarding HTTP \"being simpler\", I strongly disagree, actually. If you have a domain, adding a single TXT record to your DNS is generally incredibly simple. Sure, *if* you already have an HTTP server adding a file to it isn't that much work, but even then it's probably as much or more work than just going to your DNS control panel and adding a single record.\n\n> You could allow HTTP .well-known with .onion / .i2p, then these two problems disappear\n\nNot at all, that's a lot of work for everyone trying to implement this. DNS you get this for free! You don't have to do a ton of work to integrate Tor everywhere (which has spotty success at best), you have a proxy already pre-configured on ~every internet-connected machine on the planet!",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937428067",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937429157,
      "node_id": "IC_kwDOAN28mc5zetKl",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937429157",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:11:38Z",
      "updated_at": "2024-02-11T05:24:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, importantly, if you're building a system to expose many addresses (not just one-offs), it becomes impractical to update DNS records for every new user.\n\nI believe you missed Bastien's original ML post or https://github.com/lightning/blips/pull/32 - a custodial provider only needs to add one wildcard record for all users in the lightning context!\n\n> for DNS you'll need to add a new library and learn how to use it. It's less developer friendly.\n\nIs probably worth pointing out that I went ahead and implemented all the required work, with a nice little library with only a few functions exposed. It's really not a lot of work to call one function, I promise :p",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937429157",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937431572,
      "node_id": "IC_kwDOAN28mc5zetwU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937431572",
      "actor": {
        "login": "knocte",
        "id": 331303,
        "node_id": "MDQ6VXNlcjMzMTMwMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331303?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knocte",
        "html_url": "https://github.com/knocte",
        "followers_url": "https://api.github.com/users/knocte/followers",
        "following_url": "https://api.github.com/users/knocte/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knocte/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knocte/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knocte/subscriptions",
        "organizations_url": "https://api.github.com/users/knocte/orgs",
        "repos_url": "https://api.github.com/users/knocte/repos",
        "events_url": "https://api.github.com/users/knocte/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knocte/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:21:57Z",
      "updated_at": "2024-02-11T05:22:39Z",
      "author_association": "NONE",
      "body": "> than just going to your DNS control panel and adding a single record.\r\n\r\nWhich is a manual task. Sure you could automate it somehow via a deployment, but it would involve using an orchestration tool (e.g. terraform) that works with the cloud provider you use to host your DNS records, which then would involve some kind of secret token use in your CI pipeline in case you use that as a deployment (and in this case, a CI pipeline would need to normally be triggered by a git push of a tag or some sort of manual trigger, like `workflow_dispatch` in GitHubActions).\r\n\r\nHowever, pushing/updating a file in your server (or the server being used for your website) is usually a task that is so much easier to automate. For example, if you're using github pages, just do a git push (not even a git tag push), and done.",
      "user": {
        "login": "knocte",
        "id": 331303,
        "node_id": "MDQ6VXNlcjMzMTMwMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331303?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knocte",
        "html_url": "https://github.com/knocte",
        "followers_url": "https://api.github.com/users/knocte/followers",
        "following_url": "https://api.github.com/users/knocte/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knocte/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knocte/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knocte/subscriptions",
        "organizations_url": "https://api.github.com/users/knocte/orgs",
        "repos_url": "https://api.github.com/users/knocte/repos",
        "events_url": "https://api.github.com/users/knocte/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knocte/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937431572",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937432504,
      "node_id": "IC_kwDOAN28mc5zet-4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937432504",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:24:43Z",
      "updated_at": "2024-02-11T05:24:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Which is a manual task.\n\nIndeed, which seems perfectly reasonable for something you do once and never have to touch again!",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937432504",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937438951,
      "node_id": "IC_kwDOAN28mc5zevjn",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937438951",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:51:45Z",
      "updated_at": "2024-02-11T05:51:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I like this! It's implicit in the example, but maybe say explicitly that the combination of USER + DOMAIN should be rendered as an email address, i.e., USER@DOMAIN.\r\n\r\nI'm actually kind of torn on this. I'm no UX expert, but I've seen some legitimate points raised around how this is a bit confusing given users actually confuse them for email addresses. Other systems have gone another way (eg mastodon with @user@domain or bluesky with just user.domain) seemingly for this reason.\r\n\r\nThe nice thing about USER@DOMAIN is that its compatible with existing LNURL (senders can just query DNS and fall back to LNURL when it fails and recipients can thus upgrade as they see fit), but we could also do other things which are subtly compatible but provide UX distinction, eg $user@domain (which is still compatible with LNURL though the $ is very US-centric).\r\n\r\n> This was just announced yesterday, but looks like https://groups.google.com/group/bitcoindev will be the new mailing list hosting (?)\r\n\r\nIndeed, just seems like given the lack of subscribers there that may or may not meet the BIP criteria of posting to the bitcoin-dev ML as a formal part of the BIP proposal process.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937438951",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "mentioned",
      "id": 11766320387,
      "node_id": "MEE_lADOAN28mc5-4gpyzwAAAAK9U80D",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11766320387",
      "actor": {
        "login": "user",
        "id": 14959,
        "node_id": "MDQ6VXNlcjE0OTU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/14959?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/user",
        "html_url": "https://github.com/user",
        "followers_url": "https://api.github.com/users/user/followers",
        "following_url": "https://api.github.com/users/user/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/user/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/user/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/user/subscriptions",
        "organizations_url": "https://api.github.com/users/user/orgs",
        "repos_url": "https://api.github.com/users/user/repos",
        "events_url": "https://api.github.com/users/user/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/user/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:51:46Z"
    },
    {
      "event": "subscribed",
      "id": 11766320388,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK9U80E",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11766320388",
      "actor": {
        "login": "user",
        "id": 14959,
        "node_id": "MDQ6VXNlcjE0OTU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/14959?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/user",
        "html_url": "https://github.com/user",
        "followers_url": "https://api.github.com/users/user/followers",
        "following_url": "https://api.github.com/users/user/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/user/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/user/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/user/subscriptions",
        "organizations_url": "https://api.github.com/users/user/orgs",
        "repos_url": "https://api.github.com/users/user/repos",
        "events_url": "https://api.github.com/users/user/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/user/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:51:46Z"
    },
    {
      "event": "commented",
      "id": 1937448504,
      "node_id": "IC_kwDOAN28mc5zex44",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937448504",
      "actor": {
        "login": "Nuhvi",
        "id": 40009100,
        "node_id": "MDQ6VXNlcjQwMDA5MTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/40009100?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Nuhvi",
        "html_url": "https://github.com/Nuhvi",
        "followers_url": "https://api.github.com/users/Nuhvi/followers",
        "following_url": "https://api.github.com/users/Nuhvi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Nuhvi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Nuhvi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Nuhvi/subscriptions",
        "organizations_url": "https://api.github.com/users/Nuhvi/orgs",
        "repos_url": "https://api.github.com/users/Nuhvi/repos",
        "events_url": "https://api.github.com/users/Nuhvi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Nuhvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T06:32:02Z",
      "updated_at": "2024-02-11T06:32:02Z",
      "author_association": "NONE",
      "body": "DNS is great, but its \"censorship resistance\" can be improved upon (reach the highest possible level) with minimal overhead, by using Mainline DHT as the Root server, and public keys as the TLDs, all of which is already [implemented](https://github.com/nuhvi/pkarr) and stress tested to a degree.\r\n\r\nIf this bip gains traction, it wouldn't be too much extra work to ask clients to recognize these sovereign TLDs.",
      "user": {
        "login": "Nuhvi",
        "id": 40009100,
        "node_id": "MDQ6VXNlcjQwMDA5MTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/40009100?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Nuhvi",
        "html_url": "https://github.com/Nuhvi",
        "followers_url": "https://api.github.com/users/Nuhvi/followers",
        "following_url": "https://api.github.com/users/Nuhvi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Nuhvi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Nuhvi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Nuhvi/subscriptions",
        "organizations_url": "https://api.github.com/users/Nuhvi/orgs",
        "repos_url": "https://api.github.com/users/Nuhvi/repos",
        "events_url": "https://api.github.com/users/Nuhvi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Nuhvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937448504",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937457502,
      "node_id": "IC_kwDOAN28mc5ze0Fe",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937457502",
      "actor": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T07:20:45Z",
      "updated_at": "2024-02-11T07:20:45Z",
      "author_association": "NONE",
      "body": "Why not just use [OpenAlias](https://openalias.org), which is already supported in Electrum?",
      "user": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937457502",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "subscribed",
      "id": 11766536276,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK9VxhU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11766536276",
      "actor": {
        "login": "sime",
        "id": 216917,
        "node_id": "MDQ6VXNlcjIxNjkxNw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/216917?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sime",
        "html_url": "https://github.com/sime",
        "followers_url": "https://api.github.com/users/sime/followers",
        "following_url": "https://api.github.com/users/sime/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sime/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sime/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sime/subscriptions",
        "organizations_url": "https://api.github.com/users/sime/orgs",
        "repos_url": "https://api.github.com/users/sime/repos",
        "events_url": "https://api.github.com/users/sime/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sime/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T08:43:52Z"
    },
    {
      "event": "commented",
      "id": 1937482285,
      "node_id": "IC_kwDOAN28mc5ze6It",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937482285",
      "actor": {
        "login": "riccardobl",
        "id": 4943530,
        "node_id": "MDQ6VXNlcjQ5NDM1MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/riccardobl",
        "html_url": "https://github.com/riccardobl",
        "followers_url": "https://api.github.com/users/riccardobl/followers",
        "following_url": "https://api.github.com/users/riccardobl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/riccardobl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/riccardobl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/riccardobl/subscriptions",
        "organizations_url": "https://api.github.com/users/riccardobl/orgs",
        "repos_url": "https://api.github.com/users/riccardobl/repos",
        "events_url": "https://api.github.com/users/riccardobl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/riccardobl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:03:40Z",
      "updated_at": "2024-02-11T20:29:28Z",
      "author_association": "NONE",
      "body": "From a logical stand point  DNS should be preferable, it was invented for this after all, however there are some reasons for which  i believe .well-known in reality is a much superior choice:\r\n\r\n- **DNS cannot be queried from webapps or extensions**: this would force webapps to proxy resolutions to a server\r\n- **DNS doesn't give you the absolute control on record caching**: you can hint a TTL, but it is not guaranteed to be respected (the infamous up to 24 hours for propagation...)\r\n- **HTTPS is supported by virtually every device** that needs to connect to the internet, encrypted DNS is not or not always enabled by default. If encrypted DNS is not enabled, your isp can know your payment intentions, contrary to only the ip hosting the .well-known path.\r\n\r\nIf this needs to be a standard that is future proof and flexible, the .well-known approach can be integrated in all existing environments in a secure and decentralized manner and it can update in realtime.",
      "user": {
        "login": "riccardobl",
        "id": 4943530,
        "node_id": "MDQ6VXNlcjQ5NDM1MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/riccardobl",
        "html_url": "https://github.com/riccardobl",
        "followers_url": "https://api.github.com/users/riccardobl/followers",
        "following_url": "https://api.github.com/users/riccardobl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/riccardobl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/riccardobl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/riccardobl/subscriptions",
        "organizations_url": "https://api.github.com/users/riccardobl/orgs",
        "repos_url": "https://api.github.com/users/riccardobl/repos",
        "events_url": "https://api.github.com/users/riccardobl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/riccardobl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937482285",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937485698,
      "node_id": "IC_kwDOAN28mc5ze6-C",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937485698",
      "actor": {
        "login": "Nuhvi",
        "id": 40009100,
        "node_id": "MDQ6VXNlcjQwMDA5MTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/40009100?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Nuhvi",
        "html_url": "https://github.com/Nuhvi",
        "followers_url": "https://api.github.com/users/Nuhvi/followers",
        "following_url": "https://api.github.com/users/Nuhvi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Nuhvi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Nuhvi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Nuhvi/subscriptions",
        "organizations_url": "https://api.github.com/users/Nuhvi/orgs",
        "repos_url": "https://api.github.com/users/Nuhvi/repos",
        "events_url": "https://api.github.com/users/Nuhvi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Nuhvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:13:36Z",
      "updated_at": "2024-02-11T09:13:36Z",
      "author_association": "NONE",
      "body": "> DNS cannot be queried from webapps or extensions: this would force webapps to proxy resolutions to a server\r\n\r\nWrong. DoH exists and is encouraged.\r\n\r\n> DNS doesn't give you the absolute control on record caching: you can hint a TTL, but it is not guaranteed to be respected (the infamous up to 24 hours for propagation...)\r\n\r\nYou can't control HTTP caching either if you want the same distributed nature of DNS caching. If you want strong consistency, clients can always choose to query the Authoritative DNS server directly disregarding caching. This is not a valid point.\r\n\r\n> HTTPS is supported by virtually every device that needs to connect to the internet, encrypted DNS is not or not always enabled by default. If encrypted DNS is not enabled, your resolver can know your payment intentions, contrary to only the ip hosting the .well-known path.\r\n\r\nSee DoH\r\n\r\n> If this needs to be a standard that is future proof and flexible, the .well-known approach can be integrated in all existing environments in a secure and decentralized manner and it can update in realtime.\r\n\r\nDNS will outlast every adhoc protocol/format you build on top of .well-known. DNS is natively supported in every OS, DoH is just as supported in browsers as .well-known, and DNS is distributed by nature unlike web servers, and realtime updates (consistency) is possible through ignoring caching and querying the authoritative server directly.",
      "user": {
        "login": "Nuhvi",
        "id": 40009100,
        "node_id": "MDQ6VXNlcjQwMDA5MTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/40009100?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Nuhvi",
        "html_url": "https://github.com/Nuhvi",
        "followers_url": "https://api.github.com/users/Nuhvi/followers",
        "following_url": "https://api.github.com/users/Nuhvi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Nuhvi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Nuhvi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Nuhvi/subscriptions",
        "organizations_url": "https://api.github.com/users/Nuhvi/orgs",
        "repos_url": "https://api.github.com/users/Nuhvi/repos",
        "events_url": "https://api.github.com/users/Nuhvi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Nuhvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937485698",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937497241,
      "node_id": "IC_kwDOAN28mc5ze9yZ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937497241",
      "actor": {
        "login": "riccardobl",
        "id": 4943530,
        "node_id": "MDQ6VXNlcjQ5NDM1MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/riccardobl",
        "html_url": "https://github.com/riccardobl",
        "followers_url": "https://api.github.com/users/riccardobl/followers",
        "following_url": "https://api.github.com/users/riccardobl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/riccardobl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/riccardobl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/riccardobl/subscriptions",
        "organizations_url": "https://api.github.com/users/riccardobl/orgs",
        "repos_url": "https://api.github.com/users/riccardobl/repos",
        "events_url": "https://api.github.com/users/riccardobl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/riccardobl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:50:56Z",
      "updated_at": "2024-02-11T09:50:56Z",
      "author_association": "NONE",
      "body": "> Wrong. DoH exists and is encouraged.\r\n\r\n> this would force webapps to proxy resolutions to a server\r\n\r\nThe DoH provider is your proxy server. If you don't use the ISP/locally provided dns resolver, it means you need to hardcode a resolver in your webapp (dns over http standard or anything else, doesn't make a difference), actually you need a resolver that exports cors headers, meaning probably cloudflare or google and few others... not so decentralized i'd say\r\n\r\n\r\n> You can't control HTTP caching either if you want the same distributed nature of DNS caching.\r\n\r\nThis is false, you actually can tell the client how long the cache should be considered valid and check for changes, using the access control headers and etag, you can also cache until a new version is available. The key point here is that you can instruct the client to adapt to your use case, this is not possible with DNS.\r\n\r\n>  choose to query the Authoritative DNS server directly disregarding caching\r\n\r\nThe authoritative DNS servers that support DoH?\r\n",
      "user": {
        "login": "riccardobl",
        "id": 4943530,
        "node_id": "MDQ6VXNlcjQ5NDM1MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/riccardobl",
        "html_url": "https://github.com/riccardobl",
        "followers_url": "https://api.github.com/users/riccardobl/followers",
        "following_url": "https://api.github.com/users/riccardobl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/riccardobl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/riccardobl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/riccardobl/subscriptions",
        "organizations_url": "https://api.github.com/users/riccardobl/orgs",
        "repos_url": "https://api.github.com/users/riccardobl/repos",
        "events_url": "https://api.github.com/users/riccardobl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/riccardobl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937497241",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937498545,
      "node_id": "IC_kwDOAN28mc5ze-Gx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937498545",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:55:34Z",
      "updated_at": "2024-02-11T09:55:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Why not just use OpenAlias, which is already supported in Electrum?\n\nFirst of all i wasn't aware of it until today :). However, while it seems to be conceptually similar in many ways (as far as I can tell the only concrete difference is it's looking up a different name?), this is a more concrete and extensible format for bitcoin payment instructions for wallets which already support and have logic for handling BIP 21 URIs (basically all wallets). AFAICT you could define \"Bitcoin payment instructions\" as encoding bitcoin: URIs in the openalias names specifically and thus \"use OpenAlias\", but (a) you'd still need a BIP like this defining the format and (b) the OpenAlias names clutter the existing domain records, which is undesirable compared to using a clearly Bitcoin-specific name. For example, getting someone to \"add TXT record \"random gibberish\" to their domain is fairly normal to verify a domain name for some service, but one which includes \"_bitcoin-payment\" in the name less so :). Ultimately I'm not sure what difference \"supporting OpenAlias\" would bring here, aside from an extra \"oa1:\" in the TXT record itself and a slightly less descriptive query name.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937498545",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937504487,
      "node_id": "IC_kwDOAN28mc5ze_jn",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937504487",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T10:04:12Z",
      "updated_at": "2024-02-11T10:04:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Please don't bother commenting any further here that \"this should use HTTP\". If that's your take please read the text of the BIP which clearly explains why HTTP is horribly unsuited to this goal, and if you still disagree go quite your own spec instead. That's not changing here.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937504487",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937511674,
      "node_id": "IC_kwDOAN28mc5zfBT6",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937511674",
      "actor": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T10:10:16Z",
      "updated_at": "2024-02-11T10:10:16Z",
      "author_association": "NONE",
      "body": "> Ultimately I'm not sure what difference \"supporting OpenAlias\" would bring here, aside from an extra \"oa1:\" in the TXT record itself and a slightly less descriptive query name.\r\n\r\nThere's a working group (#openalias on Libera) seeking to define an OA v2 standard to solve some of the points you raise, as well as adding pathing (eg. if you're sending USDT then these are the chain priorities I want for receiving it). I think my only thinking here is that pushing for OpenAlias (via a BIP or otherwise) is beneficial for five reasons:\r\n\r\n1. It is extensible enough to support BTC L2s, LN, Ark, etc.\r\n2. XKCD standards comic🤭\r\n3. It already has wallet support in Electrum, which is good groundwork\r\n4. OpenAlias has some fundamental support for DNSCrypt lookups, which are good from a privacy perspective\r\n5. We've done the heavy lifting in terms of figuring out how the UX should react to a DNSSEC failure / unavailability\r\n\r\nEither way, I'll support this as a Bitcoin-only mechanism and/or a BIP that aligns with a hypothetical, improved OA v2.",
      "user": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937511674",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937526986,
      "node_id": "IC_kwDOAN28mc5zfFDK",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937526986",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T10:23:34Z",
      "updated_at": "2024-02-11T10:23:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It is extensible enough to support BTC L2s, LN, Ark, etc.\n\nSo is this, by reusing logic any wallets already have.\n\n> XKCD standards comic🤭\n> It already has wallet support in Electrum, which is good groundwork\n\nFair, but you're suggesting a to-be-defined v2 spec, which is incompatible anyway, so not sure defining a new one is bad :).\n\n> OpenAlias has some fundamental support for DNSCrypt lookups, which are good from a privacy perspective\n\nSo does any DNS proposal?\n\n> We've done the heavy lifting in terms of figuring out how the UX should react to a DNSSEC failure / unavailability\n\nI mean I'm not sure what heavy lifting there is to do here? The answer is \"payment fails\" :).\n\n> Either way, I'll support this as a Bitcoin-only mechanism and/or a BIP that aligns with a hypothetical, improved OA v2.\n\nFair enough, and I'm happy to provide input on a OA v2, it'd be cool if it kinda codified basically this, with different URIs for other non-bitcoin protocols. Also happy to tweak the paths here slightly if it makes sense to be compatible and don't introduce other drawbacks, but IMO this should still stand on its own to define bitcoin-specific logic.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937526986",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "reviewed",
      "id": 1874353998,
      "node_id": "PRR_kwDOAN28mc5vuF9O",
      "url": null,
      "actor": null,
      "commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "dipunm",
        "id": 5099980,
        "node_id": "MDQ6VXNlcjUwOTk5ODA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5099980?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dipunm",
        "html_url": "https://github.com/dipunm",
        "followers_url": "https://api.github.com/users/dipunm/followers",
        "following_url": "https://api.github.com/users/dipunm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dipunm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dipunm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dipunm/subscriptions",
        "organizations_url": "https://api.github.com/users/dipunm/orgs",
        "repos_url": "https://api.github.com/users/dipunm/repos",
        "events_url": "https://api.github.com/users/dipunm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dipunm/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1874353998",
      "submitted_at": "2024-02-11T11:56:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "commented",
      "id": 1937752919,
      "node_id": "IC_kwDOAN28mc5zf8NX",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937752919",
      "actor": {
        "login": "hsjoberg",
        "id": 3824379,
        "node_id": "MDQ6VXNlcjM4MjQzNzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3824379?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hsjoberg",
        "html_url": "https://github.com/hsjoberg",
        "followers_url": "https://api.github.com/users/hsjoberg/followers",
        "following_url": "https://api.github.com/users/hsjoberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hsjoberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hsjoberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hsjoberg/subscriptions",
        "organizations_url": "https://api.github.com/users/hsjoberg/orgs",
        "repos_url": "https://api.github.com/users/hsjoberg/repos",
        "events_url": "https://api.github.com/users/hsjoberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hsjoberg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T13:19:53Z",
      "updated_at": "2024-02-11T13:19:53Z",
      "author_association": "NONE",
      "body": "> Wrong. DoH exists and is encouraged.\r\n\r\nWhat would be the benefit if DoH has to be used? You could just do LNURL-pay then.",
      "user": {
        "login": "hsjoberg",
        "id": 3824379,
        "node_id": "MDQ6VXNlcjM4MjQzNzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3824379?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hsjoberg",
        "html_url": "https://github.com/hsjoberg",
        "followers_url": "https://api.github.com/users/hsjoberg/followers",
        "following_url": "https://api.github.com/users/hsjoberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hsjoberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hsjoberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hsjoberg/subscriptions",
        "organizations_url": "https://api.github.com/users/hsjoberg/orgs",
        "repos_url": "https://api.github.com/users/hsjoberg/repos",
        "events_url": "https://api.github.com/users/hsjoberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hsjoberg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937752919",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937788303,
      "node_id": "IC_kwDOAN28mc5zgE2P",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937788303",
      "actor": {
        "login": "moneyball",
        "id": 326147,
        "node_id": "MDQ6VXNlcjMyNjE0Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/326147?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moneyball",
        "html_url": "https://github.com/moneyball",
        "followers_url": "https://api.github.com/users/moneyball/followers",
        "following_url": "https://api.github.com/users/moneyball/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moneyball/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moneyball/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moneyball/subscriptions",
        "organizations_url": "https://api.github.com/users/moneyball/orgs",
        "repos_url": "https://api.github.com/users/moneyball/repos",
        "events_url": "https://api.github.com/users/moneyball/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moneyball/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T15:38:26Z",
      "updated_at": "2024-02-11T15:38:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What would be the benefit if DoH has to be used? You could just do LNURL-pay then.\r\n\r\nLNURL-pay must be called for every payment. With BOLT 12 offers, DoH is only called once to fetch the offer. All subsequent payments avoid this thus improved censorship resistance and privacy. (and security, as the invoice isn't being served by the LNURL server).",
      "user": {
        "login": "moneyball",
        "id": 326147,
        "node_id": "MDQ6VXNlcjMyNjE0Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/326147?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moneyball",
        "html_url": "https://github.com/moneyball",
        "followers_url": "https://api.github.com/users/moneyball/followers",
        "following_url": "https://api.github.com/users/moneyball/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moneyball/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moneyball/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moneyball/subscriptions",
        "organizations_url": "https://api.github.com/users/moneyball/orgs",
        "repos_url": "https://api.github.com/users/moneyball/repos",
        "events_url": "https://api.github.com/users/moneyball/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moneyball/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937788303",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937793685,
      "node_id": "IC_kwDOAN28mc5zgGKV",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937793685",
      "actor": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T15:59:27Z",
      "updated_at": "2024-02-11T15:59:27Z",
      "author_association": "NONE",
      "body": "> Fair enough, and I'm happy to provide input on a OA v2, it'd be cool if it kinda codified basically this, with different URIs for other non-bitcoin protocols. Also happy to tweak the paths here slightly if it makes sense to be compatible and don't introduce other drawbacks, but IMO this should still stand on its own to define bitcoin-specific logic.\r\n\r\nI agree with this - if we could come up with a BIP that aligns with OA v2 that would be amazing, then it really harmonizes things for anything built on top of Bitcoin / sidechains / alt-layers, including tokens like USDT.",
      "user": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937793685",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937812996,
      "node_id": "IC_kwDOAN28mc5zgK4E",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937812996",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T17:14:44Z",
      "updated_at": "2024-02-11T17:53:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What would be the benefit if DoH has to be used? You could just do LNURL-pay then.\n\nPlease read the BIP text, specifically drawbacks (a), (b), and (c). Note that (b) applies as clients can select a DoH provider who commits to not log individual queries but with direct connection that doesn't exist. Further, a DoH provider is substantially less likely to geoblock whereas LNURL-pay providers already do.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937812996",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "reviewed",
      "id": 1874405525,
      "node_id": "PRR_kwDOAN28mc5vuSiV",
      "url": null,
      "actor": null,
      "commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1874405525",
      "submitted_at": "2024-02-11T17:24:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "commented",
      "id": 1937827596,
      "node_id": "IC_kwDOAN28mc5zgOcM",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937827596",
      "actor": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T18:13:43Z",
      "updated_at": "2024-02-11T18:13:43Z",
      "author_association": "NONE",
      "body": "Another thought: the parsing of `USER@DOMAIN` is pretty trivial, but how to do it should be mentioned.",
      "user": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937827596",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937830967,
      "node_id": "IC_kwDOAN28mc5zgPQ3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937830967",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T18:26:23Z",
      "updated_at": "2024-02-11T18:26:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Another thought: the parsing of USER@DOMAIN is pretty trivial, but how to do it should be mentioned.\r\n\r\nAgreed, I'd like to add a section on displaying this info, but not sure if you saw my comment at https://github.com/bitcoin/bips/pull/1551#issuecomment-1937438951 - I'd like to discuss whether we want specifically USER@DOMAIN for a bit first. Do you have any opinion on that?",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937830967",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937833286,
      "node_id": "IC_kwDOAN28mc5zgP1G",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937833286",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T18:35:56Z",
      "updated_at": "2024-02-11T18:35:56Z",
      "author_association": "NONE",
      "body": "> I believe you missed Bastien's original ML post or [lightning/blips#32](https://github.com/lightning/blips/pull/32) - a custodial provider only needs to add one wildcard record for all users in the lightning context!\r\n\r\nI've been trying very hard to understand this. How could a wildcard record solve the problem? Where would names be stored so they can be associated with keys, and how can a wildcard record get us there (eg what would its value be)?",
      "user": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937833286",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937845251,
      "node_id": "IC_kwDOAN28mc5zgSwD",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937845251",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T19:24:27Z",
      "updated_at": "2024-02-11T19:24:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I've been trying very hard to understand this. How could a wildcard record solve the problem? Where would names be stored so they can be associated with keys, and how can a wildcard record get us there (eg what would its value be)?\r\n\r\nLets take this discussion to https://github.com/lightning/blips/pull/32 since its lightning- (or other payment protocols) specific. The doc there explains how it works for LN, but other payment protocols that want to support this will need some mechanism to flag a payment as for a given user inline as a part of the payment.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937845251",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1937866280,
      "node_id": "IC_kwDOAN28mc5zgX4o",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1937866280",
      "actor": {
        "login": "corviato1",
        "id": 44780076,
        "node_id": "MDQ6VXNlcjQ0NzgwMDc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44780076?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/corviato1",
        "html_url": "https://github.com/corviato1",
        "followers_url": "https://api.github.com/users/corviato1/followers",
        "following_url": "https://api.github.com/users/corviato1/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/corviato1/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/corviato1/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/corviato1/subscriptions",
        "organizations_url": "https://api.github.com/users/corviato1/orgs",
        "repos_url": "https://api.github.com/users/corviato1/repos",
        "events_url": "https://api.github.com/users/corviato1/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/corviato1/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T20:52:13Z",
      "updated_at": "2024-02-11T20:52:13Z",
      "author_association": "NONE",
      "body": "Maybe look into Namecoin and Raven for code inspiration, then close this pull request, then make a new pull request with code examples from the before mentioned platforms that can be migrated to Bitcoin?\n\nFrom there, devs can review and help turn what you want into a reality.  \n\nThat being said, implementation would probably be best done at a layer two due to security and efficiency concerns.  ",
      "user": {
        "login": "corviato1",
        "id": 44780076,
        "node_id": "MDQ6VXNlcjQ0NzgwMDc2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44780076?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/corviato1",
        "html_url": "https://github.com/corviato1",
        "followers_url": "https://api.github.com/users/corviato1/followers",
        "following_url": "https://api.github.com/users/corviato1/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/corviato1/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/corviato1/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/corviato1/subscriptions",
        "organizations_url": "https://api.github.com/users/corviato1/orgs",
        "repos_url": "https://api.github.com/users/corviato1/repos",
        "events_url": "https://api.github.com/users/corviato1/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/corviato1/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1937866280",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "reviewed",
      "id": 1874756233,
      "node_id": "PRR_kwDOAN28mc5vvoKJ",
      "url": null,
      "actor": null,
      "commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1874756233",
      "submitted_at": "2024-02-12T08:53:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "reviewed",
      "id": 1875070726,
      "node_id": "PRR_kwDOAN28mc5vw08G",
      "url": null,
      "actor": null,
      "commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK :rocket: , thanks for going through the effort of writing this down in BLIP format!",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1875070726",
      "submitted_at": "2024-02-12T12:08:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "commented",
      "id": 1938757027,
      "node_id": "IC_kwDOAN28mc5zjxWj",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1938757027",
      "actor": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T14:13:16Z",
      "updated_at": "2024-02-12T14:13:16Z",
      "author_association": "NONE",
      "body": "Great idea.\r\n\r\n@alexgleason asks:\r\n\r\n>>  a custodial provider only needs to add one wildcard record for all users in the lightning context!\r\n\r\n>  How could a wildcard record solve the problem?\r\n\r\nI had the same question. If I understand correctly, wildcard resolutions return the same record for any subdomain, for a central service this would point to the general centralized service's node. You're correct in that you'd then need a secondary lookup mechanism.\r\n\r\nIf you look through the proposed BLIP/BOLTs that are linked in this document, @TheBlueMatt has further defined an onion message protocol that allows you to request a custom offer for a specified user using onion messages.\r\n\r\nThe BLIP proposal states the following: \r\n\r\n```\r\nAlternatively, for recipients which do not wish to publish a unique offer for all possible payees,\r\na wildcard record may be provisioned as *.user._bitcoin-payment.`domain` with the contents\r\n`bitcoin:?omlookup=hex_encoded_blinded_path`. The node receiving onion messages at the given\r\nblinded path is then expected to respond to `offer_request`-containing onion messages with\r\n`offer_response`-containing onion messages.\r\n```\r\n\r\nThe BOLT proposal for adding an `offer_request` and `offer_response` can currently be found here:\r\n\r\nhttps://github.com/lightning/bolts/pull/1136/commits/5809dfd1fce7fe1233812acb25bd37b908318968\r\n\r\nCorrect me if I'm wrong but it may be useful for responding apps to provide any-amount BOLT12s as a response, such that wallets/requesting apps can cache these for future payments?\r\n\r\n",
      "user": {
        "login": "niftynei",
        "id": 1097769,
        "node_id": "MDQ6VXNlcjEwOTc3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1097769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/niftynei",
        "html_url": "https://github.com/niftynei",
        "followers_url": "https://api.github.com/users/niftynei/followers",
        "following_url": "https://api.github.com/users/niftynei/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/niftynei/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/niftynei/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/niftynei/subscriptions",
        "organizations_url": "https://api.github.com/users/niftynei/orgs",
        "repos_url": "https://api.github.com/users/niftynei/repos",
        "events_url": "https://api.github.com/users/niftynei/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/niftynei/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1938757027",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "mentioned",
      "id": 11775115186,
      "node_id": "MEE_lADOAN28mc5-4gpyzwAAAAK92f-y",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11775115186",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T14:13:17Z"
    },
    {
      "event": "subscribed",
      "id": 11775115206,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK92f_G",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11775115206",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T14:13:17Z"
    },
    {
      "event": "mentioned",
      "id": 11775115222,
      "node_id": "MEE_lADOAN28mc5-4gpyzwAAAAK92f_W",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11775115222",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T14:13:18Z"
    },
    {
      "event": "subscribed",
      "id": 11775115231,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK92f_f",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11775115231",
      "actor": {
        "login": "alexgleason",
        "id": 3639540,
        "node_id": "MDQ6VXNlcjM2Mzk1NDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3639540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexgleason",
        "html_url": "https://github.com/alexgleason",
        "followers_url": "https://api.github.com/users/alexgleason/followers",
        "following_url": "https://api.github.com/users/alexgleason/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexgleason/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexgleason/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexgleason/subscriptions",
        "organizations_url": "https://api.github.com/users/alexgleason/orgs",
        "repos_url": "https://api.github.com/users/alexgleason/repos",
        "events_url": "https://api.github.com/users/alexgleason/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexgleason/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T14:13:18Z"
    },
    {
      "event": "reviewed",
      "id": 1875408394,
      "node_id": "PRR_kwDOAN28mc5vyHYK",
      "url": null,
      "actor": null,
      "commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1875408394",
      "submitted_at": "2024-02-12T14:47:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "commented",
      "id": 1939780991,
      "node_id": "IC_kwDOAN28mc5znrV_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1939780991",
      "actor": {
        "login": "bumi",
        "id": 318,
        "node_id": "MDQ6VXNlcjMxOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/318?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bumi",
        "html_url": "https://github.com/bumi",
        "followers_url": "https://api.github.com/users/bumi/followers",
        "following_url": "https://api.github.com/users/bumi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bumi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bumi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bumi/subscriptions",
        "organizations_url": "https://api.github.com/users/bumi/orgs",
        "repos_url": "https://api.github.com/users/bumi/repos",
        "events_url": "https://api.github.com/users/bumi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bumi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T23:30:57Z",
      "updated_at": "2024-02-12T23:30:57Z",
      "author_association": "NONE",
      "body": "I love this push forward. <3\r\nthough I am in favor of openalias and what @fluffypony says. \r\nOpenAlias has been around for years. It works. It is extendable and apps just have to agree on a bunch of key/value pairs. \r\nI am wondering if a bitcoin specific spec is helpful here. For example OpenAlias can also be used for a Nostr identifier along with resolving payment information.\r\nSo to me this problem is somewhat unrelated to the underlaying payment protocol.\r\n",
      "user": {
        "login": "bumi",
        "id": 318,
        "node_id": "MDQ6VXNlcjMxOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/318?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bumi",
        "html_url": "https://github.com/bumi",
        "followers_url": "https://api.github.com/users/bumi/followers",
        "following_url": "https://api.github.com/users/bumi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bumi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bumi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bumi/subscriptions",
        "organizations_url": "https://api.github.com/users/bumi/orgs",
        "repos_url": "https://api.github.com/users/bumi/repos",
        "events_url": "https://api.github.com/users/bumi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bumi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1939780991",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "mentioned",
      "id": 11781045908,
      "node_id": "MEE_lADOAN28mc5-4gpyzwAAAAK-NH6U",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11781045908",
      "actor": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T23:30:58Z"
    },
    {
      "event": "subscribed",
      "id": 11781045918,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK-NH6e",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11781045918",
      "actor": {
        "login": "fluffypony",
        "id": 1944293,
        "node_id": "MDQ6VXNlcjE5NDQyOTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1944293?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fluffypony",
        "html_url": "https://github.com/fluffypony",
        "followers_url": "https://api.github.com/users/fluffypony/followers",
        "following_url": "https://api.github.com/users/fluffypony/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fluffypony/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fluffypony/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fluffypony/subscriptions",
        "organizations_url": "https://api.github.com/users/fluffypony/orgs",
        "repos_url": "https://api.github.com/users/fluffypony/repos",
        "events_url": "https://api.github.com/users/fluffypony/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fluffypony/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T23:30:59Z"
    },
    {
      "event": "reviewed",
      "id": 1876881387,
      "node_id": "PRR_kwDOAN28mc5v3u_r",
      "url": null,
      "actor": null,
      "commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "LGTM :)",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1876881387",
      "submitted_at": "2024-02-13T05:07:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "subscribed",
      "id": 11788014979,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAAK-ntWD",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11788014979",
      "actor": {
        "login": "sethforprivacy",
        "id": 40500387,
        "node_id": "MDQ6VXNlcjQwNTAwMzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/40500387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sethforprivacy",
        "html_url": "https://github.com/sethforprivacy",
        "followers_url": "https://api.github.com/users/sethforprivacy/followers",
        "following_url": "https://api.github.com/users/sethforprivacy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sethforprivacy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sethforprivacy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sethforprivacy/subscriptions",
        "organizations_url": "https://api.github.com/users/sethforprivacy/orgs",
        "repos_url": "https://api.github.com/users/sethforprivacy/repos",
        "events_url": "https://api.github.com/users/sethforprivacy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sethforprivacy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T12:23:52Z"
    },
    {
      "event": "commented",
      "id": 1942586082,
      "node_id": "IC_kwDOAN28mc5zyYLi",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1942586082",
      "actor": {
        "login": "droark",
        "id": 5931802,
        "node_id": "MDQ6VXNlcjU5MzE4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5931802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/droark",
        "html_url": "https://github.com/droark",
        "followers_url": "https://api.github.com/users/droark/followers",
        "following_url": "https://api.github.com/users/droark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/droark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/droark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/droark/subscriptions",
        "organizations_url": "https://api.github.com/users/droark/orgs",
        "repos_url": "https://api.github.com/users/droark/repos",
        "events_url": "https://api.github.com/users/droark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/droark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T21:25:13Z",
      "updated_at": "2024-02-27T07:27:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi! Just FYI, I helped with a similar document ~10 years ago. It was an IETF draft. It's [here](https://datatracker.ietf.org/doc/html/draft-wiley-paymentassoc-00) if you think it could be useful. A second draft was worked on with a lot more detail, including integrating BIP 32-style functionality, was written but not published for various reasons.",
      "user": {
        "login": "droark",
        "id": 5931802,
        "node_id": "MDQ6VXNlcjU5MzE4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5931802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/droark",
        "html_url": "https://github.com/droark",
        "followers_url": "https://api.github.com/users/droark/followers",
        "following_url": "https://api.github.com/users/droark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/droark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/droark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/droark/subscriptions",
        "organizations_url": "https://api.github.com/users/droark/orgs",
        "repos_url": "https://api.github.com/users/droark/repos",
        "events_url": "https://api.github.com/users/droark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/droark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1942586082",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1942942787,
      "node_id": "IC_kwDOAN28mc5zzvRD",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1942942787",
      "actor": {
        "login": "joedavison",
        "id": 2687550,
        "node_id": "MDQ6VXNlcjI2ODc1NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2687550?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joedavison",
        "html_url": "https://github.com/joedavison",
        "followers_url": "https://api.github.com/users/joedavison/followers",
        "following_url": "https://api.github.com/users/joedavison/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joedavison/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joedavison/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joedavison/subscriptions",
        "organizations_url": "https://api.github.com/users/joedavison/orgs",
        "repos_url": "https://api.github.com/users/joedavison/repos",
        "events_url": "https://api.github.com/users/joedavison/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joedavison/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T01:21:15Z",
      "updated_at": "2024-02-14T01:21:15Z",
      "author_association": "NONE",
      "body": "_MUST take precautions to prevent homograph attacks_\n\nThis clause is vague. The specific precautions that must be taken should be specified, or this should be changed to MAY to allow for different interpretations of this clause. \n\n",
      "user": {
        "login": "joedavison",
        "id": 2687550,
        "node_id": "MDQ6VXNlcjI2ODc1NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2687550?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joedavison",
        "html_url": "https://github.com/joedavison",
        "followers_url": "https://api.github.com/users/joedavison/followers",
        "following_url": "https://api.github.com/users/joedavison/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joedavison/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joedavison/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joedavison/subscriptions",
        "organizations_url": "https://api.github.com/users/joedavison/orgs",
        "repos_url": "https://api.github.com/users/joedavison/repos",
        "events_url": "https://api.github.com/users/joedavison/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joedavison/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1942942787",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "reez",
        "id": 6657488,
        "node_id": "MDQ6VXNlcjY2NTc0ODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6657488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/reez",
        "html_url": "https://github.com/reez",
        "followers_url": "https://api.github.com/users/reez/followers",
        "following_url": "https://api.github.com/users/reez/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/reez/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/reez/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/reez/subscriptions",
        "organizations_url": "https://api.github.com/users/reez/orgs",
        "repos_url": "https://api.github.com/users/reez/repos",
        "events_url": "https://api.github.com/users/reez/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/reez/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T15:41:34Z",
      "updated_at": "2024-02-14T15:41:34Z",
      "source": {
        "issue": {
          "id": 2082480634,
          "node_id": "I_kwDOIDIXu858ICH6",
          "url": "https://api.github.com/repos/NashBitDevs/nashbitdevs.org/issues/19",
          "repository_url": "https://api.github.com/repos/NashBitDevs/nashbitdevs.org",
          "labels_url": "https://api.github.com/repos/NashBitDevs/nashbitdevs.org/issues/19/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/NashBitDevs/nashbitdevs.org/issues/19/comments",
          "events_url": "https://api.github.com/repos/NashBitDevs/nashbitdevs.org/issues/19/events",
          "html_url": "https://github.com/NashBitDevs/nashbitdevs.org/issues/19",
          "number": 19,
          "state": "closed",
          "state_reason": "completed",
          "title": "Socratic Seminar #16 Topics",
          "body": "February 20, 2023 @ 5:00p\r\n\r\nAdd comments below to add or comment on topics for [Socratic Seminar 16](https://nashbitdevs.org/socratic-seminar-16/). See also [\"Where to Find Topics for Future Seminars\"](https://nashbitdevs.org/about/find-topics/).\r\n\r\nCategories:\r\n\r\n* Events\r\n* News\r\n* New Work/Research\r\n* Bitcoin Projects\r\n* Lightning Projects",
          "user": {
            "login": "notmandatory",
            "id": 4724730,
            "node_id": "MDQ6VXNlcjQ3MjQ3MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4724730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notmandatory",
            "html_url": "https://github.com/notmandatory",
            "followers_url": "https://api.github.com/users/notmandatory/followers",
            "following_url": "https://api.github.com/users/notmandatory/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/notmandatory/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/notmandatory/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/notmandatory/subscriptions",
            "organizations_url": "https://api.github.com/users/notmandatory/orgs",
            "repos_url": "https://api.github.com/users/notmandatory/repos",
            "events_url": "https://api.github.com/users/notmandatory/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/notmandatory/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "closed_at": "2024-03-01T17:27:14Z",
          "created_at": "2024-01-15T18:00:32Z",
          "updated_at": "2024-03-01T17:27:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "GBKS",
        "id": 695901,
        "node_id": "MDQ6VXNlcjY5NTkwMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/695901?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GBKS",
        "html_url": "https://github.com/GBKS",
        "followers_url": "https://api.github.com/users/GBKS/followers",
        "following_url": "https://api.github.com/users/GBKS/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GBKS/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GBKS/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GBKS/subscriptions",
        "organizations_url": "https://api.github.com/users/GBKS/orgs",
        "repos_url": "https://api.github.com/users/GBKS/repos",
        "events_url": "https://api.github.com/users/GBKS/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GBKS/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T10:21:59Z",
      "updated_at": "2024-02-15T10:21:59Z",
      "source": {
        "issue": {
          "id": 2136145460,
          "node_id": "I_kwDOEFk3qs5_Uv40",
          "url": "https://api.github.com/repos/BitcoinDesign/Meta/issues/638",
          "repository_url": "https://api.github.com/repos/BitcoinDesign/Meta",
          "labels_url": "https://api.github.com/repos/BitcoinDesign/Meta/issues/638/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BitcoinDesign/Meta/issues/638/comments",
          "events_url": "https://api.github.com/repos/BitcoinDesign/Meta/issues/638/events",
          "html_url": "https://github.com/BitcoinDesign/Meta/issues/638",
          "number": 638,
          "state": "open",
          "state_reason": null,
          "title": "Explore human-readable payment addresses",
          "body": "![human-readable-payment-addresses-240215](https://github.com/BitcoinDesign/Meta/assets/695901/bc082869-dabc-483d-a9bb-01269a6f7322)\r\n\r\nThere's [a new proposal](https://github.com/bitcoin/bips/pull/1551) for human-readable payment addresses that sparked new conversation around a topic that has been around for a long time. It would be fantastic if we could explore this as a community/ecosystem from a UX perspective and come up with recommendations. See this [thread on Discord](https://discord.com/channels/903125802726596648/1083667569355014144/1206683028072702012).\r\n\r\nA primary topic of discussion here is the format of these payment addresses. Is it best to go with the established email format that is globally recognized and people know how to read, write, and use? Or is it confusing, the link to email problematic, and better to go with a different solution? What's best for quick adoption vs a desired end state? Let's come up with a good way forward.",
          "user": {
            "login": "GBKS",
            "id": 695901,
            "node_id": "MDQ6VXNlcjY5NTkwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/695901?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GBKS",
            "html_url": "https://github.com/GBKS",
            "followers_url": "https://api.github.com/users/GBKS/followers",
            "following_url": "https://api.github.com/users/GBKS/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/GBKS/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/GBKS/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/GBKS/subscriptions",
            "organizations_url": "https://api.github.com/users/GBKS/orgs",
            "repos_url": "https://api.github.com/users/GBKS/repos",
            "events_url": "https://api.github.com/users/GBKS/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/GBKS/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 2694883935,
              "node_id": "MDU6TGFiZWwyNjk0ODgzOTM1",
              "url": "https://api.github.com/repos/BitcoinDesign/Meta/labels/collaboration",
              "name": "collaboration",
              "description": "",
              "color": "A814CD",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 15,
          "created_at": "2024-02-15T10:21:58Z",
          "updated_at": "2024-03-19T11:31:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1947357643,
      "node_id": "IC_kwDOAN28mc50ElHL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1947357643",
      "actor": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T21:20:05Z",
      "updated_at": "2024-02-15T21:20:05Z",
      "author_association": "NONE",
      "body": "> Agreed, I'd like to add a section on displaying this info, but not sure if you saw my comment at [#1551 (comment)](https://github.com/bitcoin/bips/pull/1551#issuecomment-1937438951) - I'd like to discuss whether we want specifically USER@DOMAIN for a bit first. Do you have any opinion on that?\r\n\r\nWhoops, missed that!\r\n\r\nI think I'd need to understand the potential issues with `USER@DOMAIN` better. Just off the top of my head:\r\n\r\n1. A user might post a payment address, `USER@DOMAIN`, and then someone sees it and sends mail to it.\r\n2. A user might post an email address, `USER@DOMAIN`, and then someone sees it and tries to send bitcoin to it.\r\n3. A user posts a payment address, `USER@DOMAIN`, and people don't realize they can send bitcoin to it, because it looks like an email address.\r\n4. A domain supports both mail and payments, but the mail usernames aren't the same as the payment usernames, so the recipients of mail and bitcoin sent to `USER@DOMAIN` are different.\r\n\r\n4 seems pretty crazy. If a domain supports both but with different mapping of usernames to users, they should probably just not do that.\r\n\r\nAssuming 4 isn't happening, than 1 and 2 don't seem like big issues. Mail to a non-existent address will be answered with a bounce messages, and making a payment to `USER@DOMAIN`, where `USER` either doesn't exist or `DOMAIN` doesn't support payment looks should also generate a good error message.\r\n\r\n3 seems like not a huge problem. Users will probably be saying something like \"please send me bitcoin at `USER@DOMAIN`\", and there will probably be other contextual cues for whether it's a payment address or a mail address.\r\n\r\nI personally like `USER@DOMAIN` much better than `USER.DOMAIN` or other weird formats, like `@USER@DOMAIN`.\r\n\r\nA couple random thoughts:\r\n\r\n- When trying to get payment instructions for `USER@DOMAIN`, it would probably be good if the client could distinguish between `USER` being misspelled and `DOMAIN` not being configured to accept payments at all, so it can show the user a better error message.\r\n\r\n> Thus, those wishing to avoid such enumeration should carefully ensure all DNS names return valid payment instructions. \r\n\r\nIt should probably be noted that this is super dangerous, since this could lead to bitcoin not going to the intended recipient if you misspell the username.",
      "user": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1947357643",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1947395300,
      "node_id": "IC_kwDOAN28mc50EuTk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1947395300",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T21:49:30Z",
      "updated_at": "2024-02-15T21:49:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "4, sadly, is happening currently on getalby.com :(. There's some further discussion on display at https://discord.com/channels/903125802726596648/1083667569355014144 and on https://github.com/BitcoinDesign/Meta/issues/638",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1947395300",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1947481022,
      "node_id": "IC_kwDOAN28mc50FDO-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1947481022",
      "actor": {
        "login": "moneyball",
        "id": 326147,
        "node_id": "MDQ6VXNlcjMyNjE0Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/326147?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moneyball",
        "html_url": "https://github.com/moneyball",
        "followers_url": "https://api.github.com/users/moneyball/followers",
        "following_url": "https://api.github.com/users/moneyball/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moneyball/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moneyball/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moneyball/subscriptions",
        "organizations_url": "https://api.github.com/users/moneyball/orgs",
        "repos_url": "https://api.github.com/users/moneyball/repos",
        "events_url": "https://api.github.com/users/moneyball/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moneyball/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T23:03:28Z",
      "updated_at": "2024-02-15T23:03:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "As pointed out here (https://github.com/BitcoinDesign/Meta/issues/638#issuecomment-1947454275), spam is a very different beast for email vs. money. No one wants spam email. Anyone would be happy to receive money from random people. By combining the two, users will be hesitant to publicize their email thus limiting their ability to publicize their money address.",
      "user": {
        "login": "moneyball",
        "id": 326147,
        "node_id": "MDQ6VXNlcjMyNjE0Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/326147?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moneyball",
        "html_url": "https://github.com/moneyball",
        "followers_url": "https://api.github.com/users/moneyball/followers",
        "following_url": "https://api.github.com/users/moneyball/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/moneyball/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/moneyball/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/moneyball/subscriptions",
        "organizations_url": "https://api.github.com/users/moneyball/orgs",
        "repos_url": "https://api.github.com/users/moneyball/repos",
        "events_url": "https://api.github.com/users/moneyball/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/moneyball/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1947481022",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1947484284,
      "node_id": "IC_kwDOAN28mc50FEB8",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1947484284",
      "actor": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T23:06:38Z",
      "updated_at": "2024-02-15T23:06:38Z",
      "author_association": "NONE",
      "body": "> As pointed out here ([BitcoinDesign/Meta#638 (comment)](https://github.com/BitcoinDesign/Meta/issues/638#issuecomment-1947454275)), spam is a very different beast for email vs. money. No one wants spam email. Anyone would be happy to receive money from random people. By combining the two, users will be hesitant to publicize their email thus limiting their ability to publicize their money address.\r\n\r\nIn that case, they could have a payment address at a different domain, so if their email address is `foo@bar.com`, their payment address could be `foo@baz.com`, and they can share their payment address freely without worrying about spam. I don't think how things are formatted makes a difference, since if they have the username `foo` and domain `bar.com` for both mail and payments, you could still guess the email address from the payment address, regardless of how the payment address is formatted.",
      "user": {
        "login": "casey",
        "id": 1945,
        "node_id": "MDQ6VXNlcjE5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/casey",
        "html_url": "https://github.com/casey",
        "followers_url": "https://api.github.com/users/casey/followers",
        "following_url": "https://api.github.com/users/casey/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/casey/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/casey/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
        "organizations_url": "https://api.github.com/users/casey/orgs",
        "repos_url": "https://api.github.com/users/casey/repos",
        "events_url": "https://api.github.com/users/casey/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/casey/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1947484284",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1949398838,
      "node_id": "IC_kwDOAN28mc50MXc2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1949398838",
      "actor": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T22:03:32Z",
      "updated_at": "2024-02-16T22:03:32Z",
      "author_association": "NONE",
      "body": "Related: Lightspark recently introduced [Universal Money Address](https://docs.lightspark.com/uma-sdk/introduction) - `$USER@DOMAIN`\r\n(`USER$DOMAIN` might be tempting, but apparently used by XRP [Paystrings](https://docs.paystring.org/)).\r\n(How about`USER₿DOMAIN`? - gotta milk that `₿` Unicode symbol and avoid `$`! :) )",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1949398838",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1949451661,
      "node_id": "IC_kwDOAN28mc50MkWN",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1949451661",
      "actor": {
        "login": "joedavison",
        "id": 2687550,
        "node_id": "MDQ6VXNlcjI2ODc1NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2687550?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joedavison",
        "html_url": "https://github.com/joedavison",
        "followers_url": "https://api.github.com/users/joedavison/followers",
        "following_url": "https://api.github.com/users/joedavison/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joedavison/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joedavison/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joedavison/subscriptions",
        "organizations_url": "https://api.github.com/users/joedavison/orgs",
        "repos_url": "https://api.github.com/users/joedavison/repos",
        "events_url": "https://api.github.com/users/joedavison/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joedavison/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T22:58:07Z",
      "updated_at": "2024-02-16T22:58:07Z",
      "author_association": "NONE",
      "body": "> (How about`USER₿DOMAIN`? - gotta milk that `₿` Unicode symbol and avoid `$`! :) )\n\nChoosing a symbol that is not present on most keyboards would be a mistake, IMO. ",
      "user": {
        "login": "joedavison",
        "id": 2687550,
        "node_id": "MDQ6VXNlcjI2ODc1NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2687550?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joedavison",
        "html_url": "https://github.com/joedavison",
        "followers_url": "https://api.github.com/users/joedavison/followers",
        "following_url": "https://api.github.com/users/joedavison/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joedavison/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joedavison/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joedavison/subscriptions",
        "organizations_url": "https://api.github.com/users/joedavison/orgs",
        "repos_url": "https://api.github.com/users/joedavison/repos",
        "events_url": "https://api.github.com/users/joedavison/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joedavison/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1949451661",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1949644847,
      "node_id": "IC_kwDOAN28mc50NTgv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1949644847",
      "actor": {
        "login": "knocte",
        "id": 331303,
        "node_id": "MDQ6VXNlcjMzMTMwMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331303?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knocte",
        "html_url": "https://github.com/knocte",
        "followers_url": "https://api.github.com/users/knocte/followers",
        "following_url": "https://api.github.com/users/knocte/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knocte/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knocte/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knocte/subscriptions",
        "organizations_url": "https://api.github.com/users/knocte/orgs",
        "repos_url": "https://api.github.com/users/knocte/repos",
        "events_url": "https://api.github.com/users/knocte/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knocte/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-17T04:39:40Z",
      "updated_at": "2024-02-17T04:39:40Z",
      "author_association": "NONE",
      "body": "> Related: Lightspark recently introduced [Universal Money Address](https://docs.lightspark.com/uma-sdk/introduction) - $USER@DOMAIN\r\n\r\nIs there any chance that we can have either OpenAlias or UMA end up being BIPs themselves?",
      "user": {
        "login": "knocte",
        "id": 331303,
        "node_id": "MDQ6VXNlcjMzMTMwMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/331303?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knocte",
        "html_url": "https://github.com/knocte",
        "followers_url": "https://api.github.com/users/knocte/followers",
        "following_url": "https://api.github.com/users/knocte/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knocte/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knocte/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knocte/subscriptions",
        "organizations_url": "https://api.github.com/users/knocte/orgs",
        "repos_url": "https://api.github.com/users/knocte/repos",
        "events_url": "https://api.github.com/users/knocte/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knocte/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1949644847",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1950483634,
      "node_id": "IC_kwDOAN28mc50QgSy",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1950483634",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-17T22:48:45Z",
      "updated_at": "2024-02-17T22:48:45Z",
      "author_association": "MEMBER",
      "body": "I think this a reasonable proposal but also the authors should consider what OpenAlias has to offer as existing groundwork. As someone who has worked on a blockchain based naming system with succinct namespace proof, I definitely appreciate the awareness of hardware wallets, and being able to offer tiny proofs to limited systems.\r\n\r\nMy biggest concerns are:\r\n\r\n- Centralization of DNSSEC: ICANN (root), companies like Verisign (.com) and CentralNic (hosts TLDs and does all their DNSSEC signing) are central points of failure or address-swapping. That being said, posting your bitcoin address on a HTTPS website has exactly the same risks, plus more. BIP70 comes to mind...\r\n\r\n- Developers are afraid of DNS. Joe Average App Developer certainly knows how to make https requests, but retrieving and validating a DNSSEC chain might be out of their scope.\r\n\r\n- Address reuse. I'd love to see this protocol restricted to BOLT12 / LN keysend and Silent Payments (BIP352). That might be unreasonable. Recommending a short TTL is good, but only if you are running a nameserver with an xpub or table of static addresses (which I have sortof [implemented](https://github.com/pinheadmz/hip2-server) before, and would happy to write a BIP-xxxx nameserver)\r\n\r\nAll this being said, I agree there is a clear demand and despite my concerns, this proposal is probably the quickest way to get something useful deployed. Be sure you answer my 10-year-old stack exchange question too :-)\r\n\r\nhttps://bitcoin.stackexchange.com/questions/11390/is-anyone-developing-a-dns-like-system-for-bitcoin-addresses\r\n\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1950483634",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1950832550,
      "node_id": "IC_kwDOAN28mc50R1em",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1950832550",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-18T02:44:12Z",
      "updated_at": "2024-02-18T02:44:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Centralization of DNSSEC: ICANN (root), companies like Verisign (.com) and CentralNic (hosts TLDs and does all their DNSSEC signing) are central points of failure or address-swapping. That being said, posting your bitcoin address on a HTTPS website has exactly the same risks, plus more. BIP70 comes to mind...\r\n\r\nIndeed, ultimately any human-readable-name -> bitcoin payment instructions protocol is going to either (a) require some blockchain-based solution (which is a reasonable candidate, but the BIP addresses this in a general sense, noting that the lack of adoption of these solutions outside their vertical, and that requiring bitcoin wallets rely on these protocols is not yet, IMO, a reasonable candidate).\r\n\r\nLuckily there's lots of diversity in terms of TLD operators to choose from, and while the root centralization is concerning, resolvers can AXFR the root zone manually (in fact most recursive resolvers have built-in support for this now!) and do it only infrequently if they wish.\r\n\r\n> Developers are afraid of DNS. Joe Average App Developer certainly knows how to make https requests, but retrieving and validating a DNSSEC chain might be out of their scope.\r\n\r\nSure, kinda. In terms of automating writing contents to the DNS that is largely true (though, frankly, IMO an indictment of Joe Average App Developer, since the DNS is genuinely an incredibly straightforward and simple system), but this spec addresses that in a few ways:\r\n\r\n(a) on the receiving payments end, for average users its intended that users can simply add their own entry to their own zone. This is a one-time thing that is well-supported in most registrar/DNS host GUIs.\r\n(b) on the receiving end, for larger providers, at least on the lightning end, you can use BOLT12 to add a single record and receive payments for all users, seeing the user being paid via the invoice-request (linked the bLIP draft above).\r\n(c) on the receiving end, for larger providers not using lightning, I dunno, grow up, you're a large custodian, learn to take advantage of the technologies that exist or you shouldn't be a large custodian :shrug:.\r\n\r\nOn the sending end, I spent the time to implement a multi-tool to handle the querying/proof generation/validation, linked in the BIP. For lightning nodes, I wrote up a spec to allow fetching a proof from an arbitrary lightning node over onion messages, so the whole process never has to leave the lightning network! For others, the library linked handles querying against a DoH or TCP/53 server, and can run and do so from WASM or native code. If folks can't figure out how to make DNS requests with that much provided, not sure what to say :)\r\n\r\n> Address reuse. I'd love to see this protocol restricted to BOLT12 / LN keysend and Silent Payments (BIP352). That might be unreasonable. Recommending a short TTL is good, but only if you are running a nameserver with an xpub or table of static addresses (which I have sortof [implemented](https://github.com/pinheadmz/hip2-server) before, and would happy to write a BIP-xxxx nameserver)\r\n\r\nYea, don't disagree, @rustyrussell pointed out that we should suggest rotation whenever a payment is received, which I think is sensible and may be somewhat doable for larger providers. For individuals adding their own records, sadly, I'm afraid address reuse would be somewhat common. That said, if we get BOLT12 and SP to be common-enough, even if a static address is in the record, most payments wont use it :)",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1950832550",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "mentioned",
      "id": 11837680072,
      "node_id": "MEE_lADOAN28mc5-4gpyzwAAAALBlKnI",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11837680072",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-18T02:44:13Z"
    },
    {
      "event": "subscribed",
      "id": 11837680073,
      "node_id": "SE_lADOAN28mc5-4gpyzwAAAALBlKnJ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11837680073",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-18T02:44:13Z"
    },
    {
      "event": "reviewed",
      "id": 1887231072,
      "node_id": "PRR_kwDOAN28mc5wfNxg",
      "url": null,
      "actor": null,
      "commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1887231072",
      "submitted_at": "2024-02-18T12:51:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "reviewed",
      "id": 1888995385,
      "node_id": "PRR_kwDOAN28mc5wl8g5",
      "url": null,
      "actor": null,
      "commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "sbddesign",
        "id": 2414177,
        "node_id": "MDQ6VXNlcjI0MTQxNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2414177?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sbddesign",
        "html_url": "https://github.com/sbddesign",
        "followers_url": "https://api.github.com/users/sbddesign/followers",
        "following_url": "https://api.github.com/users/sbddesign/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sbddesign/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sbddesign/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sbddesign/subscriptions",
        "organizations_url": "https://api.github.com/users/sbddesign/orgs",
        "repos_url": "https://api.github.com/users/sbddesign/repos",
        "events_url": "https://api.github.com/users/sbddesign/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sbddesign/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1888995385",
      "submitted_at": "2024-02-19T18:26:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "reviewed",
      "id": 1897590080,
      "node_id": "PRR_kwDOAN28mc5xGu1A",
      "url": null,
      "actor": null,
      "commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "azuchi",
        "id": 1539047,
        "node_id": "MDQ6VXNlcjE1MzkwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1539047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/azuchi",
        "html_url": "https://github.com/azuchi",
        "followers_url": "https://api.github.com/users/azuchi/followers",
        "following_url": "https://api.github.com/users/azuchi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/azuchi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/azuchi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/azuchi/subscriptions",
        "organizations_url": "https://api.github.com/users/azuchi/orgs",
        "repos_url": "https://api.github.com/users/azuchi/repos",
        "events_url": "https://api.github.com/users/azuchi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/azuchi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1897590080",
      "submitted_at": "2024-02-23T08:24:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "buffrr",
        "id": 41967894,
        "node_id": "MDQ6VXNlcjQxOTY3ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/41967894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/buffrr",
        "html_url": "https://github.com/buffrr",
        "followers_url": "https://api.github.com/users/buffrr/followers",
        "following_url": "https://api.github.com/users/buffrr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/buffrr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/buffrr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/buffrr/subscriptions",
        "organizations_url": "https://api.github.com/users/buffrr/orgs",
        "repos_url": "https://api.github.com/users/buffrr/repos",
        "events_url": "https://api.github.com/users/buffrr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/buffrr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-25T04:19:16Z",
      "updated_at": "2024-02-25T04:19:16Z",
      "source": {
        "issue": {
          "id": 2152592722,
          "node_id": "I_kwDOLPf7qc6ATfVS",
          "url": "https://api.github.com/repos/TheBlueMatt/dnssec-prover/issues/1",
          "repository_url": "https://api.github.com/repos/TheBlueMatt/dnssec-prover",
          "labels_url": "https://api.github.com/repos/TheBlueMatt/dnssec-prover/issues/1/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/TheBlueMatt/dnssec-prover/issues/1/comments",
          "events_url": "https://api.github.com/repos/TheBlueMatt/dnssec-prover/issues/1/events",
          "html_url": "https://github.com/TheBlueMatt/dnssec-prover/issues/1",
          "number": 1,
          "state": "closed",
          "state_reason": "completed",
          "title": "Invalid AuthenticationChain for wildcard records",
          "body": "Wildcard records require a non-existence proof either `NSEC` or `NSEC3` to prove no exact match exists which is not included in `AuthenticationChain` created by this library. Standard DNSSEC validators would consider such chains `bogus`. \r\n\r\nLet's say I want `secret.buffrr.dev` to use some certificate while everything else `*.buffrr.dev` to use another certificate, I could add the following records to my zone:\r\n\r\n```\r\n_443._tcp.secret.buffrr.dev TLSA ....\r\n*.buffrr.dev TLSA ....\r\n```\r\nUsing the validator in this library, I could fool it into accepting the TLSA record labelled `*.buffrr.dev` for `_443._tcp.secret.buffrr.dev` while a standard DNSSEC validator would not. If an RRSIG is covering a wildcard (determined by number of labels), then `NSECs` or `NSEC3s` are required in the `AuthenticationChain` to prove no exact match exists.\r\n\r\nSince [this BIP](https://github.com/bitcoin/bips/pull/1551) requires following the RFC, I would suggest either fixing it or perhaps reconsidering support for wildcard records.  Otherwise, it won't be compatible with all the validators out there unless every integration of the BIP uses this exact implementation.\r\n\r\nI appreciate the effort put into developing this library and making it generic enough for other use cases. I just gave it a quick pass but will try to go deeper once I have some time since i'm considering it for other projects. Btw RFC-9102 includes some [test vectors](https://www.rfc-editor.org/rfc/rfc9102.html#name-test-vectors) in the appendix that might be helpful. ",
          "user": {
            "login": "buffrr",
            "id": 41967894,
            "node_id": "MDQ6VXNlcjQxOTY3ODk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41967894?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/buffrr",
            "html_url": "https://github.com/buffrr",
            "followers_url": "https://api.github.com/users/buffrr/followers",
            "following_url": "https://api.github.com/users/buffrr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/buffrr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/buffrr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/buffrr/subscriptions",
            "organizations_url": "https://api.github.com/users/buffrr/orgs",
            "repos_url": "https://api.github.com/users/buffrr/repos",
            "events_url": "https://api.github.com/users/buffrr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/buffrr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 1,
          "closed_at": "2024-03-02T16:43:29Z",
          "created_at": "2024-02-25T04:19:16Z",
          "updated_at": "2024-03-02T16:43:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Liongrass",
        "id": 2104935,
        "node_id": "MDQ6VXNlcjIxMDQ5MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2104935?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Liongrass",
        "html_url": "https://github.com/Liongrass",
        "followers_url": "https://api.github.com/users/Liongrass/followers",
        "following_url": "https://api.github.com/users/Liongrass/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Liongrass/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Liongrass/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Liongrass/subscriptions",
        "organizations_url": "https://api.github.com/users/Liongrass/orgs",
        "repos_url": "https://api.github.com/users/Liongrass/repos",
        "events_url": "https://api.github.com/users/Liongrass/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Liongrass/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-26T19:35:49Z",
      "updated_at": "2024-02-26T19:35:49Z",
      "source": {
        "issue": {
          "id": 2126590552,
          "node_id": "I_kwDOHWpXXM5-wTJY",
          "url": "https://api.github.com/repos/VancouverBitdevs/VancouverBitdevs.github.io/issues/56",
          "repository_url": "https://api.github.com/repos/VancouverBitdevs/VancouverBitdevs.github.io",
          "labels_url": "https://api.github.com/repos/VancouverBitdevs/VancouverBitdevs.github.io/issues/56/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/VancouverBitdevs/VancouverBitdevs.github.io/issues/56/comments",
          "events_url": "https://api.github.com/repos/VancouverBitdevs/VancouverBitdevs.github.io/issues/56/events",
          "html_url": "https://github.com/VancouverBitdevs/VancouverBitdevs.github.io/issues/56",
          "number": 56,
          "state": "closed",
          "state_reason": "completed",
          "title": " 2024-02-27 Get your links and discussion topics in!",
          "body": null,
          "user": {
            "login": "Liongrass",
            "id": 2104935,
            "node_id": "MDQ6VXNlcjIxMDQ5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2104935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Liongrass",
            "html_url": "https://github.com/Liongrass",
            "followers_url": "https://api.github.com/users/Liongrass/followers",
            "following_url": "https://api.github.com/users/Liongrass/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Liongrass/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Liongrass/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Liongrass/subscriptions",
            "organizations_url": "https://api.github.com/users/Liongrass/orgs",
            "repos_url": "https://api.github.com/users/Liongrass/repos",
            "events_url": "https://api.github.com/users/Liongrass/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Liongrass/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 2,
          "closed_at": "2024-02-28T02:16:00Z",
          "created_at": "2024-02-09T07:05:48Z",
          "updated_at": "2024-02-28T02:16:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "diegokolling",
        "id": 10760290,
        "node_id": "MDQ6VXNlcjEwNzYwMjkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/10760290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/diegokolling",
        "html_url": "https://github.com/diegokolling",
        "followers_url": "https://api.github.com/users/diegokolling/followers",
        "following_url": "https://api.github.com/users/diegokolling/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/diegokolling/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/diegokolling/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/diegokolling/subscriptions",
        "organizations_url": "https://api.github.com/users/diegokolling/orgs",
        "repos_url": "https://api.github.com/users/diegokolling/repos",
        "events_url": "https://api.github.com/users/diegokolling/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/diegokolling/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T18:57:35Z",
      "updated_at": "2024-02-28T18:57:35Z",
      "source": {
        "issue": {
          "id": 2131192697,
          "node_id": "I_kwDOKqpucs5_B2t5",
          "url": "https://api.github.com/repos/plebemineira/bhbitdevs.org/issues/2",
          "repository_url": "https://api.github.com/repos/plebemineira/bhbitdevs.org",
          "labels_url": "https://api.github.com/repos/plebemineira/bhbitdevs.org/issues/2/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/plebemineira/bhbitdevs.org/issues/2/comments",
          "events_url": "https://api.github.com/repos/plebemineira/bhbitdevs.org/issues/2/events",
          "html_url": "https://github.com/plebemineira/bhbitdevs.org/issues/2",
          "number": 2,
          "state": "closed",
          "state_reason": "completed",
          "title": "Topicos Fevereiro",
          "body": null,
          "user": {
            "login": "plebhash",
            "id": 147345153,
            "node_id": "U_kgDOCMhPAQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/147345153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plebhash",
            "html_url": "https://github.com/plebhash",
            "followers_url": "https://api.github.com/users/plebhash/followers",
            "following_url": "https://api.github.com/users/plebhash/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/plebhash/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/plebhash/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/plebhash/subscriptions",
            "organizations_url": "https://api.github.com/users/plebhash/orgs",
            "repos_url": "https://api.github.com/users/plebhash/repos",
            "events_url": "https://api.github.com/users/plebhash/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/plebhash/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "closed_at": "2024-05-29T19:09:20Z",
          "created_at": "2024-02-12T23:51:23Z",
          "updated_at": "2024-05-29T19:09:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12019826143,
      "node_id": "HRFPE_lADOAN28mc5-4gpyzwAAAALMb_3f",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12019826143",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-05T21:26:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12019850260,
      "node_id": "HRFPE_lADOAN28mc5-4gpyzwAAAALMcFwU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12019850260",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-05T21:29:36Z"
    },
    {
      "event": "commented",
      "id": 1979669962,
      "node_id": "IC_kwDOAN28mc51_13K",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1979669962",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-05T21:31:19Z",
      "updated_at": "2024-03-05T21:31:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed a few small updates, plus changed the display format to ₿user@domain (that's a bitcoin symbol if you are missing good fonts). This makes a tradeoff between compatibility with lnurl (user@domain) and getting confused with email (by adding an explicit prefix). I consider this ~final at this point, absent some substantial issues or minor clerical mistakes.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1979669962",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "commented",
      "id": 1979687513,
      "node_id": "IC_kwDOAN28mc51_6JZ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1979687513",
      "actor": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-05T21:44:01Z",
      "updated_at": "2024-03-05T21:44:01Z",
      "author_association": "NONE",
      "body": "Happy you're giving the optional ₿-prefix a chance! Typing out and risking misspelling the receiving address is not something one wants to encourage anyway, but you still allow dropping the prefix for those who insist on typing. (And one still has to have a valid DNS record, so misspelling only becomes an issue for domains with many users).",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-1979687513",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "reviewed",
      "id": 1919086546,
      "node_id": "PRR_kwDOAN28mc5yYu_S",
      "url": null,
      "actor": null,
      "commit_id": "09db33a98a6ed4a9b60cf430356dbe85c9ae4ec7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looks mostly good to me, a couple nits/questions.",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1919086546",
      "submitted_at": "2024-03-06T08:46:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "reviewed",
      "id": 1920089520,
      "node_id": "PRR_kwDOAN28mc5ycj2w",
      "url": null,
      "actor": null,
      "commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bips/pull/1551/commits/d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1920089520",
      "submitted_at": "2024-03-06T15:33:18Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "GBKS",
        "id": 695901,
        "node_id": "MDQ6VXNlcjY5NTkwMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/695901?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GBKS",
        "html_url": "https://github.com/GBKS",
        "followers_url": "https://api.github.com/users/GBKS/followers",
        "following_url": "https://api.github.com/users/GBKS/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GBKS/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GBKS/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GBKS/subscriptions",
        "organizations_url": "https://api.github.com/users/GBKS/orgs",
        "repos_url": "https://api.github.com/users/GBKS/repos",
        "events_url": "https://api.github.com/users/GBKS/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GBKS/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T11:26:31Z",
      "updated_at": "2024-03-19T11:26:31Z",
      "source": {
        "issue": {
          "id": 2194704040,
          "node_id": "PR_kwDOEFjuv85qEz6e",
          "url": "https://api.github.com/repos/BitcoinDesign/Guide/issues/1082",
          "repository_url": "https://api.github.com/repos/BitcoinDesign/Guide",
          "labels_url": "https://api.github.com/repos/BitcoinDesign/Guide/issues/1082/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BitcoinDesign/Guide/issues/1082/comments",
          "events_url": "https://api.github.com/repos/BitcoinDesign/Guide/issues/1082/events",
          "html_url": "https://github.com/BitcoinDesign/Guide/pull/1082",
          "number": 1082,
          "state": "open",
          "state_reason": null,
          "title": "Adds new page about human readable addresses",
          "body": "This is something we've discussed for a few weeks in the [this issue](https://github.com/BitcoinDesign/Meta/issues/638) and the UX channel in Discord and turns the findings into a page.\r\n\r\nPrimary focus of the page is on the [DNS-based payment information proposal](https://github.com/bitcoin/bips/pull/1551), with an additional paragraph about Lightning Address and a small note about PayNyms.\r\n\r\nThe UI mock-ups are more directional than implementation-ready, which I think is fine. But we could flesh this out further in a revision at a later point.\r\n\r\nI think there's more work to do in cross-linking this from all the right places. I updated a few spots, but there's probably more. The page is at a point where more review and public feedback would be helpful in identifying missing and incorrect bits.\r\n\r\n**If you have criticism of the [DNS-based payment information proposal](https://github.com/bitcoin/bips/pull/1551), please post it in that PR, and not here. This page is a reflection of the logic described in that PR.**\r\n\r\n🧐[Check the preview](https://deploy-preview-1082--bitcoin-design-site.netlify.app/guide/how-it-works/human-readable-addresses/)🧐",
          "user": {
            "login": "GBKS",
            "id": 695901,
            "node_id": "MDQ6VXNlcjY5NTkwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/695901?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GBKS",
            "html_url": "https://github.com/GBKS",
            "followers_url": "https://api.github.com/users/GBKS/followers",
            "following_url": "https://api.github.com/users/GBKS/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/GBKS/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/GBKS/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/GBKS/subscriptions",
            "organizations_url": "https://api.github.com/users/GBKS/orgs",
            "repos_url": "https://api.github.com/users/GBKS/repos",
            "events_url": "https://api.github.com/users/GBKS/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/GBKS/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 2566881303,
              "node_id": "MDU6TGFiZWwyNTY2ODgxMzAz",
              "url": "https://api.github.com/repos/BitcoinDesign/Guide/labels/Copy",
              "name": "Copy",
              "description": "Task is about improving text.",
              "color": "3aa1c4",
              "default": false
            },
            {
              "id": 2566882019,
              "node_id": "MDU6TGFiZWwyNTY2ODgyMDE5",
              "url": "https://api.github.com/repos/BitcoinDesign/Guide/labels/Design",
              "name": "Design",
              "description": "Task is about designing something.",
              "color": "66c1c0",
              "default": false
            },
            {
              "id": 3509183316,
              "node_id": "LA_kwDOEFjuv87RKeNU",
              "url": "https://api.github.com/repos/BitcoinDesign/Guide/labels/How%20it%20works",
              "name": "How it works",
              "description": "Referring to the How it works section.",
              "color": "4C5D8C",
              "default": false
            }
          ],
          "assignee": {
            "login": "GBKS",
            "id": 695901,
            "node_id": "MDQ6VXNlcjY5NTkwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/695901?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GBKS",
            "html_url": "https://github.com/GBKS",
            "followers_url": "https://api.github.com/users/GBKS/followers",
            "following_url": "https://api.github.com/users/GBKS/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/GBKS/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/GBKS/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/GBKS/subscriptions",
            "organizations_url": "https://api.github.com/users/GBKS/orgs",
            "repos_url": "https://api.github.com/users/GBKS/repos",
            "events_url": "https://api.github.com/users/GBKS/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/GBKS/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "GBKS",
              "id": 695901,
              "node_id": "MDQ6VXNlcjY5NTkwMQ==",
              "avatar_url": "https://avatars.githubusercontent.com/u/695901?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/GBKS",
              "html_url": "https://github.com/GBKS",
              "followers_url": "https://api.github.com/users/GBKS/followers",
              "following_url": "https://api.github.com/users/GBKS/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/GBKS/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/GBKS/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/GBKS/subscriptions",
              "organizations_url": "https://api.github.com/users/GBKS/orgs",
              "repos_url": "https://api.github.com/users/GBKS/repos",
              "events_url": "https://api.github.com/users/GBKS/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/GBKS/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/BitcoinDesign/Guide/pulls/1082",
            "html_url": "https://github.com/BitcoinDesign/Guide/pull/1082",
            "diff_url": "https://github.com/BitcoinDesign/Guide/pull/1082.diff",
            "patch_url": "https://github.com/BitcoinDesign/Guide/pull/1082.patch"
          },
          "created_at": "2024-03-19T11:26:30Z",
          "updated_at": "2024-04-29T09:12:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dpad85",
        "id": 5765435,
        "node_id": "MDQ6VXNlcjU3NjU0MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5765435?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dpad85",
        "html_url": "https://github.com/dpad85",
        "followers_url": "https://api.github.com/users/dpad85/followers",
        "following_url": "https://api.github.com/users/dpad85/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dpad85/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dpad85/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dpad85/subscriptions",
        "organizations_url": "https://api.github.com/users/dpad85/orgs",
        "repos_url": "https://api.github.com/users/dpad85/repos",
        "events_url": "https://api.github.com/users/dpad85/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dpad85/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-25T13:42:51Z",
      "updated_at": "2024-03-25T13:42:51Z",
      "source": {
        "issue": {
          "id": 2203112516,
          "node_id": "I_kwDOC4Bnos6DUNRE",
          "url": "https://api.github.com/repos/ACINQ/phoenix/issues/536",
          "repository_url": "https://api.github.com/repos/ACINQ/phoenix",
          "labels_url": "https://api.github.com/repos/ACINQ/phoenix/issues/536/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/ACINQ/phoenix/issues/536/comments",
          "events_url": "https://api.github.com/repos/ACINQ/phoenix/issues/536/events",
          "html_url": "https://github.com/ACINQ/phoenix/issues/536",
          "number": 536,
          "state": "open",
          "state_reason": null,
          "title": "Receive to LN Address in Phoenix ",
          "body": "## user story\r\n\r\nAs a Phoenix wallet user who receives sats, I would like a way to generate a lightning address in app, so that I can more easily and readily share this easy to write down, share, and remember information with others who would like to send me sats.\r\n\r\n### acceptance criteria\r\n\r\n1. there is a method to generate a LN address in Phoenix app (e.g. dpad85@acinq.co; HappyGiraffe21@acinq.co etc.)\r\n2. there is a way to see my LN address in app\r\n3. I can easily tap copy on the LN address, where the LN address is saved in device memory for easy sharing to other apps\r\n\r\n### implementation details\r\n\r\nhttps://lightningaddress.com/\r\nhttps://github.com/andrerfneves/lightning-address/blob/master/README.md\r\nhttps://github.com/andrerfneves/lightning-address\r\n\r\n\r\n### related\r\n\r\n[Improved] Nostr integration https://github.com/ACINQ/phoenix/issues/503",
          "user": {
            "login": "alltheseas",
            "id": 64376233,
            "node_id": "MDQ6VXNlcjY0Mzc2MjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/64376233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alltheseas",
            "html_url": "https://github.com/alltheseas",
            "followers_url": "https://api.github.com/users/alltheseas/followers",
            "following_url": "https://api.github.com/users/alltheseas/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/alltheseas/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/alltheseas/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/alltheseas/subscriptions",
            "organizations_url": "https://api.github.com/users/alltheseas/orgs",
            "repos_url": "https://api.github.com/users/alltheseas/repos",
            "events_url": "https://api.github.com/users/alltheseas/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/alltheseas/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 2,
          "created_at": "2024-03-22T18:50:54Z",
          "updated_at": "2024-03-25T13:43:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1993230868,
      "node_id": "PRR_kwDOAN28mc52zkoU",
      "url": null,
      "actor": null,
      "commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "nickfarrow",
        "id": 24557779,
        "node_id": "MDQ6VXNlcjI0NTU3Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/24557779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nickfarrow",
        "html_url": "https://github.com/nickfarrow",
        "followers_url": "https://api.github.com/users/nickfarrow/followers",
        "following_url": "https://api.github.com/users/nickfarrow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nickfarrow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nickfarrow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nickfarrow/subscriptions",
        "organizations_url": "https://api.github.com/users/nickfarrow/orgs",
        "repos_url": "https://api.github.com/users/nickfarrow/repos",
        "events_url": "https://api.github.com/users/nickfarrow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nickfarrow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-1993230868",
      "submitted_at": "2024-04-11T03:40:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sbddesign",
        "id": 2414177,
        "node_id": "MDQ6VXNlcjI0MTQxNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2414177?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sbddesign",
        "html_url": "https://github.com/sbddesign",
        "followers_url": "https://api.github.com/users/sbddesign/followers",
        "following_url": "https://api.github.com/users/sbddesign/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sbddesign/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sbddesign/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sbddesign/subscriptions",
        "organizations_url": "https://api.github.com/users/sbddesign/orgs",
        "repos_url": "https://api.github.com/users/sbddesign/repos",
        "events_url": "https://api.github.com/users/sbddesign/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sbddesign/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-12T18:44:11Z",
      "updated_at": "2024-04-12T18:44:11Z",
      "source": {
        "issue": {
          "id": 2005999629,
          "node_id": "I_kwDOG8RDM853kSAN",
          "url": "https://api.github.com/repos/sbddesign/bip21-site/issues/90",
          "repository_url": "https://api.github.com/repos/sbddesign/bip21-site",
          "labels_url": "https://api.github.com/repos/sbddesign/bip21-site/issues/90/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/sbddesign/bip21-site/issues/90/comments",
          "events_url": "https://api.github.com/repos/sbddesign/bip21-site/issues/90/events",
          "html_url": "https://github.com/sbddesign/bip21-site/issues/90",
          "number": 90,
          "state": "open",
          "state_reason": null,
          "title": "How to structure the URL when there is only a lightning invoice available",
          "body": "Should BIP21 be used in this case? we see some benefits since the bitcoin scheme is recognized, where `lightning:` is not.\r\n\r\nShould it be:\r\n```\r\nbitcoin:?lightning=${invoice} // or can we put `null` as the bitcoin address?\r\n```\r\n\r\nor\r\n```\r\nbitcoin://?lightning=${invoice}\r\n```\r\n\r\nUnforunately the support right now seems less than the number of wallets that support `lightning:lnbc...` links",
          "user": {
            "login": "rolznz",
            "id": 33993199,
            "node_id": "MDQ6VXNlcjMzOTkzMTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/33993199?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rolznz",
            "html_url": "https://github.com/rolznz",
            "followers_url": "https://api.github.com/users/rolznz/followers",
            "following_url": "https://api.github.com/users/rolznz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/rolznz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/rolznz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/rolznz/subscriptions",
            "organizations_url": "https://api.github.com/users/rolznz/orgs",
            "repos_url": "https://api.github.com/users/rolznz/repos",
            "events_url": "https://api.github.com/users/rolznz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/rolznz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 3891664590,
              "node_id": "LA_kwDOG8RDM87n9hbO",
              "url": "https://api.github.com/repos/sbddesign/bip21-site/labels/question",
              "name": "question",
              "description": "Further information is requested",
              "color": "d876e3",
              "default": true
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 1,
          "created_at": "2023-11-22T10:12:35Z",
          "updated_at": "2024-04-12T18:49:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 12642699656,
      "node_id": "LE_lADOAN28mc5-4gpyzwAAAALxkEmI",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12642699656",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T12:58:10Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 2028451816,
      "node_id": "PRR_kwDOAN28mc5457fo",
      "url": null,
      "actor": null,
      "commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I did a light review.\r\n\r\nBeside the missing fields in the preamble, please include a license and add the mandatory *Backwards Compatibility* section, even if it is just to say that there are no conflicts.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-2028451816",
      "submitted_at": "2024-04-29T13:07:23Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "labeled",
      "id": 12746818291,
      "node_id": "LE_lADOAN28mc5-4gpyzwAAAAL3xQLz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12746818291",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T17:00:42Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2051181155,
      "node_id": "PRR_kwDOAN28mc56Qopj",
      "url": null,
      "actor": null,
      "commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Zavalynech",
        "id": 147889334,
        "node_id": "U_kgDOCNCctg",
        "avatar_url": "https://avatars.githubusercontent.com/u/147889334?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Zavalynech",
        "html_url": "https://github.com/Zavalynech",
        "followers_url": "https://api.github.com/users/Zavalynech/followers",
        "following_url": "https://api.github.com/users/Zavalynech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Zavalynech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Zavalynech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Zavalynech/subscriptions",
        "organizations_url": "https://api.github.com/users/Zavalynech/orgs",
        "repos_url": "https://api.github.com/users/Zavalynech/repos",
        "events_url": "https://api.github.com/users/Zavalynech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Zavalynech/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-2051181155",
      "submitted_at": "2024-05-11T10:57:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "reviewed",
      "id": 2051181440,
      "node_id": "PRR_kwDOAN28mc56QouA",
      "url": null,
      "actor": null,
      "commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Zavalynech",
        "id": 147889334,
        "node_id": "U_kgDOCNCctg",
        "avatar_url": "https://avatars.githubusercontent.com/u/147889334?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Zavalynech",
        "html_url": "https://github.com/Zavalynech",
        "followers_url": "https://api.github.com/users/Zavalynech/followers",
        "following_url": "https://api.github.com/users/Zavalynech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Zavalynech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Zavalynech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Zavalynech/subscriptions",
        "organizations_url": "https://api.github.com/users/Zavalynech/orgs",
        "repos_url": "https://api.github.com/users/Zavalynech/repos",
        "events_url": "https://api.github.com/users/Zavalynech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Zavalynech/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-2051181440",
      "submitted_at": "2024-05-11T11:00:09Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-18T00:19:50Z",
      "updated_at": "2024-05-18T00:19:50Z",
      "source": {
        "issue": {
          "id": 2303710885,
          "node_id": "I_kwDODgwEWM6JT9al",
          "url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1447",
          "repository_url": "https://api.github.com/repos/bitcoindevkit/bdk",
          "labels_url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1447/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1447/comments",
          "events_url": "https://api.github.com/repos/bitcoindevkit/bdk/issues/1447/events",
          "html_url": "https://github.com/bitcoindevkit/bdk/issues/1447",
          "number": 1447,
          "state": "open",
          "state_reason": null,
          "title": "Human Readable Names Support",
          "body": "https://github.com/bitcoin/bips/pull/1551 describes a mechanism for mapping human-readable names (in the `Buser@domain` form) to BIP 21 URIs (targeting mostly silent payment addresses and BOLT12 offers). It would be nice if BDK came with support built-in for doing the lookups (or at least verifying DNSSEC proofs using https://git.bitcoin.ninja/index.cgi?p=dnssec-prover) and mapping them to a BIP 21 URI (and then resolving that to payment instructions).\r\n\r\nWe should probably have a discussion about where this kind of general payment instruction lookup logic should live - maybe LDK should refactor its BOLT12 offer and BOLT11 invoice parsing code into crates that don't depend on `lightning` so that we can have some generic \"bitcoin payment instruction resolver\" crate that BDK and LDK can use to resolve human readable names/BIP 21 URIs/bitcoin addresses to a list of payment instructions.",
          "user": {
            "login": "TheBlueMatt",
            "id": 649246,
            "node_id": "MDQ6VXNlcjY0OTI0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheBlueMatt",
            "html_url": "https://github.com/TheBlueMatt",
            "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
            "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
            "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
            "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
            "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1803493658,
              "node_id": "MDU6TGFiZWwxODAzNDkzNjU4",
              "url": "https://api.github.com/repos/bitcoindevkit/bdk/labels/enhancement",
              "name": "enhancement",
              "description": "New feature or request",
              "color": "a2eeef",
              "default": true
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 0,
          "created_at": "2024-05-18T00:19:49Z",
          "updated_at": "2024-05-18T00:19:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 2119344945,
      "node_id": "IC_kwDOAN28mc5-UqMx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2119344945",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-19T20:03:55Z",
      "updated_at": "2024-05-19T20:03:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Done!",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-2119344945",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "reviewed",
      "id": 2069459429,
      "node_id": "PRR_kwDOAN28mc57WXHl",
      "url": null,
      "actor": null,
      "commit_id": "8839a6c6a654a94c3b4d315f95bb60b1ed8579d6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Almost ready, I just noticed a few more minor issues:\r\n\r\n- Please add the missing Copyright section (via [BIP2: BIP Licensing: Specification](https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki#specification-3)):\r\n  > In all cases, details of the licensing terms must be provided in the Copyright section of the BIP. \r\n\r\nand see the individual comments I left.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-2069459429",
      "submitted_at": "2024-05-21T19:53:16Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "reviewed",
      "id": 2088880432,
      "node_id": "PRR_kwDOAN28mc58gckw",
      "url": null,
      "actor": null,
      "commit_id": "f67f39e985bf8139b6efd112840692f12d816e3b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Changes look good to me. This document now fulfills the BIP formatting requirements.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-2088880432",
      "submitted_at": "2024-05-30T17:04:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "unlabeled",
      "id": 12989159158,
      "node_id": "UNLE_lADOAN28mc5-4gpyzwAAAAMGNtb2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12989159158",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T17:04:44Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "labeled",
      "id": 12989159167,
      "node_id": "LE_lADOAN28mc5-4gpyzwAAAAMGNtb_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12989159167",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T17:04:44Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "reviewed",
      "id": 2094685473,
      "node_id": "PRR_kwDOAN28mc582l0h",
      "url": null,
      "actor": null,
      "commit_id": "f67f39e985bf8139b6efd112840692f12d816e3b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Let’s call this BIP 353. \r\n\r\nPlease amend your document to use the number 353 and add the corresponding table entry to README.mediawiki.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#pullrequestreview-2094685473",
      "submitted_at": "2024-06-03T19:29:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
    },
    {
      "event": "unlabeled",
      "id": 13026094336,
      "node_id": "UNLE_lADOAN28mc5-4gpyzwAAAAMIam0A",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13026094336",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T19:44:59Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "renamed",
      "id": 13026100134,
      "node_id": "RTE_lADOAN28mc5-4gpyzwAAAAMIaoOm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13026100134",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T19:45:35Z",
      "rename": {
        "from": "Add a BIP which resolves human readable names into payment info",
        "to": "Add BIP 353: DNS Payment Instructions"
      }
    },
    {
      "event": "labeled",
      "id": 13026136435,
      "node_id": "LE_lADOAN28mc5-4gpyzwAAAAMIaxFz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13026136435",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T19:49:10Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDhjYTk4MTFjN2M4YjA5MTU5OWRlYTQ5MjEwZWYxYzg4YTk1ZWZlYmE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "tree": {
        "sha": "1dfb59ae10553f11fecd7c03791cdc6dd92fe5f9",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/1dfb59ae10553f11fecd7c03791cdc6dd92fe5f9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/deae64bfd31f6938253c05392aa355bf6d7e7605",
          "sha": "deae64bfd31f6938253c05392aa355bf6d7e7605",
          "html_url": "https://github.com/bitcoin/bips/commit/deae64bfd31f6938253c05392aa355bf6d7e7605"
        }
      ],
      "message": "Add a BIP which resolves human readable names into payment info\n\nUser behavior has clearly indicated a strong demand for the\nresolution of human-readable names into payment instructions. This\nBIP defines a protocol to do so using only the DNS, providing for\nthe ability to query such resolutions privately, while utilizing\nDNSSEC to provide compact and simple to verify proofs of mappings.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2024-06-03T21:17:51Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2024-02-10T22:46:16Z"
      },
      "sha": "8ca9811c7c8b091599dea49210ef1c88a95efeba"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13027098642,
      "node_id": "HRFPE_lADOAN28mc5-4gpyzwAAAAMIecAS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13027098642",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T21:17:57Z"
    },
    {
      "event": "commented",
      "id": 2146140789,
      "node_id": "IC_kwDOAN28mc5_64J1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2146140789",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T21:18:12Z",
      "updated_at": "2024-06-03T21:18:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Done",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1551#issuecomment-2146140789",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1551"
    },
    {
      "event": "comment_deleted",
      "id": 13039621652,
      "node_id": "CDE_lADOAN28mc5-4gpyzwAAAAMJONYU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13039621652",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-04T17:14:45Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485390796",
      "pull_request_review_id": 1874284498,
      "id": 1485390796,
      "node_id": "PRRC_kwDOAN28mc5YiUPM",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]\n+\n+== Examples ==\n+\n+`matt@mattcorallo.com` resolves to\n+`matt.user._bitcoin-payment.mattcorallo.com. 3600 IN TXT\t\"bitcoin:?b12=lno1qsgqmqvgm96frzdg8m0gc6nzeqffvzsqzrxqy32afmr3jn9ggkwg3egfwch2hy0l6jut6vfd8vpsc3h89l6u3dm4q2d6nuamav3w27xvdmv3lpgklhg7l5teypqz9l53hj7zvuaenh34xqsz2sa967yzqkylfu9xtcd5ymcmfp32h083e805y7jfd236w9afhavqqvl8uyma7x77yun4ehe9pnhu2gekjguexmxpqjcr2j822xr7q34p078gzslf9wpwz5y57alxu99s0z2ql0kfqvwhzycqq45ehh58xnfpuek80hw6spvwrvttjrrq9pphh0dpydh06qqspp5uq4gpyt6n9mwexde44qv7lstzzq60nr40ff38u27un6y53aypmx0p4qruk2tf9mjwqlhxak4znvna5y\"`",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 78,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This example contradicts statement above that \"This BIP proposes a standard format for encoding BIP 21 URI schemes in DNS TXT records\", as according to BIP21 onchain address in URI is required not optional component.",
      "created_at": "2024-02-11T00:41:55Z",
      "updated_at": "2024-02-11T00:45:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485390796",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485390796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485463529",
      "pull_request_review_id": 1874303203,
      "id": 1485463529,
      "node_id": "PRRC_kwDOAN28mc5Yil_p",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]\n+\n+== Examples ==\n+\n+`matt@mattcorallo.com` resolves to\n+`matt.user._bitcoin-payment.mattcorallo.com. 3600 IN TXT\t\"bitcoin:?b12=lno1qsgqmqvgm96frzdg8m0gc6nzeqffvzsqzrxqy32afmr3jn9ggkwg3egfwch2hy0l6jut6vfd8vpsc3h89l6u3dm4q2d6nuamav3w27xvdmv3lpgklhg7l5teypqz9l53hj7zvuaenh34xqsz2sa967yzqkylfu9xtcd5ymcmfp32h083e805y7jfd236w9afhavqqvl8uyma7x77yun4ehe9pnhu2gekjguexmxpqjcr2j822xr7q34p078gzslf9wpwz5y57alxu99s0z2ql0kfqvwhzycqq45ehh58xnfpuek80hw6spvwrvttjrrq9pphh0dpydh06qqspp5uq4gpyt6n9mwexde44qv7lstzzq60nr40ff38u27un6y53aypmx0p4qruk2tf9mjwqlhxak4znvna5y\"`",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 78,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485390796,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ha good catch. We should change BIP 21 lol",
      "created_at": "2024-02-11T05:00:00Z",
      "updated_at": "2024-02-11T05:00:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485463529",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485463529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485579674",
      "pull_request_review_id": 1874353998,
      "id": 1485579674,
      "node_id": "PRRC_kwDOAN28mc5YjCWa",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 41,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "dipunm",
        "id": 5099980,
        "node_id": "MDQ6VXNlcjUwOTk5ODA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5099980?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dipunm",
        "html_url": "https://github.com/dipunm",
        "followers_url": "https://api.github.com/users/dipunm/followers",
        "following_url": "https://api.github.com/users/dipunm/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dipunm/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dipunm/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dipunm/subscriptions",
        "organizations_url": "https://api.github.com/users/dipunm/orgs",
        "repos_url": "https://api.github.com/users/dipunm/repos",
        "events_url": "https://api.github.com/users/dipunm/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dipunm/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When do you encounter multiple matching TXT records?\r\n\r\nIs this due to querying twice and getting different results due to TTL?\r\n\r\nOr a malformed TXT record: \"bitcoin:........;bitcoin:......\"\r\n\r\nOr just two independent TXT records with the same key and different values?",
      "created_at": "2024-02-11T11:56:27Z",
      "updated_at": "2024-02-11T11:56:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485579674",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485579674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485600335",
      "pull_request_review_id": 1874374482,
      "id": 1485600335,
      "node_id": "PRRC_kwDOAN28mc5YjHZP",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]\n+\n+== Examples ==\n+\n+`matt@mattcorallo.com` resolves to\n+`matt.user._bitcoin-payment.mattcorallo.com. 3600 IN TXT\t\"bitcoin:?b12=lno1qsgqmqvgm96frzdg8m0gc6nzeqffvzsqzrxqy32afmr3jn9ggkwg3egfwch2hy0l6jut6vfd8vpsc3h89l6u3dm4q2d6nuamav3w27xvdmv3lpgklhg7l5teypqz9l53hj7zvuaenh34xqsz2sa967yzqkylfu9xtcd5ymcmfp32h083e805y7jfd236w9afhavqqvl8uyma7x77yun4ehe9pnhu2gekjguexmxpqjcr2j822xr7q34p078gzslf9wpwz5y57alxu99s0z2ql0kfqvwhzycqq45ehh58xnfpuek80hw6spvwrvttjrrq9pphh0dpydh06qqspp5uq4gpyt6n9mwexde44qv7lstzzq60nr40ff38u27un6y53aypmx0p4qruk2tf9mjwqlhxak4znvna5y\"`",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 78,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485390796,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Or this spec could be altered, that it could be not just BIP21, but also plain BOLT12, for example. Wtih BIP21 there is currently two problems - address reuse (which could be solved with silent addresses in the future) and unability to do micropayments (which are possible onchain only with payjoin, if payer is ok paying more in tx fees than actual amount).",
      "created_at": "2024-02-11T13:59:00Z",
      "updated_at": "2024-02-11T13:59:01Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485600335",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485600335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485631459",
      "pull_request_review_id": 1874404346,
      "id": 1485631459,
      "node_id": "PRRC_kwDOAN28mc5YjO_j",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 41,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485579674,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Two TXT records.",
      "created_at": "2024-02-11T17:15:23Z",
      "updated_at": "2024-02-11T17:15:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485631459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485631459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485632761",
      "pull_request_review_id": 1874405525,
      "id": 1485632761,
      "node_id": "PRRC_kwDOAN28mc5YjPT5",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could also add a note that you could add payjoin parameters to the URI",
      "created_at": "2024-02-11T17:24:36Z",
      "updated_at": "2024-02-11T17:24:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485632761",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485632761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485636789",
      "pull_request_review_id": 1874409195,
      "id": 1485636789,
      "node_id": "PRRC_kwDOAN28mc5YjQS1",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you mean that that would address the address reuse concern? I'm not quite sure how.",
      "created_at": "2024-02-11T17:53:29Z",
      "updated_at": "2024-02-11T17:53:29Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485636789",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485636789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485637091",
      "pull_request_review_id": 1874409399,
      "id": 1485637091,
      "node_id": "PRRC_kwDOAN28mc5YjQXj",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]\n+\n+== Examples ==\n+\n+`matt@mattcorallo.com` resolves to\n+`matt.user._bitcoin-payment.mattcorallo.com. 3600 IN TXT\t\"bitcoin:?b12=lno1qsgqmqvgm96frzdg8m0gc6nzeqffvzsqzrxqy32afmr3jn9ggkwg3egfwch2hy0l6jut6vfd8vpsc3h89l6u3dm4q2d6nuamav3w27xvdmv3lpgklhg7l5teypqz9l53hj7zvuaenh34xqsz2sa967yzqkylfu9xtcd5ymcmfp32h083e805y7jfd236w9afhavqqvl8uyma7x77yun4ehe9pnhu2gekjguexmxpqjcr2j822xr7q34p078gzslf9wpwz5y57alxu99s0z2ql0kfqvwhzycqq45ehh58xnfpuek80hw6spvwrvttjrrq9pphh0dpydh06qqspp5uq4gpyt6n9mwexde44qv7lstzzq60nr40ff38u27un6y53aypmx0p4qruk2tf9mjwqlhxak4znvna5y\"`",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 78,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485390796,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In practice BIP 21 URIs in the wild sometimes don't have an on-chain address. The spec shouldn't mandate it given it's not required to function.",
      "created_at": "2024-02-11T17:55:10Z",
      "updated_at": "2024-02-11T17:55:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485637091",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485637091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485637557",
      "pull_request_review_id": 1874409799,
      "id": 1485637557,
      "node_id": "PRRC_kwDOAN28mc5YjQe1",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "DanGould",
        "id": 8525467,
        "node_id": "MDQ6VXNlcjg1MjU0Njc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8525467?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DanGould",
        "html_url": "https://github.com/DanGould",
        "followers_url": "https://api.github.com/users/DanGould/followers",
        "following_url": "https://api.github.com/users/DanGould/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DanGould/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DanGould/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DanGould/subscriptions",
        "organizations_url": "https://api.github.com/users/DanGould/orgs",
        "repos_url": "https://api.github.com/users/DanGould/repos",
        "events_url": "https://api.github.com/users/DanGould/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DanGould/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A payjoin receiver can substitute the original request's payment output address with a freshly generated one via output substitution in the happy path. Is this what you mean @benthecarman ",
      "created_at": "2024-02-11T17:58:45Z",
      "updated_at": "2024-02-11T18:01:31Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485637557",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485637557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485639627",
      "pull_request_review_id": 1874411728,
      "id": 1485639627,
      "node_id": "PRRC_kwDOAN28mc5YjQ_L",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, the spec here is designed to be usable by lightning/fedimint/cashu/payjoin/silent payments/etc/etc. I'm not quite sure I understand why that's relevant to this particular section.",
      "created_at": "2024-02-11T18:13:16Z",
      "updated_at": "2024-02-11T18:13:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485639627",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485639627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485639826",
      "pull_request_review_id": 1874411962,
      "id": 1485639826,
      "node_id": "PRRC_kwDOAN28mc5YjRCS",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because if you had pay join params with the bitcoin address then you wouldn't reuse the address with people who understand pay join ",
      "created_at": "2024-02-11T18:15:05Z",
      "updated_at": "2024-02-11T18:15:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485639826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485639826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485641401",
      "pull_request_review_id": 1874413317,
      "id": 1485641401,
      "node_id": "PRRC_kwDOAN28mc5YjRa5",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, but in that case couldn't you specify `bitcoin:?payjoin_info=...` and skip the on-chain address entirely? You'd still have the address reuse problem for senders not supporting payjoin.",
      "created_at": "2024-02-11T18:25:17Z",
      "updated_at": "2024-02-11T18:25:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485641401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485641401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485646408",
      "pull_request_review_id": 1874417677,
      "id": 1485646408,
      "node_id": "PRRC_kwDOAN28mc5YjSpI",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "DanGould",
        "id": 8525467,
        "node_id": "MDQ6VXNlcjg1MjU0Njc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8525467?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DanGould",
        "html_url": "https://github.com/DanGould",
        "followers_url": "https://api.github.com/users/DanGould/followers",
        "following_url": "https://api.github.com/users/DanGould/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DanGould/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DanGould/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DanGould/subscriptions",
        "organizations_url": "https://api.github.com/users/DanGould/orgs",
        "repos_url": "https://api.github.com/users/DanGould/repos",
        "events_url": "https://api.github.com/users/DanGould/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DanGould/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A sender requires some address to form a request including the fallback original psbt before the receiver responds with the payjoin psbt including their utxo, that way the sender can sign and complete the payjoin, or the receiver can broadcast the \"original\" transaction and hasn't revealed their utxo without a cost. This prevents probing attacks where a sender tries to see receiver utxos for free.",
      "created_at": "2024-02-11T19:00:55Z",
      "updated_at": "2024-02-11T19:00:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485646408",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485646408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485826703",
      "pull_request_review_id": 1874669105,
      "id": 1485826703,
      "node_id": "PRRC_kwDOAN28mc5Yj-qP",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 41,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485579674,
      "user": {
        "login": "jojkaart",
        "id": 771803,
        "node_id": "MDQ6VXNlcjc3MTgwMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/771803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jojkaart",
        "html_url": "https://github.com/jojkaart",
        "followers_url": "https://api.github.com/users/jojkaart/followers",
        "following_url": "https://api.github.com/users/jojkaart/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jojkaart/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jojkaart/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jojkaart/subscriptions",
        "organizations_url": "https://api.github.com/users/jojkaart/orgs",
        "repos_url": "https://api.github.com/users/jojkaart/repos",
        "events_url": "https://api.github.com/users/jojkaart/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jojkaart/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I had to guess at the rationale, this is meant to protect against the particular kind of configuration error where you intend to update the record, but mistakenly end up adding another instead. This protects against bitcoins getting sent to lost or compromised addresses.",
      "created_at": "2024-02-12T07:47:56Z",
      "updated_at": "2024-02-12T07:47:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485826703",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485826703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485880079",
      "pull_request_review_id": 1874756233,
      "id": 1485880079,
      "node_id": "PRRC_kwDOAN28mc5YkLsP",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 73,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasnick",
        "id": 2582071,
        "node_id": "MDQ6VXNlcjI1ODIwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2582071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasnick",
        "html_url": "https://github.com/jonasnick",
        "followers_url": "https://api.github.com/users/jonasnick/followers",
        "following_url": "https://api.github.com/users/jonasnick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasnick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasnick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasnick/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasnick/orgs",
        "repos_url": "https://api.github.com/users/jonasnick/repos",
        "events_url": "https://api.github.com/users/jonasnick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasnick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "File not found",
      "created_at": "2024-02-12T08:53:50Z",
      "updated_at": "2024-02-12T08:53:51Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1485880079",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1485880079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486077116",
      "pull_request_review_id": 1875070726,
      "id": 1486077116,
      "node_id": "PRRC_kwDOAN28mc5Yk7y8",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 35,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be useful to link to an RFC detailing what additional data should be signed and verified in those cases, does that exist?",
      "created_at": "2024-02-12T11:50:53Z",
      "updated_at": "2024-02-12T12:08:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486077116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486077116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486077455",
      "pull_request_review_id": 1875070726,
      "id": 1486077455,
      "node_id": "PRRC_kwDOAN28mc5Yk74P",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this really worth supporting (instead of restricting to ASCII characters)? This forces all clients to potentially support those encodings, which is a likely source of issues...",
      "created_at": "2024-02-12T11:51:16Z",
      "updated_at": "2024-02-12T12:08:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486077455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486077455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486092737",
      "pull_request_review_id": 1875070726,
      "id": 1486092737,
      "node_id": "PRRC_kwDOAN28mc5Yk_nB",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Out of curiosity, why the leading underscore (`_bitcoin-payment`), is that a best practice?",
      "created_at": "2024-02-12T12:06:27Z",
      "updated_at": "2024-02-12T12:08:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486092737",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486092737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486093408",
      "pull_request_review_id": 1875070726,
      "id": 1486093408,
      "node_id": "PRRC_kwDOAN28mc5Yk_xg",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 6,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can use the following here, thanks!\r\n```suggestion\r\n          Bastien Teinturier <bastien@acinq.fr>\r\n```",
      "created_at": "2024-02-12T12:07:10Z",
      "updated_at": "2024-02-12T12:08:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486093408",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486093408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486094253",
      "pull_request_review_id": 1875070726,
      "id": 1486094253,
      "node_id": "PRRC_kwDOAN28mc5Yk_-t",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 73,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485880079,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess that's because Matt used the link that will work once that bLIP is merged, since we expect bLIPs to be merged more quickly than BIPs :)",
      "created_at": "2024-02-12T12:08:01Z",
      "updated_at": "2024-02-12T12:08:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486094253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486094253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486096066",
      "pull_request_review_id": 1875101498,
      "id": 1486096066,
      "node_id": "PRRC_kwDOAN28mc5YlAbC",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 73,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485880079,
      "user": {
        "login": "dzdidi",
        "id": 5725222,
        "node_id": "MDQ6VXNlcjU3MjUyMjI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5725222?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dzdidi",
        "html_url": "https://github.com/dzdidi",
        "followers_url": "https://api.github.com/users/dzdidi/followers",
        "following_url": "https://api.github.com/users/dzdidi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dzdidi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dzdidi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dzdidi/subscriptions",
        "organizations_url": "https://api.github.com/users/dzdidi/orgs",
        "repos_url": "https://api.github.com/users/dzdidi/repos",
        "events_url": "https://api.github.com/users/dzdidi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dzdidi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not merged yet https://github.com/lightning/blips/pull/32/files",
      "created_at": "2024-02-12T12:09:47Z",
      "updated_at": "2024-02-12T12:09:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486096066",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486096066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486114025",
      "pull_request_review_id": 1875130138,
      "id": 1486114025,
      "node_id": "PRRC_kwDOAN28mc5YlEzp",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "dzdidi",
        "id": 5725222,
        "node_id": "MDQ6VXNlcjU3MjUyMjI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5725222?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dzdidi",
        "html_url": "https://github.com/dzdidi",
        "followers_url": "https://api.github.com/users/dzdidi/followers",
        "following_url": "https://api.github.com/users/dzdidi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dzdidi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dzdidi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dzdidi/subscriptions",
        "organizations_url": "https://api.github.com/users/dzdidi/orgs",
        "repos_url": "https://api.github.com/users/dzdidi/repos",
        "events_url": "https://api.github.com/users/dzdidi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dzdidi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> SHOULD be rotated as regularly as possible to reduce address reuse\r\n\r\nThere is no mention of caching which may happen on multiple layers. TTLs (label specific) can be leveraged to minimize potential non-desired reuse. ",
      "created_at": "2024-02-12T12:25:56Z",
      "updated_at": "2024-02-12T12:25:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486114025",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486114025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486287099",
      "pull_request_review_id": 1875408394,
      "id": 1486287099,
      "node_id": "PRRC_kwDOAN28mc5YlvD7",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": null,
      "user": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be very helpful if this section was extended with a number of concrete use cases and also mention which use cases are not covered or not a good fit.\r\n\r\nAt first this seems like an interesting solution to display domain names instead of addresses on hardware wallets for improved security, but for exchanges/brokers/merchants, they'd need a unique address per user and per deposit. For this use-case this does not seem to be a good fit. Downsides / blockers could be:\r\n\r\n- if it is generated on the fly during e.g. a deposit action on an exchange or a shop checkout of a merchant, the TXT record might not propagate quickly enough for the lookup to succeed\r\n- publishing a new address after the previous one has been used also might not propagate in time to prevent re-using an address\r\n- bad privacy for the merchant/exchange\r\n- not quite sure if it is practical to have a lot of txt records for services that serve a lot of users\r\n\r\n",
      "created_at": "2024-02-12T14:47:06Z",
      "updated_at": "2024-02-12T14:47:06Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486287099",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486287099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486583187",
      "pull_request_review_id": 1875885568,
      "id": 1486583187,
      "node_id": "PRRC_kwDOAN28mc5Ym3WT",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1486092737,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yea, just makes it less likely to collide with any existing actual domain names that exist in the wild.",
      "created_at": "2024-02-12T18:11:47Z",
      "updated_at": "2024-02-12T18:11:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486583187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486583187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486586764",
      "pull_request_review_id": 1875891492,
      "id": 1486586764,
      "node_id": "PRRC_kwDOAN28mc5Ym4OM",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 35,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1486077116,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, certainly not at a high level, I can add a few words just saying that all the CNAME/DNAME records as well as the records they point to must be signed.",
      "created_at": "2024-02-12T18:15:19Z",
      "updated_at": "2024-02-12T18:15:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486586764",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486586764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486590452",
      "pull_request_review_id": 1875897820,
      "id": 1486590452,
      "node_id": "PRRC_kwDOAN28mc5Ym5H0",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1486077455,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe not, I mean punycode itself is pretty easy, but dealing with homograph attacks is...quite nontrivial. So, indeed, I'm down to just remove all the non-ASCII support.",
      "created_at": "2024-02-12T18:18:37Z",
      "updated_at": "2024-02-12T18:18:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486590452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486590452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486591143",
      "pull_request_review_id": 1875898962,
      "id": 1486591143,
      "node_id": "PRRC_kwDOAN28mc5Ym5Sn",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 41,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485579674,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Honestly I didn't have a specific issue in mind more a general feeling that issues could crop up, this is a good example of one such issue.",
      "created_at": "2024-02-12T18:19:18Z",
      "updated_at": "2024-02-12T18:19:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486591143",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486591143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486623727",
      "pull_request_review_id": 1875954635,
      "id": 1486623727,
      "node_id": "PRRC_kwDOAN28mc5YnBPv",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485632761,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rewrote this a bit, let me know if it covers the payjoin concern sufficiently (I don't want to mention any specific exemptions here).",
      "created_at": "2024-02-12T18:50:31Z",
      "updated_at": "2024-02-12T18:50:31Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486623727",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486623727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": 51,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486711955",
      "pull_request_review_id": 1876118353,
      "id": 1486711955,
      "node_id": "PRRC_kwDOAN28mc5YnWyT",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1486287099,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> if it is generated on the fly during e.g. a deposit action on an exchange or a shop checkout of a merchant, the TXT record might not propagate quickly enough for the lookup to succeed\r\n\r\nThis would violate `Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available.`\r\n\r\n> publishing a new address after the previous one has been used also might not propagate in time to prevent re-using an address\r\n\r\nThat's okay. Address reuse prevention is probabilistic anyway.\r\n\r\n> bad privacy for the merchant/exchange\r\n\r\nHmm? If you're a merchant or exchange, you're probably already using a domain anyway :).\r\n\r\n> not quite sure if it is practical to have a lot of txt records for services that serve a lot of users\r\n\r\nYes, please see https://github.com/lightning/blips/pull/32 and its discussion of wildcard records :)",
      "created_at": "2024-02-12T20:05:51Z",
      "updated_at": "2024-02-12T20:05:51Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1486711955",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1486711955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1488720328",
      "pull_request_review_id": 1879133212,
      "id": 1488720328,
      "node_id": "PRRC_kwDOAN28mc5YvBHI",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1486287099,
      "user": {
        "login": "starius",
        "id": 920155,
        "node_id": "MDQ6VXNlcjkyMDE1NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/920155?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starius",
        "html_url": "https://github.com/starius",
        "followers_url": "https://api.github.com/users/starius/followers",
        "following_url": "https://api.github.com/users/starius/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starius/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starius/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starius/subscriptions",
        "organizations_url": "https://api.github.com/users/starius/orgs",
        "repos_url": "https://api.github.com/users/starius/repos",
        "events_url": "https://api.github.com/users/starius/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starius/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> That's okay. Address reuse prevention is probabilistic anyway.\r\n\r\n`.well-known` approach can prevent address reuse completely, if HTTP server generates new address for every request.",
      "created_at": "2024-02-13T23:36:11Z",
      "updated_at": "2024-02-13T23:36:12Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1488720328",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1488720328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1493759316",
      "pull_request_review_id": 1887231072,
      "id": 1493759316,
      "node_id": "PRRC_kwDOAN28mc5ZCPVU",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't quite understand the scheme here. What is the purpose of the \"user\" label? (Future protocol expansions where something besides \"users\" can be identified?). Also why not order the labels with the underscores more like existing schemes for example, TLSA:\r\n\r\n`_443._tcp.mailhardener.com TLSA ...`\r\n\r\nSo I'd expect something like:\r\n\r\n`_bitcoin-payment.matt.mattcorallo.com TXT ...`",
      "created_at": "2024-02-18T12:51:35Z",
      "updated_at": "2024-02-18T12:51:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1493759316",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1493759316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1493759785",
      "pull_request_review_id": 1887231567,
      "id": 1493759785,
      "node_id": "PRRC_kwDOAN28mc5ZCPcp",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "in_reply_to_id": 1493759316,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(see also https://github.com/james-stevens/wallet-ids-in-dns)",
      "created_at": "2024-02-18T12:54:23Z",
      "updated_at": "2024-02-18T12:54:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1493759785",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1493759785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1494339095",
      "pull_request_review_id": 1888085458,
      "id": 1494339095,
      "node_id": "PRRC_kwDOAN28mc5ZEc4X",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "in_reply_to_id": 1493759316,
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@pinheadmz \r\n\r\n> I'd expect something like:\r\n>\r\n> `_bitcoin-payment.matt.mattcorallo.com TXT ...`\r\n\r\nI'm not DNS expert, but the Wikipedia article about [wildcard DNS entries](https://en.wikipedia.org/wiki/Wildcard_DNS_record) says, \"A wildcard DNS record is specified by using a `*` as the leftmost label (part) of a domain name, e.g. `*.example.com`.\"  I think @TheBlueMatt wants to allow wildcards for the username portion for LN (see the proposed BIP21 parameter `omlookup` (onion message lookup) in [this commit](https://github.com/lightning/bolts/pull/1136/commits/5809dfd1fce7fe1233812acb25bd37b908318968)).  If only the leftmost label can be a wildcard, then `_bitcoin-payment.*.mattcorallo.com` wouldn't be allowed.",
      "created_at": "2024-02-19T10:30:16Z",
      "updated_at": "2024-02-19T10:30:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1494339095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1494339095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1494913532",
      "pull_request_review_id": 1888995385,
      "id": 1494913532,
      "node_id": "PRRC_kwDOAN28mc5ZGpH8",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 28,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "in_reply_to_id": null,
      "user": {
        "login": "sbddesign",
        "id": 2414177,
        "node_id": "MDQ6VXNlcjI0MTQxNzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2414177?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sbddesign",
        "html_url": "https://github.com/sbddesign",
        "followers_url": "https://api.github.com/users/sbddesign/followers",
        "following_url": "https://api.github.com/users/sbddesign/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sbddesign/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sbddesign/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sbddesign/subscriptions",
        "organizations_url": "https://api.github.com/users/sbddesign/orgs",
        "repos_url": "https://api.github.com/users/sbddesign/repos",
        "events_url": "https://api.github.com/users/sbddesign/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sbddesign/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does this mean that a wallet should store the bitcoin payment instructions locally? e.g. fetch DNS record for `matt@mattcorallo.com`, receive BOLT 12 offer, and then store that offer locally so no further DNS lookup is required (unless one day payment to the offer fails)?",
      "created_at": "2024-02-19T18:26:25Z",
      "updated_at": "2024-02-19T18:26:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1494913532",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1494913532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1496287484",
      "pull_request_review_id": 1891149499,
      "id": 1496287484,
      "node_id": "PRRC_kwDOAN28mc5ZL4j8",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 28,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "in_reply_to_id": 1494913532,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Its more a reference to wallets potentially using the DNS lookup mechanism when they have a QR code containing an offer, or otherwise build a UX around the DNS lookup mechanism when the UX would be equally compelling using offers/addresses directly. Wallets MUST NOT do that as it introduces additional trust that is simply not required.",
      "created_at": "2024-02-20T18:16:58Z",
      "updated_at": "2024-02-20T18:16:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1496287484",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1496287484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1500335300",
      "pull_request_review_id": 1897590080,
      "id": 1500335300,
      "node_id": "PRRC_kwDOAN28mc5ZbUzE",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 43,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "in_reply_to_id": null,
      "user": {
        "login": "azuchi",
        "id": 1539047,
        "node_id": "MDQ6VXNlcjE1MzkwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1539047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/azuchi",
        "html_url": "https://github.com/azuchi",
        "followers_url": "https://api.github.com/users/azuchi/followers",
        "following_url": "https://api.github.com/users/azuchi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/azuchi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/azuchi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/azuchi/subscriptions",
        "organizations_url": "https://api.github.com/users/azuchi/orgs",
        "repos_url": "https://api.github.com/users/azuchi/repos",
        "events_url": "https://api.github.com/users/azuchi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/azuchi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Recently, a vulnerability related to DNSSEC design, KeyTrap (CVE-2023-50387), was disclosed.\r\n\r\nhttps://www.athene-center.de/en/keytrap\r\n\r\nIs this requirement not affected by this vulnerability?  Isn't it necessary to consider mitigation measures that existing resolvers take?\r\n",
      "created_at": "2024-02-23T08:24:40Z",
      "updated_at": "2024-02-23T08:24:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1500335300",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1500335300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1503149340",
      "pull_request_review_id": 1901755739,
      "id": 1503149340,
      "node_id": "PRRC_kwDOAN28mc5ZmD0c",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 43,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "83c1343a03ac83dea87841fbe6294a6797e5387e",
      "in_reply_to_id": 1500335300,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "KeyTrap observed that validation of DNSSEC signatures can be superlinear in the number of signatures/keys. The mitigations that ~all validators have deployed addresses that, and should be used here. However, \"be up to date with the latest security fixes\" is a general thing and doesn't really need to be specified here :)",
      "created_at": "2024-02-26T19:00:23Z",
      "updated_at": "2024-02-26T19:00:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1503149340",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1503149340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514043881",
      "pull_request_review_id": 1919086546,
      "id": 1514043881,
      "node_id": "PRRC_kwDOAN28mc5aPnnp",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\n+\n+=== Rotation ===\n+\n+On-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotating to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 75,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "09db33a98a6ed4a9b60cf430356dbe85c9ae4ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n\r\n```suggestion\r\nOn-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotated to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.\r\n```",
      "created_at": "2024-03-06T08:41:59Z",
      "updated_at": "2024-03-06T08:46:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1514043881",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514043881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514053639",
      "pull_request_review_id": 1919086546,
      "id": 1514053639,
      "node_id": "PRRC_kwDOAN28mc5aPqAH",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\n+\n+=== Rotation ===\n+\n+On-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotating to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.\n+\n+=== Alternatives ===\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+==== DNS Rather than blockchain-based solutions ====\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+==== DNS Rather than HTTP-based solutions ====\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+==== Private DNS Querying ====\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "09db33a98a6ed4a9b60cf430356dbe85c9ae4ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\r\n\r\nI don't understand what you mean here, can you detail?",
      "created_at": "2024-03-06T08:45:59Z",
      "updated_at": "2024-03-06T08:46:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1514053639",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514053639"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514054271",
      "pull_request_review_id": 1919086546,
      "id": 1514054271,
      "node_id": "PRRC_kwDOAN28mc5aPqJ_",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\n+\n+=== Rotation ===\n+\n+On-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotating to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.\n+\n+=== Alternatives ===\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+==== DNS Rather than blockchain-based solutions ====\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+==== DNS Rather than HTTP-based solutions ====\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+==== Private DNS Querying ====\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]\n+\n+=== DNS Enumeration ===\n+\n+In most cases where payments are accepted from any third-party, user enumeration is practical by simply attempting to send small value payments to a list of possible user names. However, storing all valid users in the DNS directly may make such enumeration marginally more practical. Thus, those wishing to avoid such enumeration should carefully ensure all DNS names return valid payment instructions. Note when doing so that wildcard records are identified as such by the DNSSEC RRSIG labels counter and are differentiable from non-wildcard records.\n+\n+== Examples ==\n+\n+`matt@mattcorallo.com` resolves to\n+`matt.user._bitcoin-payment.mattcorallo.com. 3600 IN TXT\t\"bitcoin:?lno=lno1qsgqmqvgm96frzdg8m0gc6nzeqffvzsqzrxqy32afmr3jn9ggkwg3egfwch2hy0l6jut6vfd8vpsc3h89l6u3dm4q2d6nuamav3w27xvdmv3lpgklhg7l5teypqz9l53hj7zvuaenh34xqsz2sa967yzqkylfu9xtcd5ymcmfp32h083e805y7jfd236w9afhavqqvl8uyma7x77yun4ehe9pnhu2gekjguexmxpqjcr2j822xr7q34p078gzslf9wpwz5y57alxu99s0z2ql0kfqvwhzycqq45ehh58xnfpuek80hw6spvwrvttjrrq9pphh0dpydh06qqspp5uq4gpyt6n9mwexde44qv7lstzzq60nr40ff38u27un6y53aypmx0p4qruk2tf9mjwqlhxak4znvna5y\"`\n+Note that `lno` indicates a value containing a lightning BOLT12 offer.\n+\n+== Reference Implementations ==\n+* A DNSSEC proof generation and validation implementation can be found at https://git.bitcoin.ninja/index.cgi?p=dnssec-prover;a=summary\n+* A lightning-specific name to payment instruction resolver can be found at https://git.bitcoin.ninja/index.cgi?p=lightning-resolver;a=summary\n+* Reference implementations for parsing the URI contents can be found in [[bip-0021.mediawiki|BIP 21]].\n+\n+== Acknowledgements ==\n+\n+Thanks to Rusty Russel for suggesting the concrete address rotation suggestions.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 114,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "09db33a98a6ed4a9b60cf430356dbe85c9ae4ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThanks to Rusty Russell for the concrete address rotation suggestions.\r\n```",
      "created_at": "2024-03-06T08:46:27Z",
      "updated_at": "2024-03-06T08:46:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1514054271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514054271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514679618",
      "pull_request_review_id": 1920063119,
      "id": 1514679618,
      "node_id": "PRRC_kwDOAN28mc5aSC1C",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\n+\n+=== Rotation ===\n+\n+On-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotating to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.\n+\n+=== Alternatives ===\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+==== DNS Rather than blockchain-based solutions ====\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+==== DNS Rather than HTTP-based solutions ====\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+==== Private DNS Querying ====\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "09db33a98a6ed4a9b60cf430356dbe85c9ae4ec7",
      "in_reply_to_id": 1514053639,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Drawback (b) is \"revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment\". I added a few additional words here, let me know if that clarified it.",
      "created_at": "2024-03-06T15:23:30Z",
      "updated_at": "2024-03-06T15:23:31Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1514679618",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514679618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514696004",
      "pull_request_review_id": 1920088113,
      "id": 1514696004,
      "node_id": "PRRC_kwDOAN28mc5aSG1E",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\n+\n+=== Rotation ===\n+\n+On-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotating to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.\n+\n+=== Alternatives ===\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+==== DNS Rather than blockchain-based solutions ====\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+==== DNS Rather than HTTP-based solutions ====\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+==== Private DNS Querying ====\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "09db33a98a6ed4a9b60cf430356dbe85c9ae4ec7",
      "in_reply_to_id": 1514053639,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is much clearer, thanks!",
      "created_at": "2024-03-06T15:32:52Z",
      "updated_at": "2024-03-06T15:32:53Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1514696004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1514696004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1560397314",
      "pull_request_review_id": 1993230868,
      "id": 1560397314,
      "node_id": "PRRC_kwDOAN28mc5dAcYC",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "in_reply_to_id": null,
      "user": {
        "login": "nickfarrow",
        "id": 24557779,
        "node_id": "MDQ6VXNlcjI0NTU3Nzc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/24557779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nickfarrow",
        "html_url": "https://github.com/nickfarrow",
        "followers_url": "https://api.github.com/users/nickfarrow/followers",
        "following_url": "https://api.github.com/users/nickfarrow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nickfarrow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nickfarrow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nickfarrow/subscriptions",
        "organizations_url": "https://api.github.com/users/nickfarrow/orgs",
        "repos_url": "https://api.github.com/users/nickfarrow/repos",
        "events_url": "https://api.github.com/users/nickfarrow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nickfarrow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "By only rotating the onchain address after receiving a payment, anyone with the human readable name can continually poll your address(es) and monitor the onchain transactions you receive.\r\n\r\nIt requires a more active attack on privacy, but still very easy.\r\n\r\nI still think it is worthwhile to include onchain, it's nice to support any BIP21 type. But could discourage onchain in favour of silent payments / BOLT12. ",
      "created_at": "2024-04-11T03:40:14Z",
      "updated_at": "2024-04-11T03:40:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1560397314",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1560397314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1566240679",
      "pull_request_review_id": 2001842793,
      "id": 1566240679,
      "node_id": "PRRC_kwDOAN28mc5dWu-n",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "in_reply_to_id": 1560397314,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I still think it is worthwhile to include onchain, it's nice to support any BIP21 type. But could discourage onchain in favour of silent payments / BOLT12.\r\n\r\nThat's definitely the goal.",
      "created_at": "2024-04-15T18:03:46Z",
      "updated_at": "2024-04-15T18:03:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1566240679",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1566240679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583055237",
      "pull_request_review_id": 2028451816,
      "id": 1583055237,
      "node_id": "PRRC_kwDOAN28mc5eW4GF",
      "diff_hunk": "@@ -0,0 +1,118 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 10,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d618202ed00b1481d4938bcbcd0d6b27753df6f5",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The preamble is missing mandatory headers. Please add `Comments-URI` and `License`. If this BIP has meanwhile been posted to the mailing list, it would also be great if you could add a link to that and the delving discussion per the `Post-History` header.",
      "created_at": "2024-04-29T13:03:01Z",
      "updated_at": "2024-04-29T13:07:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1583055237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583055237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608850220",
      "pull_request_review_id": 2069459429,
      "id": 1608850220,
      "node_id": "PRRC_kwDOAN28mc5f5Rss",
      "diff_hunk": "@@ -0,0 +1,125 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+  License: CC0-1.0\n+  Post-History: 2024-02-13: https://groups.google.com/g/bitcoindev/c/uATaflkYglQ [bitcoin-dev] Mapping Human-Readable Names to Payment Instructions\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 74,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "8839a6c6a654a94c3b4d315f95bb60b1ed8579d6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThere are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between email addresses on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\r\n```",
      "created_at": "2024-05-21T19:22:43Z",
      "updated_at": "2024-05-21T19:53:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1608850220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608850220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608852211",
      "pull_request_review_id": 2069459429,
      "id": 1608852211,
      "node_id": "PRRC_kwDOAN28mc5f5SLz",
      "diff_hunk": "@@ -0,0 +1,125 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+  License: CC0-1.0\n+  Post-History: 2024-02-13: https://groups.google.com/g/bitcoindev/c/uATaflkYglQ [bitcoin-dev] Mapping Human-Readable Names to Payment Instructions\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\n+\n+=== Rotation ===\n+\n+On-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotated to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 78,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "8839a6c6a654a94c3b4d315f95bb60b1ed8579d6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now that BIP352 is merged, you could link to it:\r\n\r\n```suggestion\r\nOn-chain addresses which are re-used (i.e. not including schemes like [[bip-0352.mediawiki|Silent Payments]])  need to be rotated to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.\r\n```",
      "created_at": "2024-05-21T19:24:52Z",
      "updated_at": "2024-05-21T19:53:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1608852211",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608852211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608855535",
      "pull_request_review_id": 2069459429,
      "id": 1608855535,
      "node_id": "PRRC_kwDOAN28mc5f5S_v",
      "diff_hunk": "@@ -0,0 +1,125 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien Teinturier <bastien@acinq.fr>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+  License: CC0-1.0\n+  Post-History: 2024-02-13: https://groups.google.com/g/bitcoindev/c/uATaflkYglQ [bitcoin-dev] Mapping Human-Readable Names to Payment Instructions\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all such records and the ultimate records pointed to by them are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+Note that because resolvers are not required to support resolving non-ASCII identifiers, wallets SHOULD avoid using non-ASCII identifiers.\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers. Wallets which do not take any such precautions MUST instead display non-ASCII user and domain identifiers using their raw punycode. As such, wallets SHOULD NOT create identifiers which are not entirely printable ASCII.\n+\n+While clients MAY cache the payment instructions they receive from the DNS, clients MUST NOT cache the payment instructions received from the DNS for longer than the TTL provided by their DNS resolver, and further MUST NOT cache the payment instructions for longer than the lowest initial TTL (which is signed as a part of DNSSEC signatures) received in the full DNSSEC chain leading from the DNS root to the resolved TXT record.\n+\n+=== Address Reuse ===\n+\n+Payment instructions with on-chain addresses which will be re-used SHOULD be rotated as regularly as possible to reduce address reuse. Such payment instructions SHOULD also use a relatively short DNS TTL to ensure regular rotation takes effect quickly. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+Payment instructions which do contain on-chain addresses which will be re-used SHOULD be rotated after any transaction to such an address is confirmed on-chain.\n+\n+=== Display ===\n+\n+Wallets SHOULD parse recipient information in the form `user`@`domain` or ₿`user`@`domain` and resolve such entry into recipient information using the above record. Similarly, wallets accepting payment information from external devices (e.g. hardware wallets) SHOULD accept RFC 9102-formatted proofs (as a series of unsorted `AuthenticationChain` records) and, if they verify, SHOULD display the recipient in the form ₿`user`@`domain`. For the avoidance of doubt, the ₿ is *not* included in the DNS label which is resolved.\n+\n+Wallets providing users the ability to \"copy\" their address information generally SHOULD copy the underlying URI directly in order to avoid the DNS indirection. However, wallets providing users the ability to copy their human-readable address information MUST include the ₿ prefix (i.e. copy it in the form ₿`user`@`domain`).\n+\n+== Rationale ==\n+\n+=== Display ===\n+\n+There are several ways in which human-readable payment instructions could be displayed in wallets. In order to ensure compatibility with existing human-readable names schemes, @ is used as the separator between the `user` and `domain` parts. However, simply using the @ separator can lead to confusion between emails on a given domain and payment instructions on a domain. In order to somewhat reduce the incidence of such confusion, a ₿ prefix is used.\n+\n+=== Rotation ===\n+\n+On-chain addresses which are re-used (i.e. not including schemes like Silent Payments) need to be rotated to avoid contributing substantially to address reuse. However, rotating them on a timer or any time a transaction enters the mempool could lead to substantial overhead from excess address generation. Instead, rotating addresses any time a transaction is confirmed on-chain ensures address rotation happens often while bounding the maximum number of addresses needed to one per block, which grows very slowly and will not generate an address set too large to handle while scanning the chain going forward.\n+\n+=== Alternatives ===\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+==== DNS Rather than blockchain-based solutions ====\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 86,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "8839a6c6a654a94c3b4d315f95bb60b1ed8579d6",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nFinally, it is worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\r\n```",
      "created_at": "2024-05-21T19:28:08Z",
      "updated_at": "2024-05-21T19:53:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1608855535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608855535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608867723",
      "pull_request_review_id": 2069459429,
      "id": 1608867723,
      "node_id": "PRRC_kwDOAN28mc5f5V-L",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 73,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485880079,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As mentioned above the page is 404, but also in mediawiki format, links are encoded `[[url|name]]` instead of `[[name|url]]`.\r\n\r\n```suggestion\r\nLightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[https://github.com/lightning/blips/blob/master/blip-0032.md|BLIP 32]]\r\n```",
      "created_at": "2024-05-21T19:40:57Z",
      "updated_at": "2024-05-21T19:53:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1608867723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1608867723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1617821248",
      "pull_request_review_id": 2083733843,
      "id": 1617821248,
      "node_id": "PRRC_kwDOAN28mc5gbf5A",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: DNS Payment Instructions\n+  Author: Matt Corallo <bipxxx@bluematt.me>\n+          Bastien (once I confirm he wants to be listed here, but its his idea)\n+  Comments-Summary: No comments yet.\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-02-10\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a standard format for encoding [[bip-0021.mediawiki|BIP 21]] URI schemes in DNS TXT records.\n+\n+==Motivation==\n+Various Bitcoin and other cryptocurrency applications have developed human-readable names for payment instructions over time, with marketplace adoption signaling strong demand for it from users.\n+\n+The DNS provides a standard, global, hierarchical namespace mapping human-readable labels to records of various forms. Using DNSSEC, the DNS provides cryptographic guarantees using a straightforward PKI which follows the hierarchical nature of the DNS, allowing for stateless and even offline validation of DNS records from a single trusted root.\n+\n+Further, because DNS queries are generally proxied through ISP-provided or other resolvers, DNS queries usually do not directly expose the queryer's IP address. Further, because of the prevalence of open resolvers, the simplicity of the protocol, and broad availability of DNS recursive resolver implementations, finding a proxy for DNS records is trivial.\n+\n+Thus, using TXT records to store Bitcoin payment instructions allows for human-readable Bitcoin payment destinations which can be trivially verified on hardware wallets and which can be resolved relatively privately.\n+\n+==Specification==\n+\n+=== General rules for handling ===\n+Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead.\n+\n+=== Records ===\n+Payment instructions are indexed by both a user and a domain. Instructions for a given `user` and `domain` are stored at `user`.user._bitcoin-payment.`domain` in a single TXT record.\n+\n+All payment instructions MUST be DNSSEC-signed.\n+\n+Payment instructions MAY resolve through CNAME or DNAME records as long as all relevant records are DNSSEC signed.\n+\n+User and domain names which are not expressible using standard printable ASCII MUST be encoded using the punycode IDN encoding defined in [[https://datatracker.ietf.org/doc/html/rfc3492|RFC 3492]] and [[https://datatracker.ietf.org/doc/html/rfc5891|RFC 5891]].\n+\n+=== Resolution ===\n+\n+Clients resolving Bitcoin payment instructions MUST ignore any TXT records at the same label which do not begin with (ignoring case) \"bitcoin:\". Resolvers encountering multiple \"bitcoin:\"-matching TXT records at the same label MUST treat the records as invalid and refuse to use any payment instructions therein.\n+\n+Clients resolving Bitcoin payment instructions MUST fully validate DNSSEC signatures leading to the DNS root (including any relevant CNAME or DNAME records) and MUST NOT accept DNSSEC signatures which use SHA-1 or RSA with keys shorter than 1024 bits. Resolvers MAY accept SHA-1 DS records.\n+\n+Clients resolving Bitcoin payment instructions MUST NOT trust a remote resolver to validate DNSSEC records on their behalf.\n+\n+Clients resolving Bitcoin payment instructions MUST support resolving through CNAME or DNAME records.\n+\n+Resolvers MAY support resolving non-ASCII user and domain identifiers. Resolvers which do support non-ASCII user and domain identifiers MUST take precautions to prevent homograph attacks and SHOULD consider denying paste functionality when entering non-ASCII identifiers.\n+\n+=== Address Reuse ===\n+Payment instructions with on-chain addresses SHOULD be rotated as regularly as possible to reduce address reuse. In cases where this is not practical, payment instructions SHOULD NOT contain on-chain addresses (i.e. the URI path SHOULD be empty).\n+\n+== Rationale ==\n+\n+There are many existing schemes to resolve human-readable names to cryptocurrency payment instructions. Sadly, these current schemes suffer from a myriad of drawbacks, including (a) lacking succinct proofs of namespace to public key mappings, (b) revealing sender IP addresses to recipients or other intermediaries as a side-effect of payment, (c) relying on the bloated TLS Certificate Authority infrastructure, or (d) lacking open access, not allowing anyone to create a namespace mapping.\n+\n+=== DNS Rather than blockchain-based solutions ===\n+There are many blockchain-based alternatives to the DNS which feature better censorship-resistance and, in many cases, security. However, here we chose to use the standard ICANN-managed DNS namespace as many blockchain-based schemes suffer from (a), above (though in some cases this could be addressed with cryptographic SNARK schemes). Further, because they do not have simple client-side querying ability, many of these schemes use trusted intermediaries which resolve names on behalf of clients. This reintroduces drawbacks (b) and often (c) as well.\n+\n+Finally, its worth noting that none of the blockchain-based alternatives to the DNS have had material adoption outside of their specific silos, and committing Bitcoin wallets to rely on a separate system which doesn't see broad adoption may not be sustainable.\n+\n+=== DNS Rather than HTTP-based solutions ===\n+HTTP(s)-based payment instruction resolution protocols suffer from drawbacks (a), (b), and (c), above, and generally shouldn't be considered a serious alternative for payment instruction resolution.\n+\n+=== Private DNS Querying ===\n+While public recursive DNS resolvers are very common (e.g. 1.1.1.1, 8.8.8.8, and 9.9.9.9), using such resolvers directly (even after validating DNSSEC signatures) introduces drawback (b), at least in regard to a centralized intermediary. Resolving payment instructions recursively locally would instead introduce drawback (b) directly to the recipient, which may well be worse.\n+\n+For payers not using VPN or other proxying technologies, they generally trust their ISP for protection against denial of service anyway, so using ISP-provided recursive DNS resolvers is sufficient.\n+\n+However, for the best privacy, payers are encouraged to perform DNS resolution over Tor or another VPN technology.\n+\n+Lightning payers should consider utilizing DNS resolution over native onion messages, using the protocol described in [[BLIP 32|https://github.com/lightning/blips/blob/master/blip-0032.md]]",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 73,
      "commit_id": "8ca9811c7c8b091599dea49210ef1c88a95efeba",
      "original_commit_id": "d46a29ff4b4ac27210bc81474ae18e4802141324",
      "in_reply_to_id": 1485880079,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll make sure it gets merged before this does :)",
      "created_at": "2024-05-28T19:54:08Z",
      "updated_at": "2024-05-28T19:54:08Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1551#discussion_r1617821248",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1617821248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    }
  ]
}