{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/445",
    "id": 86478950,
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODY0Nzg5NTA=",
    "html_url": "https://github.com/bitcoin/bips/pull/445",
    "diff_url": "https://github.com/bitcoin/bips/pull/445.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/445.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/445/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/445/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/445/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
    "number": 445,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP 134: Flexible Transactions",
    "user": {
      "login": "zander",
      "id": 63063,
      "node_id": "MDQ6VXNlcjYzMDYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zander",
      "html_url": "https://github.com/zander",
      "followers_url": "https://api.github.com/users/zander/followers",
      "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
      "organizations_url": "https://api.github.com/users/zander/orgs",
      "repos_url": "https://api.github.com/users/zander/repos",
      "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/zander/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Introducing Flextrans. Requesting a BIP number assignment. Thank you!\n",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2016-09-23T09:16:27Z",
    "updated_at": "2016-10-19T00:53:01Z",
    "closed_at": "2016-09-23T10:27:43Z",
    "mergeable_state": "unknown",
    "merged_at": "2016-09-23T10:27:43Z",
    "merge_commit_sha": "b11eca4750309ef75ec30eeedf7d5e318d701b46",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "zander:FlexTrans",
      "ref": "FlexTrans",
      "sha": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "user": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "8f8ac4f2f88ae6c6029a07452695606590e63b79",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5535,
        "stargazers_count": 8220,
        "watchers_count": 8220,
        "size": 13787,
        "default_branch": "master",
        "open_issues_count": 112,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T12:09:15Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-08-01T09:08:43Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 250,
    "deletions": 0,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 7,
    "comments": 10
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NjA1Y2IyOTkzNDY2NmMxYWNhZTE1MDMyZjNmNmFiY2YyYmZjYzZiMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/605cb29934666c1acae15032f3f6abcf2bfcc6b3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/605cb29934666c1acae15032f3f6abcf2bfcc6b3",
      "tree": {
        "sha": "5d61f52cce302e90dd30a81a4c0fc82f7061fb91",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/5d61f52cce302e90dd30a81a4c0fc82f7061fb91"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2fceaf98a9d58b548af1d8a2308a71c9c3bb6c25",
          "sha": "2fceaf98a9d58b548af1d8a2308a71c9c3bb6c25",
          "html_url": "https://github.com/bitcoin/bips/commit/2fceaf98a9d58b548af1d8a2308a71c9c3bb6c25"
        }
      ],
      "message": "Adding Flexible Transactions proposal.",
      "committer": {
        "name": "TomZ",
        "email": "tomz@freedommail.ch",
        "date": "2016-09-23T09:13:22Z"
      },
      "author": {
        "name": "TomZ",
        "email": "tomz@freedommail.ch",
        "date": "2016-09-19T16:13:33Z"
      },
      "sha": "605cb29934666c1acae15032f3f6abcf2bfcc6b3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6YjM2NTQwODhjY2M3ZDc4ZjVjZTQ1YjFiM2U2OGE0ZGQ5ZTA2NjU4Yw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "tree": {
        "sha": "5305a8ff9f9a5aa64b397967df6bd8f6ed7cdc5c",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/5305a8ff9f9a5aa64b397967df6bd8f6ed7cdc5c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/605cb29934666c1acae15032f3f6abcf2bfcc6b3",
          "sha": "605cb29934666c1acae15032f3f6abcf2bfcc6b3",
          "html_url": "https://github.com/bitcoin/bips/commit/605cb29934666c1acae15032f3f6abcf2bfcc6b3"
        }
      ],
      "message": "Assign BIP 134: Flexible Transactions",
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-09-23T10:03:34Z"
      },
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-09-23T10:03:34Z"
      },
      "sha": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c"
    },
    {
      "event": "renamed",
      "id": 800165131,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50ODAwMTY1MTMx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/800165131",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T10:04:33Z",
      "rename": {
        "from": "Adding Flexible Transactions proposal.",
        "to": "BIP 134: Flexible Transactions"
      }
    },
    {
      "event": "labeled",
      "id": 800165227,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDgwMDE2NTIyNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/800165227",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T10:04:40Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "merged",
      "id": 800189823,
      "node_id": "MDExOk1lcmdlZEV2ZW50ODAwMTg5ODIz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/800189823",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b11eca4750309ef75ec30eeedf7d5e318d701b46",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/b11eca4750309ef75ec30eeedf7d5e318d701b46",
      "created_at": "2016-09-23T10:27:43Z"
    },
    {
      "event": "closed",
      "id": 800189824,
      "node_id": "MDExOkNsb3NlZEV2ZW50ODAwMTg5ODI0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/800189824",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T10:27:43Z"
    },
    {
      "event": "commented",
      "id": 249279149,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI3OTE0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/249279149",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T19:15:56Z",
      "updated_at": "2016-09-23T19:16:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Wait, did you notice the license on this? That's not a free software compatible license due to the clause \"Distribution of the work or derivative of the work in any standard (paper) book form is prohibited unless prior permission is obtained from the copyright holder.\" and even more worryingly: \"Distribution of substantively modified versions of this document is prohibited without the explicit permission of the copyright holder.\"\n\nIn general, we probably should require authors to use a specific license to keep things simpler.\n\nThis needs to be reverted and/or fixed.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-249279149",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "commented",
      "id": 249297567,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI5NzU2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/249297567",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T20:43:12Z",
      "updated_at": "2016-09-23T20:43:12Z",
      "author_association": "MEMBER",
      "body": "<sub>(slightly OT)</sub> BIP1 _requires_ all BIPs to be either licensed according to the OPL or be placed in the public domain. Both are a bad choice in my opinion and even though BIP1 does not forbid dual-licensing the work, I'd very much prefer to explicitly have a wider choice of accepted licenses. I had some hope that BIP2 (#350) solves this, but unfortunately it was deferred. \n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-249297567",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "commented",
      "id": 249299474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI5OTQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/249299474",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T20:52:15Z",
      "updated_at": "2016-09-23T20:52:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke Yeah, I can't imagine Amir Taaki meant for the non-free, restrictive versions of the OPL to be used; with this BIP's licensing terms it wouldn't be possible for, say, Andreas to include it in the next book on the Bitcoin protocol that he writes. Nor would it be possible for a future version of Flexible Transactions to do the obvious thing and include/modify the text of this BIP without first obtaining the author's explicit permission.\n\nFor standards that need to be distributed widely, public domain (or equivalent) is much more appropriate.\n",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-249299474",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "mentioned",
      "id": 800947774,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODAwOTQ3Nzc0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/800947774",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T20:52:15Z"
    },
    {
      "event": "subscribed",
      "id": 800947776,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDgwMDk0Nzc3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/800947776",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T20:52:15Z"
    },
    {
      "event": "commented",
      "id": 249319670,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTMxOTY3MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/249319670",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T22:45:30Z",
      "updated_at": "2016-09-23T22:45:30Z",
      "author_association": "MEMBER",
      "body": "I did notice the license, but it follows the rules in BIP 1 and doesn't legally impede the publication in the BIPs repository.\n\nBIP 2 was held back by objections to the BIP Comments changes. I suppose I could try removing that and reopen it for discussion. Perhaps I ought to forbid the additional OPL restrictions in the process...\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-249319670",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "commented",
      "id": 249319746,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTMxOTc0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/249319746",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T22:46:00Z",
      "updated_at": "2016-09-23T22:46:00Z",
      "author_association": "MEMBER",
      "body": "@zander Would you be okay with removing these restrictions from the BIP? Would you object to BIP 2 if it forbade such restrictions in the future?\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-249319746",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "mentioned",
      "id": 801051922,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODAxMDUxOTIy",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/801051922",
      "actor": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T22:46:00Z"
    },
    {
      "event": "subscribed",
      "id": 801051923,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDgwMTA1MTkyMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/801051923",
      "actor": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-23T22:46:00Z"
    },
    {
      "event": "reviewed",
      "id": 1419634,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQxOTYzNA==",
      "url": null,
      "actor": null,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Very minor spelling/grammatical borks.\n",
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#pullrequestreview-1419634",
      "submitted_at": "2016-09-23T23:31:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/445"
    },
    {
      "event": "commented",
      "id": 249355179,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM1NTE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/249355179",
      "actor": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-24T09:26:20Z",
      "updated_at": "2016-09-24T12:11:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "On Friday, 23 September 2016 15:46:09 CEST Luke-Jr wrote:\n\n> @zander Would you be okay with removing these restrictions from the BIP?\n> Would you object to BIP 2 if it forbade such restrictions in the future?\n\nMy suggestion would be that we replace OPL as an allowed license with one \nor two Creative Commons licenses. Following the suggestion from the OPL \ncreators themselves.\nAccording to Wikipedia;\n\n> Open Publication License was created by the Open Content Project in 1999 \n> as public copyright license for documents.[1] The license was superseded in \n> 2003/2007 by the Creative commons licenses.[2]\n\nI'd suggest saying that \"Share alike\" is required and \"Attribution\" is \noptional.\n\nExecutive summary; give the user the choice (next to public domain) between \nCCO and BY-SA\nsee;\nhttps://en.wikipedia.org/wiki/Creative_Commons_license#Seven_regularly_used_licenses\n\nI would gladly change to one of those two licenses.\n",
      "user": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-249355179",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "mentioned",
      "id": 801214721,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODAxMjE0NzIx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/801214721",
      "actor": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-24T09:26:20Z"
    },
    {
      "event": "subscribed",
      "id": 801214722,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDgwMTIxNDcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/801214722",
      "actor": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-24T09:26:20Z"
    },
    {
      "event": "commented",
      "id": 249355848,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM1NTg0OA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/249355848",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-24T09:41:40Z",
      "updated_at": "2016-09-24T09:41:40Z",
      "author_association": "MEMBER",
      "body": "What I do right now is dual-license under the OPL _and_ the 2-clause BSD license. You could also do OPL + some CC license immediately.\n\nIn the near future, I'm proposing BIP 2 replace BIP 1. It allows [both CC0 and CC-BY-SA as license options for BIPs](https://github.com/luke-jr/bips/blob/bip0002_squash/bip-0002.mediawiki#Recommended_licenses). I would appreciate if you could help review it. :)\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-249355848",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "commented",
      "id": 254355838,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDM1NTgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/254355838",
      "actor": {
        "login": "cpacia",
        "id": 4504708,
        "node_id": "MDQ6VXNlcjQ1MDQ3MDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4504708?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpacia",
        "html_url": "https://github.com/cpacia",
        "followers_url": "https://api.github.com/users/cpacia/followers",
        "following_url": "https://api.github.com/users/cpacia/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cpacia/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cpacia/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cpacia/subscriptions",
        "organizations_url": "https://api.github.com/users/cpacia/orgs",
        "repos_url": "https://api.github.com/users/cpacia/repos",
        "events_url": "https://api.github.com/users/cpacia/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cpacia/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-10-17T22:40:48Z",
      "updated_at": "2016-10-17T22:40:48Z",
      "author_association": "NONE",
      "body": "Regarding the spec.. it looks like a tag needs to be defined for `Sequence` (for RBF purposes). Probably only one per tx instead of per input?\n\nAlso, it's unclear how standard `nLockTime` would be handled. I assume `LockByTime` and `LockByBlock` are intended to be used for relative locktime (as they reference bip 68). They could also be treated as standard locktime if they are put in the `additional` part of the transaction. Otherwise a separate `nLockTime` tag should probably be defined.\n\nAnd in regards to `LockByTime` and `LockByBlock` when used for relative locktime they should probably be added to the input sections no? For example:\n\nInputs = TxInPrevHash, TxInPrevIndex, LockByTime or LockByBlock. Similar to how `TxInPrevIndex` is set to zero if omitted, `LockByTime` and `LockByBlock` should also be treated as having a zero value if omitted. \n\nMy 2¢\n",
      "user": {
        "login": "cpacia",
        "id": 4504708,
        "node_id": "MDQ6VXNlcjQ1MDQ3MDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4504708?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpacia",
        "html_url": "https://github.com/cpacia",
        "followers_url": "https://api.github.com/users/cpacia/followers",
        "following_url": "https://api.github.com/users/cpacia/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cpacia/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cpacia/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cpacia/subscriptions",
        "organizations_url": "https://api.github.com/users/cpacia/orgs",
        "repos_url": "https://api.github.com/users/cpacia/repos",
        "events_url": "https://api.github.com/users/cpacia/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cpacia/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-254355838",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "commented",
      "id": 254665742,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDY2NTc0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/254665742",
      "actor": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-10-18T23:11:15Z",
      "updated_at": "2016-10-18T23:11:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> And in regards to LockByTime and LockByBlock when used for relative locktime they should probably be added to the input sections no?\n\nThe reason that the BIP68 data was added to the inputs was only because that was the only place in the transaction where there was space to use. Inputs are about _using_ a former transactions output. The user of the output would not be the one that specifies how long that output has to be locked. You don't specify the rules of spending months after it confirms on the blockchain.\n",
      "user": {
        "login": "zander",
        "id": 63063,
        "node_id": "MDQ6VXNlcjYzMDYz",
        "avatar_url": "https://avatars.githubusercontent.com/u/63063?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zander",
        "html_url": "https://github.com/zander",
        "followers_url": "https://api.github.com/users/zander/followers",
        "following_url": "https://api.github.com/users/zander/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/zander/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/zander/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/zander/subscriptions",
        "organizations_url": "https://api.github.com/users/zander/orgs",
        "repos_url": "https://api.github.com/users/zander/repos",
        "events_url": "https://api.github.com/users/zander/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/zander/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-254665742",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    },
    {
      "event": "commented",
      "id": 254680890,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDY4MDg5MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/254680890",
      "actor": {
        "login": "cpacia",
        "id": 4504708,
        "node_id": "MDQ6VXNlcjQ1MDQ3MDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4504708?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpacia",
        "html_url": "https://github.com/cpacia",
        "followers_url": "https://api.github.com/users/cpacia/followers",
        "following_url": "https://api.github.com/users/cpacia/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cpacia/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cpacia/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cpacia/subscriptions",
        "organizations_url": "https://api.github.com/users/cpacia/orgs",
        "repos_url": "https://api.github.com/users/cpacia/repos",
        "events_url": "https://api.github.com/users/cpacia/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cpacia/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-10-19T00:53:01Z",
      "updated_at": "2016-10-19T00:53:01Z",
      "author_association": "NONE",
      "body": "> The user of the output would not be the one that specifies how long that output has to be locked. You don't specify the rules of spending months after it confirms on the blockchain.\n\nWhen combined with CSV I believe it works that way. \n",
      "user": {
        "login": "cpacia",
        "id": 4504708,
        "node_id": "MDQ6VXNlcjQ1MDQ3MDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4504708?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cpacia",
        "html_url": "https://github.com/cpacia",
        "followers_url": "https://api.github.com/users/cpacia/followers",
        "following_url": "https://api.github.com/users/cpacia/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cpacia/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cpacia/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cpacia/subscriptions",
        "organizations_url": "https://api.github.com/users/cpacia/orgs",
        "repos_url": "https://api.github.com/users/cpacia/repos",
        "events_url": "https://api.github.com/users/cpacia/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cpacia/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/445#issuecomment-254680890",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/445"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343075",
      "pull_request_review_id": 1419634,
      "id": 80343075,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMzQzMDc1",
      "diff_hunk": "@@ -0,0 +1,244 @@\n+<pre>\n+  BIP: 134\n+  Title: Flexible Transactions\n+  Author: Tom Zander <tomz@freedommail.ch>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-07-27\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes the next step in making Bitcoin's most basic element,\n+the transaction, more flexible and easier to extend. At the same time this\n+fixes all known cases of malleability and resolves significant amounts of\n+technical debt.\n+\n+==Summary==\n+\n+Flexible Transactions uses the fact that the first 4 bytes in a transaction\n+determine the version and that the majority of the clients use a\n+non-consensus rule (a policy) to not accept transaction version numbers\n+other than those specifically defined by Bitcoin.\n+This BIP chooses a new version number, 4, and defines that the data\n+following the bytes for the version is in a format called Compact Message\n+Format (CMF). CMF is a flexible, token based format where each token is a\n+combination of a name, a format and a value. Because the name is added we\n+can skip unused tokens and we can freely add new tokens in a simple manner\n+in future. Soft fork upgrades will become much easier and cleaner this\n+way.\n+\n+This protocol upgrade cleans up past soft fork changes like BIP68 which\n+reuse existing fields and do them in a much better to maintain and easier\n+to parse system. It creates the building blocks to allow new features to be\n+added much cleaner in the future.\n+\n+It also shows to be possible to remove signatures from transactions with\n+minimal upgrades of software and still maintain a coherent transaction\n+history. Tests show that this can reduce space usage to about 75%.\n+\n+==Motivation==\n+\n+Token based file-formats are not new, systems like XML and HTMl use a\n+similar system to allow future growth and they have been quite successful\n+for decades in part because of this property.\n+\n+Bitcoin needs a similar way of making the transaction future-proof because\n+re-purposing not used fields for new features is not good for creating\n+maintainable code.\n+\n+Next to that this protocol upgrade will re-order the data-fields which\n+allows us to cleanly fix the malleability issue which means that future\n+technologies like Lightning Network will depend on this BIP being deployed.\n+\n+At the same time, due to this re-ordering of data fields, it becomes very\n+easy to remove signatures from a transaction without breaking its tx-id,\n+which is great for future pruning features.\n+\n+\n+=== Tokens ===\n+\n+In the compact message format we define tokens and in this specification we\n+define how these tokens are named, where they can be placed and which are\n+optional.  To refer to XML, this specification would be the schema of\n+a transaction.\n+\n+CMF tokens are triplets of name, format (like PositiveInteger) and value.\n+Names in this scope are defined much like an enumeration where the actual\n+integer value (id, below) is equally important to the written name.\n+If any token found that is not covered in the next table will make the",
      "path": "bip-0134.mediawiki",
      "position": 69,
      "original_position": 69,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "original_commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "in_reply_to_id": null,
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If any token found that is not covered in the next table _it_ will make the ...\n",
      "created_at": "2016-09-23T23:21:11Z",
      "updated_at": "2016-09-23T23:31:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/445#discussion_r80343075",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343116",
      "pull_request_review_id": 1419634,
      "id": 80343116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMzQzMTE2",
      "diff_hunk": "@@ -0,0 +1,244 @@\n+<pre>\n+  BIP: 134\n+  Title: Flexible Transactions\n+  Author: Tom Zander <tomz@freedommail.ch>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-07-27\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes the next step in making Bitcoin's most basic element,\n+the transaction, more flexible and easier to extend. At the same time this\n+fixes all known cases of malleability and resolves significant amounts of\n+technical debt.\n+\n+==Summary==\n+\n+Flexible Transactions uses the fact that the first 4 bytes in a transaction\n+determine the version and that the majority of the clients use a\n+non-consensus rule (a policy) to not accept transaction version numbers\n+other than those specifically defined by Bitcoin.\n+This BIP chooses a new version number, 4, and defines that the data\n+following the bytes for the version is in a format called Compact Message\n+Format (CMF). CMF is a flexible, token based format where each token is a\n+combination of a name, a format and a value. Because the name is added we\n+can skip unused tokens and we can freely add new tokens in a simple manner\n+in future. Soft fork upgrades will become much easier and cleaner this\n+way.\n+\n+This protocol upgrade cleans up past soft fork changes like BIP68 which\n+reuse existing fields and do them in a much better to maintain and easier\n+to parse system. It creates the building blocks to allow new features to be\n+added much cleaner in the future.\n+\n+It also shows to be possible to remove signatures from transactions with\n+minimal upgrades of software and still maintain a coherent transaction\n+history. Tests show that this can reduce space usage to about 75%.\n+\n+==Motivation==\n+\n+Token based file-formats are not new, systems like XML and HTMl use a\n+similar system to allow future growth and they have been quite successful\n+for decades in part because of this property.\n+\n+Bitcoin needs a similar way of making the transaction future-proof because\n+re-purposing not used fields for new features is not good for creating\n+maintainable code.\n+\n+Next to that this protocol upgrade will re-order the data-fields which\n+allows us to cleanly fix the malleability issue which means that future\n+technologies like Lightning Network will depend on this BIP being deployed.\n+\n+At the same time, due to this re-ordering of data fields, it becomes very\n+easy to remove signatures from a transaction without breaking its tx-id,\n+which is great for future pruning features.\n+\n+\n+=== Tokens ===\n+\n+In the compact message format we define tokens and in this specification we\n+define how these tokens are named, where they can be placed and which are\n+optional.  To refer to XML, this specification would be the schema of\n+a transaction.\n+\n+CMF tokens are triplets of name, format (like PositiveInteger) and value.\n+Names in this scope are defined much like an enumeration where the actual\n+integer value (id, below) is equally important to the written name.\n+If any token found that is not covered in the next table will make the",
      "path": "bip-0134.mediawiki",
      "position": 69,
      "original_position": 69,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "original_commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "in_reply_to_id": 80343075,
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Missing the word 'it'.\n",
      "created_at": "2016-09-23T23:21:42Z",
      "updated_at": "2016-09-23T23:31:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/445#discussion_r80343116",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343277",
      "pull_request_review_id": 1419634,
      "id": 80343277,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMzQzMjc3",
      "diff_hunk": "@@ -0,0 +1,244 @@\n+<pre>\n+  BIP: 134\n+  Title: Flexible Transactions\n+  Author: Tom Zander <tomz@freedommail.ch>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-07-27\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes the next step in making Bitcoin's most basic element,\n+the transaction, more flexible and easier to extend. At the same time this\n+fixes all known cases of malleability and resolves significant amounts of\n+technical debt.\n+\n+==Summary==\n+\n+Flexible Transactions uses the fact that the first 4 bytes in a transaction\n+determine the version and that the majority of the clients use a\n+non-consensus rule (a policy) to not accept transaction version numbers\n+other than those specifically defined by Bitcoin.\n+This BIP chooses a new version number, 4, and defines that the data\n+following the bytes for the version is in a format called Compact Message\n+Format (CMF). CMF is a flexible, token based format where each token is a\n+combination of a name, a format and a value. Because the name is added we\n+can skip unused tokens and we can freely add new tokens in a simple manner\n+in future. Soft fork upgrades will become much easier and cleaner this\n+way.\n+\n+This protocol upgrade cleans up past soft fork changes like BIP68 which\n+reuse existing fields and do them in a much better to maintain and easier\n+to parse system. It creates the building blocks to allow new features to be\n+added much cleaner in the future.\n+\n+It also shows to be possible to remove signatures from transactions with\n+minimal upgrades of software and still maintain a coherent transaction\n+history. Tests show that this can reduce space usage to about 75%.\n+\n+==Motivation==\n+\n+Token based file-formats are not new, systems like XML and HTMl use a\n+similar system to allow future growth and they have been quite successful\n+for decades in part because of this property.\n+\n+Bitcoin needs a similar way of making the transaction future-proof because\n+re-purposing not used fields for new features is not good for creating\n+maintainable code.\n+\n+Next to that this protocol upgrade will re-order the data-fields which\n+allows us to cleanly fix the malleability issue which means that future\n+technologies like Lightning Network will depend on this BIP being deployed.\n+\n+At the same time, due to this re-ordering of data fields, it becomes very\n+easy to remove signatures from a transaction without breaking its tx-id,\n+which is great for future pruning features.\n+\n+\n+=== Tokens ===\n+\n+In the compact message format we define tokens and in this specification we\n+define how these tokens are named, where they can be placed and which are\n+optional.  To refer to XML, this specification would be the schema of\n+a transaction.\n+\n+CMF tokens are triplets of name, format (like PositiveInteger) and value.\n+Names in this scope are defined much like an enumeration where the actual\n+integer value (id, below) is equally important to the written name.\n+If any token found that is not covered in the next table will make the\n+transaction that contains it invalid.\n+\n+{| class=\"wikitable\"\n+|-\n+! Name !! id !! Format !! Default Value !! Description\n+|-\n+|TxEnd         ||  0 ||BoolTrue ||  Required    ||A marker that is end of the transaction.\n+|-\n+|TxInPrevHash  ||  1 ||ByteArray||  Required    ||TxId we are spending\n+|-\n+|TxPrevIndex   ||  2 ||Integer  ||      0       ||Index in prev tx we are spending (applied to previous TxInPrevHash)\n+|-\n+|TxInScript    ||  3 ||ByteArray||  Required    ||The 'input' part of the script\n+|-\n+|TxOutValue    ||  4 ||Integer  ||  Required    ||Amount of satoshi to transfer",
      "path": "bip-0134.mediawiki",
      "position": 84,
      "original_position": 84,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "original_commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "in_reply_to_id": null,
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Satoshi -> satoshis \n",
      "created_at": "2016-09-23T23:23:38Z",
      "updated_at": "2016-09-23T23:31:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/445#discussion_r80343277",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343555",
      "pull_request_review_id": 1419634,
      "id": 80343555,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMzQzNTU1",
      "diff_hunk": "@@ -0,0 +1,244 @@\n+<pre>\n+  BIP: 134\n+  Title: Flexible Transactions\n+  Author: Tom Zander <tomz@freedommail.ch>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-07-27\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes the next step in making Bitcoin's most basic element,\n+the transaction, more flexible and easier to extend. At the same time this\n+fixes all known cases of malleability and resolves significant amounts of\n+technical debt.\n+\n+==Summary==\n+\n+Flexible Transactions uses the fact that the first 4 bytes in a transaction\n+determine the version and that the majority of the clients use a\n+non-consensus rule (a policy) to not accept transaction version numbers\n+other than those specifically defined by Bitcoin.\n+This BIP chooses a new version number, 4, and defines that the data\n+following the bytes for the version is in a format called Compact Message\n+Format (CMF). CMF is a flexible, token based format where each token is a\n+combination of a name, a format and a value. Because the name is added we\n+can skip unused tokens and we can freely add new tokens in a simple manner\n+in future. Soft fork upgrades will become much easier and cleaner this\n+way.\n+\n+This protocol upgrade cleans up past soft fork changes like BIP68 which\n+reuse existing fields and do them in a much better to maintain and easier\n+to parse system. It creates the building blocks to allow new features to be\n+added much cleaner in the future.\n+\n+It also shows to be possible to remove signatures from transactions with\n+minimal upgrades of software and still maintain a coherent transaction\n+history. Tests show that this can reduce space usage to about 75%.\n+\n+==Motivation==\n+\n+Token based file-formats are not new, systems like XML and HTMl use a\n+similar system to allow future growth and they have been quite successful\n+for decades in part because of this property.\n+\n+Bitcoin needs a similar way of making the transaction future-proof because\n+re-purposing not used fields for new features is not good for creating\n+maintainable code.\n+\n+Next to that this protocol upgrade will re-order the data-fields which\n+allows us to cleanly fix the malleability issue which means that future\n+technologies like Lightning Network will depend on this BIP being deployed.\n+\n+At the same time, due to this re-ordering of data fields, it becomes very\n+easy to remove signatures from a transaction without breaking its tx-id,\n+which is great for future pruning features.\n+\n+\n+=== Tokens ===\n+\n+In the compact message format we define tokens and in this specification we\n+define how these tokens are named, where they can be placed and which are\n+optional.  To refer to XML, this specification would be the schema of\n+a transaction.\n+\n+CMF tokens are triplets of name, format (like PositiveInteger) and value.\n+Names in this scope are defined much like an enumeration where the actual\n+integer value (id, below) is equally important to the written name.\n+If any token found that is not covered in the next table will make the\n+transaction that contains it invalid.\n+\n+{| class=\"wikitable\"\n+|-\n+! Name !! id !! Format !! Default Value !! Description\n+|-\n+|TxEnd         ||  0 ||BoolTrue ||  Required    ||A marker that is end of the transaction.\n+|-\n+|TxInPrevHash  ||  1 ||ByteArray||  Required    ||TxId we are spending\n+|-\n+|TxPrevIndex   ||  2 ||Integer  ||      0       ||Index in prev tx we are spending (applied to previous TxInPrevHash)\n+|-\n+|TxInScript    ||  3 ||ByteArray||  Required    ||The 'input' part of the script\n+|-\n+|TxOutValue    ||  4 ||Integer  ||  Required    ||Amount of satoshi to transfer\n+|-\n+|TxOutScript   ||  5 ||ByteArray||  Required    ||The 'output' part of the script\n+|-\n+|LockByBlock   ||  6 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|LockByTime    ||  7 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|ScriptVersion ||  8 ||Integer  ||      2       ||Defines script version for outputs following\n+|-\n+|NOP_1x        || 1x || . ||  Optional    ||Values that will be ignored by anyone parsing the transaction\n+|}\n+\n+\n+=== Scripting changes ===\n+\n+In the current version of Bitcoin-script, version 1, there are various\n+opcodes that are used to validate the cryptographic proofs that users have\n+to provide in order to spend outputs.\n+\n+The OP_CHECKSIG is the most well known and, as its name implies, it\n+validates a signature.\n+In the new version of 'script' (version 2) the data that is signed is\n+changed to be equivalent to the transaction-id. This is a massive\n+simplification and also the only change between version 1 and version 2 of\n+script.\n+\n+=== Serialization order===\n+\n+The tokens defined above shall be serialized in a certain order for the\n+transaction to be valid.  Not serializing transactions in the\n+order specified would allow multiple interpretations of the data which\n+can't be allowed.\n+There is still some flexibility and for that reason it is important for\n+implementors to remember that the actual serialized data is used for the\n+calculation of the transaction-id. Reading and writing it may give you a\n+different output and when the txid changes, the signatures will break.\n+\n+At a macro-level the transaction has these segments. The order of the\n+segments can not be changed, but you can skip segments.\n+\n+{| class=\"wikitable\"\n+!Segment !! Description\n+|-\n+|   Inputs   || Details about inputs.\n+|-\n+|  Outputs   || Details and scripts for outputs\n+|-\n+| Additional || For future expansion\n+|-\n+| Signatures || The scripts for the inputs\n+|-\n+|   TxEnd    || End of the transaction\n+|}\n+\n+The TxId is calculated by taking the serialized transaction without the\n+Signatures and the TxEnd and hashing that.\n+\n+\n+{| class=\"wikitable\"\n+!Segment !! Tags !! Description\n+|-\n+|Inputs||TxInPrevHash and TxInPrevIndex||Index can be skipped, but in any input the PrevHash always has to come first\n+|-\n+|Outputs||TxOutScript, TxOutValue||Order is not relevant\n+|-\n+|Additional||LockByBlock  LockByTime NOP_1x\n+|-\n+|Signatures||TxInScript||Exactly the same amount as there are inputs\n+|-\n+|TxEnd||TxEnd\n+|}\n+\n+TxEnd is there to allow a parser to know when one transaction in a stream\n+has ended, allowing the next to be parsed.\n+\n+Notice that the token ScriptVersion is currently not allowed because we\n+don't have any valid value to give it. But if we introduce a new script\n+version it would be placed in the outputs segment.\n+\n+=== Script v2 ===\n+\n+The default value of ScriptVersion is number 2, as opposed to the version 1\n+of script that the is in use today.  The version 2 is mostly identical",
      "path": "bip-0134.mediawiki",
      "position": 167,
      "original_position": 167,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "original_commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "in_reply_to_id": null,
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove extraneous the.\n",
      "created_at": "2016-09-23T23:26:51Z",
      "updated_at": "2016-09-23T23:31:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/445#discussion_r80343555",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 167,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343632",
      "pull_request_review_id": 1419634,
      "id": 80343632,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMzQzNjMy",
      "diff_hunk": "@@ -0,0 +1,244 @@\n+<pre>\n+  BIP: 134\n+  Title: Flexible Transactions\n+  Author: Tom Zander <tomz@freedommail.ch>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-07-27\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes the next step in making Bitcoin's most basic element,\n+the transaction, more flexible and easier to extend. At the same time this\n+fixes all known cases of malleability and resolves significant amounts of\n+technical debt.\n+\n+==Summary==\n+\n+Flexible Transactions uses the fact that the first 4 bytes in a transaction\n+determine the version and that the majority of the clients use a\n+non-consensus rule (a policy) to not accept transaction version numbers\n+other than those specifically defined by Bitcoin.\n+This BIP chooses a new version number, 4, and defines that the data\n+following the bytes for the version is in a format called Compact Message\n+Format (CMF). CMF is a flexible, token based format where each token is a\n+combination of a name, a format and a value. Because the name is added we\n+can skip unused tokens and we can freely add new tokens in a simple manner\n+in future. Soft fork upgrades will become much easier and cleaner this\n+way.\n+\n+This protocol upgrade cleans up past soft fork changes like BIP68 which\n+reuse existing fields and do them in a much better to maintain and easier\n+to parse system. It creates the building blocks to allow new features to be\n+added much cleaner in the future.\n+\n+It also shows to be possible to remove signatures from transactions with\n+minimal upgrades of software and still maintain a coherent transaction\n+history. Tests show that this can reduce space usage to about 75%.\n+\n+==Motivation==\n+\n+Token based file-formats are not new, systems like XML and HTMl use a\n+similar system to allow future growth and they have been quite successful\n+for decades in part because of this property.\n+\n+Bitcoin needs a similar way of making the transaction future-proof because\n+re-purposing not used fields for new features is not good for creating\n+maintainable code.\n+\n+Next to that this protocol upgrade will re-order the data-fields which\n+allows us to cleanly fix the malleability issue which means that future\n+technologies like Lightning Network will depend on this BIP being deployed.\n+\n+At the same time, due to this re-ordering of data fields, it becomes very\n+easy to remove signatures from a transaction without breaking its tx-id,\n+which is great for future pruning features.\n+\n+\n+=== Tokens ===\n+\n+In the compact message format we define tokens and in this specification we\n+define how these tokens are named, where they can be placed and which are\n+optional.  To refer to XML, this specification would be the schema of\n+a transaction.\n+\n+CMF tokens are triplets of name, format (like PositiveInteger) and value.\n+Names in this scope are defined much like an enumeration where the actual\n+integer value (id, below) is equally important to the written name.\n+If any token found that is not covered in the next table will make the\n+transaction that contains it invalid.\n+\n+{| class=\"wikitable\"\n+|-\n+! Name !! id !! Format !! Default Value !! Description\n+|-\n+|TxEnd         ||  0 ||BoolTrue ||  Required    ||A marker that is end of the transaction.\n+|-\n+|TxInPrevHash  ||  1 ||ByteArray||  Required    ||TxId we are spending\n+|-\n+|TxPrevIndex   ||  2 ||Integer  ||      0       ||Index in prev tx we are spending (applied to previous TxInPrevHash)\n+|-\n+|TxInScript    ||  3 ||ByteArray||  Required    ||The 'input' part of the script\n+|-\n+|TxOutValue    ||  4 ||Integer  ||  Required    ||Amount of satoshi to transfer\n+|-\n+|TxOutScript   ||  5 ||ByteArray||  Required    ||The 'output' part of the script\n+|-\n+|LockByBlock   ||  6 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|LockByTime    ||  7 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|ScriptVersion ||  8 ||Integer  ||      2       ||Defines script version for outputs following\n+|-\n+|NOP_1x        || 1x || . ||  Optional    ||Values that will be ignored by anyone parsing the transaction\n+|}\n+\n+\n+=== Scripting changes ===\n+\n+In the current version of Bitcoin-script, version 1, there are various\n+opcodes that are used to validate the cryptographic proofs that users have\n+to provide in order to spend outputs.\n+\n+The OP_CHECKSIG is the most well known and, as its name implies, it\n+validates a signature.\n+In the new version of 'script' (version 2) the data that is signed is\n+changed to be equivalent to the transaction-id. This is a massive\n+simplification and also the only change between version 1 and version 2 of\n+script.\n+\n+=== Serialization order===\n+\n+The tokens defined above shall be serialized in a certain order for the\n+transaction to be valid.  Not serializing transactions in the\n+order specified would allow multiple interpretations of the data which\n+can't be allowed.\n+There is still some flexibility and for that reason it is important for\n+implementors to remember that the actual serialized data is used for the\n+calculation of the transaction-id. Reading and writing it may give you a\n+different output and when the txid changes, the signatures will break.\n+\n+At a macro-level the transaction has these segments. The order of the\n+segments can not be changed, but you can skip segments.\n+\n+{| class=\"wikitable\"\n+!Segment !! Description\n+|-\n+|   Inputs   || Details about inputs.\n+|-\n+|  Outputs   || Details and scripts for outputs\n+|-\n+| Additional || For future expansion\n+|-\n+| Signatures || The scripts for the inputs\n+|-\n+|   TxEnd    || End of the transaction\n+|}\n+\n+The TxId is calculated by taking the serialized transaction without the\n+Signatures and the TxEnd and hashing that.\n+\n+\n+{| class=\"wikitable\"\n+!Segment !! Tags !! Description\n+|-\n+|Inputs||TxInPrevHash and TxInPrevIndex||Index can be skipped, but in any input the PrevHash always has to come first\n+|-\n+|Outputs||TxOutScript, TxOutValue||Order is not relevant\n+|-\n+|Additional||LockByBlock  LockByTime NOP_1x\n+|-\n+|Signatures||TxInScript||Exactly the same amount as there are inputs\n+|-\n+|TxEnd||TxEnd\n+|}\n+\n+TxEnd is there to allow a parser to know when one transaction in a stream\n+has ended, allowing the next to be parsed.\n+\n+Notice that the token ScriptVersion is currently not allowed because we\n+don't have any valid value to give it. But if we introduce a new script\n+version it would be placed in the outputs segment.\n+\n+=== Script v2 ===\n+\n+The default value of ScriptVersion is number 2, as opposed to the version 1\n+of script that the is in use today.  The version 2 is mostly identical\n+to version one, including upgrades made to it over the years and in the \n+future. The only exception is that the OP_CHECKSIG is made dramatically\n+simpler.  The input-type for OP_CHECKSIG is now no longer configurable, it is\n+always '1' and the content that will be signed is the txid.\n+\n+TODO: does check-multisig need its own mention?\n+\n+\n+=== Block-malleability ===\n+\n+The effect of leaving the signatures out of the calculation of the\n+transaction-id implies that the signatures are also not used for the\n+calculation of the merkle tree.  This means that changes in signatures\n+would not be detectable. Except naturally by the fact that missing or\n+broken signatures breaks full validation. But it is important to detect\n+modifications to such signatures outside of validating all transactions.\n+\n+For this reason the merkle tree is extended to include (append) the hash of\n+the v4 transactions. The markle tree will continue to have all the\n+transactions' tx-ids but appended to that are the v4 hahes that include the",
      "path": "bip-0134.mediawiki",
      "position": 187,
      "original_position": 187,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "original_commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "in_reply_to_id": null,
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hahes -> hashes\n",
      "created_at": "2016-09-23T23:28:00Z",
      "updated_at": "2016-09-23T23:31:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/445#discussion_r80343632",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343659",
      "pull_request_review_id": 1419634,
      "id": 80343659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMzQzNjU5",
      "diff_hunk": "@@ -0,0 +1,244 @@\n+<pre>\n+  BIP: 134\n+  Title: Flexible Transactions\n+  Author: Tom Zander <tomz@freedommail.ch>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-07-27\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes the next step in making Bitcoin's most basic element,\n+the transaction, more flexible and easier to extend. At the same time this\n+fixes all known cases of malleability and resolves significant amounts of\n+technical debt.\n+\n+==Summary==\n+\n+Flexible Transactions uses the fact that the first 4 bytes in a transaction\n+determine the version and that the majority of the clients use a\n+non-consensus rule (a policy) to not accept transaction version numbers\n+other than those specifically defined by Bitcoin.\n+This BIP chooses a new version number, 4, and defines that the data\n+following the bytes for the version is in a format called Compact Message\n+Format (CMF). CMF is a flexible, token based format where each token is a\n+combination of a name, a format and a value. Because the name is added we\n+can skip unused tokens and we can freely add new tokens in a simple manner\n+in future. Soft fork upgrades will become much easier and cleaner this\n+way.\n+\n+This protocol upgrade cleans up past soft fork changes like BIP68 which\n+reuse existing fields and do them in a much better to maintain and easier\n+to parse system. It creates the building blocks to allow new features to be\n+added much cleaner in the future.\n+\n+It also shows to be possible to remove signatures from transactions with\n+minimal upgrades of software and still maintain a coherent transaction\n+history. Tests show that this can reduce space usage to about 75%.\n+\n+==Motivation==\n+\n+Token based file-formats are not new, systems like XML and HTMl use a\n+similar system to allow future growth and they have been quite successful\n+for decades in part because of this property.\n+\n+Bitcoin needs a similar way of making the transaction future-proof because\n+re-purposing not used fields for new features is not good for creating\n+maintainable code.\n+\n+Next to that this protocol upgrade will re-order the data-fields which\n+allows us to cleanly fix the malleability issue which means that future\n+technologies like Lightning Network will depend on this BIP being deployed.\n+\n+At the same time, due to this re-ordering of data fields, it becomes very\n+easy to remove signatures from a transaction without breaking its tx-id,\n+which is great for future pruning features.\n+\n+\n+=== Tokens ===\n+\n+In the compact message format we define tokens and in this specification we\n+define how these tokens are named, where they can be placed and which are\n+optional.  To refer to XML, this specification would be the schema of\n+a transaction.\n+\n+CMF tokens are triplets of name, format (like PositiveInteger) and value.\n+Names in this scope are defined much like an enumeration where the actual\n+integer value (id, below) is equally important to the written name.\n+If any token found that is not covered in the next table will make the\n+transaction that contains it invalid.\n+\n+{| class=\"wikitable\"\n+|-\n+! Name !! id !! Format !! Default Value !! Description\n+|-\n+|TxEnd         ||  0 ||BoolTrue ||  Required    ||A marker that is end of the transaction.\n+|-\n+|TxInPrevHash  ||  1 ||ByteArray||  Required    ||TxId we are spending\n+|-\n+|TxPrevIndex   ||  2 ||Integer  ||      0       ||Index in prev tx we are spending (applied to previous TxInPrevHash)\n+|-\n+|TxInScript    ||  3 ||ByteArray||  Required    ||The 'input' part of the script\n+|-\n+|TxOutValue    ||  4 ||Integer  ||  Required    ||Amount of satoshi to transfer\n+|-\n+|TxOutScript   ||  5 ||ByteArray||  Required    ||The 'output' part of the script\n+|-\n+|LockByBlock   ||  6 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|LockByTime    ||  7 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|ScriptVersion ||  8 ||Integer  ||      2       ||Defines script version for outputs following\n+|-\n+|NOP_1x        || 1x || . ||  Optional    ||Values that will be ignored by anyone parsing the transaction\n+|}\n+\n+\n+=== Scripting changes ===\n+\n+In the current version of Bitcoin-script, version 1, there are various\n+opcodes that are used to validate the cryptographic proofs that users have\n+to provide in order to spend outputs.\n+\n+The OP_CHECKSIG is the most well known and, as its name implies, it\n+validates a signature.\n+In the new version of 'script' (version 2) the data that is signed is\n+changed to be equivalent to the transaction-id. This is a massive\n+simplification and also the only change between version 1 and version 2 of\n+script.\n+\n+=== Serialization order===\n+\n+The tokens defined above shall be serialized in a certain order for the\n+transaction to be valid.  Not serializing transactions in the\n+order specified would allow multiple interpretations of the data which\n+can't be allowed.\n+There is still some flexibility and for that reason it is important for\n+implementors to remember that the actual serialized data is used for the\n+calculation of the transaction-id. Reading and writing it may give you a\n+different output and when the txid changes, the signatures will break.\n+\n+At a macro-level the transaction has these segments. The order of the\n+segments can not be changed, but you can skip segments.\n+\n+{| class=\"wikitable\"\n+!Segment !! Description\n+|-\n+|   Inputs   || Details about inputs.\n+|-\n+|  Outputs   || Details and scripts for outputs\n+|-\n+| Additional || For future expansion\n+|-\n+| Signatures || The scripts for the inputs\n+|-\n+|   TxEnd    || End of the transaction\n+|}\n+\n+The TxId is calculated by taking the serialized transaction without the\n+Signatures and the TxEnd and hashing that.\n+\n+\n+{| class=\"wikitable\"\n+!Segment !! Tags !! Description\n+|-\n+|Inputs||TxInPrevHash and TxInPrevIndex||Index can be skipped, but in any input the PrevHash always has to come first\n+|-\n+|Outputs||TxOutScript, TxOutValue||Order is not relevant\n+|-\n+|Additional||LockByBlock  LockByTime NOP_1x\n+|-\n+|Signatures||TxInScript||Exactly the same amount as there are inputs\n+|-\n+|TxEnd||TxEnd\n+|}\n+\n+TxEnd is there to allow a parser to know when one transaction in a stream\n+has ended, allowing the next to be parsed.\n+\n+Notice that the token ScriptVersion is currently not allowed because we\n+don't have any valid value to give it. But if we introduce a new script\n+version it would be placed in the outputs segment.\n+\n+=== Script v2 ===\n+\n+The default value of ScriptVersion is number 2, as opposed to the version 1\n+of script that the is in use today.  The version 2 is mostly identical\n+to version one, including upgrades made to it over the years and in the \n+future. The only exception is that the OP_CHECKSIG is made dramatically\n+simpler.  The input-type for OP_CHECKSIG is now no longer configurable, it is\n+always '1' and the content that will be signed is the txid.\n+\n+TODO: does check-multisig need its own mention?\n+\n+\n+=== Block-malleability ===\n+\n+The effect of leaving the signatures out of the calculation of the\n+transaction-id implies that the signatures are also not used for the\n+calculation of the merkle tree.  This means that changes in signatures\n+would not be detectable. Except naturally by the fact that missing or\n+broken signatures breaks full validation. But it is important to detect\n+modifications to such signatures outside of validating all transactions.\n+\n+For this reason the merkle tree is extended to include (append) the hash of\n+the v4 transactions. The markle tree will continue to have all the\n+transactions' tx-ids but appended to that are the v4 hahes that include the\n+signatures as well.  Specifically the hash is taken over a data-blob that\n+is build up from:",
      "path": "bip-0134.mediawiki",
      "position": 189,
      "original_position": 189,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "original_commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "in_reply_to_id": null,
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Built not build.\n",
      "created_at": "2016-09-23T23:28:16Z",
      "updated_at": "2016-09-23T23:31:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/445#discussion_r80343659",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 189,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343786",
      "pull_request_review_id": 1419634,
      "id": 80343786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwMzQzNzg2",
      "diff_hunk": "@@ -0,0 +1,244 @@\n+<pre>\n+  BIP: 134\n+  Title: Flexible Transactions\n+  Author: Tom Zander <tomz@freedommail.ch>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-07-27\n+</pre>\n+\n+==Abstract==\n+\n+This BIP describes the next step in making Bitcoin's most basic element,\n+the transaction, more flexible and easier to extend. At the same time this\n+fixes all known cases of malleability and resolves significant amounts of\n+technical debt.\n+\n+==Summary==\n+\n+Flexible Transactions uses the fact that the first 4 bytes in a transaction\n+determine the version and that the majority of the clients use a\n+non-consensus rule (a policy) to not accept transaction version numbers\n+other than those specifically defined by Bitcoin.\n+This BIP chooses a new version number, 4, and defines that the data\n+following the bytes for the version is in a format called Compact Message\n+Format (CMF). CMF is a flexible, token based format where each token is a\n+combination of a name, a format and a value. Because the name is added we\n+can skip unused tokens and we can freely add new tokens in a simple manner\n+in future. Soft fork upgrades will become much easier and cleaner this\n+way.\n+\n+This protocol upgrade cleans up past soft fork changes like BIP68 which\n+reuse existing fields and do them in a much better to maintain and easier\n+to parse system. It creates the building blocks to allow new features to be\n+added much cleaner in the future.\n+\n+It also shows to be possible to remove signatures from transactions with\n+minimal upgrades of software and still maintain a coherent transaction\n+history. Tests show that this can reduce space usage to about 75%.\n+\n+==Motivation==\n+\n+Token based file-formats are not new, systems like XML and HTMl use a\n+similar system to allow future growth and they have been quite successful\n+for decades in part because of this property.\n+\n+Bitcoin needs a similar way of making the transaction future-proof because\n+re-purposing not used fields for new features is not good for creating\n+maintainable code.\n+\n+Next to that this protocol upgrade will re-order the data-fields which\n+allows us to cleanly fix the malleability issue which means that future\n+technologies like Lightning Network will depend on this BIP being deployed.\n+\n+At the same time, due to this re-ordering of data fields, it becomes very\n+easy to remove signatures from a transaction without breaking its tx-id,\n+which is great for future pruning features.\n+\n+\n+=== Tokens ===\n+\n+In the compact message format we define tokens and in this specification we\n+define how these tokens are named, where they can be placed and which are\n+optional.  To refer to XML, this specification would be the schema of\n+a transaction.\n+\n+CMF tokens are triplets of name, format (like PositiveInteger) and value.\n+Names in this scope are defined much like an enumeration where the actual\n+integer value (id, below) is equally important to the written name.\n+If any token found that is not covered in the next table will make the\n+transaction that contains it invalid.\n+\n+{| class=\"wikitable\"\n+|-\n+! Name !! id !! Format !! Default Value !! Description\n+|-\n+|TxEnd         ||  0 ||BoolTrue ||  Required    ||A marker that is end of the transaction.\n+|-\n+|TxInPrevHash  ||  1 ||ByteArray||  Required    ||TxId we are spending\n+|-\n+|TxPrevIndex   ||  2 ||Integer  ||      0       ||Index in prev tx we are spending (applied to previous TxInPrevHash)\n+|-\n+|TxInScript    ||  3 ||ByteArray||  Required    ||The 'input' part of the script\n+|-\n+|TxOutValue    ||  4 ||Integer  ||  Required    ||Amount of satoshi to transfer\n+|-\n+|TxOutScript   ||  5 ||ByteArray||  Required    ||The 'output' part of the script\n+|-\n+|LockByBlock   ||  6 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|LockByTime    ||  7 ||Integer  ||  Optional    ||BIP68 replacement\n+|-\n+|ScriptVersion ||  8 ||Integer  ||      2       ||Defines script version for outputs following\n+|-\n+|NOP_1x        || 1x || . ||  Optional    ||Values that will be ignored by anyone parsing the transaction\n+|}\n+\n+\n+=== Scripting changes ===\n+\n+In the current version of Bitcoin-script, version 1, there are various\n+opcodes that are used to validate the cryptographic proofs that users have\n+to provide in order to spend outputs.\n+\n+The OP_CHECKSIG is the most well known and, as its name implies, it\n+validates a signature.\n+In the new version of 'script' (version 2) the data that is signed is\n+changed to be equivalent to the transaction-id. This is a massive\n+simplification and also the only change between version 1 and version 2 of\n+script.\n+\n+=== Serialization order===\n+\n+The tokens defined above shall be serialized in a certain order for the\n+transaction to be valid.  Not serializing transactions in the\n+order specified would allow multiple interpretations of the data which\n+can't be allowed.\n+There is still some flexibility and for that reason it is important for\n+implementors to remember that the actual serialized data is used for the\n+calculation of the transaction-id. Reading and writing it may give you a\n+different output and when the txid changes, the signatures will break.\n+\n+At a macro-level the transaction has these segments. The order of the\n+segments can not be changed, but you can skip segments.\n+\n+{| class=\"wikitable\"\n+!Segment !! Description\n+|-\n+|   Inputs   || Details about inputs.\n+|-\n+|  Outputs   || Details and scripts for outputs\n+|-\n+| Additional || For future expansion\n+|-\n+| Signatures || The scripts for the inputs\n+|-\n+|   TxEnd    || End of the transaction\n+|}\n+\n+The TxId is calculated by taking the serialized transaction without the\n+Signatures and the TxEnd and hashing that.\n+\n+\n+{| class=\"wikitable\"\n+!Segment !! Tags !! Description\n+|-\n+|Inputs||TxInPrevHash and TxInPrevIndex||Index can be skipped, but in any input the PrevHash always has to come first\n+|-\n+|Outputs||TxOutScript, TxOutValue||Order is not relevant\n+|-\n+|Additional||LockByBlock  LockByTime NOP_1x\n+|-\n+|Signatures||TxInScript||Exactly the same amount as there are inputs\n+|-\n+|TxEnd||TxEnd\n+|}\n+\n+TxEnd is there to allow a parser to know when one transaction in a stream\n+has ended, allowing the next to be parsed.\n+\n+Notice that the token ScriptVersion is currently not allowed because we\n+don't have any valid value to give it. But if we introduce a new script\n+version it would be placed in the outputs segment.\n+\n+=== Script v2 ===\n+\n+The default value of ScriptVersion is number 2, as opposed to the version 1\n+of script that the is in use today.  The version 2 is mostly identical\n+to version one, including upgrades made to it over the years and in the \n+future. The only exception is that the OP_CHECKSIG is made dramatically\n+simpler.  The input-type for OP_CHECKSIG is now no longer configurable, it is\n+always '1' and the content that will be signed is the txid.\n+\n+TODO: does check-multisig need its own mention?\n+\n+\n+=== Block-malleability ===\n+\n+The effect of leaving the signatures out of the calculation of the\n+transaction-id implies that the signatures are also not used for the\n+calculation of the merkle tree.  This means that changes in signatures\n+would not be detectable. Except naturally by the fact that missing or\n+broken signatures breaks full validation. But it is important to detect\n+modifications to such signatures outside of validating all transactions.\n+\n+For this reason the merkle tree is extended to include (append) the hash of\n+the v4 transactions. The markle tree will continue to have all the\n+transactions' tx-ids but appended to that are the v4 hahes that include the\n+signatures as well.  Specifically the hash is taken over a data-blob that\n+is build up from:\n+\n+1. the tx-id\n+2. the CMF-tokens 'TxInScript'\n+\n+\n+=== Future extensibility ===\n+\n+The NOP_1x wildcard used in the table explaining tokens is actually a list\n+of 10 values that currently are specified as NOP (no-operation) tags.\n+\n+Any implementation that supports the v4 transaction format should ignore\n+this field in a transaction. Interpreting and using the transaction as if\n+that field was not present at all.\n+\n+Future software may use these fields to decorate a transaction with\n+additional data or features. Transaction generating software should not\n+trivially use these tokens for their own usage without cooperation and\n+communication with the rest of the Bitcoin ecosystem as miners certainly\n+have the option to reject transactions that use unknown-to-them tokens.\n+\n+==Backwards compatibility ==\n+\n+Fully validating older clients are not compatible with this change.\n+\n+SPV (simple payment validation) wallets need to be updated to receive or\n+create the new transaction type.\n+\n+This BIP introduces a new transaction format without changing or\n+deprecating the existing one or any of its practices. Therefor it is",
      "path": "bip-0134.mediawiki",
      "position": 218,
      "original_position": 218,
      "commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "original_commit_id": "b3654088ccc7d78f5ce45b1b3e68a4dd9e06658c",
      "in_reply_to_id": null,
      "user": {
        "login": "hoffmabc",
        "id": 45482,
        "node_id": "MDQ6VXNlcjQ1NDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/45482?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hoffmabc",
        "html_url": "https://github.com/hoffmabc",
        "followers_url": "https://api.github.com/users/hoffmabc/followers",
        "following_url": "https://api.github.com/users/hoffmabc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hoffmabc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hoffmabc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hoffmabc/subscriptions",
        "organizations_url": "https://api.github.com/users/hoffmabc/orgs",
        "repos_url": "https://api.github.com/users/hoffmabc/repos",
        "events_url": "https://api.github.com/users/hoffmabc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hoffmabc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Therefore misspelling.\n",
      "created_at": "2016-09-23T23:29:56Z",
      "updated_at": "2016-09-23T23:31:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/445#discussion_r80343786",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/80343786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/445"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 218,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}