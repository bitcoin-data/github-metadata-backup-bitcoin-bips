{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1362",
    "id": 1043007492,
    "node_id": "PR_kwDOAN28mc4-KwgE",
    "html_url": "https://github.com/bitcoin/bips/pull/1362",
    "diff_url": "https://github.com/bitcoin/bips/pull/1362.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1362.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1362",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1362/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1362/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1362/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/740d75f635353e33898ee11f40d7b7a680f43dcf",
    "number": 1362,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "New BIP: Revocable Proof-of-Burn Transaction Template",
    "user": {
      "login": "veleslavs",
      "id": 28802530,
      "node_id": "MDQ6VXNlcjI4ODAyNTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/veleslavs",
      "html_url": "https://github.com/veleslavs",
      "followers_url": "https://api.github.com/users/veleslavs/followers",
      "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
      "organizations_url": "https://api.github.com/users/veleslavs/orgs",
      "repos_url": "https://api.github.com/users/veleslavs/repos",
      "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/veleslavs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This BIP proposes a standard way for making Bitcoin Proof-of-Burn Transactions.\r\n\r\nThere are many possible applications, such as being:\r\n- The default trust anchor in decentralised networks.\r\n- An effective dos-resistant signal for announcements or other low-frequency events.\r\n\r\nPlease view the proposal here:\r\nhttps://github.com/veleslavs/bips/blob/bip-rpob-tx-template/bip-rpob-tx-template.mediawiki\r\n\r\nNext steps:\r\n- [ ] Update proposal with BIP Number.\r\n- [ ] Collect more peer-review.\r\n- [ ] Collect review in particular with the Taproot Tweak Parts.\r\n- [ ] Update BIP with reference implementation and test vectors.\r\n- [ ] Merge proposal as Draft BIP.\r\n\r\nUpon assignment of a BIP number, I will update and convert this Draft Pull Request into a normal Pull Request.",
    "labels": [],
    "created_at": "2022-08-31T23:16:00Z",
    "updated_at": "2024-05-01T18:03:04Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "82b1c874b1e19c68945d57dcc5c3b2c7fecc1324",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "veleslavs:bip-rpob-tx-template",
      "ref": "bip-rpob-tx-template",
      "sha": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 91782728,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MTc4MjcyOA==",
        "name": "bips",
        "full_name": "veleslavs/bips",
        "owner": {
          "login": "veleslavs",
          "id": 28802530,
          "node_id": "MDQ6VXNlcjI4ODAyNTMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/veleslavs",
          "html_url": "https://github.com/veleslavs",
          "followers_url": "https://api.github.com/users/veleslavs/followers",
          "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
          "organizations_url": "https://api.github.com/users/veleslavs/orgs",
          "repos_url": "https://api.github.com/users/veleslavs/repos",
          "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/veleslavs/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/veleslavs/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/veleslavs/bips",
        "archive_url": "https://api.github.com/repos/veleslavs/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/veleslavs/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/veleslavs/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/veleslavs/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/veleslavs/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/veleslavs/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/veleslavs/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/veleslavs/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/veleslavs/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/veleslavs/bips/contributors",
        "deployments_url": "https://api.github.com/repos/veleslavs/bips/deployments",
        "downloads_url": "https://api.github.com/repos/veleslavs/bips/downloads",
        "events_url": "https://api.github.com/repos/veleslavs/bips/events",
        "forks_url": "https://api.github.com/repos/veleslavs/bips/forks",
        "git_commits_url": "https://api.github.com/repos/veleslavs/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/veleslavs/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/veleslavs/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/veleslavs/bips.git",
        "issue_comment_url": "https://api.github.com/repos/veleslavs/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/veleslavs/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/veleslavs/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/veleslavs/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/veleslavs/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/veleslavs/bips/languages",
        "merges_url": "https://api.github.com/repos/veleslavs/bips/merges",
        "milestones_url": "https://api.github.com/repos/veleslavs/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/veleslavs/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/veleslavs/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/veleslavs/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:veleslavs/bips.git",
        "stargazers_url": "https://api.github.com/repos/veleslavs/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/veleslavs/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/veleslavs/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/veleslavs/bips/subscription",
        "tags_url": "https://api.github.com/repos/veleslavs/bips/tags",
        "teams_url": "https://api.github.com/repos/veleslavs/bips/teams",
        "trees_url": "https://api.github.com/repos/veleslavs/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/veleslavs/bips.git",
        "hooks_url": "https://api.github.com/repos/veleslavs/bips/hooks",
        "svn_url": "https://github.com/veleslavs/bips",
        "homepage": "bitcoin.org",
        "language": "Wikitext",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 13001,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-10-23T13:36:17Z",
        "created_at": "2017-05-19T08:15:05Z",
        "updated_at": "2022-08-09T15:01:43Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6545b81022212a9f1c814f6ce1673e84bc02c910",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5237,
        "stargazers_count": 8944,
        "watchers_count": 8944,
        "size": 14955,
        "default_branch": "master",
        "open_issues_count": 71,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-01T15:21:19Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-05-01T17:02:20Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 602,
    "deletions": 0,
    "changed_files": 2,
    "commits": 3,
    "review_comments": 16,
    "comments": 2
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDM2OTk0MTlkYjEwZmY1MWJkNWMwNDlmNzc2ZWY5NWI3ZmU1Mzg0NzI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3699419db10ff51bd5c049f776ef95b7fe538472",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/3699419db10ff51bd5c049f776ef95b7fe538472",
      "tree": {
        "sha": "01091cfaec1c314635a691b39f4b936ac4510670",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/01091cfaec1c314635a691b39f4b936ac4510670"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/52f68fecd8ec9604672e26392468e7e7edf25a5e",
          "sha": "52f68fecd8ec9604672e26392468e7e7edf25a5e",
          "html_url": "https://github.com/bitcoin/bips/commit/52f68fecd8ec9604672e26392468e7e7edf25a5e"
        }
      ],
      "message": "draft: bip-rpob-tx-template",
      "committer": {
        "name": "Veleslav",
        "email": "veleslav.bips@protonmail.com",
        "date": "2022-08-25T19:09:24Z"
      },
      "author": {
        "name": "Veleslav",
        "email": "veleslav.bips@protonmail.com",
        "date": "2022-08-25T19:09:24Z"
      },
      "sha": "3699419db10ff51bd5c049f776ef95b7fe538472"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDJmNmUxYWY1MDBkMGI1NmQwM2IxNzczNGQ2YWEyNmIzY2M0MGQ5Y2M",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "tree": {
        "sha": "65cee7a8a6232c1347d7a51efcf646a74eeed880",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/65cee7a8a6232c1347d7a51efcf646a74eeed880"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3699419db10ff51bd5c049f776ef95b7fe538472",
          "sha": "3699419db10ff51bd5c049f776ef95b7fe538472",
          "html_url": "https://github.com/bitcoin/bips/commit/3699419db10ff51bd5c049f776ef95b7fe538472"
        }
      ],
      "message": "spelling: fix Signiture > Signature",
      "committer": {
        "name": "Veleslav",
        "email": "veleslav.bips@protonmail.com",
        "date": "2022-09-24T11:01:16Z"
      },
      "author": {
        "name": "Veleslav",
        "email": "veleslav.bips@protonmail.com",
        "date": "2022-09-24T11:01:16Z"
      },
      "sha": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc"
    },
    {
      "event": "reviewed",
      "id": 1126073507,
      "node_id": "PRR_kwDOAN28mc5DHoSj",
      "url": null,
      "actor": null,
      "commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1362#pullrequestreview-1126073507",
      "submitted_at": "2022-09-29T22:56:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7648381968,
      "node_id": "HRFPE_lADOAN28mc5Q8dCJzwAAAAHH4QwQ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7648381968",
      "actor": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T13:34:11Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDc0MGQ3NWY2MzUzNTNlMzM4OThlZTExZjQwZDdiN2E2ODBmNDNkY2Y",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/740d75f635353e33898ee11f40d7b7a680f43dcf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/740d75f635353e33898ee11f40d7b7a680f43dcf",
      "tree": {
        "sha": "26c023ad4141852d1a1e8dd5803e9bf4d766796b",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/26c023ad4141852d1a1e8dd5803e9bf4d766796b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
          "sha": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
          "html_url": "https://github.com/bitcoin/bips/commit/2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc"
        }
      ],
      "message": "add fixed purpose and various clarifications\n\n* Explicitly note using Taproot Tweaks for locking a RPoB to a particular purpose. (Needs more review by someone more experience in the details of Taproot.)\n* Changed the nVersion from 3 to 5. (Other proposals already plan of using version 3).\n* Clarified details about the use of block space and fees.",
      "committer": {
        "name": "Veleslav",
        "email": "veleslav.bips@protonmail.com",
        "date": "2022-10-23T13:36:10Z"
      },
      "author": {
        "name": "Veleslav",
        "email": "veleslav.bips@protonmail.com",
        "date": "2022-10-23T12:42:07Z"
      },
      "sha": "740d75f635353e33898ee11f40d7b7a680f43dcf"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7648384582,
      "node_id": "HRFPE_lADOAN28mc5Q8dCJzwAAAAHH4RZG",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/7648384582",
      "actor": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T13:36:18Z"
    },
    {
      "event": "commented",
      "id": 1288116023,
      "node_id": "IC_kwDOAN28mc5Mxxc3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1288116023",
      "actor": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T13:41:45Z",
      "updated_at": "2022-10-23T13:41:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Expanded the document to include details on using a Taproot Tweak to privately embed a fixed purpose to the transaction:\r\n\r\nhttps://github.com/veleslavs/bips/blob/bip-rpob-tx-template/bip-rpob-tx-template.mediawiki#optional-fixed-purpose-encoded-in-the-key-tweak\r\n\r\nThis part of the document could really benefit from some review, in particular the nuances of making the verification work according to good practices.",
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1362#issuecomment-1288116023",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1362"
    },
    {
      "event": "reviewed",
      "id": 1212693179,
      "node_id": "PRR_kwDOAN28mc5ISDq7",
      "url": null,
      "actor": null,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "manda2020panda",
        "id": 47097619,
        "node_id": "MDQ6VXNlcjQ3MDk3NjE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/47097619?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/manda2020panda",
        "html_url": "https://github.com/manda2020panda",
        "followers_url": "https://api.github.com/users/manda2020panda/followers",
        "following_url": "https://api.github.com/users/manda2020panda/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/manda2020panda/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/manda2020panda/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/manda2020panda/subscriptions",
        "organizations_url": "https://api.github.com/users/manda2020panda/orgs",
        "repos_url": "https://api.github.com/users/manda2020panda/repos",
        "events_url": "https://api.github.com/users/manda2020panda/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/manda2020panda/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1362#pullrequestreview-1212693179",
      "submitted_at": "2022-12-11T12:58:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
    },
    {
      "event": "commented",
      "id": 2088853707,
      "node_id": "IC_kwDOAN28mc58gWDL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2088853707",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T18:03:03Z",
      "updated_at": "2024-05-01T18:03:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hello @veleslavs, are you still working on this proposal? Has this idea been discussed on the mailing list?",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1362#issuecomment-2088853707",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1362"
    },
    {
      "event": "mentioned",
      "id": 12673191902,
      "node_id": "MEE_lADOAN28mc5Q8dCJzwAAAALzYY_e",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12673191902",
      "actor": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T18:03:04Z"
    },
    {
      "event": "subscribed",
      "id": 12673191924,
      "node_id": "SE_lADOAN28mc5Q8dCJzwAAAALzYY_0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12673191924",
      "actor": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T18:03:05Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984075649",
      "pull_request_review_id": 1126073507,
      "id": 984075649,
      "node_id": "PRRC_kwDOAN28mc46p82B",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 80,
      "original_position": 79,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why only a single input per transaction?",
      "created_at": "2022-09-29T22:43:15Z",
      "updated_at": "2022-09-29T22:56:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r984075649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984075649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 80,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984076035",
      "pull_request_review_id": 1126073507,
      "id": 984076035,
      "node_id": "PRRC_kwDOAN28mc46p88D",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 96,
      "original_position": 95,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why?",
      "created_at": "2022-09-29T22:44:02Z",
      "updated_at": "2022-09-29T22:56:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r984076035",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984076035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984076596",
      "pull_request_review_id": 1126073507,
      "id": 984076596,
      "node_id": "PRRC_kwDOAN28mc46p9E0",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 113,
      "original_position": 112,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why?",
      "created_at": "2022-09-29T22:45:20Z",
      "updated_at": "2022-09-29T22:56:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r984076596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984076596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984077242",
      "pull_request_review_id": 1126073507,
      "id": 984077242,
      "node_id": "PRRC_kwDOAN28mc46p9O6",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": null,
      "original_position": 178,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Service bits and BIPs are not applicable to node policies, which each and every node operator decides for himself.",
      "created_at": "2022-09-29T22:46:46Z",
      "updated_at": "2022-09-29T22:56:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r984077242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984077242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984077753",
      "pull_request_review_id": 1126073507,
      "id": 984077753,
      "node_id": "PRRC_kwDOAN28mc46p9W5",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.\n+\n+==Rationale==\n+===Why require RPoB transactions to use a new transaction version?===\n+\n+This allows for future indexing and enforcement strategies at the consensus layer.\n+\n+===Why use a hash puzzle for the revocation?===\n+\n+The hash-puzzle allows for easy indexing of the revocation, in the format:\n+\n+<code><32-byte-revocation-puzzle> (if revoked: <32-byte-revocation-puzzle-preimage>)</code>\n+\n+*Since the digest algorithm is double sha256, even for a very large number of revocation, this index would be very cheap to verify.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": null,
      "original_position": 191,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "?",
      "created_at": "2022-09-29T22:47:55Z",
      "updated_at": "2022-09-29T22:56:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r984077753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984077753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984079094",
      "pull_request_review_id": 1126073507,
      "id": 984079094,
      "node_id": "PRRC_kwDOAN28mc46p9r2",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.\n+\n+==Rationale==\n+===Why require RPoB transactions to use a new transaction version?===\n+\n+This allows for future indexing and enforcement strategies at the consensus layer.\n+\n+===Why use a hash puzzle for the revocation?===\n+\n+The hash-puzzle allows for easy indexing of the revocation, in the format:\n+\n+<code><32-byte-revocation-puzzle> (if revoked: <32-byte-revocation-puzzle-preimage>)</code>\n+\n+*Since the digest algorithm is double sha256, even for a very large number of revocation, this index would be very cheap to verify.\n+\n+*We envision nodes keeping track of all the revocation-puzzles listed in the blockchain, as 32-byte each, a million RPoB is only 32mb. This can be further optimised.\n+\n+Additionally, we do not want to confuse a public key, (that can sign), and a revocation-puzzle (that may only revoke).\n+\n+===Why must the revocation output be of zero value?===\n+\n+Revocation can be spent by anyone once the revocation pre-image has been published.\n+\n+===Why does a RPoB need a signature at all?===\n+\n+The primary purpose of the signature is to stop replay-attacks. (Somebody takes your public-key and makes transaction where you don't control the revocation).\n+\n+The secondary purpose is to allow for untrusted parties to create transactions on your behalf. i.e. a 'RPoB' transaction creation service.\n+===Why waste precious block space?===\n+\n+Consuming block-space is a of secondary proof-of-burn that this proposal takes advantage of, as itself is limited and contested for (blocks are almost full on average). There is an opportunity cost of the next best transaction when a miner chooses to include a RPoB transaction their block.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": null,
      "original_position": 208,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This sounds like an attack on Bitcoin.",
      "created_at": "2022-09-29T22:51:04Z",
      "updated_at": "2022-09-29T22:56:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r984079094",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984079094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984081263",
      "pull_request_review_id": 1126073507,
      "id": 984081263,
      "node_id": "PRRC_kwDOAN28mc46p-Nv",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.\n+\n+==Rationale==\n+===Why require RPoB transactions to use a new transaction version?===\n+\n+This allows for future indexing and enforcement strategies at the consensus layer.\n+\n+===Why use a hash puzzle for the revocation?===\n+\n+The hash-puzzle allows for easy indexing of the revocation, in the format:\n+\n+<code><32-byte-revocation-puzzle> (if revoked: <32-byte-revocation-puzzle-preimage>)</code>\n+\n+*Since the digest algorithm is double sha256, even for a very large number of revocation, this index would be very cheap to verify.\n+\n+*We envision nodes keeping track of all the revocation-puzzles listed in the blockchain, as 32-byte each, a million RPoB is only 32mb. This can be further optimised.\n+\n+Additionally, we do not want to confuse a public key, (that can sign), and a revocation-puzzle (that may only revoke).\n+\n+===Why must the revocation output be of zero value?===\n+\n+Revocation can be spent by anyone once the revocation pre-image has been published.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 235,
      "original_position": 199,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why does it need to be spent at all? It's a one-way signal, right? There's no double-spending to concern with...",
      "created_at": "2022-09-29T22:55:49Z",
      "updated_at": "2022-09-29T22:56:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r984081263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/984081263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 235,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002709277",
      "pull_request_review_id": 1152308941,
      "id": 1002709277,
      "node_id": "PRRC_kwDOAN28mc47xCEd",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 80,
      "original_position": 79,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": 984075649,
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hello @luke-jr, thank you for your initial review.\r\n\r\nA transaction that has many inputs could be quite large; it is a requirement that this design is optimized for SPV performance. - Hence the restriction.\r\n\r\n---\r\n\r\nI have updated and expanded the 'Other Requirements' section: https://github.com/veleslavs/bips/blob/bip-rpob-tx-template/bip-rpob-tx-template.mediawiki#other-requirements\r\n\r\n\r\n> Transactions are tiny and simple: The RPoB transactions template constrains the rules of the transaction to the minimum. Both size are complexity limitations are used: Single Input, used to limit the size of the RPoB transactions; Single Optional Change Output, used to limit the size of the RPoB transactions; Exclusive use of Taproot, used to limit the complexity of the RPoB transactions.\r\n",
      "created_at": "2022-10-23T13:17:42Z",
      "updated_at": "2022-10-23T13:17:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r1002709277",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002709277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 80,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002709440",
      "pull_request_review_id": 1152309037,
      "id": 1002709440,
      "node_id": "PRRC_kwDOAN28mc47xCHA",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 96,
      "original_position": 95,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": 984076035,
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again, to optimize for low complexity for SPV clients. Please the comment above.",
      "created_at": "2022-10-23T13:18:38Z",
      "updated_at": "2022-10-23T13:18:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r1002709440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002709440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 96,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002710101",
      "pull_request_review_id": 1152309666,
      "id": 1002710101,
      "node_id": "PRRC_kwDOAN28mc47xCRV",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 113,
      "original_position": 112,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": 984076596,
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This signature protects the transaction from malleability when made by a second party.\r\n\r\n--\r\n\r\nI have added the following to the \"Signature: Included in Output 1\" section:\r\n> The signature is included so that the RPoB transaction may be safely constructed and funded by untrusted second parties.",
      "created_at": "2022-10-23T13:23:30Z",
      "updated_at": "2022-10-23T13:23:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r1002710101",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002710101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002710239",
      "pull_request_review_id": 1152309828,
      "id": 1002710239,
      "node_id": "PRRC_kwDOAN28mc47xCTf",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": null,
      "original_position": 178,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": 984077242,
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you, I have updated the document to better reflect the intentions:\r\n\r\n> If this standard gains significant attention, we are happy to write a supplementary BIP to define a way for participating nodes signal to each other that they accept the relay of  RPoB transactions.",
      "created_at": "2022-10-23T13:24:45Z",
      "updated_at": "2022-10-23T13:24:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r1002710239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002710239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002710832",
      "pull_request_review_id": 1152310399,
      "id": 1002710832,
      "node_id": "PRRC_kwDOAN28mc47xCcw",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.\n+\n+==Rationale==\n+===Why require RPoB transactions to use a new transaction version?===\n+\n+This allows for future indexing and enforcement strategies at the consensus layer.\n+\n+===Why use a hash puzzle for the revocation?===\n+\n+The hash-puzzle allows for easy indexing of the revocation, in the format:\n+\n+<code><32-byte-revocation-puzzle> (if revoked: <32-byte-revocation-puzzle-preimage>)</code>\n+\n+*Since the digest algorithm is double sha256, even for a very large number of revocation, this index would be very cheap to verify.\n+\n+*We envision nodes keeping track of all the revocation-puzzles listed in the blockchain, as 32-byte each, a million RPoB is only 32mb. This can be further optimised.\n+\n+Additionally, we do not want to confuse a public key, (that can sign), and a revocation-puzzle (that may only revoke).\n+\n+===Why must the revocation output be of zero value?===\n+\n+Revocation can be spent by anyone once the revocation pre-image has been published.\n+\n+===Why does a RPoB need a signature at all?===\n+\n+The primary purpose of the signature is to stop replay-attacks. (Somebody takes your public-key and makes transaction where you don't control the revocation).\n+\n+The secondary purpose is to allow for untrusted parties to create transactions on your behalf. i.e. a 'RPoB' transaction creation service.\n+===Why waste precious block space?===\n+\n+Consuming block-space is a of secondary proof-of-burn that this proposal takes advantage of, as itself is limited and contested for (blocks are almost full on average). There is an opportunity cost of the next best transaction when a miner chooses to include a RPoB transaction their block.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": null,
      "original_position": 208,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": 984079094,
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We didn't quite comprehend what attack you we specially referencing. However, we took some time to expand on this point to make our intentions and philosophy more clear:\r\n\r\n--\r\n\r\n> The authors of this BIP do accept the premise of this question. Each block is a auction of block-space that helps rewarding the miner in their important consensus role. We are not some authority who can define 'waste' from 'economic' transaction. We take the neutral position that if a transaction is willing to pay the transaction-fee-at-auction it must have a economic purpose that supports doing so.\r\n>\r\n> Additionally, this proposal takes advantage of economic opportunity cost that the miner faces when excluding transaction when blocks are full (that they generally are). This allows for the transaction-fees-at-auction to behave as a secondary proof-of-burn.\r\n>\r\n> The authors are not fazed by the possibility that proposal, if gaining significant adoption, will lead to the a meaningful increase of the Bitcoin transaction fees. We regard transaction fees important for long-term health of the network and consider making statements in global consensus networks as inherently costly.",
      "created_at": "2022-10-23T13:29:04Z",
      "updated_at": "2022-10-23T13:29:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r1002710832",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002710832"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002711231",
      "pull_request_review_id": 1152310798,
      "id": 1002711231,
      "node_id": "PRRC_kwDOAN28mc47xCi_",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.\n+\n+==Rationale==\n+===Why require RPoB transactions to use a new transaction version?===\n+\n+This allows for future indexing and enforcement strategies at the consensus layer.\n+\n+===Why use a hash puzzle for the revocation?===\n+\n+The hash-puzzle allows for easy indexing of the revocation, in the format:\n+\n+<code><32-byte-revocation-puzzle> (if revoked: <32-byte-revocation-puzzle-preimage>)</code>\n+\n+*Since the digest algorithm is double sha256, even for a very large number of revocation, this index would be very cheap to verify.\n+\n+*We envision nodes keeping track of all the revocation-puzzles listed in the blockchain, as 32-byte each, a million RPoB is only 32mb. This can be further optimised.\n+\n+Additionally, we do not want to confuse a public key, (that can sign), and a revocation-puzzle (that may only revoke).\n+\n+===Why must the revocation output be of zero value?===\n+\n+Revocation can be spent by anyone once the revocation pre-image has been published.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": 235,
      "original_position": 199,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": 984081263,
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We think that this is a very good point and expanded on the topic in the \"Other Requirements\" section: https://github.com/veleslavs/bips/blob/bip-rpob-tx-template/bip-rpob-tx-template.mediawiki#other-requirements\r\n\r\nIn summary, including the revocation in the block chain makes them uncensorable, in contrast to a gossip network.\r\n\r\n---\r\n\r\n> *Revocations are both cheaply indexed and uncensorable: ''Receiving the pre-image to the RPoB revocation signals it's revocation. This is easily indexed and propagated in a gossip network, however gossip networks are relatively  censorable. Using the same pre-image, anyone is able to spend the revocation output, rendering this revocation uncensorable.''",
      "created_at": "2022-10-23T13:32:17Z",
      "updated_at": "2022-10-23T13:32:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r1002711231",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002711231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 235,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002711886",
      "pull_request_review_id": 1152311383,
      "id": 1002711886,
      "node_id": "PRRC_kwDOAN28mc47xCtO",
      "diff_hunk": "@@ -0,0 +1,284 @@\n+<pre>\n+  BIP: bip-rpob-tx-template\n+  Layer: Applications\n+  Title: Revocable Proof-of-Burn Transaction Template\n+  Author: Veleslav <veleslav.bips@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-bip-rpob-tx-template\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2022-08-18\n+  License: BSD-3-Clause\n+           CC0-1.0\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+This BIP proposes an application-layer template for revocable proof-of-burn, or ''\"RPoB\"'', transactions.\n+\n+* This proposal uses a new transaction version number to allow for future extensions.\n+* This proposal recommends that implementations who mine and relay transaction to update their standard transaction templates as defined by this document.\n+\n+This proposal aims to support decentralised systems, allowing the use ''RPoB'' assertions in a consistent, efficient, reliable, and interoperable way.\n+\n+''The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119.''\n+\n+===Copyright===\n+This document is dual licensed as BSD 3-clause and Creative Commons CC0 1.0 Universal.\n+\n+===Motivation===\n+In signalling theory<ref group=\"Note\">Evolutionary biology theory of communication, or ''\"signalling theory\"'', where creatures make honest signals that are hard to cheat, for mutual evolutionary advantage.</ref>, proof of burn<ref group=\"Note\">In Bitcoin, ''proof of burn'' places bitcoin value into outputs that provably unspendable. This dose not reduce the wealthy of the network, but instead reduces the velocity of these coins to zero. Transferring the network wealth onto the remaining coins that have a non-zero velocity.</ref> is a costly signal,<ref group=\"Note\">A ''\"costly signal\"'' indicates dedication, an observer expects that such a signal is not made flippantly because the high cost.</ref> allowing the network to assign a default trust.<ref group=\"Note\">An entity is assigned a ''\"default trust\"'' value when they are not connected to the trust graph. Without a default source trust, growing a decentralised web-of-trust network is impossible. New users face a catch-22 problem: they are disconnected from the trust graph and don't have a possibility to prove themselves.</ref> Bitcoin naturally provides an implementation of proof of burn without feedback loops,<ref group=\"Note\">A ''\"feedback loop\"'' is when a trust signal can be amplified by a privileged subset of the network by feeding the creation-cost of this signal back into the process of making the signal.</ref> allowing for default trust to be assigned fairly in decentralised networks.<ref group=\"Note\">New users are able to use a proof-of-burn to bootstrap themselves into new trust networks. 'New-user-with-burn-proofs' can be welcomed-in with basic services and focused attention, as the network knows that it was costly to generate the burn-proof.</ref>\n+\n+The ability to revoke<ref group=\"Note\">To ''\"revoke\", is'' publicly asserting that a previous statement should not be valued as originally intended.</ref> past assertions is important for many applications,<ref group=\"Note\">Unexpected things happen, for example, the loss or compromise of private keys.</ref> therefore proposal couples bitcoin proof-of-burn with a revocation mechanic.\n+\n+In choosing to standardise via the BIP peer-reviewed process, we hope to give the community greater confidence in making use of bitcoin-based revocable proof of burn technology.\n+\n+====Notes:====\n+<references group=\"Note\" />\n+\n+==Design==\n+\n+===Conceptual===\n+''\"Proof-of-Burn\"'' transactions have long exited in Bitcoin, ''\"OP_RETURN\"'' transactions, (named after the op-code ''\"return\"'', that causes the public key script to return in failure, hence making the output unspendable and \"burning\" any value allocated to that output), these transactions have been actively mined since the release of Bitcoin-Core 0.9.\n+\n+Since OP_RETURN doesn't allow the public key script to be spent (as is it's design), there hasn't been any built-in solution addressing the requirements a application-useable proof-of-burn transaction, in particular:\n+\n+*A standard association with a public key in for transaction.\n+*A standard protocol to publicly revoke a proof-of-burn transaction.\n+\n+In this proposal we satisfy these requirements by specifying a taproot public key in the op_return payload and an another output for revocation.\n+\n+===Other Requirements===\n+Operation under <abbr title=\"Simple Payment Verification\">SPV</abbr> assumptions:\n+*Transactions are small: ''RPoB transactions (non-witness-part) are fixed to two possible sizes, depending if there is a change output, or not.''\n+*Revocations are quickly and cheaply indexed: ''RPoB revocations only require obtaining the preimage to a double-sha256 hash. This is easily indexed and propagated in a gossip network.''\n+\n+Ease of implementation:\n+*Use of only Taproot and Schnorr: ''To reduce the scope of the transaction, we use only Taproot for inputs and Outputs, and Schnorr for the signature that covers the funding outpoint.''\n+\n+Transaction funded by 3rd party:\n+* It should be secure for an untrusted 3rd party fund the proof-of-burn transaction. ''Allowing for services to fund these transactions and be compensated with some sort of off-chain payment.''\n+\n+Future extendability:\n+*Making use of the transaction version feature of bitcoin. ''This allows for easier indexing strategies in the future, (with a simple consensus change: to include in the coinbase the number of the transactions in the block by their transaction version).''\n+* Including a byte for 8 version flag bits. ''This allows for a reliable way to upgrade in the future in a forward-comparable way.''\n+\n+===Transaction Design Overview:===\n+[[File:bip-rpob-tx-template/rpob-template-summary-table.svg]]\n+\n+==Specification==\n+This section specifies our RPoB transaction template.\n+\n+===Transaction===\n+General form:\n+<pre>\n+version:      0x3\n+marker:       0x0\n+flag:         0x1\n+txin_count:   0x1\n+txout_count:  0x2 (without change) or 0x3 (with change)\n+lock_time:    (any)\n+</pre>\n+\n+*RPoB transactions MUST use the transaction version (nVersion) 0x03.\n+\n+*RPoB transactions MUST have only one input and either two or three outputs.\n+\n+===Input 1: Funding===\n+General form:\n+<pre>\n+signature_script:  (empty)\n+witness_script:    <taproot_witness>\n+</pre>\n+\n+*The RPoB transaction input MUST be P2TR (Pay to Tap Root).\n+\n+===Output 1: Burn and Data===\n+General form:\n+\n+<pre>\n+value:              (any)\n+public_key_script:  RETURN < 1-byte-rpob_version_flag>\n+                           <32-byte-rpob_secp256k1_public_key>\n+                           <64-byte-rpob_schnorr_signature>\n+</pre>\n+\n+The public key script fields are:\n+\n+<pre>\n+rpob_version_flag:           1-byte , 0x00 (initial version).\n+rpob_secp256k1_public_key:  32-bytes, SECP256K1 compact public key.\n+rpob_schnorr_signature:     64-bytes, bip-340 Schnorr Signature.\n+</pre>\n+\n+*The first RPoB transaction contains the burn value, that is made unspendable by the 'OP_RETURN' in the public key script.\n+\n+===Output 2: Revocation Puzzle===\n+General form:\n+\n+<pre>\n+value:              0\n+public_key_script:  SIZE 32 EQUALVERIFY HASH256\n+                    <32-byte-rpob_revocation_puzzle>\n+                    EQUAL\n+</pre>\n+\n+*The Value of the Revocation Puzzle Output MUST be zero.\n+\n+<code>HASH256</code> is defined by ''double sha256'':\n+\n+<pre>\n+rpob_revocation_puzzle:    32-bytes, public, SHA256(SHA256(\n+                                     <32-byte-rpob_revocation_solution>\n+                                     ))\n+\n+rpob_revocation_solution:  32-bytes, secret, publicly reveal this value to revoke the proof-of-burn.\n+</pre>\n+\n+*It is RECOMMENDED that implementations use a value for the <code>rpob_revocation_solution</code> that is derived from the secret key used to generate the  <code>rpob_secp256k1_public_key</code> .\n+\n+===Output 3, Optional: Change===\n+<pre>\n+value:              (any)\n+public_key_script:  1 <32-byte-taproot_witness_program>\n+</pre>\n+\n+*This output MAY have any value.\n+*The public key MUST be a standard P2TW output.\n+\n+===Signature: Included in Output 1===\n+<pre>\n+rpob_schnorr_signature:       64-bytes, bip-340, signature (\n+                                        <32-byte-rpob_signature_message_hash>,\n+                                        <32-byte-secp256k1_private_key>\n+                                        )\n+\n+rpob_signature_message_hash:  32-bytes, bip-340, sha256_taged_hash (\n+                                        <77-byte-rpob_signature_message>,\n+                                        <16-byte-rpob_hash_tag>\n+                                        )\n+\n+rpob_hash_tag:                16-bytes, utf-8-hash_tag (\"rpob/BTC/MAINNET\")\n+                                    or, utf-8-hash_tag (\"rpob/BTC/TESTNET\")\n+\n+rpob_signature_message:       77-bytes, < 1-byte-version_flags>\n+                                        <32-byte-input_txid_hash>\n+                                        < 4-byte-input_index>\n+                                        < 8-byte-burn_output_value>\n+                                        <32-byte-rpob_revocation_puzzle>\n+</pre>\n+\n+*The <code>rpob_schnorr_signature</code> uses the [https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki BIP-340] algorithm.\n+\n+==Deployment==\n+\n+While the ''IsStandard'' rules are quite restricting, it is quite possible to submit transactions directly to miners, or co-operate with miners who would enjoy to have some addition fee-revenue. So the initial process of testing on the main-network should be possible.\n+\n+If this standard gains significant attention, we are happy to write a supplementary BIP to define a new service bit to allow nodes to signal that this new type of standard transaction is accepted.\n+\n+==Rationale==\n+===Why require RPoB transactions to use a new transaction version?===\n+\n+This allows for future indexing and enforcement strategies at the consensus layer.\n+\n+===Why use a hash puzzle for the revocation?===\n+\n+The hash-puzzle allows for easy indexing of the revocation, in the format:\n+\n+<code><32-byte-revocation-puzzle> (if revoked: <32-byte-revocation-puzzle-preimage>)</code>\n+\n+*Since the digest algorithm is double sha256, even for a very large number of revocation, this index would be very cheap to verify.",
      "path": "bip-rpob-tx-template.mediawiki",
      "position": null,
      "original_position": 191,
      "commit_id": "740d75f635353e33898ee11f40d7b7a680f43dcf",
      "original_commit_id": "2f6e1af500d0b56d03b17734d6aa26b3cc40d9cc",
      "in_reply_to_id": 984077753,
      "user": {
        "login": "veleslavs",
        "id": 28802530,
        "node_id": "MDQ6VXNlcjI4ODAyNTMw",
        "avatar_url": "https://avatars.githubusercontent.com/u/28802530?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/veleslavs",
        "html_url": "https://github.com/veleslavs",
        "followers_url": "https://api.github.com/users/veleslavs/followers",
        "following_url": "https://api.github.com/users/veleslavs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/veleslavs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/veleslavs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/veleslavs/subscriptions",
        "organizations_url": "https://api.github.com/users/veleslavs/orgs",
        "repos_url": "https://api.github.com/users/veleslavs/repos",
        "events_url": "https://api.github.com/users/veleslavs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/veleslavs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated, to state that it is in contrast to, for example, having revocations that are based upon a cryptographic signature.",
      "created_at": "2022-10-23T13:36:52Z",
      "updated_at": "2022-10-23T13:36:53Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1362#discussion_r1002711886",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1002711886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1362"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    }
  ]
}