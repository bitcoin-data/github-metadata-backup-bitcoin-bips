{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1793",
    "id": 2396778495,
    "node_id": "PR_kwDOAN28mc6O2-__",
    "html_url": "https://github.com/bitcoin/bips/pull/1793",
    "diff_url": "https://github.com/bitcoin/bips/pull/1793.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1793.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1793",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1793/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1793/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1793/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
    "number": 1793,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP draft: OP_CHECKCONTRACTVERIFY",
    "user": {
      "login": "bigspider",
      "id": 6681844,
      "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bigspider",
      "html_url": "https://github.com/bigspider",
      "followers_url": "https://api.github.com/users/bigspider/followers",
      "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
      "organizations_url": "https://api.github.com/users/bigspider/orgs",
      "repos_url": "https://api.github.com/users/bigspider/repos",
      "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/bigspider/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Hi all,\r\n\r\nThis is a draft for the formal specifications of the `OP_CHECKCONTRACTVERIFY` (`CCV`) opcode.\r\n\r\n`CCV` enables to build Script-based state machines that span across multiple transactions, by providing an ergonomic tool to commit to - and introspect - the Script and possibly some _data_ that is committed inside inputs or outputs.\r\n\r\nRelated to this PR:\r\n- [Implementation in bitcoin-core](https://github.com/bitcoin/bitcoin/pull/32080)\r\n- [Post on delving bitcoin](https://delvingbitcoin.org/t/op-checkcontractverify-and-its-amount-semantic/1527), focusing on the amount logic of the opcode.\r\n\r\nNot covered in this draft:\r\n- sigops budget (benchmarks needed)\r\n- activation logic\r\n- policy considerations (if any)\r\n\r\nI recommend delving bitcoin for high level discussions about alternative implementations, applications, etc.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2025-03-17T05:58:38Z",
    "updated_at": "2025-03-17T13:02:45Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merged": false,
    "merge_commit_sha": "f3bb02c9e2807b4388c1ee318d2b1c4b13f218a4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Merkleize:ccv",
      "ref": "ccv",
      "sha": "4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "user": {
        "login": "Merkleize",
        "id": 116372855,
        "node_id": "O_kgDOBu-1dw",
        "avatar_url": "https://avatars.githubusercontent.com/u/116372855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Merkleize",
        "html_url": "https://github.com/Merkleize",
        "followers_url": "https://api.github.com/users/Merkleize/followers",
        "following_url": "https://api.github.com/users/Merkleize/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Merkleize/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Merkleize/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Merkleize/subscriptions",
        "organizations_url": "https://api.github.com/users/Merkleize/orgs",
        "repos_url": "https://api.github.com/users/Merkleize/repos",
        "events_url": "https://api.github.com/users/Merkleize/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Merkleize/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 902777682,
        "node_id": "R_kgDONc9LUg",
        "name": "bips",
        "full_name": "Merkleize/bips",
        "owner": {
          "login": "Merkleize",
          "id": 116372855,
          "node_id": "O_kgDOBu-1dw",
          "avatar_url": "https://avatars.githubusercontent.com/u/116372855?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Merkleize",
          "html_url": "https://github.com/Merkleize",
          "followers_url": "https://api.github.com/users/Merkleize/followers",
          "following_url": "https://api.github.com/users/Merkleize/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Merkleize/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Merkleize/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Merkleize/subscriptions",
          "organizations_url": "https://api.github.com/users/Merkleize/orgs",
          "repos_url": "https://api.github.com/users/Merkleize/repos",
          "events_url": "https://api.github.com/users/Merkleize/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Merkleize/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Merkleize/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/Merkleize/bips",
        "archive_url": "https://api.github.com/repos/Merkleize/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Merkleize/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Merkleize/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Merkleize/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Merkleize/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Merkleize/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Merkleize/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Merkleize/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Merkleize/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Merkleize/bips/contributors",
        "deployments_url": "https://api.github.com/repos/Merkleize/bips/deployments",
        "downloads_url": "https://api.github.com/repos/Merkleize/bips/downloads",
        "events_url": "https://api.github.com/repos/Merkleize/bips/events",
        "forks_url": "https://api.github.com/repos/Merkleize/bips/forks",
        "git_commits_url": "https://api.github.com/repos/Merkleize/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Merkleize/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Merkleize/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Merkleize/bips.git",
        "issue_comment_url": "https://api.github.com/repos/Merkleize/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Merkleize/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Merkleize/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Merkleize/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Merkleize/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Merkleize/bips/languages",
        "merges_url": "https://api.github.com/repos/Merkleize/bips/merges",
        "milestones_url": "https://api.github.com/repos/Merkleize/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Merkleize/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Merkleize/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Merkleize/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:Merkleize/bips.git",
        "stargazers_url": "https://api.github.com/repos/Merkleize/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/Merkleize/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Merkleize/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/Merkleize/bips/subscription",
        "tags_url": "https://api.github.com/repos/Merkleize/bips/tags",
        "teams_url": "https://api.github.com/repos/Merkleize/bips/teams",
        "trees_url": "https://api.github.com/repos/Merkleize/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Merkleize/bips.git",
        "hooks_url": "https://api.github.com/repos/Merkleize/bips/hooks",
        "svn_url": "https://github.com/Merkleize/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 15425,
        "default_branch": "ccv",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-17T06:02:48Z",
        "created_at": "2024-12-13T08:49:05Z",
        "updated_at": "2025-03-17T06:02:59Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "00c13baff0dc4a3a250d9725129b0d2c8d0be6a9",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5534,
        "stargazers_count": 9785,
        "watchers_count": 9785,
        "size": 15357,
        "default_branch": "master",
        "open_issues_count": 39,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-13T19:29:25Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-03-17T10:22:59Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1793"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 416,
    "deletions": 0,
    "changed_files": 5,
    "commits": 1,
    "review_comments": 1,
    "comments": 0
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDQyNDBmYThmYjFiYTgzNGVlYTFjNTJjMGQxYzBkOWFmMTQzODg3MmM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "tree": {
        "sha": "4e4b163d72d21e02f43ff953299e38f799430e3e",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/4e4b163d72d21e02f43ff953299e38f799430e3e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4e4b163d72d21e02f43ff953299e38f799430e3e\nparent 00c13baff0dc4a3a250d9725129b0d2c8d0be6a9\nauthor Salvatore Ingala <6681844+bigspider@users.noreply.github.com> 1733697520 +0100\ncommitter Salvatore Ingala <6681844+bigspider@users.noreply.github.com> 1742191365 +0100\n\nBIP draft for OP_CHECKCONTRACTVERIFY\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEn0ARRHpjklTOSGV2dAYP+Bsz5PgFAmfXuwUACgkQdAYP+Bsz\n5Pi6SAv8Da4XCyEPEfeaaGia2URq5O4YyOiqIOTmkZOxWmTEa0JBq2DSrHt5M07Q\nZVYThqsudWxpVv0RLkc/h97VeArzo5OkTGE1+2dDuvL/ZQ8QlnNE6OMnpVoveWmp\nXTLqko8NRPSWroq434aKo+vPfYnfDD1FV6lmbxtgY3+p5SPAqFGDER1mpTUNj5Yi\n1Jt15aOgXvAHiQTzXQn2A5BICccwqvUkWz+5y28DIToScSmOGGL04cI5df/PkmjC\n8dJoxWVweDRCfvByu1CNHEMiSS+oOGp8hmk9sY9PmDSQGwlOS4+XERKzpovXB49w\nkDAECLgisxC1ja7PaBtmXU6+3JD9jsjD0lGpQTBdTcZ9BUGJBwk9B6XqR69Fu7/J\neenSoUkAV/TmxnRtWx2ctrBaNQlkwaSTPcgyErMM5CLJOQUKk33nyRdO8THk3hB9\nG62G6AJbfkiBH4uM0koeDQcW1jRbG5EOSZ0AA7lIRYI20fqfTS3zEHWC/e38RSZY\nxAvEE1zZ\n=O1Hl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/00c13baff0dc4a3a250d9725129b0d2c8d0be6a9",
          "sha": "00c13baff0dc4a3a250d9725129b0d2c8d0be6a9",
          "html_url": "https://github.com/bitcoin/bips/commit/00c13baff0dc4a3a250d9725129b0d2c8d0be6a9"
        }
      ],
      "message": "BIP draft for OP_CHECKCONTRACTVERIFY",
      "committer": {
        "name": "Salvatore Ingala",
        "email": "6681844+bigspider@users.noreply.github.com",
        "date": "2025-03-17T06:02:45Z"
      },
      "author": {
        "name": "Salvatore Ingala",
        "email": "6681844+bigspider@users.noreply.github.com",
        "date": "2024-12-08T22:38:40Z"
      },
      "sha": "4240fa8fb1ba834eea1c52c0d1c0d9af1438872c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16795030288,
      "node_id": "HRFPE_lADOAN28mc6uRj3YzwAAAAPpD9MQ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16795030288",
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "commit_url": "https://api.github.com/repos/Merkleize/bips/commits/4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "created_at": "2025-03-17T06:02:49Z"
    },
    {
      "event": "labeled",
      "id": 16795496149,
      "node_id": "LE_lADOAN28mc6uRj3YzwAAAAPpFu7V",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16795496149",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-17T06:37:02Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 2690410810,
      "node_id": "PRR_kwDOAN28mc6gXGk6",
      "url": null,
      "actor": null,
      "commit_id": "4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1793#pullrequestreview-2690410810",
      "submitted_at": "2025-03-17T13:02:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1793"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1998687605",
      "pull_request_review_id": 2690410810,
      "id": 1998687605,
      "node_id": "PRRC_kwDOAN28mc53IY11",
      "diff_hunk": "@@ -0,0 +1,416 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Consensus (soft fork)\n+  Title: OP_CHECKCONTRACTVERIFY\n+  Author: Salvatore Ingala <salvatoshi@protonmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: TBD\n+  License: BSD-3-Clause\n+  Post-History: 2022-11-08: https://gnusha.org/pi/bitcoindev/CAMhCMoH9uZPeAE_2tWH6rf0RndqV+ypjbNzazpFwFnLUpPsZ7g@mail.gmail.com\n+                2023-07-30: https://gnusha.org/pi/bitcoindev/CAMhCMoFYF+9NL1sqKfn=ma3C_mfQv7mj2fqbqO5WXVwd6vyhLw@mail.gmail.com\n+</pre>\n+\n+\n+== Introduction ==\n+\n+This BIP proposes a new tapscript opcode that adds consensus support for an opcode that enables a new type of output restrictions: <code>OP_CHECKCONTRACTVERIFY</code> (<code>OP_CCV</code>).\n+\n+This opcode enables users to create UTXOs that carry a dynamic commitment to a piece of data. The commitment can be validated during the execution of the Script, allowing introspection to the committed data. Moreover, a Script can constrain the program (internal public key and taptree) and the data of one or more outputs.\n+\n+In conjunction with an opcode for ''vector commitments'', this allows to create and compose arbitrary state machines that define the possible future outcomes of a UTXO. The validity of a state transition depends on the conditions that can be expressed in the program (Scripts in the taptree).\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+=== Motivation ===\n+\n+The ability to constrain the future of coins beyond what is possible with presigned transactions is at the core of numerous attempts to improve bitcoin. Some of the proposed applications include:\n+\n+* UTXO sharing schemes like Ark, CoinPools, Timeout Trees, etc. use various types of output restrictions in order to enable multiple parties to share the control of a UTXO, while ensuring that each participant controls their own balance.\n+* <code>OP_VAULT</code><ref>[[bip-0345.mediawiki|BIP-345]]</ref> is a proposed opcode to implement a 2-step withdrawal process, enabling on-chain reactive security.\n+* <code>OP_CHECKTEMPLATEVERIFY</code><ref>[[bip-119.mediawiki|BIP-114]]</ref> is a long-proposed opcode to constrain the transaction to a ''template'' with a fixed set of outputs.\n+* Sidechains and rollups could be implemented via a UTXO encumbered with a recursive covenant, updating the sidechain state root every time it is spent.\n+\n+Constructions like BitVM<ref>https://bitvm.org/</ref> try to side-step the lack of a primitive allowing UTXOs to carry state with a clever use of Lamport Signatures, and optimistic execution of smart contracts. This comes with an extremely high cost in term of complexity, interactivity, and (potentially) in block size occupation, for some of the possible execution paths. Moreover, the design of fully trustless bridges remains elusive.\n+\n+Rather than providing a construct optimized for a specific application, this BIP aims to provide a fundamental building block that is widely applicable, and common to many constructions.\n+\n+== Design ==\n+\n+We consider the ''program'' of a P2TR UTXO to be composed of an x-only public key (that we call the ''naked key''), and a Merkle tree of Scripts. If there is no data committed in the UTXO, then the naked key is the internal key as defined in BIP-341.\n+\n+If the UTXO carries a commitment to a 32-byte hash (the ''data''), the naked key is tweaked with a hash of the data. The resulting key is the taproot internal key per BIP-341.\n+\n+This allows to embed a commitment to the data that can be validated during the Script execution, with an ad-hoc opcode called <code>OP_CHECKCONTRACTVERIFY</code>, while staying fully compatible with taproot. Notably:\n+* the committed data does not make the UTXO any larger;\n+* the keypath spend is still available to any party that possesses the private key of the naked key, as long as they have knowledge of the embedded data;\n+* if multiple Scripts are in different leaves of the taptree, only the ones that actually need to access the data have to pay a cost for it, in terms of additional witness bytes.\n+\n+<code>OP_CHECKCONTRACTVERIFY</code> can be applied to introspect the program and data of one of the inputs of the transaction (typically, the current input, in order to access its committed data), or one of the outputs of the transaction (in order to define its program, and possibly its committed data).\n+\n+=== Output amounts ===\n+\n+When checking the Script of one or more output with <code>OP_CHECKCONTRACTVERIFY</code>, it is usually necessary to also check that the amount of the current UTXO is correctly distributed among the outputs in the expected way. Therefore, the opcode already includes an amount semantic that covers the common use cases.\n+\n+There are two main behaviors that the opcode can enforce when checking an output, depending on the value of the flags:\n+* ''default'': the residual amount of the current input must be preserved in the output (aggregate across the inputs that specify the output);\n+* ''deduct'': the amount of the checked output is subtracted from the amount of the current input (the residual amount is then available for further checks);\n+* ''ignore'': the output amount is ignored.\n+\n+The ''default'' logic covers the common case where an input wishes to send the full amount to a specific output.\n+\n+The ''deduct'' logic allows to assign portions of the input amount to one or more outputs; the residual amount, checked with a final check using the ''default'' logic, can be used to enforce that the total amount is preserved.\n+\n+The following figures illustrate some common examples of supported use cases for the amount logic. This list is not exhaustive, as there are many more possible combinations.\n+\n+'''Remark:''' validation fails if the amount of an output is checked with both the ''default'' and the ''deduct'' logic in the same transaction, or multiple times with the ''deduct'' logic. This prevents duplicate or inconsistent counting of the same amounts.\n+\n+'''Remark:''' it is allowed to check for multiple inputs to check the same output with the ''default'' logic. This allows multiple inputs to aggregate (in full or in part) their amounts to the same output.\n+\n+-----\n+\n+::[[File:bip-ccv/amount_example_1.png|framed|center|alt=1-to-1 amount logic|600px]]\n+::'''Figure 1:''' A UTXO <code>A</code> sends the entire amount to some output contract <code>B</code>, using <code>CCV</code> with the <i>default</i> semantic.\n+\n+-----\n+\n+::[[File:bip-ccv/amount_example_2.png|framed|center|alt=3-to-1 aggregate amount logic|600px]]\n+::'''Figure 2:''' Three UTXOs aggregate their amounts towards the same output contract, using <code>CCV</code> with the <i>default</i> semantic.\n+\n+-----\n+\n+::[[File:bip-ccv/amount_example_3.png|framed|center|alt=split amount logic|600px]]\n+::'''Figure 3:''' A UTXO <code>A</code> sends a portion of its amount to a contract <code>A'</code> identical to itself, and the rest to a different contract <code>B</code>. It would use <code>CCV</code> to introspect its own input's program, then to check the first output with the <i>deduct</i> semantic, then to check the second output with the <i>default</i> semantic to assign the residual amount.\n+\n+-----\n+\n+::[[File:bip-ccv/amount_example_4.png|framed|center|alt=split and aggregate amount logic|600px]]\n+::'''Figure 4:''' Similar to the previous example, but a second input <code>B</code> also checks the same output <code>X</code> with the <i>default</i> semantic, aggregating its input with the residual amount of the first input.\n+\n+-----\n+\n+Note that the ''deduct'' semantic does not allow to check the exact amount of its output. Therefore, in contracts using a scheme similar to figure 3 or 4 above, amounts be constrained with a signature, or with future introspection opcodes that allow fixing the amount.\n+\n+== Specification ==\n+\n+The tapscript opcode <code>OP_SUCCESS187</code> (<code>0xbb</code>) is constrained with new rules to implement <code>OP_CHECKCONTRACTVERIFY</code>.\n+\n+When evaluating <code>OP_CHECKCONTRACTVERIFY</code> (<code>OP_SUCCESS187</code>,\n+<code>0xbb</code>), the expected format of the stack, shown top to bottom, is:\n+\n+<source>\n+<flags>\n+<taptree>\n+<pk>\n+<index>\n+<data>\n+</source>\n+\n+where:\n+\n+* <code><flags></code> is a minimally encoded integer, according to one of the values defined below.\n+* <code><taptree></code> is the Merkle root of the taproot tree, or a minimally encoded <code>-1</code>, or the empty buffer.\n+* <code><pk></code> is called the ''naked key'', and it's a valid 32-byte x-only public key, or a minimally encoded <code>-1</code>, or the empty buffer.\n+* <code><index></code> is a minimally encoded -1, or a minimally encoded non-negative integer.\n+* <code><data></code> is a buffer of arbitrary length.\n+\n+In short, the semantics of the opcode with respect to the Script can be summarized as follows:\n+\n+  Verify that the input/output with the given <code>index</code> is a P2TR output where the public key is obtained from <code><pk></code>, tweaked with the hash of <data> (if non-empty), then taptweaked with <code><taptree</code> (if present).\n+\n+If the <code>data</code> is non-empty, then the additive tweak for the data is computed as:\n+\n+<source lang=\"python\">\n+  data_tweak = sha256(pk || data)\n+</source>\n+\n+In the following, the ''current input'' is the input whose Script is being executed.\n+\n+The following value of the <code><flags></code> are defined:\n+* <code>CCV_FLAG_CHECK_INPUT = -1</code>: Check an input's script; no amount check.\n+* <code>CCV_FLAG_CHECK_OUTPUT = 0</code>: Check an output's script; preserve the (possibly residual) amount.\n+* <code>CCV_FLAG_IGNORE_OUTPUT_AMOUNT = 1</code>: Check an output's script; ignore amounts.\n+* <code>CCV_FLAG_DEDUCT_OUTPUT_AMOUNT = 2</code>: Check an output's script; deduct the output amount from the input's residual amount.\n+\n+Any other value of the <code><flags></code> makes the opcode succeed validation immediately for the current input<ref>This allows to soft-fork future behavior by introducing new values for the <code><flags></code>. As the flags would always be hard-coded via a push in the Script, the risk of mistakes seems negligible.</ref>.\n+\n+The following values of the other parameters have special meanings:\n+* If the <code><taptree></code> is -1, it is replaced with the Merkle root of the current input's tapscript tree. If the taptree is the empty buffer, then the taptweak is skipped.\n+* If the <code><pk></code> is 0, it is replaced with it is replaced with the NUMS x-only pubkey <code>0x50929b74c1a04954b78b4b6035e97a5e078a5a0f28ec96d547bfee9ace803ac0</code> defined in BIP-0340. If the <code><pk></code> is -1, it is replaced with the taproot internal key of the current input.\n+* If the <code><index></code> is -1, it is replaced with the index of the current input.\n+* If the <code><data></code> is the empty buffer, then there is no data tweak for the input/output being checked.\n+\n+Any other value of the parameters (except the <code><flags></code> as specified above) is invalid, and makes the opcode fail validation immediately.\n+\n+=== Script support for <code>OP_CHECKCONTRACTVERIFY</code> ===\n+\n+The specification is divided in three parts:\n+* the transaction-wide initialization;\n+* the input initialization;\n+* the opcode evaluation.\n+\n+The following helper function is a version of <code>taproot_tweak_pubkey</code>, except that a raw 32-byte data is used as the tweak.\n+\n+<source lang=\"python\">\n+def tweak_embed_data(pubkey, data):\n+    assert len(pubkey) == 32\n+\n+    data_tweak = sha256(pubkey + data)\n+\n+    t = int_from_bytes(data_tweak)\n+    if t >= SECP256K1_ORDER:\n+        raise ValueError\n+    P = lift_x(int_from_bytes(pubkey))\n+    if P is None:\n+        raise ValueError\n+    Q = point_add(P, point_mul(G, t))\n+    return 0 if has_even_y(Q) else 1, bytes_from_int(x(Q))\n+</source>\n+\n+The <code>taproot_tweak_pubkey</code> from [[bip-0341.mediawiki|BIP341]] is also used as a helper function.\n+\n+The following notations are used in the pseudocode below:\n+* <code>n_inputs</code> and <code>n_outputs</code> are the number of inputs and outputs of the transaction, respectively;\n+* <code>inputs[i]</code> is the i-th input of the transaction;\n+* <code>outputs[i]</code> is the i-th output of the transaction;\n+* <code>this_input_index</code>, <code>this_input_internal_key</code> and <code>this_input_taptree</code> are the index, taproot internal key and taproot Merkle root of the current input, respectively.\n+* <code>P2TR(key)</code> computes the scriptPubKey of the P2TR output with the given key as the taproot output key.\n+\n+==== Transaction-wide initialization ====\n+\n+This is executed once for the entire transaction, before any of the transaction input's Scripts are evaluated. It initializes three arrays that are used to keep track of the amount information of the output.\n+\n+<source lang=\"python\">\n+  output_min_amount = [0] * n_outputs\n+  output_checked_default = [False] * n_outputs\n+  output_checked_deduct = [False] * n_outputs\n+</source>\n+\n+==== Input initialization ====\n+\n+This is executed at the beginning of the evaluation of each input's Script. It initializes the residual amount to equal the full amount of the current input.\n+\n+<source lang=\"python\">\n+  residual_input_amount = input[this_input_index].amount\n+</source>\n+\n+==== <code>OP_CHECKCONTRACTVERIFY</code> evaluation ====\n+\n+The following code is executed every time the <code>OP_CHECKCONTRACTVERIFY</code> opcode is encountered during the evalutation of a taproot Script spend. <code>this_input_index</code>, <code>this_input_internal_key</code> and <code>this_input_taptree</code> are the index, taproot internal key and taproot Merkle root of the current input.\n+\n+<code>BIP341_NUMS_KEY</code> is the x-only provably unspendable key <code>50929b74c1a04954b78b4b6035e97a5e078a5a0f28ec96d547bfee9ace803ac0</code> defined in [[bip-341.mediawiki|BIP-341]].\n+\n+<source lang=\"python\">\n+  if flags < CCV_FLAG_CHECK_INPUT or flags > CCV_FLAG_DEDUCT_OUTPUT_AMOUNT:\n+    return success()  # undefined flags are OP_SUCCESS\n+\n+  if index == -1:\n+    index = this_input_index\n+\n+  if flags == CCV_FLAG_CHECK_INPUT:\n+    if index < 0 or index >= n_inputs:\n+      return fail()  # input index out of bounds\n+\n+    target_script = inputs[index].scriptPubKey\n+  else:\n+    if index < 0 or index >= n_outputs:\n+      return fail()  # output index out of bounds\n+\n+    target_script = outputs[index].scriptPubKey\n+\n+  if taptree == <-1>:\n+    taptree = this_input_taptree\n+\n+  if pk == <0>:\n+    naked_key = BIP341_NUMS_KEY\n+  elif pk == <-1>:\n+    naked_key = this_input_internal_key\n+  elif len(pk) == 32:\n+    naked_key = pk\n+  else:\n+    return fail()\n+\n+  # Verify the target contract data and program\n+  _, internal_key = tweak_embed_data(naked_key, data)\n+\n+  if len(taptree) != 0:\n+    if len(taptree) != 32:\n+      return fail()\n+\n+    _, final_key = taproot_tweak_pubkey(internal_key, taptree)\n+  else:\n+    final_key = internal_key\n+\n+  if target_script != P2TR(final_key):\n+    return fail()\n+\n+  # Amount checks\n+\n+  if flags == 0:",
      "path": "bip-ccv.mediawiki",
      "position": 252,
      "original_position": 252,
      "commit_id": "4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "original_commit_id": "4240fa8fb1ba834eea1c52c0d1c0d9af1438872c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n  if flags == CCV_FLAG_CHECK_OUTPUT:\r\n```",
      "created_at": "2025-03-17T13:02:45Z",
      "updated_at": "2025-03-17T13:02:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1793#discussion_r1998687605",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1998687605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1793"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 252,
      "original_line": 252,
      "side": "RIGHT"
    }
  ]
}