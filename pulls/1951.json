{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1951",
    "id": 2798218369,
    "node_id": "PR_kwDOAN28mc6myWyB",
    "html_url": "https://github.com/bitcoin/bips/pull/1951",
    "diff_url": "https://github.com/bitcoin/bips/pull/1951.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1951.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1951/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/aa37c4bbc146ea3045548b9527215b14713f1add",
    "number": 1951,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Bip draft: Bitcoin Encrypted Backup",
    "user": {
      "login": "pythcoiner",
      "id": 124568858,
      "node_id": "U_kgDOB2zFGg",
      "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pythcoiner",
      "html_url": "https://github.com/pythcoiner",
      "followers_url": "https://api.github.com/users/pythcoiner/followers",
      "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
      "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
      "repos_url": "https://api.github.com/users/pythcoiner/repos",
      "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This is a bip for encrypted backup, an encryption scheme for bitcoin wallet related metadata.\r\n\r\nMailing list post: https://groups.google.com/g/bitcoindev/c/5NgJbpVDgEc\r\n",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2025-09-04T06:47:33Z",
    "updated_at": "2025-09-16T08:45:57Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merged": false,
    "merge_commit_sha": "ba1880cedf4ba1b58ea06d41af389b466f0bb777",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "pythcoiner:encrypted_descriptor",
      "ref": "encrypted_descriptor",
      "sha": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1042613972,
        "node_id": "R_kgDOPiUG1A",
        "name": "bips",
        "full_name": "pythcoiner/bips",
        "owner": {
          "login": "pythcoiner",
          "id": 124568858,
          "node_id": "U_kgDOB2zFGg",
          "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pythcoiner",
          "html_url": "https://github.com/pythcoiner",
          "followers_url": "https://api.github.com/users/pythcoiner/followers",
          "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
          "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
          "repos_url": "https://api.github.com/users/pythcoiner/repos",
          "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/pythcoiner/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/pythcoiner/bips",
        "archive_url": "https://api.github.com/repos/pythcoiner/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pythcoiner/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pythcoiner/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pythcoiner/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pythcoiner/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pythcoiner/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pythcoiner/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pythcoiner/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pythcoiner/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pythcoiner/bips/contributors",
        "deployments_url": "https://api.github.com/repos/pythcoiner/bips/deployments",
        "downloads_url": "https://api.github.com/repos/pythcoiner/bips/downloads",
        "events_url": "https://api.github.com/repos/pythcoiner/bips/events",
        "forks_url": "https://api.github.com/repos/pythcoiner/bips/forks",
        "git_commits_url": "https://api.github.com/repos/pythcoiner/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pythcoiner/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pythcoiner/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pythcoiner/bips.git",
        "issue_comment_url": "https://api.github.com/repos/pythcoiner/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pythcoiner/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pythcoiner/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pythcoiner/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pythcoiner/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pythcoiner/bips/languages",
        "merges_url": "https://api.github.com/repos/pythcoiner/bips/merges",
        "milestones_url": "https://api.github.com/repos/pythcoiner/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pythcoiner/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pythcoiner/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pythcoiner/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:pythcoiner/bips.git",
        "stargazers_url": "https://api.github.com/repos/pythcoiner/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/pythcoiner/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pythcoiner/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/pythcoiner/bips/subscription",
        "tags_url": "https://api.github.com/repos/pythcoiner/bips/tags",
        "teams_url": "https://api.github.com/repos/pythcoiner/bips/teams",
        "trees_url": "https://api.github.com/repos/pythcoiner/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pythcoiner/bips.git",
        "hooks_url": "https://api.github.com/repos/pythcoiner/bips/hooks",
        "svn_url": "https://github.com/pythcoiner/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 16610,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-13T11:46:36Z",
        "created_at": "2025-08-22T09:43:18Z",
        "updated_at": "2025-08-22T09:43:18Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "abf3bdab2947cad5204b60d298b305adc597f04c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5732,
        "stargazers_count": 10194,
        "watchers_count": 10194,
        "size": 16635,
        "default_branch": "master",
        "open_issues_count": 44,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-15T20:53:46Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-09-16T08:24:09Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
      }
    },
    "author_association": "NONE",
    "draft": true,
    "additions": 288,
    "deletions": 0,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 34,
    "comments": 7
  },
  "events": [
    {
      "event": "convert_to_draft",
      "id": 19496912255,
      "node_id": "CTDE_lADOAN28mc7Jm0XWzwAAAASKG0V_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19496912255",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T06:47:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19497141103,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASKHsNv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19497141103",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "created_at": "2025-09-04T07:02:07Z"
    },
    {
      "event": "reviewed",
      "id": 3183882354,
      "node_id": "PRR_kwDOAN28mc69xjBy",
      "url": null,
      "actor": null,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-04T08:18:47Z",
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#pullrequestreview-3183882354",
      "submitted_at": "2025-09-04T08:18:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
    },
    {
      "event": "commented",
      "id": 3252840631,
      "node_id": "IC_kwDOAN28mc7B4mi3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3252840631",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T09:42:45Z",
      "updated_at": "2025-09-04T09:42:45Z",
      "author_association": "NONE",
      "body": "thanks for the review! will address comments tmr!",
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#issuecomment-3252840631",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951"
    },
    {
      "event": "labeled",
      "id": 19502139048,
      "node_id": "LE_lADOAN28mc7Jm0XWzwAAAASKawao",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19502139048",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T11:28:13Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 3253560385,
      "node_id": "IC_kwDOAN28mc7B7WRB",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3253560385",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T12:52:31Z",
      "updated_at": "2025-09-04T12:52:31Z",
      "author_association": "MEMBER",
      "body": "> **Open questions**\r\n\r\n> - **Deterministic nonce:** Currently the nonce is generated randomly. Is it safe to produce a deterministic nonce, e.g. `hash(\"NONCE\" || plaintext || key_1 || … || key_n)`, or are there known security concerns with this approach?  \r\n\r\nIn general nonce reuse is unsafe because if you make multiple backups over time, e.g. as you add more transaction labels, you would be reusing the nonce with different message. By including the `plaintext` in the nonce, you do address that concern.\r\n\r\nHowever it still seems unwise to mess with cryptographic standards. It doesn't seem worth the risk for saving 32 bytes on something that's going to be at least a few hundred bytes for a typical multisig.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#issuecomment-3253560385",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951"
    },
    {
      "event": "commented",
      "id": 3254653055,
      "node_id": "IC_kwDOAN28mc7B_hB_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3254653055",
      "actor": {
        "login": "shocknet-justin",
        "id": 34176400,
        "node_id": "MDQ6VXNlcjM0MTc2NDAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/34176400?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shocknet-justin",
        "html_url": "https://github.com/shocknet-justin",
        "followers_url": "https://api.github.com/users/shocknet-justin/followers",
        "following_url": "https://api.github.com/users/shocknet-justin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/shocknet-justin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/shocknet-justin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/shocknet-justin/subscriptions",
        "organizations_url": "https://api.github.com/users/shocknet-justin/orgs",
        "repos_url": "https://api.github.com/users/shocknet-justin/repos",
        "events_url": "https://api.github.com/users/shocknet-justin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/shocknet-justin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T17:09:38Z",
      "updated_at": "2025-09-04T17:09:38Z",
      "author_association": "NONE",
      "body": "Concept ACK, seems adjacent to how some lightning tools enable users to recover SCB's with just their seed to identify and decrypt the backup. Makes sense for descriptors to have something similar.",
      "user": {
        "login": "shocknet-justin",
        "id": 34176400,
        "node_id": "MDQ6VXNlcjM0MTc2NDAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/34176400?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shocknet-justin",
        "html_url": "https://github.com/shocknet-justin",
        "followers_url": "https://api.github.com/users/shocknet-justin/followers",
        "following_url": "https://api.github.com/users/shocknet-justin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/shocknet-justin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/shocknet-justin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/shocknet-justin/subscriptions",
        "organizations_url": "https://api.github.com/users/shocknet-justin/orgs",
        "repos_url": "https://api.github.com/users/shocknet-justin/repos",
        "events_url": "https://api.github.com/users/shocknet-justin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/shocknet-justin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#issuecomment-3254653055",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19522356999,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASLn4cH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19522356999",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "325a933152779fc1dd8845413fea4b4d3f9af0f1",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/325a933152779fc1dd8845413fea4b4d3f9af0f1",
      "created_at": "2025-09-05T06:04:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19522473548,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASLoU5M",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19522473548",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c0722e83501f626bbf8f0fb3439ffb4ee7107366",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/c0722e83501f626bbf8f0fb3439ffb4ee7107366",
      "created_at": "2025-09-05T06:14:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19522494952,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASLoaHo",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19522494952",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "86cdcf52e634116ac655fe0248c198da9620cfa1",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/86cdcf52e634116ac655fe0248c198da9620cfa1",
      "created_at": "2025-09-05T06:15:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19522520490,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASLogWq",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19522520490",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ea2a73d28fe695bad16b6857028e8a36655cc17f",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/ea2a73d28fe695bad16b6857028e8a36655cc17f",
      "created_at": "2025-09-05T06:17:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19522587537,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASLowuR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19522587537",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d36fb2858efbc8233a289e761a7d71b5be736c94",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/d36fb2858efbc8233a289e761a7d71b5be736c94",
      "created_at": "2025-09-05T06:23:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19522627714,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASLo6iC",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19522627714",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1e4ca34d6264b5a4790299d72946eb5b1d0037a0",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/1e4ca34d6264b5a4790299d72946eb5b1d0037a0",
      "created_at": "2025-09-05T06:26:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19522670172,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASLpE5c",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19522670172",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3b6b6ad642c04ee43045289f9ca2ef0c807b124c",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/3b6b6ad642c04ee43045289f9ca2ef0c807b124c",
      "created_at": "2025-09-05T06:30:26Z"
    },
    {
      "event": "commented",
      "id": 3257282280,
      "node_id": "IC_kwDOAN28mc7CJi7o",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3257282280",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T06:59:06Z",
      "updated_at": "2025-09-05T06:59:06Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#issuecomment-3257282280",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951"
    },
    {
      "event": "commented",
      "id": 3257757521,
      "node_id": "IC_kwDOAN28mc7CLW9R",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3257757521",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-05T09:50:54Z",
      "updated_at": "2025-09-05T09:50:54Z",
      "author_association": "NONE",
      "body": "(not yet finish addressing comments)",
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#issuecomment-3257757521",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951"
    },
    {
      "event": "reviewed",
      "id": 3197091796,
      "node_id": "PRR_kwDOAN28mc6-j7_U",
      "url": null,
      "actor": null,
      "commit_id": "2ec6487d7447ec9d88e2048c2a954569cbf66286",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-08T15:40:22Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "torkelrogstad",
        "id": 16610775,
        "node_id": "MDQ6VXNlcjE2NjEwNzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/16610775?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/torkelrogstad",
        "html_url": "https://github.com/torkelrogstad",
        "followers_url": "https://api.github.com/users/torkelrogstad/followers",
        "following_url": "https://api.github.com/users/torkelrogstad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/torkelrogstad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/torkelrogstad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/torkelrogstad/subscriptions",
        "organizations_url": "https://api.github.com/users/torkelrogstad/orgs",
        "repos_url": "https://api.github.com/users/torkelrogstad/repos",
        "events_url": "https://api.github.com/users/torkelrogstad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/torkelrogstad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#pullrequestreview-3197091796",
      "submitted_at": "2025-09-08T15:40:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
    },
    {
      "event": "commented",
      "id": 3272411570,
      "node_id": "IC_kwDOAN28mc7DDQmy",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3272411570",
      "actor": {
        "login": "KeysSoze",
        "id": 228577878,
        "node_id": "U_kgDODZ_SVg",
        "avatar_url": "https://avatars.githubusercontent.com/u/228577878?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KeysSoze",
        "html_url": "https://github.com/KeysSoze",
        "followers_url": "https://api.github.com/users/KeysSoze/followers",
        "following_url": "https://api.github.com/users/KeysSoze/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KeysSoze/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KeysSoze/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KeysSoze/subscriptions",
        "organizations_url": "https://api.github.com/users/KeysSoze/orgs",
        "repos_url": "https://api.github.com/users/KeysSoze/repos",
        "events_url": "https://api.github.com/users/KeysSoze/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KeysSoze/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T21:57:53Z",
      "updated_at": "2025-09-11T21:09:13Z",
      "author_association": "NONE",
      "body": "Hi @pythcoiner,\r\n\r\nBy coincidence, two weeks ago I started working on a proposal for a \"Standard Encrypted Wallet Payload\" to be placed inside an \"Encrypted Envelope\". The \"Wallet Payload\" contains descriptors and  metadata but can also act as a full wallet backup including transactions, UTXOs and addresses.  The proposal is very much a work in progress.\r\n\r\nI only just found this discussion so am reading through it to compare it to my proposal. The descriptor backup in the \"Wallet Payload\" of my proposal seems to have some overlap with the BIP proposed here. If there is too much overlap I may reconsider progressing with my proposal.\r\n\r\nAs mentioned, my proposal is very much a work in progress but the wallet payload proposal can be found here:\r\n\r\nhttps://gist.github.com/KeysSoze/7109a7f0455897b1930f851bde6337e3\r\n\r\nMaybe jump to the test vector section to see what a basic backup of a descriptor and some meta data would look like prior to encryption.\r\n\r\nhttps://gist.github.com/KeysSoze/7109a7f0455897b1930f851bde6337e3#test-vectors\r\n\r\nAs my proposal is designed to be modular and extensible the encryption envelopes may be extended to offer Multiparty Encryption and Authentication. See:\r\n\r\nhttps://gist.github.com/KeysSoze/7109a7f0455897b1930f851bde6337e3#user-content-Expanding_the_Security_Model\r\n\r\nI have already started documenting an encryption envelope that uses AES-256-GCM and password protection:\r\n\r\nhttps://gist.github.com/KeysSoze/866d009ccd082edf6802df240154b20d\r\n\r\n\r\nI have not written a reference implementation yet but there are well established python and Rust libraries for CBOR and COSE that should make implementing the BIPs relatively simple.",
      "user": {
        "login": "KeysSoze",
        "id": 228577878,
        "node_id": "U_kgDODZ_SVg",
        "avatar_url": "https://avatars.githubusercontent.com/u/228577878?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KeysSoze",
        "html_url": "https://github.com/KeysSoze",
        "followers_url": "https://api.github.com/users/KeysSoze/followers",
        "following_url": "https://api.github.com/users/KeysSoze/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KeysSoze/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KeysSoze/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KeysSoze/subscriptions",
        "organizations_url": "https://api.github.com/users/KeysSoze/orgs",
        "repos_url": "https://api.github.com/users/KeysSoze/repos",
        "events_url": "https://api.github.com/users/KeysSoze/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KeysSoze/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#issuecomment-3272411570",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951"
    },
    {
      "event": "mentioned",
      "id": 19599639893,
      "node_id": "MEE_lADOAN28mc7Jm0XWzwAAAASQOsVV",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19599639893",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T21:57:55Z"
    },
    {
      "event": "subscribed",
      "id": 19599639912,
      "node_id": "SE_lADOAN28mc7Jm0XWzwAAAASQOsVo",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19599639912",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-09T21:57:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19674932239,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASUt6QP",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19674932239",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f7468275112f4655cdbb679e6cc5075669777a0f",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/f7468275112f4655cdbb679e6cc5075669777a0f",
      "created_at": "2025-09-13T09:24:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19674977045,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASUuFMV",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19674977045",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6be33181bf63d60c1b24c6a2c052a4c0f2d0a5e",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/e6be33181bf63d60c1b24c6a2c052a4c0f2d0a5e",
      "created_at": "2025-09-13T09:27:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19675157505,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASUuxQB",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19675157505",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ab0d14d71b0369ecab6b3778e4a19bc13e948994",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/ab0d14d71b0369ecab6b3778e4a19bc13e948994",
      "created_at": "2025-09-13T09:38:28Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDJjZTY5MmQxYmZkZTIwOGUyYmE2MDI0Y2YyMjEyNDA0NzhmYzcxNmM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2ce692d1bfde208e2ba6024cf221240478fc716c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2ce692d1bfde208e2ba6024cf221240478fc716c",
      "tree": {
        "sha": "0373299d5a01a7ea04b14d92ff529b32a181c258",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/0373299d5a01a7ea04b14d92ff529b32a181c258"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0373299d5a01a7ea04b14d92ff529b32a181c258\nparent 2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3\nauthor pythcoiner <pythcoiner@proton.me> 1755856760 +0200\ncommitter pythcoiner <pythcoiner@proton.me> 1757756639 +0200\n\nbip encrypted_backup\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEaUDzTAAmS01IhXXCwQSK7t8wO4gFAmjFPN8ACgkQwQSK7t8w\nO4jnxQgAmWiOxfrFfEGjVKyb0PIRym62dILLEz0E0jBH1rhL+OAv+SXioJpR43tw\nlTb2tiG5E8bP8ZtgOYk9O3wzN+MGc9s1ZGT31DMFKt3qpBfQWxMFu0y/ar+3T58z\nJ/9IN5qzmySbqUYgUYSKh+MBBUWYgHt6eYegDyjaIYic/4X3+7ujxwoiC4/Bf9LV\n6fUvE0eT/wVLmxCKAlPVJ17im2tjfEbxhv17FGhbxL6v6xmg0OxWc4PmYcWF9VZ0\newPShMUMl9rynIXl+AjOSeK/aOpz/5jVY27NDBaLBTDm5NaZER2PCoI37tSvIojZ\n0kxzGuqhWdvlkmDPLX5sTqnOlUX8vw==\n=i51m\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3",
          "sha": "2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3",
          "html_url": "https://github.com/bitcoin/bips/commit/2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3"
        }
      ],
      "message": "bip encrypted_backup",
      "committer": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-09-13T09:43:59Z"
      },
      "author": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-08-22T09:59:20Z"
      },
      "sha": "2ce692d1bfde208e2ba6024cf221240478fc716c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19675277619,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASUvOkz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19675277619",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2ce692d1bfde208e2ba6024cf221240478fc716c",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/2ce692d1bfde208e2ba6024cf221240478fc716c",
      "created_at": "2025-09-13T09:44:07Z"
    },
    {
      "event": "commented",
      "id": 3288004644,
      "node_id": "IC_kwDOAN28mc7D-vgk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/3288004644",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T10:05:44Z",
      "updated_at": "2025-09-13T10:06:05Z",
      "author_association": "NONE",
      "body": "> Hi @pythcoiner,\r\n> \r\n> By coincidence, two weeks ago I started working on a proposal for a \"Standard Encrypted Wallet Payload\" to be placed inside an \"Encrypted Envelope\". The \"Wallet Payload\" contains descriptors and metadata but can also act as a full wallet backup including transactions, UTXOs and addresses. The proposal is very much a work in progress.\r\n\r\nHi @KeysSoze, this work seems more related/parallel to the [`wallet_backup`](https://github.com/pythcoiner/wallet_backup) specs I've work on few month ago.\r\n\r\nBut I've adopted a slightly different approach by simply using JSON.\r\n\r\nFYI we already implemented this wallet backup format in Liana wallet and I plan to work on a BIP proposal relatively soon.\r\n",
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#issuecomment-3288004644",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951"
    },
    {
      "event": "mentioned",
      "id": 19675609849,
      "node_id": "MEE_lADOAN28mc7Jm0XWzwAAAASUwfr5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19675609849",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T10:05:45Z"
    },
    {
      "event": "subscribed",
      "id": 19675609853,
      "node_id": "SE_lADOAN28mc7Jm0XWzwAAAASUwfr9",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19675609853",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T10:05:45Z"
    },
    {
      "event": "mentioned",
      "id": 19675609855,
      "node_id": "MEE_lADOAN28mc7Jm0XWzwAAAASUwfr_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19675609855",
      "actor": {
        "login": "KeysSoze",
        "id": 228577878,
        "node_id": "U_kgDODZ_SVg",
        "avatar_url": "https://avatars.githubusercontent.com/u/228577878?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KeysSoze",
        "html_url": "https://github.com/KeysSoze",
        "followers_url": "https://api.github.com/users/KeysSoze/followers",
        "following_url": "https://api.github.com/users/KeysSoze/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KeysSoze/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KeysSoze/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KeysSoze/subscriptions",
        "organizations_url": "https://api.github.com/users/KeysSoze/orgs",
        "repos_url": "https://api.github.com/users/KeysSoze/repos",
        "events_url": "https://api.github.com/users/KeysSoze/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KeysSoze/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T10:05:45Z"
    },
    {
      "event": "subscribed",
      "id": 19675609860,
      "node_id": "SE_lADOAN28mc7Jm0XWzwAAAASUwfsE",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19675609860",
      "actor": {
        "login": "KeysSoze",
        "id": 228577878,
        "node_id": "U_kgDODZ_SVg",
        "avatar_url": "https://avatars.githubusercontent.com/u/228577878?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KeysSoze",
        "html_url": "https://github.com/KeysSoze",
        "followers_url": "https://api.github.com/users/KeysSoze/followers",
        "following_url": "https://api.github.com/users/KeysSoze/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/KeysSoze/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/KeysSoze/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/KeysSoze/subscriptions",
        "organizations_url": "https://api.github.com/users/KeysSoze/orgs",
        "repos_url": "https://api.github.com/users/KeysSoze/repos",
        "events_url": "https://api.github.com/users/KeysSoze/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/KeysSoze/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-13T10:05:45Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFhMzdjNGJiYzE0NmVhMzA0NTU0OGI5NTI3MjE1YjE0NzEzZjFhZGQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/aa37c4bbc146ea3045548b9527215b14713f1add",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/aa37c4bbc146ea3045548b9527215b14713f1add",
      "tree": {
        "sha": "f4917fbd13a4c67fd5867a338ee80b938d8ea529",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f4917fbd13a4c67fd5867a338ee80b938d8ea529"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f4917fbd13a4c67fd5867a338ee80b938d8ea529\nparent 2ce692d1bfde208e2ba6024cf221240478fc716c\nauthor pythcoiner <pythcoiner@proton.me> 1757763984 +0200\ncommitter pythcoiner <pythcoiner@proton.me> 1757763984 +0200\n\nmake content private\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEaUDzTAAmS01IhXXCwQSK7t8wO4gFAmjFWZAACgkQwQSK7t8w\nO4hlfgf9HAD2uxvTIU5pOB65Q6IEI2z+DItuzgvExnameJ3yuH2/mutQa8eqYKWa\nO4G/BixnzKnoA6O5c92g6sSwAd+GlPtmpMFSosR8ykFQ7p0HWFl5/Lo5m1Lp9cmP\n6VzsaXaVuSozcJs8UqpqDjzi5wkXNbU0Wga20PVo0lckKve+MZJsJH1kmMjADFe5\nYRzpplp2lRNgVu3uKkJDXfUop7fjsXtDU+eSxrGYE0+4NSEkAlSfmezy7wJ48kCO\naceWrIVRsLPo1f9/C/4HaEcGXpE4YLLcZN5jF4kS/lY6WRwtVhupQ5ijdMbP4ULq\nnaR7BOCwesEZIaQL1RQJUtPvhqmmCw==\n=cm+H\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2ce692d1bfde208e2ba6024cf221240478fc716c",
          "sha": "2ce692d1bfde208e2ba6024cf221240478fc716c",
          "html_url": "https://github.com/bitcoin/bips/commit/2ce692d1bfde208e2ba6024cf221240478fc716c"
        }
      ],
      "message": "make content private",
      "committer": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-09-13T11:46:24Z"
      },
      "author": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-09-13T11:46:24Z"
      },
      "sha": "aa37c4bbc146ea3045548b9527215b14713f1add"
    },
    {
      "event": "reviewed",
      "id": 3222202084,
      "node_id": "PRR_kwDOAN28mc7ADubk",
      "url": null,
      "actor": null,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-14T16:02:24Z",
      "author_association": "NONE",
      "body": "bip-encrypted-backup.md",
      "user": {
        "login": "abrahem79",
        "id": 184462822,
        "node_id": "U_kgDOCv6t5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/184462822?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abrahem79",
        "html_url": "https://github.com/abrahem79",
        "followers_url": "https://api.github.com/users/abrahem79/followers",
        "following_url": "https://api.github.com/users/abrahem79/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/abrahem79/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/abrahem79/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/abrahem79/subscriptions",
        "organizations_url": "https://api.github.com/users/abrahem79/orgs",
        "repos_url": "https://api.github.com/users/abrahem79/repos",
        "events_url": "https://api.github.com/users/abrahem79/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/abrahem79/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#pullrequestreview-3222202084",
      "submitted_at": "2025-09-14T16:02:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
    },
    {
      "event": "reviewed",
      "id": 3224268516,
      "node_id": "PRR_kwDOAN28mc7ALm7k",
      "url": null,
      "actor": null,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-15T12:01:03Z",
      "author_association": "NONE",
      "user": {
        "login": "jp1ac4",
        "id": 121959000,
        "node_id": "U_kgDOB0TyWA",
        "avatar_url": "https://avatars.githubusercontent.com/u/121959000?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jp1ac4",
        "html_url": "https://github.com/jp1ac4",
        "followers_url": "https://api.github.com/users/jp1ac4/followers",
        "following_url": "https://api.github.com/users/jp1ac4/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jp1ac4/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jp1ac4/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jp1ac4/subscriptions",
        "organizations_url": "https://api.github.com/users/jp1ac4/orgs",
        "repos_url": "https://api.github.com/users/jp1ac4/repos",
        "events_url": "https://api.github.com/users/jp1ac4/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jp1ac4/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#pullrequestreview-3224268516",
      "submitted_at": "2025-09-15T12:01:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321154194",
      "pull_request_review_id": 3183882354,
      "id": 2321154194,
      "node_id": "PRRC_kwDOAN28mc6KWgCS",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 4,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How about: Compact encryption scheme for non-seed wallet data\r\n\r\nOr some other wording to make it clear this isn't for storing keys.",
      "created_at": "2025-09-04T07:45:36Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321154194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321154194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321158710",
      "pull_request_review_id": 3183882354,
      "id": 2321158710,
      "node_id": "PRRC_kwDOAN28mc6KWhI2",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.",
      "path": "bip-encrypted-backup.md",
      "position": 28,
      "original_position": 29,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The abstract should also explicitly state that it's not intended for storing private key material.",
      "created_at": "2025-09-04T07:47:26Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321158710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321158710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321161670",
      "pull_request_review_id": 3183882354,
      "id": 2321161670,
      "node_id": "PRRC_kwDOAN28mc6KWh3G",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 53,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "privacy risk",
      "created_at": "2025-09-04T07:48:31Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321161670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321161670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321163680",
      "pull_request_review_id": 3183882354,
      "id": 2321163680,
      "node_id": "PRRC_kwDOAN28mc6KWiWg",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 64,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "decrypted",
      "created_at": "2025-09-04T07:49:18Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321163680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321163680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321165717",
      "pull_request_review_id": 3183882354,
      "id": 2321165717,
      "node_id": "PRRC_kwDOAN28mc6KWi2V",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 65,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't understand what you mean with this last sentence. Also do \"keys\" mean private keys or public keys?",
      "created_at": "2025-09-04T07:50:08Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321165717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321165717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321172572",
      "pull_request_review_id": 3183882354,
      "id": 2321172572,
      "node_id": "PRRC_kwDOAN28mc6KWkhc",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation",
      "path": "bip-encrypted-backup.md",
      "position": 37,
      "original_position": 38,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This section could be shorter imo. It feels a bit repetitive. You can also link to the Delving post for more background.",
      "created_at": "2025-09-04T07:52:58Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321172572",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321172572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321176670",
      "pull_request_review_id": 3183882354,
      "id": 2321176670,
      "node_id": "PRRC_kwDOAN28mc6KWlhe",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 116,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Imo the primary motivation for this proposal is to store a descriptor or policy (they're interchangeable). Storing additional information is nice to have.",
      "created_at": "2025-09-04T07:54:35Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321176670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321176670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321180524",
      "pull_request_review_id": 3183882354,
      "id": 2321180524,
      "node_id": "PRRC_kwDOAN28mc6KWmds",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 120,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Another way to put this is: private keys and seeds MUST be removed (neutered) from descriptors before storing them in this scheme. ",
      "created_at": "2025-09-04T07:56:10Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321180524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321180524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321185420",
      "pull_request_review_id": 3183882354,
      "id": 2321185420,
      "node_id": "PRRC_kwDOAN28mc6KWnqM",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 132,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Instead of `BEB` I would suggest `BIP_XXX` (replaced with the BIP number once assigned).",
      "created_at": "2025-09-04T07:57:52Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321185420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321185420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321193456",
      "pull_request_review_id": 3183882354,
      "id": 2321193456,
      "node_id": "PRRC_kwDOAN28mc6KWpnw",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 21,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This scheme is generic enough that I don't think it needs the word \"bitcoin\" in it. I also don't think we need to pick a \"marketing name\", something more boring like \"BIP_XXX encrypted backup\" should be fine.",
      "created_at": "2025-09-04T08:00:05Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321193456",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321193456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321197879",
      "pull_request_review_id": 3183882354,
      "id": 2321197879,
      "node_id": "PRRC_kwDOAN28mc6KWqs3",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 133,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If it's possible to use subscript in markdown then I would prefer to keep the original notation with small i. Otherwise let's use an underscore, i.e. `s_i`",
      "created_at": "2025-09-04T08:01:29Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321197879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321197879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321215113",
      "pull_request_review_id": 3183882354,
      "id": 2321215113,
      "node_id": "PRRC_kwDOAN28mc6KWu6J",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 206,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I would prefer to keep this secret _and_ have multiple pieces of content in a single backup. So my suggestion is to move this inside the encrypted payload and then allow for multiple content entries.",
      "created_at": "2025-09-04T08:07:49Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321215113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321215113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321220248",
      "pull_request_review_id": 3183882354,
      "id": 2321220248,
      "node_id": "PRRC_kwDOAN28mc6KWwKY",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 214,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe point out that unlisted types should still be decrypted and that new types may be added to the BIP.\r\n\r\nThat said, a more generic approach would be to allow a bit more space for the type. E.g. a ~4 digit number that must represent a BIP number. Or a short string like \"BIP-0329\". Both avoid the need to maintain a central register.\r\n\r\nAlso, if you allow multiple pieces of content in a single encrypted blob, it's useful to have a padding type.",
      "created_at": "2025-09-04T08:10:03Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321220248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321220248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321224447",
      "pull_request_review_id": 3183882354,
      "id": 2321224447,
      "node_id": "PRRC_kwDOAN28mc6KWxL_",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |\n+\n+#### Encrypted Payload\n+\n+`ENCRYPTED_PAYLOAD` follows this format:\n+\n+`TYPE` `NONCE` `LENGTH` `CIPHERTEXT`\n+\n+`TYPE`: 1-byte unsigned integer identifying the encryption algorithm.  \n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | AES-GCM-256                            |\n+\n+`NONCE`: 12-byte nonce for AES-GCM-256.  \n+`LENGTH`: [compact\n+size](https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer)\n+integer representing ciphertext length.  \n+`CIPHERTEXT`: variable-length ciphertext.\n+\n+Note: `CIPHERTEXT` is followed by the end of the `ENCRYPTED_PAYLOAD` section.  \n+Compliant parsers MUST stop reading after consuming `LENGTH` bytes of ciphertext;  \n+additional trailing bytes are reserved for vendor-specific extensions and MUST\n+be ignored.\n+\n+## Rationale\n+\n+ - Why derivation paths are optional: When standard derivation paths are used, they are\n+ easily discoverable, making them straightforward to brute-force. Omitting them\n+ enhances privacy by reducing the information shared publicly about the descriptor\n+ scheme.\n+\n+- Why avoid including fingerprints in plaintext encoding: Including fingerprints leaks\n+direct information about the descriptor participants, which compromises privacy.\n+\n+\n+### Future Extensions\n+\n+The version field enables possible future enhancements:\n+\n+- Additional encryption algorithms  \n+- Support for threshold-based decryption",
      "path": "bip-encrypted-backup.md",
      "position": 231,
      "original_position": 256,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "- hide the number of participants\r\n- bech32m export (convenient for text based storage like an email to yourself, as well as for printing - if you're patient)",
      "created_at": "2025-09-04T08:11:45Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321224447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321224447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 231,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321479531",
      "pull_request_review_id": 3184355894,
      "id": 2321479531,
      "node_id": "PRRC_kwDOAN28mc6KXvdr",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 206,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321215113,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> and then allow for multiple content entries\r\n\r\nhum, no strong opinion on this, but if the purpose is to have a single encrypted file containing descriptor(380 or 388) + labels + wallet metadata then it should fit into [`0x04 Wallet Backup`](https://github.com/pythcoiner/wallet_backup) (yeah I'll have to write a formal spec)",
      "created_at": "2025-09-04T09:51:42Z",
      "updated_at": "2025-09-04T09:51:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321479531",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321479531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321559635",
      "pull_request_review_id": 3184465547,
      "id": 2321559635,
      "node_id": "PRRC_kwDOAN28mc6KYDBT",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 206,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321215113,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In the original delving post there's no specification of the format at all. So you could also just say it should be JSON and leave it up to other BIPs or convention. ",
      "created_at": "2025-09-04T10:27:03Z",
      "updated_at": "2025-09-04T10:27:04Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321559635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321559635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321667033",
      "pull_request_review_id": 3184624166,
      "id": 2321667033,
      "node_id": "PRRC_kwDOAN28mc6KYdPZ",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |\n+\n+#### Encrypted Payload\n+\n+`ENCRYPTED_PAYLOAD` follows this format:\n+\n+`TYPE` `NONCE` `LENGTH` `CIPHERTEXT`\n+\n+`TYPE`: 1-byte unsigned integer identifying the encryption algorithm.  \n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | AES-GCM-256                            |\n+\n+`NONCE`: 12-byte nonce for AES-GCM-256.  \n+`LENGTH`: [compact\n+size](https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer)\n+integer representing ciphertext length.  \n+`CIPHERTEXT`: variable-length ciphertext.\n+\n+Note: `CIPHERTEXT` is followed by the end of the `ENCRYPTED_PAYLOAD` section.  \n+Compliant parsers MUST stop reading after consuming `LENGTH` bytes of ciphertext;  \n+additional trailing bytes are reserved for vendor-specific extensions and MUST\n+be ignored.\n+\n+## Rationale\n+\n+ - Why derivation paths are optional: When standard derivation paths are used, they are\n+ easily discoverable, making them straightforward to brute-force. Omitting them\n+ enhances privacy by reducing the information shared publicly about the descriptor\n+ scheme.\n+\n+- Why avoid including fingerprints in plaintext encoding: Including fingerprints leaks\n+direct information about the descriptor participants, which compromises privacy.\n+\n+\n+### Future Extensions\n+\n+The version field enables possible future enhancements:\n+\n+- Additional encryption algorithms  \n+- Support for threshold-based decryption",
      "path": "bip-encrypted-backup.md",
      "position": 231,
      "original_position": 256,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321224447,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> hide the number of participants\r\n\r\nhum, the number of participant can also be hidden (derivation path are optionals) and one can also add fake ones, how do you think we can enhance this further?\r\n",
      "created_at": "2025-09-04T11:05:01Z",
      "updated_at": "2025-09-04T11:05:01Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321667033",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321667033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 231,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321674988",
      "pull_request_review_id": 3184634522,
      "id": 2321674988,
      "node_id": "PRRC_kwDOAN28mc6KYfLs",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |\n+\n+#### Encrypted Payload\n+\n+`ENCRYPTED_PAYLOAD` follows this format:\n+\n+`TYPE` `NONCE` `LENGTH` `CIPHERTEXT`\n+\n+`TYPE`: 1-byte unsigned integer identifying the encryption algorithm.  \n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | AES-GCM-256                            |\n+\n+`NONCE`: 12-byte nonce for AES-GCM-256.  \n+`LENGTH`: [compact\n+size](https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer)\n+integer representing ciphertext length.  \n+`CIPHERTEXT`: variable-length ciphertext.\n+\n+Note: `CIPHERTEXT` is followed by the end of the `ENCRYPTED_PAYLOAD` section.  \n+Compliant parsers MUST stop reading after consuming `LENGTH` bytes of ciphertext;  \n+additional trailing bytes are reserved for vendor-specific extensions and MUST\n+be ignored.\n+\n+## Rationale\n+\n+ - Why derivation paths are optional: When standard derivation paths are used, they are\n+ easily discoverable, making them straightforward to brute-force. Omitting them\n+ enhances privacy by reducing the information shared publicly about the descriptor\n+ scheme.\n+\n+- Why avoid including fingerprints in plaintext encoding: Including fingerprints leaks\n+direct information about the descriptor participants, which compromises privacy.\n+\n+\n+### Future Extensions\n+\n+The version field enables possible future enhancements:\n+\n+- Additional encryption algorithms  \n+- Support for threshold-based decryption",
      "path": "bip-encrypted-backup.md",
      "position": 231,
      "original_position": 256,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321224447,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's currently revealed by the number of `c_i` shares, so it would be a more complicated overhaul. I don't think it's urgent.",
      "created_at": "2025-09-04T11:07:21Z",
      "updated_at": "2025-09-04T11:08:51Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321674988",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321674988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 231,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321684401",
      "pull_request_review_id": 3184647548,
      "id": 2321684401,
      "node_id": "PRRC_kwDOAN28mc6KYhex",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |\n+\n+#### Encrypted Payload\n+\n+`ENCRYPTED_PAYLOAD` follows this format:\n+\n+`TYPE` `NONCE` `LENGTH` `CIPHERTEXT`\n+\n+`TYPE`: 1-byte unsigned integer identifying the encryption algorithm.  \n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | AES-GCM-256                            |\n+\n+`NONCE`: 12-byte nonce for AES-GCM-256.  \n+`LENGTH`: [compact\n+size](https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer)\n+integer representing ciphertext length.  \n+`CIPHERTEXT`: variable-length ciphertext.\n+\n+Note: `CIPHERTEXT` is followed by the end of the `ENCRYPTED_PAYLOAD` section.  \n+Compliant parsers MUST stop reading after consuming `LENGTH` bytes of ciphertext;  \n+additional trailing bytes are reserved for vendor-specific extensions and MUST\n+be ignored.\n+\n+## Rationale\n+\n+ - Why derivation paths are optional: When standard derivation paths are used, they are\n+ easily discoverable, making them straightforward to brute-force. Omitting them\n+ enhances privacy by reducing the information shared publicly about the descriptor\n+ scheme.\n+\n+- Why avoid including fingerprints in plaintext encoding: Including fingerprints leaks\n+direct information about the descriptor participants, which compromises privacy.\n+\n+\n+### Future Extensions\n+\n+The version field enables possible future enhancements:\n+\n+- Additional encryption algorithms  \n+- Support for threshold-based decryption",
      "path": "bip-encrypted-backup.md",
      "position": 231,
      "original_position": 256,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321224447,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "right",
      "created_at": "2025-09-04T11:10:09Z",
      "updated_at": "2025-09-04T11:10:09Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321684401",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321684401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 231,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324098893",
      "pull_request_review_id": 3187990452,
      "id": 2324098893,
      "node_id": "PRRC_kwDOAN28mc6Khu9N",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 65,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321165717,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'll drop this one, it's redunndant with the previous one",
      "created_at": "2025-09-05T04:59:26Z",
      "updated_at": "2025-09-05T04:59:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2324098893",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324098893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324148144",
      "pull_request_review_id": 3188063439,
      "id": 2324148144,
      "node_id": "PRRC_kwDOAN28mc6Kh6-w",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 132,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321185420,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've written w/ `BIPxxxx` at first, but changes it to `BEB` then, as we are very likely to ship a feature using this scheme in Liana v13 (so likely before this get assigned a BIP #)...\r\n",
      "created_at": "2025-09-05T05:38:07Z",
      "updated_at": "2025-09-05T05:38:07Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2324148144",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324148144"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324169945",
      "pull_request_review_id": 3188089881,
      "id": 2324169945,
      "node_id": "PRRC_kwDOAN28mc6KiATZ",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 206,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321215113,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah this BIP draft differ a bit from the initial post in the fact it intentionally add some formating convention",
      "created_at": "2025-09-05T05:55:04Z",
      "updated_at": "2025-09-05T05:55:04Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2324169945",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324169945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324258695",
      "pull_request_review_id": 3188210124,
      "id": 2324258695,
      "node_id": "PRRC_kwDOAN28mc6KiV-H",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 132,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321185420,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Liana could switch to the BIP number once assigned. When reading it could first check BEP and then BIP_XXXX. That also gives you the flexibility to make breaking changes to other parts of this spec without having to bump the version number.",
      "created_at": "2025-09-05T06:51:28Z",
      "updated_at": "2025-09-05T06:58:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2324258695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324258695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324677845",
      "pull_request_review_id": 3188766876,
      "id": 2324677845,
      "node_id": "PRRC_kwDOAN28mc6Kj8TV",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 132,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321185420,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree, we are in control of what happen in Liana, but my concern is more about other implementations that will not be able to decrypt early version generated w/ Liana...\r\nBtw, we already plan to ship w/ version 0, that's why this BIP draft define version 1...",
      "created_at": "2025-09-05T10:11:55Z",
      "updated_at": "2025-09-05T10:11:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2324677845",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2324677845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2325538430",
      "pull_request_review_id": 3190022065,
      "id": 2325538430,
      "node_id": "PRRC_kwDOAN28mc6KnOZ-",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 132,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321185420,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I would probably just write a Gist documenting the Liana-specific v0 (other mights have tried your code as well), and then maybe link to it from a footnote in the BIP.",
      "created_at": "2025-09-05T16:31:33Z",
      "updated_at": "2025-09-05T16:31:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2325538430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2325538430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2330634015",
      "pull_request_review_id": 3197091796,
      "id": 2330634015,
      "node_id": "PRRC_kwDOAN28mc6K6qcf",
      "diff_hunk": "@@ -0,0 +1,231 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Compact encryption scheme for non-seed wallet data  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The payload must not contains any private key material.",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 20,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "2ec6487d7447ec9d88e2048c2a954569cbf66286",
      "in_reply_to_id": null,
      "user": {
        "login": "torkelrogstad",
        "id": 16610775,
        "node_id": "MDQ6VXNlcjE2NjEwNzc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/16610775?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/torkelrogstad",
        "html_url": "https://github.com/torkelrogstad",
        "followers_url": "https://api.github.com/users/torkelrogstad/followers",
        "following_url": "https://api.github.com/users/torkelrogstad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/torkelrogstad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/torkelrogstad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/torkelrogstad/subscriptions",
        "organizations_url": "https://api.github.com/users/torkelrogstad/orgs",
        "repos_url": "https://api.github.com/users/torkelrogstad/repos",
        "events_url": "https://api.github.com/users/torkelrogstad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/torkelrogstad/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`contain`, not `contains`",
      "created_at": "2025-09-08T15:40:22Z",
      "updated_at": "2025-09-08T15:40:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2330634015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2330634015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346207266",
      "pull_request_review_id": 3220100534,
      "id": 2346207266,
      "node_id": "PRRC_kwDOAN28mc6L2Egi",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 133,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321197879,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-09-13T09:26:25Z",
      "updated_at": "2025-09-13T09:26:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2346207266",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346207266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346216580",
      "pull_request_review_id": 3220107902,
      "id": 2346216580,
      "node_id": "PRRC_kwDOAN28mc6L2GyE",
      "diff_hunk": "@@ -0,0 +1,231 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Compact encryption scheme for non-seed wallet data  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The payload must not contains any private key material.",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 20,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "2ec6487d7447ec9d88e2048c2a954569cbf66286",
      "in_reply_to_id": 2330634015,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-09-13T09:28:35Z",
      "updated_at": "2025-09-13T09:28:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2346216580",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346216580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346249186",
      "pull_request_review_id": 3220147665,
      "id": 2346249186,
      "node_id": "PRRC_kwDOAN28mc6L2Ovi",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |\n+\n+#### Encrypted Payload\n+\n+`ENCRYPTED_PAYLOAD` follows this format:\n+\n+`TYPE` `NONCE` `LENGTH` `CIPHERTEXT`\n+\n+`TYPE`: 1-byte unsigned integer identifying the encryption algorithm.  \n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | AES-GCM-256                            |\n+\n+`NONCE`: 12-byte nonce for AES-GCM-256.  \n+`LENGTH`: [compact\n+size](https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer)\n+integer representing ciphertext length.  \n+`CIPHERTEXT`: variable-length ciphertext.\n+\n+Note: `CIPHERTEXT` is followed by the end of the `ENCRYPTED_PAYLOAD` section.  \n+Compliant parsers MUST stop reading after consuming `LENGTH` bytes of ciphertext;  \n+additional trailing bytes are reserved for vendor-specific extensions and MUST\n+be ignored.\n+\n+## Rationale\n+\n+ - Why derivation paths are optional: When standard derivation paths are used, they are\n+ easily discoverable, making them straightforward to brute-force. Omitting them\n+ enhances privacy by reducing the information shared publicly about the descriptor\n+ scheme.\n+\n+- Why avoid including fingerprints in plaintext encoding: Including fingerprints leaks\n+direct information about the descriptor participants, which compromises privacy.\n+\n+\n+### Future Extensions\n+\n+The version field enables possible future enhancements:\n+\n+- Additional encryption algorithms  \n+- Support for threshold-based decryption",
      "path": "bip-encrypted-backup.md",
      "position": 231,
      "original_position": 256,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321224447,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-09-13T09:39:53Z",
      "updated_at": "2025-09-13T09:39:53Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2346249186",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346249186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 231,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346474901",
      "pull_request_review_id": 3220421537,
      "id": 2346474901,
      "node_id": "PRRC_kwDOAN28mc6L3F2V",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 206,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321215113,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@Sjors, in aa37c4b I've moved `CONTENT` to the encrypted part, letting some room for extension, like for embed several content types.",
      "created_at": "2025-09-13T11:52:20Z",
      "updated_at": "2025-09-13T11:52:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2346474901",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2346474901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2347412059",
      "pull_request_review_id": 3222203416,
      "id": 2347412059,
      "node_id": "PRRC_kwDOAN28mc6L6qpb",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  ",
      "path": "bip-encrypted-backup.md",
      "position": 1,
      "original_position": 4,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": 2321154194,
      "user": {
        "login": "abrahem79",
        "id": 184462822,
        "node_id": "U_kgDOCv6t5g",
        "avatar_url": "https://avatars.githubusercontent.com/u/184462822?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abrahem79",
        "html_url": "https://github.com/abrahem79",
        "followers_url": "https://api.github.com/users/abrahem79/followers",
        "following_url": "https://api.github.com/users/abrahem79/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/abrahem79/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/abrahem79/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/abrahem79/subscriptions",
        "organizations_url": "https://api.github.com/users/abrahem79/orgs",
        "repos_url": "https://api.github.com/users/abrahem79/repos",
        "events_url": "https://api.github.com/users/abrahem79/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/abrahem79/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bip.diff",
      "created_at": "2025-09-14T16:03:31Z",
      "updated_at": "2025-09-14T16:03:31Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2347412059",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2347412059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2348773986",
      "pull_request_review_id": 3224268516,
      "id": 2348773986,
      "node_id": "PRRC_kwDOAN28mc6L_3Ji",
      "diff_hunk": "@@ -0,0 +1,245 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Compact encryption scheme for non-seed wallet data  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The payload must not contain any private key material.\n+This scheme enables users to outsource long‑term storage to untrusted media or cloud\n+services without revealing which addresses, scripts, or number of cosigners are involved.\n+Encryption keys are derived from the lexicographically‑sorted public keys inside the\n+descriptor or policy, so any party who already holds one of those keys can later decrypt\n+the backup without extra secrets or round‑trips. The format uses AES-GCM-256 with a 96‑bit\n+random nonce and a 128‑bit authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries privacy risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypted only by intended holders** of specified public keys,  \n+\n+See the original [Delving post](https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/31)\n+for more background.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+The primary motivation of this proposal is to store a wallet descriptor(BIP-0380) or a\n+wallet policy(BIP-0388), but it seems valuable enough to also use this scheme to encrypt\n+payload containing others wallet-related metadata, like Labels(BIP-0329) or\n+[wallet backup](https://github.com/pythcoiner/wallet_backup).\n+\n+Note: For any kind of payload intented to be encrypted with this scheme, private key\n+material MUST be removed before encryption.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕  refers to the bitwise XOR operation.\n+\n+### Secret generation\n+\n+- Let $p_1, p_2, \\dots, p_n$, be the public keys in the descriptor/wallet policy, in increasing lexicographical order",
      "path": "bip-encrypted-backup.md",
      "position": 94,
      "original_position": 94,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "in_reply_to_id": null,
      "user": {
        "login": "jp1ac4",
        "id": 121959000,
        "node_id": "U_kgDOB0TyWA",
        "avatar_url": "https://avatars.githubusercontent.com/u/121959000?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jp1ac4",
        "html_url": "https://github.com/jp1ac4",
        "followers_url": "https://api.github.com/users/jp1ac4/followers",
        "following_url": "https://api.github.com/users/jp1ac4/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jp1ac4/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jp1ac4/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jp1ac4/subscriptions",
        "organizations_url": "https://api.github.com/users/jp1ac4/orgs",
        "repos_url": "https://api.github.com/users/jp1ac4/repos",
        "events_url": "https://api.github.com/users/jp1ac4/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jp1ac4/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We might like to use a subset of the public keys in some cases, e.g. if a Taproot descriptor contains an unspendable internal key that is commonly used across multiple descriptors.\r\ncc @bigspider @darosior",
      "created_at": "2025-09-15T12:01:03Z",
      "updated_at": "2025-09-15T12:01:03Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2348773986",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2348773986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2349440313",
      "pull_request_review_id": 3225311188,
      "id": 2349440313,
      "node_id": "PRRC_kwDOAN28mc6MCZ05",
      "diff_hunk": "@@ -0,0 +1,245 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Compact encryption scheme for non-seed wallet data  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The payload must not contain any private key material.\n+This scheme enables users to outsource long‑term storage to untrusted media or cloud\n+services without revealing which addresses, scripts, or number of cosigners are involved.\n+Encryption keys are derived from the lexicographically‑sorted public keys inside the\n+descriptor or policy, so any party who already holds one of those keys can later decrypt\n+the backup without extra secrets or round‑trips. The format uses AES-GCM-256 with a 96‑bit\n+random nonce and a 128‑bit authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries privacy risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypted only by intended holders** of specified public keys,  \n+\n+See the original [Delving post](https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/31)\n+for more background.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+The primary motivation of this proposal is to store a wallet descriptor(BIP-0380) or a\n+wallet policy(BIP-0388), but it seems valuable enough to also use this scheme to encrypt\n+payload containing others wallet-related metadata, like Labels(BIP-0329) or\n+[wallet backup](https://github.com/pythcoiner/wallet_backup).\n+\n+Note: For any kind of payload intented to be encrypted with this scheme, private key\n+material MUST be removed before encryption.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕  refers to the bitwise XOR operation.\n+\n+### Secret generation\n+\n+- Let $p_1, p_2, \\dots, p_n$, be the public keys in the descriptor/wallet policy, in increasing lexicographical order",
      "path": "bip-encrypted-backup.md",
      "position": 94,
      "original_position": 94,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "in_reply_to_id": 2348773986,
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "right, we also need to specify that BIP0341 NUMS MUST be sorted out",
      "created_at": "2025-09-15T15:51:32Z",
      "updated_at": "2025-09-15T15:51:32Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2349440313",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2349440313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2351518035",
      "pull_request_review_id": 3228457379,
      "id": 2351518035,
      "node_id": "PRRC_kwDOAN28mc6MKVFT",
      "diff_hunk": "@@ -0,0 +1,245 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Compact encryption scheme for non-seed wallet data  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The payload must not contain any private key material.\n+This scheme enables users to outsource long‑term storage to untrusted media or cloud\n+services without revealing which addresses, scripts, or number of cosigners are involved.\n+Encryption keys are derived from the lexicographically‑sorted public keys inside the\n+descriptor or policy, so any party who already holds one of those keys can later decrypt\n+the backup without extra secrets or round‑trips. The format uses AES-GCM-256 with a 96‑bit\n+random nonce and a 128‑bit authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries privacy risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypted only by intended holders** of specified public keys,  \n+\n+See the original [Delving post](https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/31)\n+for more background.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+The primary motivation of this proposal is to store a wallet descriptor(BIP-0380) or a\n+wallet policy(BIP-0388), but it seems valuable enough to also use this scheme to encrypt\n+payload containing others wallet-related metadata, like Labels(BIP-0329) or\n+[wallet backup](https://github.com/pythcoiner/wallet_backup).\n+\n+Note: For any kind of payload intented to be encrypted with this scheme, private key\n+material MUST be removed before encryption.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕  refers to the bitwise XOR operation.\n+\n+### Secret generation\n+\n+- Let $p_1, p_2, \\dots, p_n$, be the public keys in the descriptor/wallet policy, in increasing lexicographical order",
      "path": "bip-encrypted-backup.md",
      "position": 94,
      "original_position": 94,
      "commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "original_commit_id": "aa37c4bbc146ea3045548b9527215b14713f1add",
      "in_reply_to_id": 2348773986,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ideally, for wallet policies, in the long term we might want to introduce a placeholder for a deterministically derived NUMS key, as discussed for example [here](https://delvingbitcoin.org/t/unspendable-keys-in-descriptors/304#s4-recycle-the-entropy-of-the-descriptor-6). So there wouldn't be any xpub at all. But that's not currently specified in BIP-388.\r\n\r\nExplicitly excluding all the pubkeys with x coordinate `50929b74c1a04954b78b4b6035e97a5e078a5a0f28ec96d547bfee9ace803ac0` seems appropriate and should be forward-compatible with variations of this scheme.\r\n\r\nIt might be worth mentioning that one could choose just a subset of it is not intended for some of these keys to be able to recover from the backup. The caveat is that it becomes application-specific _which_ of those keys should be able to recover. So if that's mentioned, this should be discussed a bit (for example by adding a recommendation to clearly specify the details in the documentation of the application).",
      "created_at": "2025-09-16T08:45:56Z",
      "updated_at": "2025-09-16T08:46:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2351518035",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2351518035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 94,
      "original_line": 94,
      "side": "RIGHT"
    }
  ]
}