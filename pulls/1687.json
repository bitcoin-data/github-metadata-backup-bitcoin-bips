{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1687",
    "id": 2130099671,
    "node_id": "PR_kwDOAN28mc5-9r3X",
    "html_url": "https://github.com/bitcoin/bips/pull/1687",
    "diff_url": "https://github.com/bitcoin/bips/pull/1687.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1687.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1687",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1687/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
    "number": 1687,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Bip Draft: Sending Silent Payments in PSBTs",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This BIP adds support for sending silent payments using PSBTs.\r\n\r\nIf there are multiple entities handling the PSBT that do not have access to some input private keys, a DLEQ proof by the signer may be added for other entities to verify the corresponding ECDH shares used to derive the output scripts were generated correctly. This will be specified in a following BIP. For the common case of a single entity that has access to all private keys, the DLEQ proof generation is unnecessary.\r\n\r\nSpending support is trivial and can be done with a modification to BIP370 to add a new input field for the tweak data.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-10-17T12:39:57Z",
    "updated_at": "2024-12-28T17:24:36Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "ba78cdcd97c8bf4984fe5361ff0cdc61221b43b9",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "andrewtoth:silent-payments-psbt",
      "ref": "silent-payments-psbt",
      "sha": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 224773098,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjQ3NzMwOTg=",
        "name": "bips",
        "full_name": "andrewtoth/bips",
        "owner": {
          "login": "andrewtoth",
          "id": 237213,
          "node_id": "MDQ6VXNlcjIzNzIxMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewtoth",
          "html_url": "https://github.com/andrewtoth",
          "followers_url": "https://api.github.com/users/andrewtoth/followers",
          "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
          "repos_url": "https://api.github.com/users/andrewtoth/repos",
          "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/andrewtoth/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/andrewtoth/bips",
        "archive_url": "https://api.github.com/repos/andrewtoth/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/andrewtoth/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/andrewtoth/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/andrewtoth/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/andrewtoth/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/andrewtoth/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/andrewtoth/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/andrewtoth/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/andrewtoth/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/andrewtoth/bips/contributors",
        "deployments_url": "https://api.github.com/repos/andrewtoth/bips/deployments",
        "downloads_url": "https://api.github.com/repos/andrewtoth/bips/downloads",
        "events_url": "https://api.github.com/repos/andrewtoth/bips/events",
        "forks_url": "https://api.github.com/repos/andrewtoth/bips/forks",
        "git_commits_url": "https://api.github.com/repos/andrewtoth/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/andrewtoth/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/andrewtoth/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/andrewtoth/bips.git",
        "issue_comment_url": "https://api.github.com/repos/andrewtoth/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/andrewtoth/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/andrewtoth/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/andrewtoth/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/andrewtoth/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/andrewtoth/bips/languages",
        "merges_url": "https://api.github.com/repos/andrewtoth/bips/merges",
        "milestones_url": "https://api.github.com/repos/andrewtoth/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/andrewtoth/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/andrewtoth/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/andrewtoth/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:andrewtoth/bips.git",
        "stargazers_url": "https://api.github.com/repos/andrewtoth/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/andrewtoth/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/andrewtoth/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/andrewtoth/bips/subscription",
        "tags_url": "https://api.github.com/repos/andrewtoth/bips/tags",
        "teams_url": "https://api.github.com/repos/andrewtoth/bips/teams",
        "trees_url": "https://api.github.com/repos/andrewtoth/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/andrewtoth/bips.git",
        "hooks_url": "https://api.github.com/repos/andrewtoth/bips/hooks",
        "svn_url": "https://github.com/andrewtoth/bips",
        "homepage": "bitcoin.org",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 15858,
        "default_branch": "bip-schnorr",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-27T18:06:12Z",
        "created_at": "2019-11-29T03:52:22Z",
        "updated_at": "2024-12-24T05:49:42Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "385ac876d3e5040437f1c7a7a19c45283325137e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5447,
        "stargazers_count": 9581,
        "watchers_count": 9581,
        "size": 15784,
        "default_branch": "master",
        "open_issues_count": 42,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-27T18:14:52Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-12-28T17:46:06Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 196,
    "deletions": 0,
    "changed_files": 1,
    "commits": 9,
    "review_comments": 45,
    "comments": 1
  },
  "events": [
    {
      "event": "unsubscribed",
      "id": 14699383550,
      "node_id": "UE_lADOAN28mc6apsiAzwAAAANsJsr-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14699383550",
      "actor": {
        "login": "Karthik0521",
        "id": 159101140,
        "node_id": "U_kgDOCXuw1A",
        "avatar_url": "https://avatars.githubusercontent.com/u/159101140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Karthik0521",
        "html_url": "https://github.com/Karthik0521",
        "followers_url": "https://api.github.com/users/Karthik0521/followers",
        "following_url": "https://api.github.com/users/Karthik0521/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Karthik0521/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Karthik0521/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Karthik0521/subscriptions",
        "organizations_url": "https://api.github.com/users/Karthik0521/orgs",
        "repos_url": "https://api.github.com/users/Karthik0521/repos",
        "events_url": "https://api.github.com/users/Karthik0521/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Karthik0521/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-17T13:23:24Z"
    },
    {
      "event": "subscribed",
      "id": 14699385213,
      "node_id": "SE_lADOAN28mc6apsiAzwAAAANsJtF9",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14699385213",
      "actor": {
        "login": "Karthik0521",
        "id": 159101140,
        "node_id": "U_kgDOCXuw1A",
        "avatar_url": "https://avatars.githubusercontent.com/u/159101140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Karthik0521",
        "html_url": "https://github.com/Karthik0521",
        "followers_url": "https://api.github.com/users/Karthik0521/followers",
        "following_url": "https://api.github.com/users/Karthik0521/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Karthik0521/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Karthik0521/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Karthik0521/subscriptions",
        "organizations_url": "https://api.github.com/users/Karthik0521/orgs",
        "repos_url": "https://api.github.com/users/Karthik0521/repos",
        "events_url": "https://api.github.com/users/Karthik0521/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Karthik0521/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-17T13:23:30Z"
    },
    {
      "event": "labeled",
      "id": 14699724610,
      "node_id": "LE_lADOAN28mc6apsiAzwAAAANsK_9C",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14699724610",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-17T13:44:07Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 2423182905,
      "node_id": "IC_kwDOAN28mc6QbtY5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2423182905",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-18T20:26:23Z",
      "updated_at": "2024-10-18T20:26:23Z",
      "author_association": "MEMBER",
      "body": "Mailing list post on Oct 17 at https://groups.google.com/g/bitcoindev/c/5G5wzqUXyk4.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#issuecomment-2423182905",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1687"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14735699089,
      "node_id": "HRFPE_lADOAN28mc6apsiAzwAAAANuUOyR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14735699089",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "81187dc0a172e7cfb1cbb2695b59084ddd467831",
      "commit_url": "https://api.github.com/repos/andrewtoth/bips/commits/81187dc0a172e7cfb1cbb2695b59084ddd467831",
      "created_at": "2024-10-19T15:06:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14736066646,
      "node_id": "HRFPE_lADOAN28mc6apsiAzwAAAANuVohW",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14736066646",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ed4530f3ecbad9ffa06cbb6a9e917f0547debbef",
      "commit_url": "https://api.github.com/repos/andrewtoth/bips/commits/ed4530f3ecbad9ffa06cbb6a9e917f0547debbef",
      "created_at": "2024-10-19T15:28:46Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGUyYWRiNTBlNzc1NjJiNTEzZDk4YjczMGEzNjE2OGYzMmNlM2VjM2U",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "tree": {
        "sha": "6b0844d9c5f4d5016331473f385ba82daec919c5",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/6b0844d9c5f4d5016331473f385ba82daec919c5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6b0844d9c5f4d5016331473f385ba82daec919c5\nparent 5284427971f17e306b9518614cc5a8da5963ce4c\nauthor Andrew Toth <andrewstoth@gmail.com> 1729351719 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1729517024 -0400\n\nBip Draft: Sending Silent Payments in PSBTs\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmcWVeIACgkQYAB6/Ik4\nsBiAww/9EUVA5jWsBSB56VTYS5MWxblAn/LQ5lBlaYz6yKCScNCSiaMKMwlgqoLK\na5C4HBR4AWXQZeKWYQ/jBehGiGirhodbXqL/e+oD7KloFePWznAZffKANQ/w6mjQ\nbYRiWf2nK3MNqkZHrggpZmN1i78pWCuut0cLjoKdr22sJMklRbHt3XBMs8QDbF6N\nI6NcNRqO1/DxVoMr+QFogmwLixoAanqGoqAXTBF0ZBrau364S5JQET7ZRJeHvZI5\nQyeBt/SWnSI4jujdiJPHow5s0G/kA4t2U5vDl8GA8JImq+mMOfjD7CiOm1+DDIV2\nEr/ENzxPULdqTzLNmEXlLULjbMGulXCsq18v8HFSoeBtRpUNde//GRfjz1amO2BL\nRCz20zKBicXk2mpKXVrCPuDqC89CmHKTY97pTgXwGpf4r2spG5VjBTLOoqsZqRaP\n5Wdb+C7O8TUl6wuC1ttLUTQBlq7KKSYwFQmSavYxpdVm7F0V4SKhco4I6wLJLcGD\nZaCUA4WGo12ZcqMLV9l1k5bBWzzavVmreq6l0Zp3XKP4vgtl3wDo3kb/bGRqpzTo\nWCNjpjP23tCI41/KWfmrsNaVOCoWRpz36suwoHQTgwKNokzZc2Pln+SoOCDB8b6L\niflKCLOby9EXna7cQNCEsNNmNPRCnbTK0fi1OFR90Rb4IhK7BUQ=\n=kGYL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5284427971f17e306b9518614cc5a8da5963ce4c",
          "sha": "5284427971f17e306b9518614cc5a8da5963ce4c",
          "html_url": "https://github.com/bitcoin/bips/commit/5284427971f17e306b9518614cc5a8da5963ce4c"
        }
      ],
      "message": "Bip Draft: Sending Silent Payments in PSBTs",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-10-21T13:23:44Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-10-19T15:28:39Z"
      },
      "sha": "e2adb50e77562b513d98b730a36168f32ce3ec3e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14764819328,
      "node_id": "HRFPE_lADOAN28mc6apsiAzwAAAANwDUOA",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14764819328",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": "https://api.github.com/repos/andrewtoth/bips/commits/e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "created_at": "2024-10-21T13:23:51Z"
    },
    {
      "event": "reviewed",
      "id": 2393818183,
      "node_id": "PRR_kwDOAN28mc6OrsRH",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2393818183",
      "submitted_at": "2024-10-24T22:25:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    },
    {
      "event": "reviewed",
      "id": 2399834343,
      "node_id": "PRR_kwDOAN28mc6PCpDn",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2399834343",
      "submitted_at": "2024-10-28T18:07:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    },
    {
      "event": "reviewed",
      "id": 2430540807,
      "node_id": "PRR_kwDOAN28mc6Q3xwH",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I did a light review and left a few questions mostly. Your idea makes sense, the content is coming along nicely, and I have found no issues regarding the formatting.\r\n\r\nPerhaps some of the answers to my questions could be recorded as footnotes in the Rationale, where they seem likely to be of interest to future readers.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2430540807",
      "submitted_at": "2024-11-12T20:43:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    },
    {
      "event": "reviewed",
      "id": 2439395304,
      "node_id": "PRR_kwDOAN28mc6RZjfo",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "As specified, computing the sum of ECDH_SHARE values requires some additional validation to ensure the computed script outputs are spendable.\r\n\r\nThis makes some intermediate states of a PSBT that are currently allowed either unsafe (potentially creating unspendable outputs) or with validation introduces potential for failure, because a signer is technically allowed to add ECDH shares for two non-disjoint input sets with a non-empty symmetric difference.\r\n\r\nInstead of introducing this additional validation I think it would be simpler to specify one ECDH share per input, as a per input field, this is actually more compact without DLEQ proofs, as Murch notes, better for privacy, and IMO seems easier to implement, but at the very least I think this needs clarification on how to compute the sum safely.",
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2439395304",
      "submitted_at": "2024-11-15T20:58:26Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    },
    {
      "event": "labeled",
      "id": 15318010278,
      "node_id": "LE_lADOAN28mc6apsiAzwAAAAORBkmm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15318010278",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T21:45:25Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDc0NzJmZmI5OTM5YTYzNGQyNDk2MjAyNDc0MTY3ZGIyMjk0ZjYzNDY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/7472ffb9939a634d2496202474167db2294f6346",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/7472ffb9939a634d2496202474167db2294f6346",
      "tree": {
        "sha": "838442357477e60010e14304e899669ce147403d",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/838442357477e60010e14304e899669ce147403d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 838442357477e60010e14304e899669ce147403d\nparent e2adb50e77562b513d98b730a36168f32ce3ec3e\nauthor Andrew Toth <andrewstoth@gmail.com> 1733772167 -0500\ncommitter GitHub <noreply@github.com> 1733772167 -0500\n\nUpdate bip-PSBT-SP.mediawiki\n\nCo-authored-by: Yuval Kogman <nothingmuch@woobling.org>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnV0OHCRC1aQ7uu5UhlAAA3gsQADp9PXWdSNyxaZjKy1PtwsSL\nTSwgcDB/wUvtvf3xr2UiCwCcUNGf5WFXXeuFx4LtYJgBWFOzGRP8R56ORSONnJhv\nXTIqPLQeS789V/q5NdIhCeiGTRauNx3yKPeCafolAaPEtOcV3ir2/svOnb22EukX\nz47JbLiR8N0HJr2LLE9S55816jDICxFRkJagax/j4MfccDwqHEAhrKfUi6ABKVYg\nCTRR4M/Czr3TMGuPNlW8kTkiYpdQoSVpx4nuMDhcUvH/M97OchOFJIokqAMYIEX6\nsE1mDEskuJbipLruQSrH/Y1VdhzzE+CM63pbOUT/In587he3tXnX5HAlUXe/gFvF\nrz2546bqjr2tWsOFMTy6b5QUXfN2Eokfx2WsL0szmuwA3mpqkKa71c3trY7dtJv/\nf2IJwkRAB2arsCqtEjG1lJ4aIeR6l+lbK/wJrC1Bz8/TeDW71aOs3vkFlng/AV3R\n9x9RZauP2S06cH3asLoX4MIRumIgNzbir+Fs0y+T7+YxoBpR7BQeuQkIy/TjvaYw\nGGaDYkGUIhO3sxaFRPFRUf03j6jaDVD+DW9/Thdu3Itblwfvl/96nlQJPVkprNKW\n3rNAbLoZ/HnrFuU7AULtZe5FukWI2dhWzJmti0o8gCGauQtRTTwhVPTTP2nJ4o2C\nVECHsvnOJHiUjRuYpnxa\n=nTDQ\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e2adb50e77562b513d98b730a36168f32ce3ec3e",
          "sha": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
          "html_url": "https://github.com/bitcoin/bips/commit/e2adb50e77562b513d98b730a36168f32ce3ec3e"
        }
      ],
      "message": "Update bip-PSBT-SP.mediawiki\n\nCo-authored-by: Yuval Kogman <nothingmuch@woobling.org>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-12-09T19:22:47Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-09T19:22:47Z"
      },
      "sha": "7472ffb9939a634d2496202474167db2294f6346"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGYyMWZjNWM1MTI1ODhhNGQyYTc0NjQ5YTYzODU1OGE2NjhlYjgyMWI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f21fc5c512588a4d2a74649a638558a668eb821b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f21fc5c512588a4d2a74649a638558a668eb821b",
      "tree": {
        "sha": "ae690e9dda236efc3037720625289f476d782f8e",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/ae690e9dda236efc3037720625289f476d782f8e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ae690e9dda236efc3037720625289f476d782f8e\nparent 7472ffb9939a634d2496202474167db2294f6346\nauthor Andrew Toth <andrewstoth@gmail.com> 1733876364 -0500\ncommitter Andrew Toth <andrewstoth@gmail.com> 1733876364 -0500\n\nUpdate size of ECDH share and unify spacing\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmdY2owACgkQYAB6/Ik4\nsBiCJw//Uu3MQjkeHFDV2eXQz/kvB982ZDqIzWiFw2YJrkZMAwJeHi0OUHfHifff\nj48kgYp9RTCn2y7PeBrvMdzTvhEFClyWNe1Bj3n/lJZZEzTk7rQMt77oJTfiVg8v\nrXQuqG3hXK8NtA+5JCzEhwQWJDMHq1h7UvkpPYwlIqESvN5OBUcvi66edWptmGuH\n+cyZRuU9NcUlM+oQ+E6FdFotYv6W7DYmT6gnHgFMyzqaHyiXNYPl2GlPSj8AYXNU\nEQIueO5B4BFZxxxXY1mYwBu/Dv5FSFD1jQLnd3+8lTu/bpqn2QLc/PTgwB4nZKmQ\nmLDF/8E8ATLmMJUpC5e1V69sIiR/dp54wT6vsnA/LbjmXtnUghvMK3ZAQSbg7aFc\nIQ/aJo70YE5TZLSqH5K/eJ2v0mr+L3Vgi71leTVeJdaX18DP4ykChCX+oJyeLRLI\n/++Pkq7y0VFGD3rOZQt8vG9CPFMkFf0SvDsfqZ2qP2/n7HEG5JhIe/V+Y17Nhkqr\nBNMA6IFTLoYsmJhMzLyYHjTj8BhE5U8kBlTj5iCxrcKzXHC9G3OntPiKAFfu9aWr\nFtHqbdLzrYfBnIOjmqS79n05Plr3oFiXaO7E3Z1q3nbNoBy6DkDw3R6yjcrsuzWy\nTW4MeSrhxvrSObhbZWEM76QagykwefHCeUk6IODbsNFYQqcrJjc=\n=adba\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/7472ffb9939a634d2496202474167db2294f6346",
          "sha": "7472ffb9939a634d2496202474167db2294f6346",
          "html_url": "https://github.com/bitcoin/bips/commit/7472ffb9939a634d2496202474167db2294f6346"
        }
      ],
      "message": "Update size of ECDH share and unify spacing",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-11T00:19:24Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-11T00:19:24Z"
      },
      "sha": "f21fc5c512588a4d2a74649a638558a668eb821b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGYyZWY3MWVhNWJiY2MxMDY2MzdkZTc5ODA3OWJkYWE0NDYzNGMwODg",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f2ef71ea5bbcc106637de798079bdaa44634c088",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f2ef71ea5bbcc106637de798079bdaa44634c088",
      "tree": {
        "sha": "7a01be4a423ac6ed882e8364cc14aecf2533c6e8",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/7a01be4a423ac6ed882e8364cc14aecf2533c6e8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7a01be4a423ac6ed882e8364cc14aecf2533c6e8\nparent f21fc5c512588a4d2a74649a638558a668eb821b\nauthor Andrew Toth <andrewstoth@gmail.com> 1735003019 -0500\ncommitter Andrew Toth <andrewstoth@gmail.com> 1735003019 -0500\n\nAdd post history and BIP dependencies\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmdqC4sACgkQYAB6/Ik4\nsBjF8Q/9Hju/LRDRxua8Jjcaa1G+i2I7SH663F3Ao36IaFLi0GdXllhPo3z9ZsIv\nRfQmDeLI6SJE+0ANqSGgzZ11ACnuXK8RE5CRUuTNXEf9TSqR9wD2w4uqyWGKZvGY\nULvNv3dEJZ3EleSNE4Bh73kpwVgXJHfr3UdEhHPG+QdXVHlNeVqaoaSOmNav5aRT\nbcCfFx7TbGnC/GRMeM6Pnr8lCbfyXubLO2wtWKf22ujr5eMdelKRAMT37jD/9Km/\neqitP0IAOPnti2d2B1IJtbQGBsAxvts0etUxyyt2M8BxUHtuCUMIxkotJw56rldm\nR0wjAMkFTdBRiK0gvoChiXTfB665/J3DmnZGnUwtmNE+RPljPz6GHH6rN2XF0MCK\nJh9RfMiEkb7NEbWwEhdMont2+hknDbbBM/GvpBtkEQmMOnToiQb8n3fPhZ9LaO1f\nZ5lThqvE6bBsTgb2dRAfrCcU6onhUh0prsLLvE1uZj1mgke0muRsbJynU9em1kM2\nUe+HGEH/3AOrZ5W3grA8jD+y8DO4TTTVKTZjO7zSLz+LHQjyaN7NNUx6Yazy0td6\nEBH4//va1SYzz4VRoZ9EBE7VJdERCtGTT7G75o70v/5WJwRXexf6ccwToXuYaHwv\nW7rUbSlParsfjVHwoi4cxWpnO0Q3dYp5J1iRV1uXU5nZ+OrGves=\n=kB29\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f21fc5c512588a4d2a74649a638558a668eb821b",
          "sha": "f21fc5c512588a4d2a74649a638558a668eb821b",
          "html_url": "https://github.com/bitcoin/bips/commit/f21fc5c512588a4d2a74649a638558a668eb821b"
        }
      ],
      "message": "Add post history and BIP dependencies",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:16:59Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:16:59Z"
      },
      "sha": "f2ef71ea5bbcc106637de798079bdaa44634c088"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDIyZjIzMTNmMmRmM2Q1NDgyMjcxMTE5NjgzNmJiYTlhZjM0ZWM4YzQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/22f2313f2df3d54822711196836bba9af34ec8c4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/22f2313f2df3d54822711196836bba9af34ec8c4",
      "tree": {
        "sha": "f154ec178507d94335b3192b828899afa07380db",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f154ec178507d94335b3192b828899afa07380db"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f154ec178507d94335b3192b828899afa07380db\nparent f2ef71ea5bbcc106637de798079bdaa44634c088\nauthor Andrew Toth <andrewstoth@gmail.com> 1735003046 -0500\ncommitter Andrew Toth <andrewstoth@gmail.com> 1735003046 -0500\n\nClarify motivation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmdqC6YACgkQYAB6/Ik4\nsBhAyQ//ZMSYFDJ5iulySO9H2jsO8OhA4k+yLScPGNIGxGBOG/B5PwTk0YNmwTvb\nG9vpzmbECvQhNO72vu1l14WYNuiBNce7zZV39FQVlo67gcV5Vqkvli7khCXVP5P9\nPcI2k5lsyhfs8wWgF8lw8SJL9qbEdR/qGtkolxKIfqRijPBG29wZyb3xIHIHitDS\nD+uUc6rn/ovggcRSH5nyLp3DiM+RdoeQJ5whK6EdSPHx63ADMZvY7jhHxk4xvI+7\nQk3sGKL6EtoOvBbHufR4J6dwR2MIglfUPnMLIIpH5sQZyXQ2EvkkOUlSnWSfflWI\nB+WpyXL1aEXUyNu6ZNsVV29ryx/dGlynuwaGuYL8YQkHVD5OzN1WusSKyrU7t3IU\nVkBBmE1xCRWP8QDE04UenJSrkXBLmI8cTKhKSK/Hj+bqlgQfxyzYHT10+E9IGIQh\nrWSinaR1h52p9dMtybe3ad3bGZwt2BkRaYbrA/m2YMW1kzfig0uBtjncAzWXYM4O\nKKC+QpMHoA8vYFgaOcZgHmBxuh+JdCHQfrWZ3JmbozTAj5q9kopG1eRiQGtGWM9B\nvF/uVGYy/pe3EJ1CkUh7WnyV2Th7Z1DkqcxMGTeMmkd83XhUCLAaZpyRK/jXGmsx\nxeKgwL7aipLmBswWsxV5wieq/l9MRsmRSvESwGF5yaZTAGzYlOY=\n=NYIU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f2ef71ea5bbcc106637de798079bdaa44634c088",
          "sha": "f2ef71ea5bbcc106637de798079bdaa44634c088",
          "html_url": "https://github.com/bitcoin/bips/commit/f2ef71ea5bbcc106637de798079bdaa44634c088"
        }
      ],
      "message": "Clarify motivation",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:17:26Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:17:26Z"
      },
      "sha": "22f2313f2df3d54822711196836bba9af34ec8c4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDJkYmMxMWE5MjVmNDA4N2E1YWExNzU1YjIwMWE3MWI4OWFjMGZiMzQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2dbc11a925f4087a5aa1755b201a71b89ac0fb34",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2dbc11a925f4087a5aa1755b201a71b89ac0fb34",
      "tree": {
        "sha": "7104387617d3f2e52ec8a0998ad582040f156d2e",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/7104387617d3f2e52ec8a0998ad582040f156d2e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7104387617d3f2e52ec8a0998ad582040f156d2e\nparent 22f2313f2df3d54822711196836bba9af34ec8c4\nauthor Andrew Toth <andrewstoth@gmail.com> 1735003067 -0500\ncommitter Andrew Toth <andrewstoth@gmail.com> 1735003067 -0500\n\nMove updater to before signer\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmdqC7sACgkQYAB6/Ik4\nsBh4bxAAvJ05PCBDJpsE9BPYBrKFypq6AFnRzZNOLHfcGMNfEG9PJyGkCfhUDDqd\nMgZnFcLremy1AxHJebAsNGpQixWCq0+73HY45SB+UTFTnogjcd7+sP35qxNwQYMi\nqlYf3UR9HjvB0ApTsZGn4hdZ2Fmik2FJmFy8MeycT/a0+rxWI/8HTdk/eKaH36So\nHnEdCWp3ehDcLohk6r1AtT+7eyFGjYUj+fweGjH0mDpApHuB5MLc0ZfToVuG2Gby\n+ViQy/yQix0h4t+3HUD6pEsjZhKmiYqQCtrg32gQTBk2p/+zuV1K6Tfhn+Fl+QiM\nRsLrW0eAR4fIZeJ7gewRoEaoCl9gh9gnkupDPAeurOpHN28qEbztkJawR2hfHvZG\nxxdh9jqjI1aF3Sk5jNovoXTpiLfjyjhQW/A7annVEtX2udQJ0Oe4CSIdrysNKMHS\nKXQ7JMBO2oeoj6yfemPAE+PsSVAnrx6y1yppz94CsGBQHi4jq4Mt1VP2Arf39Qcc\nvaH4JMAwMncqe4xsgS5pfMWC1bSm7ukX7Tki6vXM5h92uebSFvsVAJG11g/bwJ2J\n7eNFREDy+Wx8OLbQTHXGcpe2rN8Kkg4uwZmmQmtpD5ZsqogAFNTgX1MojN1H8wiA\nJ8TuqnD7ImomMcgGkF+0H0NindbDHCiyVE1BHp2isLy686gdXmM=\n=xHe0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/22f2313f2df3d54822711196836bba9af34ec8c4",
          "sha": "22f2313f2df3d54822711196836bba9af34ec8c4",
          "html_url": "https://github.com/bitcoin/bips/commit/22f2313f2df3d54822711196836bba9af34ec8c4"
        }
      ],
      "message": "Move updater to before signer",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:17:47Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:17:47Z"
      },
      "sha": "2dbc11a925f4087a5aa1755b201a71b89ac0fb34"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGZhNWQzZjgyZjE2MzUzYjI0MDYyNjUwYTk2N2VkZjRhOTRjMmExMzY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fa5d3f82f16353b24062650a967edf4a94c2a136",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/fa5d3f82f16353b24062650a967edf4a94c2a136",
      "tree": {
        "sha": "779b55ab9d54f86450aad306164300151d57d805",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/779b55ab9d54f86450aad306164300151d57d805"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 779b55ab9d54f86450aad306164300151d57d805\nparent 2dbc11a925f4087a5aa1755b201a71b89ac0fb34\nauthor Andrew Toth <andrewstoth@gmail.com> 1735003126 -0500\ncommitter Andrew Toth <andrewstoth@gmail.com> 1735003126 -0500\n\nClarify output script and sp info mutual exclusion and unique id\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmdqC/YACgkQYAB6/Ik4\nsBhMzw/+LZXcRsdqz+Kl0TSUr2vMT2y2ZneXajdr4tSxL6QTFIlLkkPpmg8dr01U\nAONrzjUjzmeWJ7oCiifUXbfzRtvUdOJWNUM52lHh7EqUTLpKACjRjkpJLiV8/Yx3\ng9aZ05yOSWCjkaAAHSFw7GKRpezIQx7+FAcw3dqqWgG9MT2DKdk/4Mx0LrN45YWm\ndPdGcY36JYymuzwP5vczdCGKuxoIHJ8dVOS4XloExtlag+dDvmc4kx0Uu+USGYIW\nYns3vxluy9Ka3cfDn8XmMKoXsunAvuM/meilIKEnPx232WHpEMUWxAnCbra60Y31\n4HfE1Apnsr5trkGruZW057l+m0qf2LgESTYpkNil4nvP6zI33Z3IQEcU4imOXfyN\nupfoxm6STrm1UzkGt/GVYjAzuxCUQU6YkbeNbiSEhapo9Qr6ao2UQWqpr8TFChPg\nCKE6bueb9ZwGx5c1bidZoZ0iU8EXhSP/fmp9GVKrxvKqmm90fcc4H5WXRm3r1iH/\npK+f9z9P9AiBi7qBHGewPk4uf3NB5qIzS+iipJSJ6mqJeHDBo+lVbT/HaS/LqPmH\njoh3HPjWFsjvcUKkSDPWOjTpLyqKgyzN498bi43DJlAcDa4bkP4QNAPVo3Oh0GEL\n95vtvqidXBjWiuxlVl1318HaZ5LVo5fMy1DDHmIGPy8aKQZfNVg=\n=XbvD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2dbc11a925f4087a5aa1755b201a71b89ac0fb34",
          "sha": "2dbc11a925f4087a5aa1755b201a71b89ac0fb34",
          "html_url": "https://github.com/bitcoin/bips/commit/2dbc11a925f4087a5aa1755b201a71b89ac0fb34"
        }
      ],
      "message": "Clarify output script and sp info mutual exclusion and unique id",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:18:46Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:18:46Z"
      },
      "sha": "fa5d3f82f16353b24062650a967edf4a94c2a136"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGYwNTM1M2I3ZWNjMWE0ZjVjMmZhNjYwYzZhNzZhNDNlOTA2ZTk5ZDU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f05353b7ecc1a4f5c2fa660c6a76a43e906e99d5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f05353b7ecc1a4f5c2fa660c6a76a43e906e99d5",
      "tree": {
        "sha": "00fdaf6a0e3601e135c11796878f4f1d21aef34d",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/00fdaf6a0e3601e135c11796878f4f1d21aef34d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 00fdaf6a0e3601e135c11796878f4f1d21aef34d\nparent fa5d3f82f16353b24062650a967edf4a94c2a136\nauthor Andrew Toth <andrewstoth@gmail.com> 1735003141 -0500\ncommitter Andrew Toth <andrewstoth@gmail.com> 1735003141 -0500\n\nAdd newline\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmdqDAUACgkQYAB6/Ik4\nsBhfLxAAqAEEZqm3zXWeUldRfn5CSkgGUqs2xr//qNDv/p7gTlXk1wtKYTRU019Z\nZ49wYO5C907Hz2vmDhtoZIswVD09WWFHePqsch5lzYyEkOXpsEW+1FgPJscq1pm/\nNtQp0BnV64nUlL4zdF3giYu/5AcsY9Z0CvdKEIHVrEjaUB3B750ivo3TE8wsuCaH\nKTEJytuEWiQXr1kbip4Rm+wwRPOmutGxd3T7xv0NYKOdbiWffHfoejKVjkScbKMI\nOlV6Ixfm/kDdYn9GxgDncrh6ekbz2IVHn5PYdVda+WIFNN2iIXv5uY1Uqrb1SMYL\nTq5EBcZRiSt7wYV4Zbm6Fh6rVcmHn159bTOaZNUA+FTZeNpFM0swpil/fuL6GnnQ\nmbPK14RuT9FuhB72xxVM3QvltxL4eQjjFkOTIdnfpcdIFmK2tAVPea5F5NzkJOKl\nFxBJ8AqGscOU/89ajlLrXhgHzrymCH2CIkgJogfaUEgaztWQn4AUuLKEFmDpH1qV\nEGMNTFmxf0eS3yOX7ed0UWl1me1w0Ux4Z4O3WY0U8gJF5Bvch88oYvxbmEwx377a\nYeHPTbsrG6J7Wcjg4k829MkX+rjxOh9HlRmEVKRvqlNPmTqmx8Gvqq3iBdkF1NqF\nJvCOv6yVbty+ljA7tm7YtZe63law5LfYo67T/yMO1kMKf1cSfPA=\n=9Uar\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fa5d3f82f16353b24062650a967edf4a94c2a136",
          "sha": "fa5d3f82f16353b24062650a967edf4a94c2a136",
          "html_url": "https://github.com/bitcoin/bips/commit/fa5d3f82f16353b24062650a967edf4a94c2a136"
        }
      ],
      "message": "Add newline",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:19:01Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:19:01Z"
      },
      "sha": "f05353b7ecc1a4f5c2fa660c6a76a43e906e99d5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGM5NTg5YzU4OGJkYzdlMjY1Y2EyYTczYmE1NGUwZGYxYzFjOTVjN2Y",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "tree": {
        "sha": "2016bb60d7dd394e9cc4eabe9bf01d75e24f0bc0",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/2016bb60d7dd394e9cc4eabe9bf01d75e24f0bc0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2016bb60d7dd394e9cc4eabe9bf01d75e24f0bc0\nparent f05353b7ecc1a4f5c2fa660c6a76a43e906e99d5\nauthor Andrew Toth <andrewstoth@gmail.com> 1735003160 -0500\ncommitter Andrew Toth <andrewstoth@gmail.com> 1735003160 -0500\n\nAdd ref for why sighash_all is required\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmdqDBgACgkQYAB6/Ik4\nsBipzA/7ButjEeko4S9AZlpP1IAOspZrm04AiVzv/Ov5rfKNww0hpaHoZjoHSPQN\nB+7ENErytc82NvuhMlUEJGVo5V8WwyYm6Me48dK2VkHpQD6MEw3Bd5t4STavOdpu\ngVH9orLSnr+mjoDwIaw9fIfLPEYOo0YIFbVUdy4eJCFeQcN4cloPrLFmuBiixRXi\nlH/lWKDKMZT+6VdeBwIzL10hoRXELcaPoLobQHGQCPVHzuVSIMW3tnH6irJBAQ5n\n15XmJFRrQyHXZUFVN6L4vMLMZPny6SKb+XmbtN8ZfRmucH58a4vjhYe+hU/cYI9o\n8hyjOUvnIcS4fNCp7B7yg91yR9SLtEcxUTq2FeyPdjAskxXRg1XCZL3+5zjOfYmU\nTnkKG7ehI3wOshDN5YOUQSTrtDPJ82PQXxIHIXXn4rgyaSzqlJeRxxXdSBiy/o6e\nLwx2j5bxDy1a3jbFeYMvTVHG1Izv2Ajj6jRSjGqTUhIBUPSn3kCKghvYQv9FZYm+\n3hAbZzwQToy6CjiHXFnMHej/LBMFnFAsq+G9StQpKyl6+eGnYpQ2oABiDH/5SfHJ\nDB7+sG/b6JT9+jNo3G9ExuYDwcCVFwBV1D+UoGBai8I3CqCWaypCD48EdN7rLw1E\n+Z2AEARAUU+rX5P1JrE5e/RGNEt8QIW4Gxei2pKFCk1PQgJdlf0=\n=lRJW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f05353b7ecc1a4f5c2fa660c6a76a43e906e99d5",
          "sha": "f05353b7ecc1a4f5c2fa660c6a76a43e906e99d5",
          "html_url": "https://github.com/bitcoin/bips/commit/f05353b7ecc1a4f5c2fa660c6a76a43e906e99d5"
        }
      ],
      "message": "Add ref for why sighash_all is required",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:19:20Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-12-24T01:19:20Z"
      },
      "sha": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f"
    },
    {
      "event": "unlabeled",
      "id": 15767786990,
      "node_id": "UNLE_lADOAN28mc6apsiAzwAAAAOr1VXu",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15767786990",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-26T20:03:35Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2524762294,
      "node_id": "PRR_kwDOAN28mc6WfNC2",
      "url": null,
      "actor": null,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "guggero",
        "id": 1008879,
        "node_id": "MDQ6VXNlcjEwMDg4Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guggero",
        "html_url": "https://github.com/guggero",
        "followers_url": "https://api.github.com/users/guggero/followers",
        "following_url": "https://api.github.com/users/guggero/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guggero/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guggero/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guggero/subscriptions",
        "organizations_url": "https://api.github.com/users/guggero/orgs",
        "repos_url": "https://api.github.com/users/guggero/repos",
        "events_url": "https://api.github.com/users/guggero/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guggero/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2524762294",
      "submitted_at": "2024-12-28T16:18:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815770840",
      "pull_request_review_id": 2393818183,
      "id": 1815770840,
      "node_id": "PRRC_kwDOAN28mc5sOnbY",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 63,
      "original_position": 63,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Suggest defining \"Discrete Log Equality Proofs (DLEQ)\" above this / on first use, and discuss overlap with #1689 (if any) or linkage to be made between the two.",
      "created_at": "2024-10-24T22:25:14Z",
      "updated_at": "2024-10-24T22:25:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1815770840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815770840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1819522208",
      "pull_request_review_id": 2399834343,
      "id": 1819522208,
      "node_id": "PRRC_kwDOAN28mc5sc7Sg",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 58,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as already noted in the DLEQ gist, this should have a size of 33 bytes instead, as it represents a point on the curve (https://gist.github.com/andrewtoth/df97c3260cc8d12f09d3855ee61322ea?permalink_comment_id=5250407#gistcomment-5250407), and representing it as x-only very likely only increases complexity for the DLEQ proof.",
      "created_at": "2024-10-28T18:07:45Z",
      "updated_at": "2024-10-28T18:07:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1819522208",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1819522208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": 57,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838674868",
      "pull_request_review_id": 2430540807,
      "id": 1838674868,
      "node_id": "PRRC_kwDOAN28mc5tl_O0",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 21,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Consistency nit: \"BIP 370\", but \"BIP352\"",
      "created_at": "2024-11-12T19:49:06Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838674868",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838674868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838690816",
      "pull_request_review_id": 2430540807,
      "id": 1838690816,
      "node_id": "PRRC_kwDOAN28mc5tmDIA",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 30,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What creates the requirement to sign with `SIGHASH_ALL`? A quick check suggests that BIP 352 only recommends it, but doesn’t require it, and BIP 370 doesn’t seem to impose such a requirement. I might have missed something of course.",
      "created_at": "2024-11-12T19:55:24Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838690816",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838690816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838693715",
      "pull_request_review_id": 2430540807,
      "id": 1838693715,
      "node_id": "PRRC_kwDOAN28mc5tmD1T",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If there is a single signer, why would others need to be able to verify? If there are multiple signers, wouldn’t all signers need to collaborate by putting forth shares rather than \"computing silent payment outputs\"?",
      "created_at": "2024-11-12T19:56:49Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838693715",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838693715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838700325",
      "pull_request_review_id": 2430540807,
      "id": 1838700325,
      "node_id": "PRRC_kwDOAN28mc5tmFcl",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 38,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Does it make sense to require the presence of either `PSBT_OUT_SCRIPT` or `PSBT_OUT_SP_V0_INFO`? What if there is another future extension of BIP 370 that provides a third option?\r\n\r\nWould it perhaps be sufficient to declare an output that has both the fields `PSBT_OUT_SCRIPT` and `PSBT_OUT_SP_V0_INFO` to make the PSBT invalid (i.e. at most one of these two can be present)?\r\n\r\nPerhaps the interplay of these two fields could be elaborated.",
      "created_at": "2024-11-12T20:01:58Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838700325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838700325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838709641",
      "pull_request_review_id": 2430540807,
      "id": 1838709641,
      "node_id": "PRRC_kwDOAN28mc5tmHuJ",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 100,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I found this sentence confusing. Does this also hold if both `PSBT_OUT_SP_V0_INFO` and `PSBT_OUT_SCRIPT` are specified on an output?",
      "created_at": "2024-11-12T20:09:32Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838709641",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838709641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838710334",
      "pull_request_review_id": 2430540807,
      "id": 1838710334,
      "node_id": "PRRC_kwDOAN28mc5tmH4-",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 116,
      "original_position": 109,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I only understood here that both of these fields can be set at the same time. Perhaps that could be explained above where `PSBT_OUT_SP_V0_INFO` is first introduced.",
      "created_at": "2024-11-12T20:10:13Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838710334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838710334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838719699",
      "pull_request_review_id": 2430540807,
      "id": 1838719699,
      "node_id": "PRRC_kwDOAN28mc5tmKLT",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 121,
      "original_position": 114,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This might be a bit out of scope for your PR, but I was just wondering:\r\nSilent Payment transactions disallow inputs spending native segwit outputs with version > 1, but should it perhaps also exclude native segwit outputs with version 1 that are not P2TR inputs? Most of version 1 is yet unencumbered, are Silent Payments robust in regard to Pay to Anchor?",
      "created_at": "2024-11-12T20:18:22Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838719699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838719699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 120,
      "original_start_line": 113,
      "start_side": "RIGHT",
      "line": 121,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838722213",
      "pull_request_review_id": 2430540807,
      "id": 1838722213,
      "node_id": "PRRC_kwDOAN28mc5tmKyl",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 146,
      "original_position": 133,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As mentioned above, this seems to be stricter than BIP 352 itself. Is this intentional?",
      "created_at": "2024-11-12T20:20:37Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838722213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838722213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838729742",
      "pull_request_review_id": 2430540807,
      "id": 1838729742,
      "node_id": "PRRC_kwDOAN28mc5tmMoO",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 161,
      "original_position": 148,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was surprised that we provide a single share and a single DLEQ proof per participant rather than one per input. In case there are multiple participants, this leaks to all other participants which inputs were provided in bulk by one party. I was wondering if there might be better privacy properties if participants provide a separate share for each input, that way all subsequent participants do not know how previous inputs group if the PSBT is passed in a circle rather than shared with all participants after each step. Maybe I’m overthinking this, though.",
      "created_at": "2024-11-12T20:27:11Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838729742",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838729742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 161,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838737778",
      "pull_request_review_id": 2430540807,
      "id": 1838737778,
      "node_id": "PRRC_kwDOAN28mc5tmOly",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.\n+\n+Set the value for the key of PSBT_GLOBAL_SP_ECDH_SHARE to ''C''.\n+\n+Compute the DLEQ proof for ''C'' using ''a<sub>n</sub>'' and ''B<sub>scan</sub>''.\n+Set the value for the key of PSBT_GLOBAL_SP_DLEQ to the proof.\n+\n+====Verifying the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer should verify the ECDH shares for all eligible inputs it does not have the private key for using the proofs provided by other Signers.\n+\n+====Computing the Output Scripts====\n+\n+Compute the PSBT_OUT_SCRIPT using the procedure in [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#user-content-Creating_outputs BIP352] but substituting ''a·B<sub>scan</sub>'' with the sum of all PSBT_GLOBAL_SP_ECDH_SHAREs for that scan key.\n+If there are multiple silent payment codes with the same scan key, sort the codes lexicographically in ascending order to determine the ordering of the ''k'' value.\n+If there are multiple silent payment codes with both the same scan and spend keys, sort the subgroup by output index in ascending order.\n+\n+====Change Detection====\n+\n+Updaters may add two PSBT_OUT_BIP32_DERIVATION key-value-pairs with the corresponding derivation path of both the scan and spend keys. The Signer can then use these fields to verify that the silent payment code is change.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 167,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should the \"Updater\" role perhaps appear before the \"Signer\"? Adding change would probably happen at the same time participants add inputs, so surely before signing?\r\n\r\n",
      "created_at": "2024-11-12T20:34:43Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838737778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838737778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838743978",
      "pull_request_review_id": 2430540807,
      "id": 1838743978,
      "node_id": "PRRC_kwDOAN28mc5tmQGq",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 13,
      "original_position": 13,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n  License: BSD-2-Clause\r\n  Post-History: https://groups.google.com/g/bitcoindev/c/5G5wzqUXyk4\r\n  Requires: 352, 370\r\n```",
      "created_at": "2024-11-12T20:40:38Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838743978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838743978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844322136",
      "pull_request_review_id": 2439395304,
      "id": 1844322136,
      "node_id": "PRRC_kwDOAN28mc5t7h9Y",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 30,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838690816,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had the same question. The rationale in BIP 352 seems to imply that just forbidding ANYONECANPAY, i.e. that all signatures must fully commit to the input set, which seems sufficient even the PSBT setting?",
      "created_at": "2024-11-15T18:53:55Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844322136",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844322136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844333056",
      "pull_request_review_id": 2439395304,
      "id": 1844333056,
      "node_id": "PRRC_kwDOAN28mc5t7koA",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 125,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n* Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\r\n* Verify the DLEQ proofs for all inputs it does not have the private keys for.\r\n* If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\r\n```",
      "created_at": "2024-11-15T19:03:17Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844333056",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844333056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": 123,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844379984",
      "pull_request_review_id": 2439395304,
      "id": 1844379984,
      "node_id": "PRRC_kwDOAN28mc5t7wFQ",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 55,
      "original_position": 55,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This seems to imply any subset of the inputs can be specified, presumably for grouping by owner.\r\n\r\nThe main advantage over allowing only one outpoint per ECDH share seems to be a reduction in proving complexity for signers who choose to provide DLEQ proofs, since the 36 byte outpoint outweighs a `a * B_scan` if it were provided in a per input field with an output index or even B_scan as the keydata.\r\n\r\nSome disadvantages:\r\n\r\n1. Mostly theoretical privacy concern: the DLEQ proof is publicly verifiable, and so much stronger heuristic for common ownership than the traditional common input ownership heuristic. Other parties or observers of the PSBT might store or leak such values, which hurts Signers' deniability.\r\n2. If the outpoint lists are not disjoint, then the correct sum might not be computable even if all inputs are accounted for by some share. If every ECDH_SHARE corresponded to only a single outpoint, as long as each signer contributes a value for each input, in any order, the sum can always be computed. If users modify a PSBT over multiple devices with partly overlapping access to private keys, single input shares ensure all intermediate states can lead to a fully signed state, regardless of the order in which the user proceeded.",
      "created_at": "2024-11-15T19:47:35Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844379984",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844379984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844390045",
      "pull_request_review_id": 2439395304,
      "id": 1844390045,
      "node_id": "PRRC_kwDOAN28mc5t7yid",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 68,
      "original_position": 68,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For a given set of outpoints, there are multiple relevant `B_scan` generators all of which share share the same `a` witness in their respective proofs. This could be one batch proof per SP output set, instead of per individual B_scan. Although only a single 64 byte proof per input set is required, the prover and verifier complexity is the same as n proofs, where n is the number of SP outputs.",
      "created_at": "2024-11-15T19:57:51Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844390045",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844390045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 66,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844433999",
      "pull_request_review_id": 2439395304,
      "id": 1844433999,
      "node_id": "PRRC_kwDOAN28mc5t79RP",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 142,
      "original_position": 129,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "IIUC, if it were not for this, blinding the SP_V0_INFO field would be technically be possible.\r\n\r\nSince that would necessarily add another round of communication between the various entities, as only only updaters with access to the blinding keys could set the output.\r\n\r\nA global flag to indicate whether the additional round is required might make sense?\r\n\r\nThis flag might have 3 values, indicating if blinding is not used (allowing signers to update outputs), optional (precluding that), or required in which case all outputs must have SP_V0_INFO, with dummy values used for non-SP outputs. \"required\" or \"mandatory\" blinding is a bit misleading, it's providing deniability as to which outputs use SP, not requiring SP and blinding actually be used.",
      "created_at": "2024-11-15T20:34:42Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844433999",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844433999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 140,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": 142,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844465220",
      "pull_request_review_id": 2439395304,
      "id": 1844465220,
      "node_id": "PRRC_kwDOAN28mc5t8E5E",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.\n+\n+Set the value for the key of PSBT_GLOBAL_SP_ECDH_SHARE to ''C''.\n+\n+Compute the DLEQ proof for ''C'' using ''a<sub>n</sub>'' and ''B<sub>scan</sub>''.\n+Set the value for the key of PSBT_GLOBAL_SP_DLEQ to the proof.\n+\n+====Verifying the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer should verify the ECDH shares for all eligible inputs it does not have the private key for using the proofs provided by other Signers.\n+\n+====Computing the Output Scripts====\n+\n+Compute the PSBT_OUT_SCRIPT using the procedure in [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#user-content-Creating_outputs BIP352] but substituting ''a·B<sub>scan</sub>'' with the sum of all PSBT_GLOBAL_SP_ECDH_SHAREs for that scan key.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 174,
      "original_position": 161,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Assuming my suggestion to make shares be one per input is rejected, this needs to verify that the sets of outpoints in all ECDH_SHARE fields for a given scan key form a valid partition of the [BIP 352 input set](https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#inputs-for-shared-secret-derivation) (no duplicates, no missing outpoints) before computing the sum of the values, or this sum might differ from `b_scan·A` where `A` is also is computed as in [BIP 352 scanning](https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#scanning).",
      "created_at": "2024-11-15T20:44:02Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844465220",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844465220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 174,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845565863",
      "pull_request_review_id": 2441128988,
      "id": 1845565863,
      "node_id": "PRRC_kwDOAN28mc5uARmn",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 30,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838690816,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Signing with `SIGHASH_NONE` doesn't make sense because you will have to generate the ECDH shares for all payments, but they could then be removed or new ones added. So you will have to go back to the signer again. I suppose technically this could be allowed but I don't see a use for it, and it could be used by a griefer to force the party to keep going back to the signer. If you want to have a signer sign all non-eligible inputs with `SIGHASH_NONE`, give the signer the inputs before adding any silent payment outputs. It would then fall back to BIP 370.\r\nSigning with `SIGHASH_SINGLE` would allow another participant to add a payment to the same scan key, but a lower lexicographic order, invalidating the `k` value in the output script.\r\nSigning with `SIGHASH_ANYONECANPAY` is unsafe as per BIP 352.\r\n\r\nI suppose I could add this as a footnote.\r\nBut also, I don't think this sentence should be in the motivation section.",
      "created_at": "2024-11-17T19:20:09Z",
      "updated_at": "2024-11-17T19:26:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845565863",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845565863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845587960",
      "pull_request_review_id": 2441149305,
      "id": 1845587960,
      "node_id": "PRRC_kwDOAN28mc5uAW_4",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 31,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838693715,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> If there is a single signer, why would others need to be able to verify?\r\n\r\nIn the case of a hardware wallet connected to a software wallet, the hardware wallet is the single signer but the software wallet must verify that the output is computed properly before broadcasting.\r\n\r\n> If there are multiple signers, wouldn’t all signers need to collaborate by putting forth shares rather than \"computing silent payment outputs\"?\r\n\r\nYes, all signers need to collaborate and put forth shares, but they must also compute the output script before signing. This computed output script must be added to the PSBT before signing to be compatible with BIP 370 signing process. After it is added, the other signers can compute the output script to verify themselves before signing.",
      "created_at": "2024-11-17T19:32:54Z",
      "updated_at": "2024-11-17T19:32:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845587960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845587960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845602201",
      "pull_request_review_id": 2441168885,
      "id": 1845602201,
      "node_id": "PRRC_kwDOAN28mc5uAaeZ",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 38,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838700325,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think making these fields exclusive will work. The `PSBT_OUT_SCRIPT` must be added to sign the PSBT. The `PSBT_OUT_SP_V0_INFO` must be present to verify that the `PSBT_OUT_SCRIPT` is actually correct after it is added.\r\n\r\n> What if there is another future extension of BIP 370 that provides a third option?\r\n\r\nThat would indeed soften this requirement. This BIP would have to be modified to support that extension, making it\r\n\r\n> If either `PSBT_OUT_SCRIPT` or `PSBT_OUT_NEW_EXTENSION` are not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\r\n\r\nI don't really have an idea on how this could be made more graceful for that scenario.\r\n\r\n> Perhaps the interplay of these two fields could be elaborated.\r\n\r\nI will add some more context in a footnote, thanks.",
      "created_at": "2024-11-17T19:40:15Z",
      "updated_at": "2024-11-17T19:40:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845602201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845602201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845603206",
      "pull_request_review_id": 2441170030,
      "id": 1845603206,
      "node_id": "PRRC_kwDOAN28mc5uAauG",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 100,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838709641,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, it does not hold once `PSBT_OUT_SCRIPT` is added to an output. Only outputs without that field would need to fall back to `PSBT_OUT_SP_V0_INFO`. I will clarify this in the text.",
      "created_at": "2024-11-17T19:42:14Z",
      "updated_at": "2024-11-17T19:42:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845603206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845603206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845604453",
      "pull_request_review_id": 2441171335,
      "id": 1845604453,
      "node_id": "PRRC_kwDOAN28mc5uAbBl",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 121,
      "original_position": 114,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838719699,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe BIP 352 specifies that only the script template `OP_1 <32 bytes>` is used, and not that it is segwit v1. So, P2A does not follow that template, and will be ignored. But, segwit versions higher than v1 specifically are prohibited for forward compatibility reasons.\r\n\r\nThis is what I understood from @josibake's explanation.",
      "created_at": "2024-11-17T19:49:42Z",
      "updated_at": "2024-11-17T19:49:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845604453",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845604453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 120,
      "original_start_line": 113,
      "start_side": "RIGHT",
      "line": 121,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845605920",
      "pull_request_review_id": 2441172677,
      "id": 1845605920,
      "node_id": "PRRC_kwDOAN28mc5uAbYg",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 146,
      "original_position": 133,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838722213,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is intentional. `SIGHASH_SINGLE` is unsafe for `k` values. `SIGHASH_NONE` does not make sense since you will have to compute ECDH shares for the outputs, but you presumably don't care about the outputs if you are signing with that flag.",
      "created_at": "2024-11-17T19:54:06Z",
      "updated_at": "2024-11-17T19:54:06Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845605920",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845605920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845607851",
      "pull_request_review_id": 2441174695,
      "id": 1845607851,
      "node_id": "PRRC_kwDOAN28mc5uAb2r",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 161,
      "original_position": 148,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838729742,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is provided as a performance optimization so that there is only one proof for multiple inputs.\r\nIt is not required to combine all your inputs. You could selectively add different shares and proofs for each inputs you don't want to link. I suppose I could make that option more explicit in the text. ",
      "created_at": "2024-11-17T19:56:30Z",
      "updated_at": "2024-11-17T19:56:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845607851",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845607851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 161,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845636474",
      "pull_request_review_id": 2441212210,
      "id": 1845636474,
      "node_id": "PRRC_kwDOAN28mc5uAi16",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 55,
      "original_position": 55,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844379984,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The main advantage over allowing only one outpoint per ECDH share seems to be a reduction in proving complexity for signers who choose to provide DLEQ proofs\r\n\r\nThe main advantage is reduction in both ECDH share generation and proving complexity.\r\nAll outpoint private keys can be summed, and then only a single ECC mult for the shares, and 2 ECC mults for the proof.\r\n\r\nConsider the common case of a single sig wallet using a hardware signing device receiving many small inputs over time. The wallet now contains 100 utxos and wants to spend to a single silent payment address.\r\nBy using single share and proof for each outpoint, that is 100 * ECDH share + 100 * DLEQ proof (2 ECC mults) + 100 * signatures = 400 ECC mults.\r\nBy summing all inputs, the result is now 1 * ECDH share + 1 * DLEQ proof (2 ECC mults) + 100 signatures = 103 ECC mults.\r\nOn a simple hardware signing device, this makes the signing time 4x, making it potentially a few minutes to over 10.\r\n\r\nre: disadvantages\r\n1. It is only an option to combine the inputs. You can still provide a share and proof per input or whatever combination of inputs you'd like. I will make this more clear in the text. I believe the single sig with hardware wallet is the most common case though, so we should optimize for that case.\r\n2. This is indeed a potential pitfall. It could also be addressed by providing a share and proof per input as a fallback. I will add some text to address this situation.",
      "created_at": "2024-11-17T20:25:25Z",
      "updated_at": "2024-11-17T20:25:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845636474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845636474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845638467",
      "pull_request_review_id": 2441213924,
      "id": 1845638467,
      "node_id": "PRRC_kwDOAN28mc5uAjVD",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 68,
      "original_position": 68,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844390045,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, this is a great insight, thank you!\r\n\r\nWould it not also reduce the complexity, since it would only be one proof to verify after summing the `B_scan` generators instead of verifying each proof individually?",
      "created_at": "2024-11-17T20:36:35Z",
      "updated_at": "2024-11-17T20:36:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845638467",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845638467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 66,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845698574",
      "pull_request_review_id": 2441273088,
      "id": 1845698574,
      "node_id": "PRRC_kwDOAN28mc5uAyAO",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 68,
      "original_position": 68,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844390045,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you mean given $P = aG$, and scan keys $(B_i)_{i=1}^n$, it's possible to prove knowlege of $a$ in $Q = a (n^{-1} \\sum B_i)$ where $n^{-1} \\sum B_i$ is a public input, but I'm not sure this is sound / proving the same thing.\r\n\r\n[This reference (section 3.2.3.3)](https://dspacemainprd01.lib.uwaterloo.ca/server/api/core/bitstreams/780bbd3f-3e91-4cc2-8077-fe51d3257c5b/content) seems to suggest it isn't, see footnote 16 on page 73, there's additional delinearization terms which are similar to key cancellation mitigation (and afaict are amenable to Fiat-Shamir just the same). This is an improvement over my implied suggestion as batched multiplication be used, but it does not reduce it to a single multiplication. Admittedly I don't yet see how to actually attack soundness as a malicious prover, especially when the prover does not control the choice of the the B_scan keys.\r\n\r\nThe batch proof I'm familiar with involves having an R point per generator, so same structure as proposed in the DLEQ BIP, just generalized from 2 to n+1 verification equations. When the proof is encoded as the challenge and the response, the encoding the n+1 R points is implicit, so the size would still be 64 bytes and both prover and verifier work is concretely reduced (~half the verification equations, and a shared challenge hash), but not asymptotically as the total work is still linear for both prover and verifier.",
      "created_at": "2024-11-17T23:46:45Z",
      "updated_at": "2024-11-17T23:46:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1845698574",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1845698574"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 66,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1847314644",
      "pull_request_review_id": 2443792122,
      "id": 1847314644,
      "node_id": "PRRC_kwDOAN28mc5uG8jU",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 68,
      "original_position": 68,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844390045,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Using the mentioned protocol, \"RME-based common exponent Schnorr protocol\" (Henry14 3.2.3.3), the verifier performs 2+k ECC mults per proof, where k is the number of silent payment outputs, but the k mults can be shared for a batch of proofs, which large transactions can be a significant improvement in verifier complexity.\r\n\r\nCompared to this protocol the strawman protocol I described in the previous comment is broken in two ways, not just one:\r\n\r\n- two verification equations are needed, instead of only one (section 4.2 describes a lattice basis attack on soundness since the prover's responses are undetermined)\r\n- de-linearization (or in the multiplicative terms of Henry14, RME) is needed for soundness as well (see section 3.1.4.3)\r\n\r\nIn a non-interactive setting, the t_i terms of the random linear combination is generated by hashing.\r\n\r\nIf $t_i = H(B_1, B_2, \\dots, B_k)$ ($B_i$ is supposed to be `{B_{scan}}_i` but that apparently isn't in github's latex regex =P) the $k$ proofs would share the same delinearized sum $\\sum_{i=1}^k t_i B_i$, which appears as a term in the 2nd verification equation. This reduces $k^2$ ECC mults to $k$ (but asymptotically is the same because of other side of the equation still has a $\\sum_{i=1}^{k} t_i S_i$ term where $S_i = aB_i$ is a public input).\r\n\r\nUnfortunately the full set of SP_V0_INFO fields to be finalized before DLEQ proofs can be computed in that case, but if I understand Lemma 3.5 I think the $t_i$ values used for this can be derived as $t_i = H(B_i)$ without destroying the proof of soundness. If this is correct then this reduction in verifier computation could be applied to batch-verify whatever $k$ batch-DLEQs, but number of roundtrips is not reduced because new proofs would be needed for the new outputs, and verifiers would need to be given explicit subsets of the outputs for each batch proof indicating what it covers, instead of being able to construct the proof statements implicitly from the set of all SP_V0_INFO fields, so it's not clear that this is a meaningful improvement over hashing all of the $B_i$s to delinearize.",
      "created_at": "2024-11-18T21:42:14Z",
      "updated_at": "2024-11-18T21:45:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1847314644",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1847314644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 66,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1876554375",
      "pull_request_review_id": 2489765546,
      "id": 1876554375,
      "node_id": "PRRC_kwDOAN28mc5v2fKH",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 55,
      "original_position": 55,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844379984,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Here's a blog post](https://blog.casa.io/bitcoin-multisig-hardware-signing-performance-2024/) of time it takes to sign transactions on various hardware devices. I think it makes sense to think about optimizing for this.",
      "created_at": "2024-12-09T19:22:24Z",
      "updated_at": "2024-12-09T19:22:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1876554375",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1876554375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1876934043",
      "pull_request_review_id": 2490400738,
      "id": 1876934043,
      "node_id": "PRRC_kwDOAN28mc5v372b",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 142,
      "original_position": 129,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844433999,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think it's this requirement, but the one a few lines up:\r\n`* If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.`\r\n\r\nWe would need to only compute the output scripts for the non-blinded outputs.\r\nYes, if we want to hide which participants add an SP vs a regular taproot address entirely, we would need all outputs to have a dummy SP_V0_INFO and have everyone compute shares and proofs for them, even if they don't end up being used.",
      "created_at": "2024-12-09T23:50:16Z",
      "updated_at": "2024-12-09T23:50:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1876934043",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1876934043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 140,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": 142,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261107",
      "pull_request_review_id": 2521323226,
      "id": 1896261107,
      "node_id": "PRRC_kwDOAN28mc5xBqXz",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.\n+\n+Set the value for the key of PSBT_GLOBAL_SP_ECDH_SHARE to ''C''.\n+\n+Compute the DLEQ proof for ''C'' using ''a<sub>n</sub>'' and ''B<sub>scan</sub>''.\n+Set the value for the key of PSBT_GLOBAL_SP_DLEQ to the proof.\n+\n+====Verifying the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer should verify the ECDH shares for all eligible inputs it does not have the private key for using the proofs provided by other Signers.\n+\n+====Computing the Output Scripts====\n+\n+Compute the PSBT_OUT_SCRIPT using the procedure in [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#user-content-Creating_outputs BIP352] but substituting ''a·B<sub>scan</sub>'' with the sum of all PSBT_GLOBAL_SP_ECDH_SHAREs for that scan key.\n+If there are multiple silent payment codes with the same scan key, sort the codes lexicographically in ascending order to determine the ordering of the ''k'' value.\n+If there are multiple silent payment codes with both the same scan and spend keys, sort the subgroup by output index in ascending order.\n+\n+====Change Detection====\n+\n+Updaters may add two PSBT_OUT_BIP32_DERIVATION key-value-pairs with the corresponding derivation path of both the scan and spend keys. The Signer can then use these fields to verify that the silent payment code is change.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 167,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838737778,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-12-24T01:20:24Z",
      "updated_at": "2024-12-24T01:20:24Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896261107",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261150",
      "pull_request_review_id": 2521323277,
      "id": 1896261150,
      "node_id": "PRRC_kwDOAN28mc5xBqYe",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 13,
      "original_position": 13,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838743978,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-12-24T01:20:29Z",
      "updated_at": "2024-12-24T01:20:29Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896261150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261235",
      "pull_request_review_id": 2521323402,
      "id": 1896261235,
      "node_id": "PRRC_kwDOAN28mc5xBqZz",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 146,
      "original_position": 133,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838722213,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a footnote to clarify this.",
      "created_at": "2024-12-24T01:20:44Z",
      "updated_at": "2024-12-24T01:20:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896261235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 146,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261452",
      "pull_request_review_id": 2521323687,
      "id": 1896261452,
      "node_id": "PRRC_kwDOAN28mc5xBqdM",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 38,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838700325,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Clarified this section and added a footnote.",
      "created_at": "2024-12-24T01:21:13Z",
      "updated_at": "2024-12-24T01:21:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896261452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261697",
      "pull_request_review_id": 2521323934,
      "id": 1896261697,
      "node_id": "PRRC_kwDOAN28mc5xBqhB",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 116,
      "original_position": 109,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838710334,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added more context above.",
      "created_at": "2024-12-24T01:21:25Z",
      "updated_at": "2024-12-24T01:21:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896261697",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261933",
      "pull_request_review_id": 2521324258,
      "id": 1896261933,
      "node_id": "PRRC_kwDOAN28mc5xBqkt",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 100,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838709641,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was incorrect. This *does* also hold if both are specified. I updated this section and added a footnote for the reasoning.",
      "created_at": "2024-12-24T01:21:56Z",
      "updated_at": "2024-12-24T01:21:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896261933",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896261933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896262371",
      "pull_request_review_id": 2521324750,
      "id": 1896262371,
      "node_id": "PRRC_kwDOAN28mc5xBqrj",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 30,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838690816,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed the sentence, but also added a footnote in the Signer section to clarify why.",
      "created_at": "2024-12-24T01:22:50Z",
      "updated_at": "2024-12-24T01:22:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896262371",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896262371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896262430",
      "pull_request_review_id": 2521324829,
      "id": 1896262430,
      "node_id": "PRRC_kwDOAN28mc5xBqse",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 21,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838674868,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-12-24T01:22:59Z",
      "updated_at": "2024-12-24T01:22:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896262430",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896262430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896262505",
      "pull_request_review_id": 2521324905,
      "id": 1896262505,
      "node_id": "PRRC_kwDOAN28mc5xBqtp",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": null,
      "original_position": 58,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1819522208,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-12-24T01:23:08Z",
      "updated_at": "2024-12-24T01:23:08Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896262505",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896262505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": 57,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896266653",
      "pull_request_review_id": 2521329391,
      "id": 1896266653,
      "node_id": "PRRC_kwDOAN28mc5xBrud",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 55,
      "original_position": 55,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844379984,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think the 2 main use cases will be for a wallet that has access to all inputs, or only one or a few that they would not like to link. So, perhaps having subsets of different inputs is not the best design for this spec.\r\n\r\nHow about optional fields per input or optional global fields? If the global fields are present, they represent the sum of all inputs. Otherwise, a field per input must be set. I think this is simpler than using the key to specify subsets.",
      "created_at": "2024-12-24T01:30:25Z",
      "updated_at": "2024-12-24T01:30:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896266653",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896266653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896267530",
      "pull_request_review_id": 2521330978,
      "id": 1896267530,
      "node_id": "PRRC_kwDOAN28mc5xBr8K",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 161,
      "original_position": 148,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838729742,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See my comment [here](https://github.com/bitcoin/bips/pull/1687/files#r1896266653).",
      "created_at": "2024-12-24T01:31:55Z",
      "updated_at": "2024-12-24T01:31:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1896267530",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1896267530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 161,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1898948171",
      "pull_request_review_id": 2524762294,
      "id": 1898948171,
      "node_id": "PRRC_kwDOAN28mc5xL6ZL",
      "diff_hunk": "@@ -0,0 +1,196 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+  Post-History: https://groups.google.com/g/bitcoindev/c/5G5wzqUXyk4\n+  Requires: 352, 370\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP370 is not compatible with sending to silent payments as described in BIP352. \n+In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Additionally, the silent payment outputs computed by a signer must be verifiable by other entities, otherwise funds could be sent to an incorrect output script.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><33 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 88,
      "original_position": 88,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "in_reply_to_id": null,
      "user": {
        "login": "guggero",
        "id": 1008879,
        "node_id": "MDQ6VXNlcjEwMDg4Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guggero",
        "html_url": "https://github.com/guggero",
        "followers_url": "https://api.github.com/users/guggero/followers",
        "following_url": "https://api.github.com/users/guggero/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/guggero/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/guggero/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/guggero/subscriptions",
        "organizations_url": "https://api.github.com/users/guggero/orgs",
        "repos_url": "https://api.github.com/users/guggero/repos",
        "events_url": "https://api.github.com/users/guggero/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/guggero/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just a drive-by comment that this value is now taken by `PSBT_OUT_MUSIG2_PARTICIPANT_PUBKEYS` which was added by https://github.com/bitcoin/bips/pull/1540.",
      "created_at": "2024-12-28T16:18:25Z",
      "updated_at": "2024-12-28T16:18:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1898948171",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1898948171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1898955730",
      "pull_request_review_id": 2524768654,
      "id": 1898955730,
      "node_id": "PRRC_kwDOAN28mc5xL8PS",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 55,
      "original_position": 55,
      "commit_id": "c9589c588bdc7e265ca2a73ba54e0df1c1c95c7f",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1844379984,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "that seems very reasonable to me.\r\n\r\neven there might be some scenarios in subsets still make sense that seems like a corner case, if it's really important enough  an extension to this BIP could always be specified later",
      "created_at": "2024-12-28T17:24:36Z",
      "updated_at": "2024-12-28T17:24:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1898955730",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1898955730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    }
  ]
}