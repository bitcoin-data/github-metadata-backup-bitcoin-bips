{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1525",
    "id": 1639757880,
    "node_id": "PR_kwDOAN28mc5hvLg4",
    "html_url": "https://github.com/bitcoin/bips/pull/1525",
    "diff_url": "https://github.com/bitcoin/bips/pull/1525.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1525.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1525/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/696cc1713b931589d01c544d3016f3cf57be0058",
    "number": 1525,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "BIP 347: OP_CAT in Tapscript",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\r\n\r\nSee our implementation PR in bitcoin-inquisition: https://github.com/bitcoin-inquisition/bitcoin/pull/39 ",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2023-12-11T23:16:22Z",
    "updated_at": "2024-05-01T16:47:47Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "2469dc5ec730d30fef92912b9d1e870195a32e38",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "EthanHeilman:cat",
      "ref": "cat",
      "sha": "696cc1713b931589d01c544d3016f3cf57be0058",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 492572806,
        "node_id": "R_kgDOHVwQhg",
        "name": "bips",
        "full_name": "EthanHeilman/bips",
        "owner": {
          "login": "EthanHeilman",
          "id": 274814,
          "node_id": "MDQ6VXNlcjI3NDgxNA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/EthanHeilman",
          "html_url": "https://github.com/EthanHeilman",
          "followers_url": "https://api.github.com/users/EthanHeilman/followers",
          "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
          "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
          "repos_url": "https://api.github.com/users/EthanHeilman/repos",
          "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/EthanHeilman/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/EthanHeilman/bips",
        "archive_url": "https://api.github.com/repos/EthanHeilman/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/EthanHeilman/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/EthanHeilman/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/EthanHeilman/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/EthanHeilman/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/EthanHeilman/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/EthanHeilman/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/EthanHeilman/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/EthanHeilman/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/EthanHeilman/bips/contributors",
        "deployments_url": "https://api.github.com/repos/EthanHeilman/bips/deployments",
        "downloads_url": "https://api.github.com/repos/EthanHeilman/bips/downloads",
        "events_url": "https://api.github.com/repos/EthanHeilman/bips/events",
        "forks_url": "https://api.github.com/repos/EthanHeilman/bips/forks",
        "git_commits_url": "https://api.github.com/repos/EthanHeilman/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/EthanHeilman/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/EthanHeilman/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/EthanHeilman/bips.git",
        "issue_comment_url": "https://api.github.com/repos/EthanHeilman/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/EthanHeilman/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/EthanHeilman/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/EthanHeilman/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/EthanHeilman/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/EthanHeilman/bips/languages",
        "merges_url": "https://api.github.com/repos/EthanHeilman/bips/merges",
        "milestones_url": "https://api.github.com/repos/EthanHeilman/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/EthanHeilman/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/EthanHeilman/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/EthanHeilman/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:EthanHeilman/bips.git",
        "stargazers_url": "https://api.github.com/repos/EthanHeilman/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/EthanHeilman/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/EthanHeilman/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/EthanHeilman/bips/subscription",
        "tags_url": "https://api.github.com/repos/EthanHeilman/bips/tags",
        "teams_url": "https://api.github.com/repos/EthanHeilman/bips/teams",
        "trees_url": "https://api.github.com/repos/EthanHeilman/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/EthanHeilman/bips.git",
        "hooks_url": "https://api.github.com/repos/EthanHeilman/bips/hooks",
        "svn_url": "https://github.com/EthanHeilman/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 13976,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-01T01:13:43Z",
        "created_at": "2022-05-15T18:38:29Z",
        "updated_at": "2023-12-11T23:00:33Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e918b50731397872ad2922a1b08a5a4cd1d6d546",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5237,
        "stargazers_count": 8943,
        "watchers_count": 8943,
        "size": 14955,
        "default_branch": "master",
        "open_issues_count": 74,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-05-01T15:21:19Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-05-01T14:19:44Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 109,
    "deletions": 0,
    "changed_files": 1,
    "commits": 50,
    "review_comments": 76,
    "comments": 23
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDgzY2E1N2YyMjI2OGVkYjFmZjI4MTUwODVhNDM4M2JhOGQxYjU1ZmU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "tree": {
        "sha": "f755d1bc897bc0a031e6edea54fe28f95268d198",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f755d1bc897bc0a031e6edea54fe28f95268d198"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f755d1bc897bc0a031e6edea54fe28f95268d198\nparent e918b50731397872ad2922a1b08a5a4cd1d6d546\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702336282 -0500\ncommitter GitHub <noreply@github.com> 1702336282 -0500\n\nCreate bip-???-cat.mediawiki",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJld5caCRBK7hj4Ov3rIwAAJv8IACaOOLi9Wh5g2KR+GqrXb7zX\ndvNdjZUu9FGByk7jNd3DfW+VK/bPaEi2hz89At/lO8COfv9XOsDZRg0KUKla+G0c\nrN71An4TwtKUtVtdcZzwGPAuursxJeOIslXrcVc22iwExNHt23oC7o3yRf5kwL/C\nGHhD0u3R+YTspnnfuG18R760DKkRaJubiqUV8/fI7CGVm3mXVFsnTpuYmio6GkHr\n2vJX+fR87PTFv+YaJJ5jAihBq6PhO/b2slGLtwWlOrn63TXsfXAAr4STVuQPitNB\nxXtrkDd0aAqHin8q1rYAW3ewFhbU0fSi8Qt0q1vHwoQeHthvq1QTDNLOzPaBnEw=\n=38bD\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e918b50731397872ad2922a1b08a5a4cd1d6d546",
          "sha": "e918b50731397872ad2922a1b08a5a4cd1d6d546",
          "html_url": "https://github.com/bitcoin/bips/commit/e918b50731397872ad2922a1b08a5a4cd1d6d546"
        }
      ],
      "message": "Create bip-???-cat.mediawiki",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-11T23:11:22Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-11T23:11:22Z"
      },
      "sha": "83ca57f22268edb1ff2815085a4383ba8d1b55fe"
    },
    {
      "event": "reviewed",
      "id": 1777360806,
      "node_id": "PRR_kwDOAN28mc5p8F-m",
      "url": null,
      "actor": null,
      "commit_id": "83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Some minor nits. Idea seems sensible. Mailing list post seems mostly positive sentiment as well.\r\n\r\n@luke-jr ?",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1777360806",
      "submitted_at": "2023-12-12T12:34:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGYxMTY5ZGQxZmMwNjc4MjVjNTYwMTYzNzlhOGI4NGMwMzNiNmVlYjI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f1169dd1fc067825c56016379a8b84c033b6eeb2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f1169dd1fc067825c56016379a8b84c033b6eeb2",
      "tree": {
        "sha": "915452a27d70d0ae56bccc17989b81ffc60b6037",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/915452a27d70d0ae56bccc17989b81ffc60b6037"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 915452a27d70d0ae56bccc17989b81ffc60b6037\nparent 83ca57f22268edb1ff2815085a4383ba8d1b55fe\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702387479 -0500\ncommitter GitHub <noreply@github.com> 1702387479 -0500\n\nFixes typo\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJleF8XCRBK7hj4Ov3rIwAAjYsIAIKIf768sUeWjLwqiw+e2Bk4\n6L+zoaaHgLhSAmfIc5OPrGAaV0lyQp+CTekRMOV+6IPPpSe8lse2dIzN1g3kRANR\nWr3HSJ8abK5MsK7MIQAgxzMiWFSWJ62J3u4wQ9gr91Fwg/kMn241R7DySed81h+a\nt06HgB/YyHVa03d8gugfKhXkWYoydNFk6Y20fgZARckGVzJ70OKsGZHnPqkhcms0\nLcs31njiIZcoSEfDvZt8Gm18Ut4aAC/I7pqyAk4HSGyq5xTEgRFsQj9JteV+q/cg\nw794KTAPic3MWwXmXYLqjD04Of/BtYlqF+/ReEUEYjqkxjToebvaSeMaeIIpKkg=\n=Mh90\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/83ca57f22268edb1ff2815085a4383ba8d1b55fe",
          "sha": "83ca57f22268edb1ff2815085a4383ba8d1b55fe",
          "html_url": "https://github.com/bitcoin/bips/commit/83ca57f22268edb1ff2815085a4383ba8d1b55fe"
        }
      ],
      "message": "Fixes typo\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-12T13:24:39Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-12T13:24:39Z"
      },
      "sha": "f1169dd1fc067825c56016379a8b84c033b6eeb2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDI2ZThlNWY3ZmMxZjUxZTZiYTg2MWRlN2EyNTUyNGUxYjU2MWEwOGQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/26e8e5f7fc1f51e6ba861de7a25524e1b561a08d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/26e8e5f7fc1f51e6ba861de7a25524e1b561a08d",
      "tree": {
        "sha": "f5659472be45c7f71a88641fb73c50d9aa09184a",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f5659472be45c7f71a88641fb73c50d9aa09184a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f5659472be45c7f71a88641fb73c50d9aa09184a\nparent f1169dd1fc067825c56016379a8b84c033b6eeb2\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702387596 -0500\ncommitter GitHub <noreply@github.com> 1702387596 -0500\n\nBetter fits bitcoin style guide\r\n\r\n\"If an if only has a single-statement then-clause, it can appear on the same line as the if, without braces. In every other case, braces are required, and the then and else clauses must appear correctly indented on a new line.\"\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJleF+MCRBK7hj4Ov3rIwAAkD0IAH53iJfWMmIeETi9pdO64/EI\n+tXxC72qEqU9w7KEZ9Yj7WqAk56uCKNDLOcP4hqVlnD4/3ZJu8ZOPAYGrmwOsKEq\nSKITp0DtvGVGsBxOsNLP65h2yjVxZxdtGeFf781Fm1I6ttNcXg7yqufMJSjntO+H\nzqgTWpMFmGOacgRWadmqMyx6+fZ55zfwyKCnswiLyf7wdlNuUTkMElL/jw/jpBzI\nYuBDD1rzc76bXUOtpGSr7hEZbUTAce3K9ypj8FIkh+pWhOipus7/CQpzuwtdTEhT\nnG/sRJk4B8Zj9v0HlNLr49wy8MSLFDCktJgdIYqlZvqKYFDfueuyP0G4jDh1ZVM=\n=/2dj\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f1169dd1fc067825c56016379a8b84c033b6eeb2",
          "sha": "f1169dd1fc067825c56016379a8b84c033b6eeb2",
          "html_url": "https://github.com/bitcoin/bips/commit/f1169dd1fc067825c56016379a8b84c033b6eeb2"
        }
      ],
      "message": "Better fits bitcoin style guide\r\n\r\n\"If an if only has a single-statement then-clause, it can appear on the same line as the if, without braces. In every other case, braces are required, and the then and else clauses must appear correctly indented on a new line.\"\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-12T13:26:36Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-12T13:26:36Z"
      },
      "sha": "26e8e5f7fc1f51e6ba861de7a25524e1b561a08d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDAzMzVjOWQxODgxM2YzYTE4Y2ZmOWY5Yjc3NjQzMjExNGY2YTU3MGM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0335c9d18813f3a18cff9f9b776432114f6a570c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/0335c9d18813f3a18cff9f9b776432114f6a570c",
      "tree": {
        "sha": "f9d3c580b53556b660442fbb22d13e7c4bc83914",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f9d3c580b53556b660442fbb22d13e7c4bc83914"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f9d3c580b53556b660442fbb22d13e7c4bc83914\nparent 26e8e5f7fc1f51e6ba861de7a25524e1b561a08d\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702387655 -0500\ncommitter GitHub <noreply@github.com> 1702387655 -0500\n\nGrammar fix\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJleF/HCRBK7hj4Ov3rIwAAcVkIABGTK9YMvksPbq08z4iWu4d/\nJ3ObdzFbnhbMEEgsymDFnKPj3lTO95pF3T1ILbhGvnx0JSTrEr2yt9xUJrRFxVjz\nyDt76fdKxLFQ50PWwW1XuTXbQ9laOuSM+5sPBqJIEGAk3BGanQVPws+QhxTKHR3c\nj6tO7GifUEMwR66vYDY796QJ3lp2ZoW3tl0wV65b7qEpIUJd6zU1+CFBxzzY25Ut\nDdrgk7mCgVqFhGdgQb+5cGHka3CEE2De89OveSVnFywxpTwHg0FMGZjCOQLQsw+M\nGqmegxxBeKUv/kC4SiT1OULyp9jum3Cfk5w1NSJM5pSjBzyyUIjbn4aBwtzixCM=\n=s/uq\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/26e8e5f7fc1f51e6ba861de7a25524e1b561a08d",
          "sha": "26e8e5f7fc1f51e6ba861de7a25524e1b561a08d",
          "html_url": "https://github.com/bitcoin/bips/commit/26e8e5f7fc1f51e6ba861de7a25524e1b561a08d"
        }
      ],
      "message": "Grammar fix\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-12T13:27:35Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-12T13:27:35Z"
      },
      "sha": "0335c9d18813f3a18cff9f9b776432114f6a570c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDNkMzFlNWM4OTQ3YmY1ZDJkOGJhMDJkYzIyYzUzMDIwODViOWY5MWI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "tree": {
        "sha": "562fa360a5ed02a26f88c54986364dcb2756eafd",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/562fa360a5ed02a26f88c54986364dcb2756eafd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 562fa360a5ed02a26f88c54986364dcb2756eafd\nparent 0335c9d18813f3a18cff9f9b776432114f6a570c\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702389543 -0500\ncommitter GitHub <noreply@github.com> 1702389543 -0500\n\nAdds brackets\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJleGcnCRBK7hj4Ov3rIwAAlDwIADqHo42LpRnPbA1cJIQ2Y6Od\ndXcNzyVH7qz6L68+mbBln69IM6loj5mZxpzSI3Y9IJ4ly0KkVQZHhni0HbGPs0HU\npVj/ZMerWegbb4U8l8jblbFl3lG3YFp4Z8HgIxKJaphWd1eNvwvFCzvyngcKaFgi\n6md0X8F9P8DtqpZU2XuFvCEvBm3FfV/MsZUKm5TeyJul5tAt6k85KIU6ujCTH26H\nJ23vLyeSiDpAnXb0nQGtoreYRZYF5VKdTMHIFgJj+7e/rlIepcLdXN3bZdBRNUvN\nuDxR/IwPO5rGRZasPnuGlNrdsYw9HpcQjFgR/KL51FsyVloIxo+j3T9BqCaYgD4=\n=yUtP\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0335c9d18813f3a18cff9f9b776432114f6a570c",
          "sha": "0335c9d18813f3a18cff9f9b776432114f6a570c",
          "html_url": "https://github.com/bitcoin/bips/commit/0335c9d18813f3a18cff9f9b776432114f6a570c"
        }
      ],
      "message": "Adds brackets\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-12T13:59:03Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-12T13:59:03Z"
      },
      "sha": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b"
    },
    {
      "event": "commented",
      "id": 1852983310,
      "node_id": "IC_kwDOAN28mc5uckgO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1852983310",
      "actor": {
        "login": "Bloc6",
        "id": 135121941,
        "node_id": "U_kgDOCA3MFQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/135121941?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Bloc6",
        "html_url": "https://github.com/Bloc6",
        "followers_url": "https://api.github.com/users/Bloc6/followers",
        "following_url": "https://api.github.com/users/Bloc6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Bloc6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Bloc6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Bloc6/subscriptions",
        "organizations_url": "https://api.github.com/users/Bloc6/orgs",
        "repos_url": "https://api.github.com/users/Bloc6/repos",
        "events_url": "https://api.github.com/users/Bloc6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Bloc6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T23:21:33Z",
      "updated_at": "2023-12-12T23:21:33Z",
      "author_association": "NONE",
      "body": "Definitely looking forward to test drive this BIP.",
      "user": {
        "login": "Bloc6",
        "id": 135121941,
        "node_id": "U_kgDOCA3MFQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/135121941?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Bloc6",
        "html_url": "https://github.com/Bloc6",
        "followers_url": "https://api.github.com/users/Bloc6/followers",
        "following_url": "https://api.github.com/users/Bloc6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Bloc6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Bloc6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Bloc6/subscriptions",
        "organizations_url": "https://api.github.com/users/Bloc6/orgs",
        "repos_url": "https://api.github.com/users/Bloc6/repos",
        "events_url": "https://api.github.com/users/Bloc6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Bloc6/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1852983310",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "commented",
      "id": 1856410780,
      "node_id": "IC_kwDOAN28mc5uppSc",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1856410780",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-14T18:55:10Z",
      "updated_at": "2023-12-14T18:55:10Z",
      "author_association": "NONE",
      "body": "Can we get a BIP number assigned? Any blockers to doing this?",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1856410780",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "reviewed",
      "id": 1783046400,
      "node_id": "PRR_kwDOAN28mc5qRyEA",
      "url": null,
      "actor": null,
      "commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Sorry, some more μ-nits. Fine with it as is though.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1783046400",
      "submitted_at": "2023-12-15T02:54:40Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGJiNzI1ZTY1MjM1N2YyNTAyZmJhM2NkOGUyZThmYTkyZTQwY2E3MDY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bb725e652357f2502fba3cd8e2e8fa92e40ca706",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/bb725e652357f2502fba3cd8e2e8fa92e40ca706",
      "tree": {
        "sha": "ebdf4e14a04ae80c3df2e5807f2e152839e0d734",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/ebdf4e14a04ae80c3df2e5807f2e152839e0d734"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ebdf4e14a04ae80c3df2e5807f2e152839e0d734\nparent 3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615422 -0500\ncommitter GitHub <noreply@github.com> 1702615422 -0500\n\nWording\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9l+CRBK7hj4Ov3rIwAAAWcIAKHaIxLM+q8d4fn/SeHPN3oe\n4EZK2+Y9RpDc8sWq0OM16SglxKeScFQHxF7CdPFtmtMdGeVR0SQOkGEMJCyX5sq5\nn7ynPBGj9k4+gyCVDZG/7gH/hIZGeuwyZ/7PPJm4g67n//lRxs1G0h2t95YJnGGx\nG7/Xn4Zxx4haf/xPS6RjB9cIDdbftP7dxxKqcWH5XXSCCFitaJZ1yxesbzhbkjAh\ncq1B0CK7UjFBlDVy81eEbA7OOE7jZKZOCx/h1TXir+/O1oLe35e/DZEhSOviOqrD\nNamwd8FZo3zoPAxSr9Y/PCbC8uUUS/AXvO58gsyOaavONEdmYAtMqT74nXHzhc4=\n=Bs+8\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
          "sha": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
          "html_url": "https://github.com/bitcoin/bips/commit/3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b"
        }
      ],
      "message": "Wording\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:43:42Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:43:42Z"
      },
      "sha": "bb725e652357f2502fba3cd8e2e8fa92e40ca706"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDk3NzlkYzk5MjBlZWFjYmYzOWE5YjUzZTUxNjU0MjM1NTFkZTIwOWU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9779dc9920eeacbf39a9b53e5165423551de209e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/9779dc9920eeacbf39a9b53e5165423551de209e",
      "tree": {
        "sha": "df00294be5e1a786c9726b74be4b683c58b9778f",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/df00294be5e1a786c9726b74be4b683c58b9778f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree df00294be5e1a786c9726b74be4b683c58b9778f\nparent bb725e652357f2502fba3cd8e2e8fa92e40ca706\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615454 -0500\ncommitter GitHub <noreply@github.com> 1702615454 -0500\n\nKeeps past tense consistant\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9meCRBK7hj4Ov3rIwAAsFgIAGV1sEJ/AuHP2t3e20seSOBc\nPxkaeK8RjsUgyKbneSRAT56JBFTGQHuCKt11Q0tM6VF6KFQOuShhqhqB+I0ISzm2\n2jXtBvLV/dvr1LgjRq/HNvSyZUy+gdXIJ8Xy4wWzA2m3o3N2Lg72gISewlnurolj\nF986q7tZZO8/6feJ5dJYMkNpuqsjSmJkB8G+ZvVIOYOpgDtwdPJsPtfPx50rGEkU\nntCmIqvN6CXtySq6Ii044ApI9/Eso+v9dBAJKKvrVNTeuteigmwbrJ9Jlf6scECk\nFskg+rlo5/vfUluCFLsJd4HylkUr/JCLb9HGQ357kUDjAGfVmuLLCGBALFimH8E=\n=42io\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bb725e652357f2502fba3cd8e2e8fa92e40ca706",
          "sha": "bb725e652357f2502fba3cd8e2e8fa92e40ca706",
          "html_url": "https://github.com/bitcoin/bips/commit/bb725e652357f2502fba3cd8e2e8fa92e40ca706"
        }
      ],
      "message": "Keeps past tense consistant\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:44:14Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:44:14Z"
      },
      "sha": "9779dc9920eeacbf39a9b53e5165423551de209e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGM1ZDY2ZDY3MDY3MWRiYWM4MjY1YjU1ODhmM2RlOGUxY2E0ZjM5NzI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c5d66d670671dbac8265b5588f3de8e1ca4f3972",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/c5d66d670671dbac8265b5588f3de8e1ca4f3972",
      "tree": {
        "sha": "cf51f4642755d20f891b8033f36999ed73f932de",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/cf51f4642755d20f891b8033f36999ed73f932de"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cf51f4642755d20f891b8033f36999ed73f932de\nparent 9779dc9920eeacbf39a9b53e5165423551de209e\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615484 -0500\ncommitter GitHub <noreply@github.com> 1702615484 -0500\n\nBetter phrasing\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9m8CRBK7hj4Ov3rIwAA270IAKA/E6yse892nBis4r3wwX1a\ndRiXxYxMCBHanGm0Gcele7r3ywuVe09seHaRFKxt+Z6f/Bqm48eBCrwAls8u72mP\nTmQFI2LjbUGZXikiUa1NceZ5Jw1gmI+N4hIJfrHzs7HIJ8wE10M3lRc6Zhd5aWQD\ncq8ZInUhlI4PLkaXMxxeG1Sw+v9BFbcYP/4GGYwChOdVLiKlOCXai4lSze3m/Fad\nnhYDDE5fgy8T+AY9U/IvjuYKaZBTF+piMTfSNmrZez0SwbL+pJubOouj/F6eR9Tk\nx7Hy9u7kjPnPl5gK6ZIhAETvvFo1NLWB/1ZM3YNbkTRRzbXLhhLrQ+ivCd5iZD0=\n=3rZm\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9779dc9920eeacbf39a9b53e5165423551de209e",
          "sha": "9779dc9920eeacbf39a9b53e5165423551de209e",
          "html_url": "https://github.com/bitcoin/bips/commit/9779dc9920eeacbf39a9b53e5165423551de209e"
        }
      ],
      "message": "Better phrasing\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:44:44Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:44:44Z"
      },
      "sha": "c5d66d670671dbac8265b5588f3de8e1ca4f3972"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDg0ODM1MmY0MDg3NWU0M2JhN2ZkNWVjYWJiNjMyNzJmMTY1ZmNkNGE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/848352f40875e43ba7fd5ecabb63272f165fcd4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/848352f40875e43ba7fd5ecabb63272f165fcd4a",
      "tree": {
        "sha": "28310689aa803b6d6f23a88a287ca3e382c0c036",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/28310689aa803b6d6f23a88a287ca3e382c0c036"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 28310689aa803b6d6f23a88a287ca3e382c0c036\nparent c5d66d670671dbac8265b5588f3de8e1ca4f3972\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615504 -0500\ncommitter GitHub <noreply@github.com> 1702615504 -0500\n\nPhrasing\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9nQCRBK7hj4Ov3rIwAAAcUIAIYKDDYmpQQCj6X7tCCXoV8+\n9NE/3gM7VpE+/Sw5WoD97+xbSR9GyyLIpCx+EzbeWY/2b++bnpAQrUJ094BNgwwy\nSueIJ2iKG1ltBW4JqlI+dWHnuxkcF1QvtOCb0f4Tekw/dVKLS4bbNpVNMQ2kWnbt\nuzsEJyGCby8yRNZf6JGXP5KUVD5WI95kU0qI3guX1/c+fofn+48CXd/Uq+hVxu5d\nv/9Vms7ADI99Ry3oQe/noLs3oOj9W3GfpHpUZggfXDYYgxFWnLbln0gZY9Lj335F\nRvokaUN2iT8aGIXuOvy4/w591BvjXzuKEJd8Ge0aTKrxsSsuPD+UWcuzo8Gt3Oo=\n=49Rk\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c5d66d670671dbac8265b5588f3de8e1ca4f3972",
          "sha": "c5d66d670671dbac8265b5588f3de8e1ca4f3972",
          "html_url": "https://github.com/bitcoin/bips/commit/c5d66d670671dbac8265b5588f3de8e1ca4f3972"
        }
      ],
      "message": "Phrasing\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:45:04Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:45:04Z"
      },
      "sha": "848352f40875e43ba7fd5ecabb63272f165fcd4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGEyYjAxMDA2NzFmNDkyNjI4Y2UyMTlkNzA2ZmE3MWE1MDZjYTA0NzU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/a2b0100671f492628ce219d706fa71a506ca0475",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/a2b0100671f492628ce219d706fa71a506ca0475",
      "tree": {
        "sha": "1956292449c2f98820a67e434cbad3ddb5a4bbf8",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/1956292449c2f98820a67e434cbad3ddb5a4bbf8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1956292449c2f98820a67e434cbad3ddb5a4bbf8\nparent 848352f40875e43ba7fd5ecabb63272f165fcd4a\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615656 -0500\ncommitter GitHub <noreply@github.com> 1702615656 -0500\n\nTypo\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9poCRBK7hj4Ov3rIwAAtN8IADvU14C642zWDJx3JhpGg5Q/\ntomBG7ubvBpR3NSLFtAuR40hE9AdpGQixhtVv62MyE3AOxUZ2OLGJ084+aZhAR92\nBeuAR0koEn1FXbgvD4QeBesYjT3qDGwipWyoE4iHz2Zyo4dq6bHHI/zMez1NaUGp\nhpnEGxm6fxohFUsj42gqzgfKC4kBPVcHalwg6btZea/aonlihYzo0i/udE9vOsvS\n0W6Batl2hG6PN085wqy3hCXqG1YmWdY/JFcGGgoN9+1RJPmwdskwC7xLfG5bj0Iv\nrjm0hRd5DmxbNukQkWnAN8cjYq+DthkHExBRrnnoecZFDicHq66DvOtn0Zw4C9s=\n=XlAh\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/848352f40875e43ba7fd5ecabb63272f165fcd4a",
          "sha": "848352f40875e43ba7fd5ecabb63272f165fcd4a",
          "html_url": "https://github.com/bitcoin/bips/commit/848352f40875e43ba7fd5ecabb63272f165fcd4a"
        }
      ],
      "message": "Typo\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:47:36Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:47:36Z"
      },
      "sha": "a2b0100671f492628ce219d706fa71a506ca0475"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZhNzkwZWM1MjYzNWE3YWE1MmNjMmMyMGRjMjVhOTIzNmRhYWU1Zjg",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6a790ec52635a7aa52cc2c20dc25a9236daae5f8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6a790ec52635a7aa52cc2c20dc25a9236daae5f8",
      "tree": {
        "sha": "19a22505e9bed20ab20cfc4c6fff4551080e9527",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/19a22505e9bed20ab20cfc4c6fff4551080e9527"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 19a22505e9bed20ab20cfc4c6fff4551080e9527\nparent a2b0100671f492628ce219d706fa71a506ca0475\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615670 -0500\ncommitter GitHub <noreply@github.com> 1702615670 -0500\n\nRemoves space in ref\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9p2CRBK7hj4Ov3rIwAASeIIAIBMPOEjQnNjvICkk+afOYWI\nTepwWoVHlvZ4012ZIWexPt8QboFYRKJXeyV8T9lUDqI0uNY2NaRmVdwdVfoLrZIR\nsXSTltxqacUbL3qO0sfd4hMCuEqgQuc+Q4ItTgWlW5Dgo4WMZif9fzQ5bmnpgBhq\n/yf9ktSa1fZH1RWkE1WWpz9Dwy+5JJUd+rcP3q7K7G4QtpaXAg/bVgMMZJEdhJ5n\nGYLuSBQfSBa3iBD01yJaFVxRWexn7yhsDE/v8aj6xs/ES6xYji+HhCdoPXHHYQt6\npT+HbWUUE5DA2K/xMIJTdsScbtgomu5T4uR3t0Ya6jJ07aS/uE39IS/4z8wH2O4=\n=R3+C\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/a2b0100671f492628ce219d706fa71a506ca0475",
          "sha": "a2b0100671f492628ce219d706fa71a506ca0475",
          "html_url": "https://github.com/bitcoin/bips/commit/a2b0100671f492628ce219d706fa71a506ca0475"
        }
      ],
      "message": "Removes space in ref\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:47:50Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:47:50Z"
      },
      "sha": "6a790ec52635a7aa52cc2c20dc25a9236daae5f8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDAxZGIzYWNhYjA4MzBhNDNiNTI2YzZjNWMwYThkYWFkNzc3MDRkN2I",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/01db3acab0830a43b526c6c5c0a8daad77704d7b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/01db3acab0830a43b526c6c5c0a8daad77704d7b",
      "tree": {
        "sha": "b6701f795a04b92c9fc838b2d06d35f9aa5a5e97",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b6701f795a04b92c9fc838b2d06d35f9aa5a5e97"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b6701f795a04b92c9fc838b2d06d35f9aa5a5e97\nparent 6a790ec52635a7aa52cc2c20dc25a9236daae5f8\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615678 -0500\ncommitter GitHub <noreply@github.com> 1702615678 -0500\n\nRemoves space in ref\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9p+CRBK7hj4Ov3rIwAALyoIAJrQJDQL6yti4QPDPzy9VI5V\ndVLYO7uQ+jlvBOBawh1lFEei2RxIhWjIhcaub9BtqJj17ZUKchsISjevxDqPEcqK\nHPWMRz4l/UMXU8JyErlEZv/yp3+ELPFtweoTdR+UAxQNNRsmpt7HU7KflZ2eh3Km\nidLTzV0+ruUmMjoVhH2ddkpQPG08wqglttT3HEz2gvH6jShUgdcPBYwKb3FKARM3\nVSBsYS5+j8mS1fFmyQKALPDmzT1AUbL1NBZ2pIrz2+tnjWQUA2/vRz6Q9tuyyCuG\nTRAiq9jN0QXDGIkIxlDDtYL8QFOYtgSoSV2gUap28mdYTjHO7PtLFsJeF8RXpGI=\n=iD23\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6a790ec52635a7aa52cc2c20dc25a9236daae5f8",
          "sha": "6a790ec52635a7aa52cc2c20dc25a9236daae5f8",
          "html_url": "https://github.com/bitcoin/bips/commit/6a790ec52635a7aa52cc2c20dc25a9236daae5f8"
        }
      ],
      "message": "Removes space in ref\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:47:58Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:47:58Z"
      },
      "sha": "01db3acab0830a43b526c6c5c0a8daad77704d7b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDk0NWUyYTM3NDI0OTExNGMzMTNkNjIwNGQ3ZGI2MWRmZTQ5NmZlOTc",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/945e2a374249114c313d6204d7db61dfe496fe97",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/945e2a374249114c313d6204d7db61dfe496fe97",
      "tree": {
        "sha": "64da076f898fef9979c69f72097e40639fa9fc87",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/64da076f898fef9979c69f72097e40639fa9fc87"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 64da076f898fef9979c69f72097e40639fa9fc87\nparent 01db3acab0830a43b526c6c5c0a8daad77704d7b\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702615726 -0500\ncommitter GitHub <noreply@github.com> 1702615726 -0500\n\nTypos\r\n\r\nTIL that it is \"a one\" rather than \"an one\"\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJle9quCRBK7hj4Ov3rIwAA3O8IADBPnIRLnYOWah4RWCKGBv1I\nK5AZui5REHVUJHsgaXLXf7X9HCWTGDuv1dsb3gG7QE1iRDT736a20iq3cOeOcJiq\nmlMj7YMrtqmGicgj5agLcm3zydLQU2bzZR/rJMhucZUau1IFMbr1QVJJVsG0vQAd\nYmZU/TOTBTG4u3eRVWA/rdSw9dNjN5t8V8WhHnSb72wQG/mC763mfeVkY2SI177Y\nqNBTHHTiDXbb0ctiHfpZd/xYQRlM7A6SDvUvKIqPXaVgaW6aLln+x1zrti21vtOP\nOCH8hJL0VR9UfjlyFKX8AQIfNRntmCtgKTaf+/iTl/oP2mWbIDEgD/OOcNYtwOc=\n=rQ1k\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/01db3acab0830a43b526c6c5c0a8daad77704d7b",
          "sha": "01db3acab0830a43b526c6c5c0a8daad77704d7b",
          "html_url": "https://github.com/bitcoin/bips/commit/01db3acab0830a43b526c6c5c0a8daad77704d7b"
        }
      ],
      "message": "Typos\r\n\r\nTIL that it is \"a one\" rather than \"an one\"\n\nCo-authored-by: kallewoof <kalle.alm@gmail.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T04:48:46Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T04:48:46Z"
      },
      "sha": "945e2a374249114c313d6204d7db61dfe496fe97"
    },
    {
      "event": "reviewed",
      "id": 1783146554,
      "node_id": "PRR_kwDOAN28mc5qSKg6",
      "url": null,
      "actor": null,
      "commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1783146554",
      "submitted_at": "2023-12-15T05:31:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDcxODBjMWNmOGM0NzhlZDUzZWU2NTcwNWUzNGZjNjE5NzVmOTYyMzk",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/7180c1cf8c478ed53ee65705e34fc61975f96239",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/7180c1cf8c478ed53ee65705e34fc61975f96239",
      "tree": {
        "sha": "a07fd8a4489f768adeb4eac9406493194269411c",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/a07fd8a4489f768adeb4eac9406493194269411c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a07fd8a4489f768adeb4eac9406493194269411c\nparent 945e2a374249114c313d6204d7db61dfe496fe97\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702652090 -0500\ncommitter GitHub <noreply@github.com> 1702652090 -0500\n\nPrefer bytes to Bytes\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfGi6CRBK7hj4Ov3rIwAA/0EIABluWJBFbLbtvCeTS9XOnGXw\nkjdWr02AsnJg88W7k4M+5IH+h67XpNVaJn8r21/UYeTn7P37LgiZK0FWnCmLDLC7\n03MylTHBgfxLaa4eWXLbT6Zui2I0Zcx3POjtwwuNOr+oZB/f1QMosJW/PRzJR8s0\nbK9PFNaQhIa1Kn8LEH/xckGxNW45JM659DaJ0rZfMARRnpvxw3eSASewELgBKmvb\nm0ydCVePg926arYLhOYFWQ5tLzA5rUYPG9hr0eN/SV3j05pi/jEauZEWB3j+ojj/\nb8qdD42NFa1L+mtxKfdBCq+K+K1QPP2l1c2KR5Dwsh2d0qfABznOJ2UqReHFjQ8=\n=jADm\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/945e2a374249114c313d6204d7db61dfe496fe97",
          "sha": "945e2a374249114c313d6204d7db61dfe496fe97",
          "html_url": "https://github.com/bitcoin/bips/commit/945e2a374249114c313d6204d7db61dfe496fe97"
        }
      ],
      "message": "Prefer bytes to Bytes\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T14:54:50Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T14:54:50Z"
      },
      "sha": "7180c1cf8c478ed53ee65705e34fc61975f96239"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZmNWE3NGQ4M2U2MjFkZWQwOTBmNDM2YTNjYzQwN2RjNzA1YWQxMzI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6f5a74d83e621ded090f436a3cc407dc705ad132",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6f5a74d83e621ded090f436a3cc407dc705ad132",
      "tree": {
        "sha": "aedea0575708f23dfc8d32d0ae06153ae15c7785",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/aedea0575708f23dfc8d32d0ae06153ae15c7785"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aedea0575708f23dfc8d32d0ae06153ae15c7785\nparent 7180c1cf8c478ed53ee65705e34fc61975f96239\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702652676 -0500\ncommitter GitHub <noreply@github.com> 1702652676 -0500\n\nIncreases conciseness and clarity\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfGsECRBK7hj4Ov3rIwAA3igIADTxggkJ3K6WTfo1PcM6FB4A\nKIC+9mBgPnQn7hw9l01w0xerrfha6UWc+Eh/uX6lJRHg8vvPgOTv7azZy4KEjrQq\nvFN3eqEjaWnCtcn0AeirzZCzjHfdEGNddFcwAvGFauSX6s6iwIvwjjV+jtlGQxd1\naPdYPK/hIHjU0Ql4TqbzyL+O2uEJerCkpOL6kpqpqppC10s5GWsDiXoaOYUHX3P6\nFnJX7b39l5Vo0rSVnM4Jdz18nniIXjiwoGxaTLHNqxwWmSZZtxyg1XonzXkpA1D/\nJZG65M0TBfrhTFmaagK7CDaMyw8+kUSJXYrZwX+nORjofHRDJc6CEUJQ9K2dpUI=\n=Q81+\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/7180c1cf8c478ed53ee65705e34fc61975f96239",
          "sha": "7180c1cf8c478ed53ee65705e34fc61975f96239",
          "html_url": "https://github.com/bitcoin/bips/commit/7180c1cf8c478ed53ee65705e34fc61975f96239"
        }
      ],
      "message": "Increases conciseness and clarity\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T15:04:36Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T15:04:36Z"
      },
      "sha": "6f5a74d83e621ded090f436a3cc407dc705ad132"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGQ0Zjg1YjExNDY0YTYwOTYxOTYyOTYwYjMwNmNhYzcyNDYxYTk3N2Y",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d4f85b11464a60961962960b306cac72461a977f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/d4f85b11464a60961962960b306cac72461a977f",
      "tree": {
        "sha": "80c785d55bfcf03490a70bbfb9a710aa8dab66d3",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/80c785d55bfcf03490a70bbfb9a710aa8dab66d3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 80c785d55bfcf03490a70bbfb9a710aa8dab66d3\nparent 6f5a74d83e621ded090f436a3cc407dc705ad132\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702669447 -0500\ncommitter GitHub <noreply@github.com> 1702669447 -0500\n\nLowercase bytes\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfKyHCRBK7hj4Ov3rIwAAdhYIAAV7hf/DcRtSmTiazFeQ/ruz\n+od/A/OpLyXEt69wfJAGaCHNL0ElROjqnEaERQ2X6j2YPYInBHGHTtHCAwzKKIho\nQPcK0kAKUFALBHIXf6sjX1RfaqP8TYDliw4WpwVDOpz8VU+khwfnCKqsafzilRLJ\nDXB8O/UCIJ2C+t/6BN8Dh/fkWiTiNiwMlFURmH2lJ8T133PF8aSyromRr6ITbq9o\nsdZ5ohV3nnWrpTLmUPlNCW05N0vvOToGIL5fCMVDdEQfCUdm728USFlAvHqDhvI2\nLuhRHsRGvUfqjSndq+SX9DjVCl+1HKUzFSOJpbBW8H2V/7DCth1dSzl0f5rG+G8=\n=wLWg\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6f5a74d83e621ded090f436a3cc407dc705ad132",
          "sha": "6f5a74d83e621ded090f436a3cc407dc705ad132",
          "html_url": "https://github.com/bitcoin/bips/commit/6f5a74d83e621ded090f436a3cc407dc705ad132"
        }
      ],
      "message": "Lowercase bytes\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T19:44:07Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T19:44:07Z"
      },
      "sha": "d4f85b11464a60961962960b306cac72461a977f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGJlYjU4MDJjYzZjNWYyOGRhMWFlYWYwZjc1ZWI1OTczOGEwMDRmYjk",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/beb5802cc6c5f28da1aeaf0f75eb59738a004fb9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/beb5802cc6c5f28da1aeaf0f75eb59738a004fb9",
      "tree": {
        "sha": "37716e879e702fa7e8c427beb9095cd57aaf8d06",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/37716e879e702fa7e8c427beb9095cd57aaf8d06"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 37716e879e702fa7e8c427beb9095cd57aaf8d06\nparent d4f85b11464a60961962960b306cac72461a977f\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702672042 -0500\ncommitter GitHub <noreply@github.com> 1702672042 -0500\n\nAdds subsection header\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfLaqCRBK7hj4Ov3rIwAAMGwIAAk0qvowzBDKH7ZkuhTFICuv\ncseEuz74GZUwF7bCt5WOOl/hxP+e1eudRU1/fWYiXbC6C/knbQcRk2H+/YbVBdzY\nETOVi6LwE+UMAyQDll/ynRCLMp74jVhDx1fhF5ms9T/SgVChOZJCiIYeW9+BOWy9\nceKdmAghv5v7Tuq/twjSnkiyoq5uFjSlqRotBWTZfgFS/9G35BNpvJbRi9hMrJHY\nlZzqpu90vNnZ43lUXyjMO+qoZF2S9sDLI8EGmmK+xOwUyLFiG10xHNkKf4xQhzqW\nPwrnUsnv+LQet+pgswNUbJw0Ue7K+UFvwF8/ldoBggxvsE+HRWve39+DKiAB600=\n=axA0\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d4f85b11464a60961962960b306cac72461a977f",
          "sha": "d4f85b11464a60961962960b306cac72461a977f",
          "html_url": "https://github.com/bitcoin/bips/commit/d4f85b11464a60961962960b306cac72461a977f"
        }
      ],
      "message": "Adds subsection header\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T20:27:22Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T20:27:22Z"
      },
      "sha": "beb5802cc6c5f28da1aeaf0f75eb59738a004fb9"
    },
    {
      "event": "reviewed",
      "id": 1784894798,
      "node_id": "PRR_kwDOAN28mc5qY1VO",
      "url": null,
      "actor": null,
      "commit_id": "d4f85b11464a60961962960b306cac72461a977f",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1784894798",
      "submitted_at": "2023-12-15T20:43:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDBhMTQzZDM5NjkxMGE0OTIyNWM2ZmMyZjQ4N2E5NjhkYzZlOTYwMzU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0a143d396910a49225c6fc2f487a968dc6e96035",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/0a143d396910a49225c6fc2f487a968dc6e96035",
      "tree": {
        "sha": "c83e371af1830d007544dce6161e8b80dd4252b4",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/c83e371af1830d007544dce6161e8b80dd4252b4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c83e371af1830d007544dce6161e8b80dd4252b4\nparent beb5802cc6c5f28da1aeaf0f75eb59738a004fb9\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702673209 -0500\ncommitter GitHub <noreply@github.com> 1702673209 -0500\n\nUse BSD-3 license",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfLs5CRBK7hj4Ov3rIwAAJHAIAHpG9yiiNcG62exyZz8INbZ+\ngJX2NsNdqZdANpUfKdgjsUQuuCeS3OlsAqqLFvfr70Z7sj88I/0KopfhTTke3jlr\nfYcQgaaSxbWATFvDAs6Pgkzvl7w2tuOEvepKQP1PQjNUgnEvyRPvhD6q351hCX/d\nQFrihmwDA5pQ6yeEwrsTEX2DVqN3AqeNSbxpffzgxdghTRrfGtRyxv37VLmNNHON\nGRZhOYChYXzIXv4JrR5/BAmYwT4VEb93p5MS+zcRqCHPudEfRTSz0gclmJnCEiG0\nsgA+vOQyurhTrn7O6dQgdpP7YQX73LwMTQZSEJjfgxwzxPUXnLzJLNFgKHUJfUY=\n=bmW+\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/beb5802cc6c5f28da1aeaf0f75eb59738a004fb9",
          "sha": "beb5802cc6c5f28da1aeaf0f75eb59738a004fb9",
          "html_url": "https://github.com/bitcoin/bips/commit/beb5802cc6c5f28da1aeaf0f75eb59738a004fb9"
        }
      ],
      "message": "Use BSD-3 license",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T20:46:49Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T20:46:49Z"
      },
      "sha": "0a143d396910a49225c6fc2f487a968dc6e96035"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDgyMTk4MzAyY2QxZDM2Zjg0MWYxYmI2Y2Q5M2MzYzk3ZWNiYjhhMzE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/82198302cd1d36f841f1bb6cd93c3c97ecbb8a31",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/82198302cd1d36f841f1bb6cd93c3c97ecbb8a31",
      "tree": {
        "sha": "390b83d092e1d620339e9601ed9db0d4d1a10446",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/390b83d092e1d620339e9601ed9db0d4d1a10446"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 390b83d092e1d620339e9601ed9db0d4d1a10446\nparent 0a143d396910a49225c6fc2f487a968dc6e96035\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702673525 -0500\ncommitter GitHub <noreply@github.com> 1702673525 -0500\n\nCode formatting\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfLx1CRBK7hj4Ov3rIwAAMMoIAI1jd+CgaOyypoiLivqzW0nO\nFJRQfk7vr/8VEFNcH2YY/Na4bUePpPWN8Gyq+nC6myO6522UXoaCQC2864AinmGv\n34eemuMAUYcGn7vXuCA1GzjtwPBkGfS0IHlxHVp0AAcBrG/qURjX0Yu505oQ74lU\nehfsN4VWlm6q+VHUC1iAItqwutVv3nODuk9xP6Cd8AsKlCxOKiZYRAH5Gt33jwOn\n98Eymn2Kr3A5JA79iiL4Y+I3hJm4OvWu0NdjooXr8DEXSEEPpYMSDaOnNMHUMZjl\nZd/tPPR9E1CvbbBvZQuF0bqcI7mD4258B5ziMWv2pxikZW7RQyo8dLzxrkSZq2A=\n=AK5Q\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0a143d396910a49225c6fc2f487a968dc6e96035",
          "sha": "0a143d396910a49225c6fc2f487a968dc6e96035",
          "html_url": "https://github.com/bitcoin/bips/commit/0a143d396910a49225c6fc2f487a968dc6e96035"
        }
      ],
      "message": "Code formatting\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T20:52:05Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T20:52:05Z"
      },
      "sha": "82198302cd1d36f841f1bb6cd93c3c97ecbb8a31"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDBiOGE3ZTRiNjQ0NTg4MjFkNDc0ZmEwODk3NmExZDM4ZDMzZDMwMDQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0b8a7e4b64458821d474fa08976a1d38d33d3004",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/0b8a7e4b64458821d474fa08976a1d38d33d3004",
      "tree": {
        "sha": "36143287f2d834bea6a5f647aedef9752dfbf088",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/36143287f2d834bea6a5f647aedef9752dfbf088"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 36143287f2d834bea6a5f647aedef9752dfbf088\nparent 82198302cd1d36f841f1bb6cd93c3c97ecbb8a31\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702673772 -0500\ncommitter GitHub <noreply@github.com> 1702673772 -0500\n\nCode formatting\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfL1sCRBK7hj4Ov3rIwAA+LEIAAsKozG33kVT+4pgKVwcwyT+\nZa40d7Fz43iGN+P5F9RkK8k0XGEOamQIp1nhpsyEWDWL7Tq50U/DhAcHeEs5mfOK\nudSgiPA7pSLFGix61qE3qeUAFjMxYEjboHIH/VnKlbvKunDfqOhWXSyA4PaKEvWH\ne49hGxipo5E4pGFP4QpnAwI9du1ZTEwxM881x+bCxDwpUfYvjiWp1XYoXbYxYkUs\nTM9+/N/YVUI75wee8N7DAd6UGVOjx6bb3Rc8gwchW3vRvmRYc7MhxaT1/3bkeDWa\nvr+AvMtGIhtUnXr5q3H9Bk1yf6z4mkz/V7maOsNGahSzO/uSCuDRHlaiRx2IT/s=\n=1htr\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/82198302cd1d36f841f1bb6cd93c3c97ecbb8a31",
          "sha": "82198302cd1d36f841f1bb6cd93c3c97ecbb8a31",
          "html_url": "https://github.com/bitcoin/bips/commit/82198302cd1d36f841f1bb6cd93c3c97ecbb8a31"
        }
      ],
      "message": "Code formatting\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T20:56:12Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T20:56:12Z"
      },
      "sha": "0b8a7e4b64458821d474fa08976a1d38d33d3004"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDc3NTA5ZjZjMjNhNjAzNmEzZTRhYzkyOWFiMmZlN2M2ZDhkYmRlZWM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec",
      "tree": {
        "sha": "dc1d94e0cd8f01ca3df52642cacfd98ad832ea63",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/dc1d94e0cd8f01ca3df52642cacfd98ad832ea63"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dc1d94e0cd8f01ca3df52642cacfd98ad832ea63\nparent 0b8a7e4b64458821d474fa08976a1d38d33d3004\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702673828 -0500\ncommitter GitHub <noreply@github.com> 1702673828 -0500\n\nPeriod to colon\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfL2kCRBK7hj4Ov3rIwAAcfsIAH9sZJRC+pWnnfQUhNjssV8M\nppJ/9m2y2wtSVrzSJ5hcQLYcqdF2S+YKjTDBFzhD6WwDPBRhwIuoJuL8jY5zUdSb\nNf8ZI4ZYPIlyWYUlxrz5m2uMl/k3JekXOZJInbniUXCC/AQ+7Um62nkkcsceKMqj\nO1/e0EdipiH3Zuwkgz3bIO0kJLy7VCANLoYGHpDNk+sAoQ4NtUR1kp5GdPoMrhFW\nEHGmTOrrQYiDcQ8wAEN6fe6DtRC6NzCAvud0BZ7rBFk3HB+j9uFA8w0aYwoatPwv\nz++VKJZCX0WGp44rVUzCtLx2SHcnjNfisDJLo7SQu2ZTNFbSHz9i/ge17xes90A=\n=/mh3\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0b8a7e4b64458821d474fa08976a1d38d33d3004",
          "sha": "0b8a7e4b64458821d474fa08976a1d38d33d3004",
          "html_url": "https://github.com/bitcoin/bips/commit/0b8a7e4b64458821d474fa08976a1d38d33d3004"
        }
      ],
      "message": "Period to colon\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-15T20:57:08Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-15T20:57:08Z"
      },
      "sha": "77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec"
    },
    {
      "event": "reviewed",
      "id": 1785309961,
      "node_id": "PRR_kwDOAN28mc5qaasJ",
      "url": null,
      "actor": null,
      "commit_id": "77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1785309961",
      "submitted_at": "2023-12-16T21:21:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDRmMzllNGI5ZDU1OTYwNDMyZDU1NDhmYTdlNTI1NjhkMzA1MTQyOGE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4f39e4b9d55960432d5548fa7e52568d3051428a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/4f39e4b9d55960432d5548fa7e52568d3051428a",
      "tree": {
        "sha": "306e8116c3c3f1c4b3f61604f2ff3d204cf14e68",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/306e8116c3c3f1c4b3f61604f2ff3d204cf14e68"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 306e8116c3c3f1c4b3f61604f2ff3d204cf14e68\nparent 77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702761829 -0500\ncommitter GitHub <noreply@github.com> 1702761829 -0500\n\nAvoids designing or discussing how to add post-quantum commitments to Bitcoin",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfhVlCRBK7hj4Ov3rIwAAkvsIABwWfMa8CMldb8zL17hMSLWS\n9hLbgNaHPh3vYk4jR8t3zPWRZq+mr+Jmn4M55SRljvZCGw4zSF9zI3MoqBXHM4Rr\n4cxpdtTpu79qXaQmMgnk1yZzbymiOT3MXdfocEMvNwz7oBv3gSqGbc0gU9q2othY\n5KtRF6SkmbLRY7U7WOwIp9Fk50tz2cpInLJnZH6TRbbkrNBsLEH3y//i+S5QWdux\nKvrynrbIJywL11Q8BPuV1lMASo8JStntskChpI7BLDJns3KDmOtDyiaPMnhD9tlX\nzta/UglpjDLCRw3sSWwpnWxWveD+YzFJXaV9biFHn/V1mV3bQro869IUQjtpl5E=\n=Tlam\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec",
          "sha": "77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec",
          "html_url": "https://github.com/bitcoin/bips/commit/77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec"
        }
      ],
      "message": "Avoids designing or discussing how to add post-quantum commitments to Bitcoin",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-16T21:23:49Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-16T21:23:49Z"
      },
      "sha": "4f39e4b9d55960432d5548fa7e52568d3051428a"
    },
    {
      "event": "reviewed",
      "id": 1785346609,
      "node_id": "PRR_kwDOAN28mc5qajox",
      "url": null,
      "actor": null,
      "commit_id": "4f39e4b9d55960432d5548fa7e52568d3051428a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1785346609",
      "submitted_at": "2023-12-17T06:20:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "reviewed",
      "id": 1785481181,
      "node_id": "PRR_kwDOAN28mc5qbEfd",
      "url": null,
      "actor": null,
      "commit_id": "4f39e4b9d55960432d5548fa7e52568d3051428a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1785481181",
      "submitted_at": "2023-12-17T17:49:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDk3NjM1ZjVjMDk0NzA5ZGQxOGY0YWZlZTAxN2UzM2ZhY2U4ODZmNWI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/97635f5c094709dd18f4afee017e33face886f5b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/97635f5c094709dd18f4afee017e33face886f5b",
      "tree": {
        "sha": "2b473937c1ca472d443fedd8b7ecb33002dff71b",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/2b473937c1ca472d443fedd8b7ecb33002dff71b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2b473937c1ca472d443fedd8b7ecb33002dff71b\nparent 4f39e4b9d55960432d5548fa7e52568d3051428a\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702835386 -0500\ncommitter GitHub <noreply@github.com> 1702835386 -0500\n\nLowercase the signatures",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfzS6CRBK7hj4Ov3rIwAAwLAIACwvxJ7x2hhgNZwXjMIByELC\ndUIY83n8bOvJoWGPjRMTA2YWeEMBZ//G+NYq3qu2dLohnABK3c5spsXpSGC6szqm\nu3TFfWTzKGjfQD7516k6iwA2pzIUF3VpnEiu2cVjp6fs7hyqz6BMgNyNF5BCwaaV\nNIUiWpg2RDCnpC2KnFaOR1LdE94gQC+bYuER8n9PN7GIqgBuyLlE5vBHF4W+G5HA\n1xUuD9VyNaDIzvdBAcsUwaQg5SUPYw1LJKNTckZIKiHW/3gMVbGMpV07uznXDfdL\nA+mDn1Db/Qjtvep6T5EH0n+aQDVzXZFFfldVd9g5QO8anX9EYJVtvIwv1fu5U84=\n=yfyl\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4f39e4b9d55960432d5548fa7e52568d3051428a",
          "sha": "4f39e4b9d55960432d5548fa7e52568d3051428a",
          "html_url": "https://github.com/bitcoin/bips/commit/4f39e4b9d55960432d5548fa7e52568d3051428a"
        }
      ],
      "message": "Lowercase the signatures",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-17T17:49:46Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-17T17:49:46Z"
      },
      "sha": "97635f5c094709dd18f4afee017e33face886f5b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGUzZGMzYmEzNjE3ZDMzZGMxYzQzNDE5NmY1ZjdiNGU0NjMyNTRlNDk",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e3dc3ba3617d33dc1c434196f5f7b4e463254e49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/e3dc3ba3617d33dc1c434196f5f7b4e463254e49",
      "tree": {
        "sha": "95d6142e89ef5deba2b5ec251cc9ef98f4296701",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/95d6142e89ef5deba2b5ec251cc9ef98f4296701"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 95d6142e89ef5deba2b5ec251cc9ef98f4296701\nparent 97635f5c094709dd18f4afee017e33face886f5b\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702835587 -0500\ncommitter GitHub <noreply@github.com> 1702835587 -0500\n\nItalicize variables\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlfzWECRBK7hj4Ov3rIwAA/AkIAA/qzfUpAgN2lnornC/Ixv+/\n8kAmxnVTJ6gBIIMt7RV5hwG8Fe5bqyjbBUMDJR8FGFpljAw8ix4C9sISKDdDkOHL\n2fCD+OzplHatMAWZQaqMJfqtd29vgcW0l1KS1ATqWU+eEquU2KKLE9ctyGod0zim\n5mCPP9LUuUAQWScwGRYU27xr86dAGiqvv4Qtirp8yA5yUSxFe8JdrINbK1NtNasr\nYzYVL4EGttPqy3NFtfsFO1h+1iWggb285vJFu+CbexVHmsB13LjF89cCbxuke8k+\nD1RxKha4CF7Ich3xI12vOmNyXzRpD1qvW2tseY/UlODluIAD6c/+2pO7CixHNa0=\n=UOF4\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/97635f5c094709dd18f4afee017e33face886f5b",
          "sha": "97635f5c094709dd18f4afee017e33face886f5b",
          "html_url": "https://github.com/bitcoin/bips/commit/97635f5c094709dd18f4afee017e33face886f5b"
        }
      ],
      "message": "Italicize variables\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-17T17:53:07Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-17T17:53:07Z"
      },
      "sha": "e3dc3ba3617d33dc1c434196f5f7b4e463254e49"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T15:30:49Z",
      "updated_at": "2023-12-18T15:30:49Z",
      "source": {
        "issue": {
          "id": 1959111037,
          "node_id": "PR_kwDOHVjEp85dohs6",
          "url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin/issues/39",
          "repository_url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin/issues/39/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin/issues/39/comments",
          "events_url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin/issues/39/events",
          "html_url": "https://github.com/bitcoin-inquisition/bitcoin/pull/39",
          "number": 39,
          "state": "closed",
          "state_reason": null,
          "title": "Re enable `OP_CAT`",
          "body": "[Draft BIP](https://github.com/EthanHeilman/op_cat_draft/blob/main/cat.mediawiki)\r\nBasing implementation off [Elements PR](https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a) \r\n\r\nThings left todo\r\n\r\n- [x] Use opcode OP_SUCCESS126\r\n- [x] test: get deployment info functional test\r\n- [x] test: add to tx_valid.json\r\n- [x] test: functional test [ctv example](https://github.com/ajtowns/bitcoin/commit/7edc093ecf7be0a5091a3e5a49c688e001a39253#diff-01837f5d48dbb3b478560986d868bd0a445cc792f00da44621b0a7b835f973d8R1)\r\n\r\n",
          "user": {
            "login": "0xBEEFCAF3",
            "id": 24356537,
            "node_id": "MDQ6VXNlcjI0MzU2NTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xBEEFCAF3",
            "html_url": "https://github.com/0xBEEFCAF3",
            "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
            "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
            "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
            "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
            "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin/milestones/3",
            "html_url": "https://github.com/bitcoin-inquisition/bitcoin/milestone/3",
            "labels_url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin/milestones/3/labels",
            "id": 9856594,
            "node_id": "MI_kwDOHVjEp84AlmZS",
            "number": 3,
            "state": "open",
            "title": "25.x",
            "creator": {
              "login": "ajtowns",
              "id": 127186,
              "node_id": "MDQ6VXNlcjEyNzE4Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/ajtowns",
              "html_url": "https://github.com/ajtowns",
              "followers_url": "https://api.github.com/users/ajtowns/followers",
              "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
              "organizations_url": "https://api.github.com/users/ajtowns/orgs",
              "repos_url": "https://api.github.com/users/ajtowns/repos",
              "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/ajtowns/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 3,
            "closed_issues": 12,
            "created_at": "2023-08-29T17:44:53Z",
            "updated_at": "2024-04-26T07:37:45Z"
          },
          "locked": false,
          "comments": 40,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-inquisition/bitcoin/pulls/39",
            "html_url": "https://github.com/bitcoin-inquisition/bitcoin/pull/39",
            "diff_url": "https://github.com/bitcoin-inquisition/bitcoin/pull/39.diff",
            "patch_url": "https://github.com/bitcoin-inquisition/bitcoin/pull/39.patch"
          },
          "closed_at": "2024-04-26T03:25:42Z",
          "created_at": "2023-10-24T12:03:49Z",
          "updated_at": "2024-04-26T03:25:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1861530976,
      "node_id": "IC_kwDOAN28mc5u9LVg",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1861530976",
      "actor": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T20:16:47Z",
      "updated_at": "2023-12-18T20:16:47Z",
      "author_association": "NONE",
      "body": "@kallewoof The BIP file is still name `bip-???-cat.mediawiki`. How do we go about numbering this BIP?",
      "user": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1861530976",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 11281196532,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAAKgaWX0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11281196532",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T20:16:47Z"
    },
    {
      "event": "subscribed",
      "id": 11281196548,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAAKgaWYE",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11281196548",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T20:16:47Z"
    },
    {
      "event": "reviewed",
      "id": 1787950014,
      "node_id": "PRR_kwDOAN28mc5qkfO-",
      "url": null,
      "actor": null,
      "commit_id": "e3dc3ba3617d33dc1c434196f5f7b4e463254e49",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1787950014",
      "submitted_at": "2023-12-19T01:27:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGU0OTJhOTBmZWM1M2NlYjE4MzkwODAwMjRjYzkwYTQxY2U1MDM5MDY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e492a90fec53ceb1839080024cc90a41ce503906",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/e492a90fec53ceb1839080024cc90a41ce503906",
      "tree": {
        "sha": "3605e811a3ad7f13fef3fa8874ee2b0e256ac027",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/3605e811a3ad7f13fef3fa8874ee2b0e256ac027"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3605e811a3ad7f13fef3fa8874ee2b0e256ac027\nparent e3dc3ba3617d33dc1c434196f5f7b4e463254e49\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1702949302 -0500\ncommitter GitHub <noreply@github.com> 1702949302 -0500\n\nBetter reference for OP_CAT removal",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlgPG2CRBK7hj4Ov3rIwAA51oIAEKx+tni3le0ZcQ9PbM1xiWJ\n2RvdgKCCz3PFl5ZfriGbHlr4hNO20hprgr33RTDCWwQiz5ZYDDM8Ozl8Pb3GnaAW\nLc2SGTTPst6wBcAT5suWHGskQJvPAY8nEER43c2j8VVywLbMPJatWHqOq4T+TNdZ\n5kQN01mculSyT7mNVvWUNfQFcuO/Bf/7+ssP3Cg+eTZ6sqWN6UV20b7fTVI4tR+T\nzsRObyHpXWUP1CjEcQoTEktTE3Q1OrcbrPLUjf5VSUUPZqA4mS1zbOhWpC6q3EA9\nw2Y6nI8qmclcVkcmnsRtwALI2iEJi44imZX9vmT4Jo1iTkh5rgvfRJkWnLPSZ8w=\n=Qbpw\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e3dc3ba3617d33dc1c434196f5f7b4e463254e49",
          "sha": "e3dc3ba3617d33dc1c434196f5f7b4e463254e49",
          "html_url": "https://github.com/bitcoin/bips/commit/e3dc3ba3617d33dc1c434196f5f7b4e463254e49"
        }
      ],
      "message": "Better reference for OP_CAT removal",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-19T01:28:22Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-19T01:28:22Z"
      },
      "sha": "e492a90fec53ceb1839080024cc90a41ce503906"
    },
    {
      "event": "commented",
      "id": 1861975555,
      "node_id": "IC_kwDOAN28mc5u-34D",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1861975555",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T01:53:10Z",
      "updated_at": "2023-12-19T01:53:10Z",
      "author_association": "MEMBER",
      "body": "> @kallewoof The BIP file is still name `bip-???-cat.mediawiki`. How do we go about numbering this BIP?\r\n\r\nOnce a BP number has been assigned, the authors are expected to fill that in in the right places.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1861975555",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 11283648587,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAAKgjtBL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11283648587",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T01:53:11Z"
    },
    {
      "event": "subscribed",
      "id": 11283648599,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAAKgjtBX",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11283648599",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T01:53:11Z"
    },
    {
      "event": "commented",
      "id": 1863351593,
      "node_id": "IC_kwDOAN28mc5vEH0p",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1863351593",
      "actor": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T19:25:09Z",
      "updated_at": "2023-12-19T19:25:09Z",
      "author_association": "NONE",
      "body": "> > @kallewoof The BIP file is still name `bip-???-cat.mediawiki`. How do we go about numbering this BIP?\r\n> \r\n> Once a BP number has been assigned, the authors are expected to fill that in in the right places.\r\n\r\nThanks for the reply. Of course, we'll change and fill the bip number wherever it's needed. Has this BIP already been assigned a number? I might have missed that comment",
      "user": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1863351593",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 11293887208,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAAKhKwro",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11293887208",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T19:25:09Z"
    },
    {
      "event": "subscribed",
      "id": 11293887219,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAAKhKwrz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11293887219",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T19:25:09Z"
    },
    {
      "event": "labeled",
      "id": 11340847337,
      "node_id": "LE_lADOAN28mc55ZYRfzwAAAAKj95jp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11340847337",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-26T19:27:54Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 1796552788,
      "node_id": "PRR_kwDOAN28mc5rFThU",
      "url": null,
      "actor": null,
      "commit_id": "e492a90fec53ceb1839080024cc90a41ce503906",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Missing a section for backward compatibility",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1796552788",
      "submitted_at": "2023-12-26T19:28:19Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDc4NWIxMWU4NjE2Y2YwYTE1Y2IxOTEwN2MwZGJhN2UyYjgwZmZkNTM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/785b11e8616cf0a15cb19107c0dba7e2b80ffd53",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/785b11e8616cf0a15cb19107c0dba7e2b80ffd53",
      "tree": {
        "sha": "c502821be9abbef09e0b357da2e367b789926c34",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/c502821be9abbef09e0b357da2e367b789926c34"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c502821be9abbef09e0b357da2e367b789926c34\nparent e492a90fec53ceb1839080024cc90a41ce503906\nauthor Armin Sabouri <armins88@gmail.com> 1703870085 -0500\ncommitter GitHub <noreply@github.com> 1703870085 -0500\n\nAdd backwards compatibility section",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJljv6FCRBK7hj4Ov3rIwAAwrUIAJ+48N3n2R9tc5CJWeRZJeHV\nZ3D+d00IItfZ1Ub1RYBkeU27iR5FjtQXmuVkGIhdLG3GlBAFyuRBCGqGHMF/zx7a\ndniA5LEwcsi9DOx36c50fXocd7QgL/ujUBVehQqiQ+KO59gKnGNw8bIvfDdnB1xl\nvePDJ4OZEJgMCasRGICPabXM5iuPXnvYnJdBx0D5yK5UOTk6S1YWbhrdxeh7LzUn\nyvQ4UIy9r4HmncB181b8eU7UCapA/jF9Y35S5GMqDzSrg0U7IcN87XG8Da5W0GYK\nYP1OSyC4jqubU7Qgvs4fRIqiQgFe0EKSuf/O0VpMWBdpffjgDnogi6pxYgEiIPM=\n=0hWD\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e492a90fec53ceb1839080024cc90a41ce503906",
          "sha": "e492a90fec53ceb1839080024cc90a41ce503906",
          "html_url": "https://github.com/bitcoin/bips/commit/e492a90fec53ceb1839080024cc90a41ce503906"
        }
      ],
      "message": "Add backwards compatibility section",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-29T17:14:45Z"
      },
      "author": {
        "name": "Armin Sabouri",
        "email": "armins88@gmail.com",
        "date": "2023-12-29T17:14:45Z"
      },
      "sha": "785b11e8616cf0a15cb19107c0dba7e2b80ffd53"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGU5MTYyMWVmY2VlODExMDU2ZmY5MTZhNzQwY2NlNjUxYWQ0ODVkZTc",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e91621efcee811056ff916a740cce651ad485de7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/e91621efcee811056ff916a740cce651ad485de7",
      "tree": {
        "sha": "c502821be9abbef09e0b357da2e367b789926c34",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/c502821be9abbef09e0b357da2e367b789926c34"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c502821be9abbef09e0b357da2e367b789926c34\nparent e492a90fec53ceb1839080024cc90a41ce503906\nparent 785b11e8616cf0a15cb19107c0dba7e2b80ffd53\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1703870619 -0500\ncommitter GitHub <noreply@github.com> 1703870619 -0500\n\nMerge pull request #1 from 0xBEEFCAF3/patch-1\n\nAdd backwards compatibility section",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJljwCbCRBK7hj4Ov3rIwAALOEIABUlMhs53sgw38HCX+vWVqci\n7SvVtWwNCU4DfgZklLIY/6k2LKF0HChyZEa/rAD9g3/FeOiRxuovThSPEFK5tkCQ\n1xOkbOcVJniV21r/RK0jpBlYLgmuUXl83VeT7sHRaTXUl05qKIE5kZAlJXC0vgo0\n8SXSE4dohqfIPyioQQiLb2ZiHoO9/JDJXChjbz4xDTSfhWZGMUVSCU4IKWqdsEly\n+OWmylT+A6ekT1NERmrgLdN/XC2qaBIe2q3P8EDH7U5Ny7e/KCCk3WPsEUFNCaUC\n16Op4LIdzZQPvUmcMRZ3Q4CyivBoPRGHwwc1j4vkNuMyjA/HHCYyijsF95BztVM=\n=Pal8\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e492a90fec53ceb1839080024cc90a41ce503906",
          "sha": "e492a90fec53ceb1839080024cc90a41ce503906",
          "html_url": "https://github.com/bitcoin/bips/commit/e492a90fec53ceb1839080024cc90a41ce503906"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/785b11e8616cf0a15cb19107c0dba7e2b80ffd53",
          "sha": "785b11e8616cf0a15cb19107c0dba7e2b80ffd53",
          "html_url": "https://github.com/bitcoin/bips/commit/785b11e8616cf0a15cb19107c0dba7e2b80ffd53"
        }
      ],
      "message": "Merge pull request #1 from 0xBEEFCAF3/patch-1\n\nAdd backwards compatibility section",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-29T17:23:39Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-29T17:23:39Z"
      },
      "sha": "e91621efcee811056ff916a740cce651ad485de7"
    },
    {
      "event": "commented",
      "id": 1872273451,
      "node_id": "IC_kwDOAN28mc5vmKAr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1872273451",
      "actor": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-29T18:47:10Z",
      "updated_at": "2023-12-29T18:47:10Z",
      "author_association": "NONE",
      "body": "> Missing a section for backward compatibility\n\n@luke-jr Added! ",
      "user": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1872273451",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 11358235614,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAAKlAOve",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11358235614",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-29T18:47:10Z"
    },
    {
      "event": "subscribed",
      "id": 11358235616,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAAKlAOvg",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11358235616",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-29T18:47:10Z"
    },
    {
      "event": "reviewed",
      "id": 1799250600,
      "node_id": "PRR_kwDOAN28mc5rPmKo",
      "url": null,
      "actor": null,
      "commit_id": "e91621efcee811056ff916a740cce651ad485de7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1799250600",
      "submitted_at": "2023-12-29T22:58:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDgyZmU5ZmMzZGJhMDdkNTE1MzNkYmNlNGRlNGI1ZWI1OGRkYmVkNTU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
      "tree": {
        "sha": "b8f9cca94f0ca3bc8fd2c1997fc47121d61e4d85",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b8f9cca94f0ca3bc8fd2c1997fc47121d61e4d85"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b8f9cca94f0ca3bc8fd2c1997fc47121d61e4d85\nparent e91621efcee811056ff916a740cce651ad485de7\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1703892540 -0500\ncommitter GitHub <noreply@github.com> 1703892540 -0500\n\nspecify the hex value of the opcode",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlj1Y8CRBK7hj4Ov3rIwAAps4IAFUIJlIWsI09zg27HnUoPe8c\nKYnv2A2JM+WlY1iZLJ5q9L6h4rqEg3eoNCrggEtWvUdC1MuHeqIePQ/VXUKnlxos\nbCMv7XiTmCvjxp3kG5fD47oaslJjWrRC1r5EYH5cPTAiuWEWNRTThlDRSWasBnx4\nwoT03/at2RNC+1DCD8bqepc09s31AUbRAHqSwXitUivli2Y4D6wgxi7b57MsYp+S\nfHhIPSCHZ5JsCl80HiFkA8cxMp0EFNgTmJ+64Ghqgxl9tmigpAYrrPmYNI+qGy+e\nAwwu/XJH4M4egK6RTi5PuQ7tcDEYPuMNjXdf9HJ3+owDVGoGRjK4dSPlMT90qiY=\n=oj5R\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e91621efcee811056ff916a740cce651ad485de7",
          "sha": "e91621efcee811056ff916a740cce651ad485de7",
          "html_url": "https://github.com/bitcoin/bips/commit/e91621efcee811056ff916a740cce651ad485de7"
        }
      ],
      "message": "specify the hex value of the opcode",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2023-12-29T23:29:00Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2023-12-29T23:29:00Z"
      },
      "sha": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55"
    },
    {
      "event": "review_requested",
      "id": 11360223022,
      "node_id": "RRE_lADOAN28mc55ZYRfzwAAAAKlHz8u",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11360223022",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-30T16:52:20Z",
      "requested_reviewer": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1804114678,
      "node_id": "PRR_kwDOAN28mc5riJr2",
      "url": null,
      "actor": null,
      "commit_id": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "halseth",
        "id": 3765732,
        "node_id": "MDQ6VXNlcjM3NjU3MzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3765732?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/halseth",
        "html_url": "https://github.com/halseth",
        "followers_url": "https://api.github.com/users/halseth/followers",
        "following_url": "https://api.github.com/users/halseth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/halseth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/halseth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/halseth/subscriptions",
        "organizations_url": "https://api.github.com/users/halseth/orgs",
        "repos_url": "https://api.github.com/users/halseth/repos",
        "events_url": "https://api.github.com/users/halseth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/halseth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1804114678",
      "submitted_at": "2024-01-04T13:03:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "reviewed",
      "id": 1805279094,
      "node_id": "PRR_kwDOAN28mc5rml92",
      "url": null,
      "actor": null,
      "commit_id": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "illesdavid",
        "id": 121698016,
        "node_id": "U_kgDOB0D24A",
        "avatar_url": "https://avatars.githubusercontent.com/u/121698016?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/illesdavid",
        "html_url": "https://github.com/illesdavid",
        "followers_url": "https://api.github.com/users/illesdavid/followers",
        "following_url": "https://api.github.com/users/illesdavid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/illesdavid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/illesdavid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/illesdavid/subscriptions",
        "organizations_url": "https://api.github.com/users/illesdavid/orgs",
        "repos_url": "https://api.github.com/users/illesdavid/repos",
        "events_url": "https://api.github.com/users/illesdavid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/illesdavid/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1805279094",
      "submitted_at": "2024-01-05T02:39:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "halseth",
        "id": 3765732,
        "node_id": "MDQ6VXNlcjM3NjU3MzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3765732?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/halseth",
        "html_url": "https://github.com/halseth",
        "followers_url": "https://api.github.com/users/halseth/followers",
        "following_url": "https://api.github.com/users/halseth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/halseth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/halseth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/halseth/subscriptions",
        "organizations_url": "https://api.github.com/users/halseth/orgs",
        "repos_url": "https://api.github.com/users/halseth/repos",
        "events_url": "https://api.github.com/users/halseth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/halseth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-05T14:30:21Z",
      "updated_at": "2024-01-05T14:30:21Z",
      "source": {
        "issue": {
          "id": 2067447776,
          "node_id": "PR_kwDOALYNmM5jUU5h",
          "url": "https://api.github.com/repos/btcsuite/btcd/issues/2095",
          "repository_url": "https://api.github.com/repos/btcsuite/btcd",
          "labels_url": "https://api.github.com/repos/btcsuite/btcd/issues/2095/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/btcsuite/btcd/issues/2095/comments",
          "events_url": "https://api.github.com/repos/btcsuite/btcd/issues/2095/events",
          "html_url": "https://github.com/btcsuite/btcd/pull/2095",
          "number": 2095,
          "state": "open",
          "state_reason": null,
          "title": "[NO MERGE] tapscript: enable OP_CAT",
          "body": "[SHOULD NOT BE MERGED]\r\n\r\nEnabling OP_CAT as specified in [BIP-CAT](https://github.com/bitcoin/bips/pull/1525)\r\n\r\nNote this does currently lack any form of activation or flags for disabling it, hence many existing tests will fail.\r\n\r\nShould not be merged before BIP is accepted and activation is decided on.",
          "user": {
            "login": "halseth",
            "id": 3765732,
            "node_id": "MDQ6VXNlcjM3NjU3MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3765732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/halseth",
            "html_url": "https://github.com/halseth",
            "followers_url": "https://api.github.com/users/halseth/followers",
            "following_url": "https://api.github.com/users/halseth/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/halseth/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/halseth/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/halseth/subscriptions",
            "organizations_url": "https://api.github.com/users/halseth/orgs",
            "repos_url": "https://api.github.com/users/halseth/repos",
            "events_url": "https://api.github.com/users/halseth/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/halseth/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/btcsuite/btcd/pulls/2095",
            "html_url": "https://github.com/btcsuite/btcd/pull/2095",
            "diff_url": "https://github.com/btcsuite/btcd/pull/2095.diff",
            "patch_url": "https://github.com/btcsuite/btcd/pull/2095.patch"
          },
          "created_at": "2024-01-05T14:30:20Z",
          "updated_at": "2024-04-03T10:10:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFlNjhlZjExY2IxMWQ1NGY2NzA3NzlkZWY2MDQ3OTE3MGU2NGJjNDk",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae68ef11cb11d54f670779def60479170e64bc49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/ae68ef11cb11d54f670779def60479170e64bc49",
      "tree": {
        "sha": "7f001153bcf829ae7721eb3ed0b7cc7a437c7e96",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/7f001153bcf829ae7721eb3ed0b7cc7a437c7e96"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7f001153bcf829ae7721eb3ed0b7cc7a437c7e96\nparent 82fe9fc3dba07d51533dbce4de4b5eb58ddbed55\nauthor Armin Sabouri <armins88@gmail.com> 1704651844 -0500\ncommitter GitHub <noreply@github.com> 1704651844 -0500\n\nadd clarifying note about the current opcode\n\nAnd some grammar + spelling cleanup",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlmuxECRBK7hj4Ov3rIwAA4xgIAGRwxMXcx/AWQq6BvaNI5v66\nFWRqSDrYEUaRKvldeK6rnj6XlGp9admsnWMOZ+f3jthVU2/K5Z+5fjLnOxE5+o9R\nfAdT+HATA7FdIOD9NwC6K1BFCrwA4G6U2VEZfX/fZfbrJHU06JTqwDyrfMd1/Z5h\naALZouA0Lp5jNtHTrjGbHtiPn+6cVb3FXTOv2CZL9Ypyt51mxsHHBS6gn+iXZ2S8\nucB7juCwBlnyi3OLrc2/785KerPPpWsJV+PF4pZN+vrFlf9IW/6Bu6Gjsa+d6IXg\nAUyQw2oGfcG+hOM7i3HF3mlS7RvAAzF0zq1OdRUM8HqT399Q0Ok87o6goVOG+jY=\n=IJ9l\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
          "sha": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
          "html_url": "https://github.com/bitcoin/bips/commit/82fe9fc3dba07d51533dbce4de4b5eb58ddbed55"
        }
      ],
      "message": "add clarifying note about the current opcode\n\nAnd some grammar + spelling cleanup",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-01-07T18:24:04Z"
      },
      "author": {
        "name": "Armin Sabouri",
        "email": "armins88@gmail.com",
        "date": "2024-01-07T18:24:04Z"
      },
      "sha": "ae68ef11cb11d54f670779def60479170e64bc49"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGY5ZTEwMGU5ZGUwMDkxYmU5OWQwNmIxOTZhMTg5NzMzZTlmZTM1M2Q",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f9e100e9de0091be99d06b196a189733e9fe353d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f9e100e9de0091be99d06b196a189733e9fe353d",
      "tree": {
        "sha": "4601cb8b4667dbf344c5fbdf0ec4c95b8eb7c780",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/4601cb8b4667dbf344c5fbdf0ec4c95b8eb7c780"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4601cb8b4667dbf344c5fbdf0ec4c95b8eb7c780\nparent 82fe9fc3dba07d51533dbce4de4b5eb58ddbed55\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1704663263 -0500\ncommitter GitHub <noreply@github.com> 1704663263 -0500\n\nNotes that the opcode used is the same as the original cat opcode",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlmxjfCRBK7hj4Ov3rIwAArPIIAFlG+o92avj6scHqBzKX/Qyb\nibP8Gdo8xi4sZsoe4y9iDCsxH4CXnpTNda75RPdXy/h6yQae/rinUqBoJwudgFGv\n2qKTZh4EVabdo6QhxZMfOLMl9/JHIBgaNPK1qbk7llRQMiQpDVi/rNuJ2BDb6XrE\n22htUn/ai3j2RAfow53RgK2Dal6HbmkQSM0vfI83qZqlMEoUTaKS2hc9RU30xS5T\ntBtb8Rdv/0aVoexW+QSBI7+BkCH9NNaQgM/cAjIKaFIg8RTZUZRcs6eCcrbG6GBN\ncsm2DYtErIKe1yiKEPYt9oF8SghI47oeREzRBWoLwFe7vhDLQ8B70uDbIwjhpL8=\n=xrfh\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
          "sha": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
          "html_url": "https://github.com/bitcoin/bips/commit/82fe9fc3dba07d51533dbce4de4b5eb58ddbed55"
        }
      ],
      "message": "Notes that the opcode used is the same as the original cat opcode",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-01-07T21:34:23Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-01-07T21:34:23Z"
      },
      "sha": "f9e100e9de0091be99d06b196a189733e9fe353d"
    },
    {
      "event": "review_requested",
      "id": 11412023457,
      "node_id": "RRE_lADOAN28mc55ZYRfzwAAAAKoNaih",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11412023457",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-07T21:35:30Z",
      "requested_reviewer": {
        "login": "halseth",
        "id": 3765732,
        "node_id": "MDQ6VXNlcjM3NjU3MzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3765732?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/halseth",
        "html_url": "https://github.com/halseth",
        "followers_url": "https://api.github.com/users/halseth/followers",
        "following_url": "https://api.github.com/users/halseth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/halseth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/halseth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/halseth/subscriptions",
        "organizations_url": "https://api.github.com/users/halseth/orgs",
        "repos_url": "https://api.github.com/users/halseth/repos",
        "events_url": "https://api.github.com/users/halseth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/halseth/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11412023877,
      "node_id": "RRE_lADOAN28mc55ZYRfzwAAAAKoNapF",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11412023877",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-07T21:35:43Z",
      "requested_reviewer": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDc5OWRjMGM5NmQ4OWVkZmZhNjZiYTYwMzlhOTkwOTA3MDE4NzZhY2M",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/799dc0c96d89edffa66ba6039a99090701876acc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/799dc0c96d89edffa66ba6039a99090701876acc",
      "tree": {
        "sha": "7f001153bcf829ae7721eb3ed0b7cc7a437c7e96",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/7f001153bcf829ae7721eb3ed0b7cc7a437c7e96"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7f001153bcf829ae7721eb3ed0b7cc7a437c7e96\nparent ae68ef11cb11d54f670779def60479170e64bc49\nparent f9e100e9de0091be99d06b196a189733e9fe353d\nauthor Armin Sabouri <armins88@gmail.com> 1704665939 -0500\ncommitter GitHub <noreply@github.com> 1704665939 -0500\n\nMerge branch 'cat' into patch-1",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlmyNTCRBK7hj4Ov3rIwAA2W0IAK0fyQyDv+My4qEMoizt+lNz\npN1nSu82PRWw02/Mjdsfnjza28sQ6ywlqYITyGZr5kSsUA8/maw5rK0s9Fba1yTz\nZoq+oQOc33E8RgSpkcRSDdq05FiYtBKE/ByzTsTqDjGopEEZ/J7BddDZpxjORWpL\n0F4dGRWLFzrzmtXxT8aN1OSFt3anXSjy9LY365ZxyMQa8MaK2rMcWQn/nweBV82w\nmd6IuISdblCFJQqGki4mRQBy1mG04QhEuL3/q6bryI/sKl1DJjHMupQnmphWFSk8\ndOwpU2IUOWE7yzJ6HCN6EQ4i7Gw59kyJ0E+jZnqgI0dyRlzAjlTiS1m9cgMvLCA=\n=qBaJ\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae68ef11cb11d54f670779def60479170e64bc49",
          "sha": "ae68ef11cb11d54f670779def60479170e64bc49",
          "html_url": "https://github.com/bitcoin/bips/commit/ae68ef11cb11d54f670779def60479170e64bc49"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f9e100e9de0091be99d06b196a189733e9fe353d",
          "sha": "f9e100e9de0091be99d06b196a189733e9fe353d",
          "html_url": "https://github.com/bitcoin/bips/commit/f9e100e9de0091be99d06b196a189733e9fe353d"
        }
      ],
      "message": "Merge branch 'cat' into patch-1",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-01-07T22:18:59Z"
      },
      "author": {
        "name": "Armin Sabouri",
        "email": "armins88@gmail.com",
        "date": "2024-01-07T22:18:59Z"
      },
      "sha": "799dc0c96d89edffa66ba6039a99090701876acc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDJjZWM3M2E1YjQzN2NjNGUzYzEwOGNiNDgyZGUwOWIwZTg3ZWRiOGQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2cec73a5b437cc4e3c108cb482de09b0e87edb8d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2cec73a5b437cc4e3c108cb482de09b0e87edb8d",
      "tree": {
        "sha": "71b3d5fefac267f61f72f3c04d6b434cf8741b61",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/71b3d5fefac267f61f72f3c04d6b434cf8741b61"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 71b3d5fefac267f61f72f3c04d6b434cf8741b61\nparent 799dc0c96d89edffa66ba6039a99090701876acc\nauthor Armin Sabouri <armins88@gmail.com> 1704669489 -0500\ncommitter GitHub <noreply@github.com> 1704669489 -0500\n\nrm comment on disabled CAT opcode",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlmzEyCRBK7hj4Ov3rIwAAzucIAKdvBgmhmvT8wWm09u/hPfJO\nGDpvpNk81w08WgEOtxT5XSkAmx+plguzbXb+R/gbNFD0hb/PM3NJl3svEEl5JCrZ\nvo83wpwzX8xgoLkld98ZpGtyS1FguIDBJHj85gb4Qs7B/jbMYEFOUVhvI5f1QCdY\n3APdyZ0xaISnb3klE/PtIBq0quivKVjhVWNdSeoKC6Gc+QcVynSFAodvujzF34IM\n8hQ9zQeQT5A5YW4ZfNn8yXi/We5U80cOQyeNFmf/z/SOqxSbLJDZMzJG9UiLkQhM\nelZSffva1YTbIDo1+90VuGcaRcZwUm2s1mQTEQ8yad3a8dIDino7g9KkSmEsEYU=\n=Wd5I\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/799dc0c96d89edffa66ba6039a99090701876acc",
          "sha": "799dc0c96d89edffa66ba6039a99090701876acc",
          "html_url": "https://github.com/bitcoin/bips/commit/799dc0c96d89edffa66ba6039a99090701876acc"
        }
      ],
      "message": "rm comment on disabled CAT opcode",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-01-07T23:18:09Z"
      },
      "author": {
        "name": "Armin Sabouri",
        "email": "armins88@gmail.com",
        "date": "2024-01-07T23:18:09Z"
      },
      "sha": "2cec73a5b437cc4e3c108cb482de09b0e87edb8d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDVkZGU3ZWE1Y2ZlMmIwNDZkZGU3ZjllN2VjZjQwNzMwZjIwMDU2OTc",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5dde7ea5cfe2b046dde7f9e7ecf40730f2005697",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/5dde7ea5cfe2b046dde7f9e7ecf40730f2005697",
      "tree": {
        "sha": "aa14b4f49858307989b0597ca6e26482dbc75783",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/aa14b4f49858307989b0597ca6e26482dbc75783"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aa14b4f49858307989b0597ca6e26482dbc75783\nparent 2cec73a5b437cc4e3c108cb482de09b0e87edb8d\nauthor Armin Sabouri <armins88@gmail.com> 1704669526 -0500\ncommitter GitHub <noreply@github.com> 1704669526 -0500\n\nrevert changes to abstract",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlmzFWCRBK7hj4Ov3rIwAAC+wIAAwY67Qt+Op38pC5HtrK9BDq\nfGY0Ds8LMFkr/xNmvhOoQmcDZukEM/bRTczZqbF/tR+dFYdEdf06GbUUNEtPrGT6\ngcy+116dfxIi/w7XE3fGKuibnAkd5Fu5OejZSoiJ9ZcLNvUPYia/t/OUxq35bys+\nANsGsSKeHts2a/sBFjiuO4ou0vCGLrgcgnDCSfpgU/lxj8j55phHlGq6Rznhk3Kx\n+ZfR0AIaOcBqt/Ua8zBLG3LvnmSSclBWX3Vn8nQq2nuqKa+TCVdYaVSa8OBj5Xm9\n4pyyg1kaNh0k+Z5hGteKxV6oSncSL/Du1sn2DjoKk8g92T/e6d7iZLYTaENpLEA=\n=t3U2\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2cec73a5b437cc4e3c108cb482de09b0e87edb8d",
          "sha": "2cec73a5b437cc4e3c108cb482de09b0e87edb8d",
          "html_url": "https://github.com/bitcoin/bips/commit/2cec73a5b437cc4e3c108cb482de09b0e87edb8d"
        }
      ],
      "message": "revert changes to abstract",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-01-07T23:18:46Z"
      },
      "author": {
        "name": "Armin Sabouri",
        "email": "armins88@gmail.com",
        "date": "2024-01-07T23:18:46Z"
      },
      "sha": "5dde7ea5cfe2b046dde7f9e7ecf40730f2005697"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDJiNWFiM2IxZmQ0ZDEyZDBjOTMwM2RlNTdhNTE4OGM3NjczNDVmYTM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2b5ab3b1fd4d12d0c9303de57a5188c767345fa3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2b5ab3b1fd4d12d0c9303de57a5188c767345fa3",
      "tree": {
        "sha": "aa14b4f49858307989b0597ca6e26482dbc75783",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/aa14b4f49858307989b0597ca6e26482dbc75783"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aa14b4f49858307989b0597ca6e26482dbc75783\nparent f9e100e9de0091be99d06b196a189733e9fe353d\nparent 5dde7ea5cfe2b046dde7f9e7ecf40730f2005697\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1704670570 -0500\ncommitter GitHub <noreply@github.com> 1704670570 -0500\n\nMerge pull request #2 from 0xBEEFCAF3/patch-1\n\nadd clarifying note about the current opcode",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlmzVqCRBK7hj4Ov3rIwAA3gIIAFgh4rl3G5PQVEB7FVxVNRlD\nLbLM9kSamoUevk4iQHiTL3fmMPyvwWtZhgiVmNe5mmIUpjVojrmMSLxPvTIcAXIQ\nyZqikL86+tHnCbjnD3/hDqsdJUwVERJZui9un73bxiw5sK2iNEtc8DsXLSMnY+7r\nmLlYRXd8SVxIXg1vUAqV+3q132hSVP0noTfRcoNTZ557W/mn5TcKkFA0kLWTjpOL\nVQBr9aTN9BWWT01h6K1OkScv7jnej3JRkHJ82tnNsuqSAn43mdK9o3AvKPbBV8Oz\nzYkjkWIKo7zmGFKAL1Qg6KNOp5dtDGTcxCSP+f+xxnN7HhfIjKmBsKFapiPLvDA=\n=58hZ\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f9e100e9de0091be99d06b196a189733e9fe353d",
          "sha": "f9e100e9de0091be99d06b196a189733e9fe353d",
          "html_url": "https://github.com/bitcoin/bips/commit/f9e100e9de0091be99d06b196a189733e9fe353d"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5dde7ea5cfe2b046dde7f9e7ecf40730f2005697",
          "sha": "5dde7ea5cfe2b046dde7f9e7ecf40730f2005697",
          "html_url": "https://github.com/bitcoin/bips/commit/5dde7ea5cfe2b046dde7f9e7ecf40730f2005697"
        }
      ],
      "message": "Merge pull request #2 from 0xBEEFCAF3/patch-1\n\nadd clarifying note about the current opcode",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-01-07T23:36:10Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-01-07T23:36:10Z"
      },
      "sha": "2b5ab3b1fd4d12d0c9303de57a5188c767345fa3"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-14T22:40:42Z",
      "updated_at": "2024-01-14T22:40:42Z",
      "source": {
        "issue": {
          "id": 2080927839,
          "node_id": "PR_kwDOABII585kCGVg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29247",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29247/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29247/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29247/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29247",
          "number": 29247,
          "state": "open",
          "state_reason": null,
          "title": "Reenable OP_CAT",
          "body": "Renabling OP_CAT, as per the [draft BIP](https://github.com/bitcoin/bips/pull/1525)\r\n\r\nThis MR involves reinstating the legacy opcode by replacing OP_SUCCESS126. Currently, there are no proposed activation parameters.\r\n\r\n### Relevant Links\r\n[Btcd implementation](https://github.com/btcsuite/btcd/pull/2095)\r\n[Signet MR](https://github.com/bitcoin-inquisition/bitcoin/pull/39)\r\n[Mailing list post](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022049.html)\r\n\r\n",
          "user": {
            "login": "0xBEEFCAF3",
            "id": 24356537,
            "node_id": "MDQ6VXNlcjI0MzU2NTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xBEEFCAF3",
            "html_url": "https://github.com/0xBEEFCAF3",
            "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
            "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
            "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
            "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
            "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29247",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29247",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29247.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29247.patch"
          },
          "created_at": "2024-01-14T22:40:42Z",
          "updated_at": "2024-04-02T02:15:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1899568530,
      "node_id": "IC_kwDOAN28mc5xOR2S",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1899568530",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T03:01:51Z",
      "updated_at": "2024-01-19T03:01:51Z",
      "author_association": "NONE",
      "body": "@luke-jr We are requesting a BIP number for this PR",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1899568530",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 11532214149,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAAKvX5-F",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11532214149",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T03:01:51Z"
    },
    {
      "event": "subscribed",
      "id": 11532214156,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAAKvX5-M",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/11532214156",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T03:01:52Z"
    },
    {
      "event": "reviewed",
      "id": 1839939266,
      "node_id": "PRR_kwDOAN28mc5tqz7C",
      "url": null,
      "actor": null,
      "commit_id": "2b5ab3b1fd4d12d0c9303de57a5188c767345fa3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "ACK",
      "user": {
        "login": "halseth",
        "id": 3765732,
        "node_id": "MDQ6VXNlcjM3NjU3MzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3765732?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/halseth",
        "html_url": "https://github.com/halseth",
        "followers_url": "https://api.github.com/users/halseth/followers",
        "following_url": "https://api.github.com/users/halseth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/halseth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/halseth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/halseth/subscriptions",
        "organizations_url": "https://api.github.com/users/halseth/orgs",
        "repos_url": "https://api.github.com/users/halseth/repos",
        "events_url": "https://api.github.com/users/halseth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/halseth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-1839939266",
      "submitted_at": "2024-01-23T21:12:44Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "commented",
      "id": 1974211475,
      "node_id": "IC_kwDOAN28mc51rBOT",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1974211475",
      "actor": {
        "login": "cf",
        "id": 4934402,
        "node_id": "MDQ6VXNlcjQ5MzQ0MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4934402?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cf",
        "html_url": "https://github.com/cf",
        "followers_url": "https://api.github.com/users/cf/followers",
        "following_url": "https://api.github.com/users/cf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cf/subscriptions",
        "organizations_url": "https://api.github.com/users/cf/orgs",
        "repos_url": "https://api.github.com/users/cf/repos",
        "events_url": "https://api.github.com/users/cf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cf/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T02:30:01Z",
      "updated_at": "2024-03-02T02:30:01Z",
      "author_association": "NONE",
      "body": "Any updates on this, would love to see this BIP merged to make verification of FRI based zero knowledge proofs (pay to zkp) more efficient",
      "user": {
        "login": "cf",
        "id": 4934402,
        "node_id": "MDQ6VXNlcjQ5MzQ0MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4934402?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cf",
        "html_url": "https://github.com/cf",
        "followers_url": "https://api.github.com/users/cf/followers",
        "following_url": "https://api.github.com/users/cf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cf/subscriptions",
        "organizations_url": "https://api.github.com/users/cf/orgs",
        "repos_url": "https://api.github.com/users/cf/repos",
        "events_url": "https://api.github.com/users/cf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cf/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1974211475",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "commented",
      "id": 1979297869,
      "node_id": "IC_kwDOAN28mc51-bBN",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1979297869",
      "actor": {
        "login": "stevenroose",
        "id": 853468,
        "node_id": "MDQ6VXNlcjg1MzQ2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/853468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stevenroose",
        "html_url": "https://github.com/stevenroose",
        "followers_url": "https://api.github.com/users/stevenroose/followers",
        "following_url": "https://api.github.com/users/stevenroose/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stevenroose/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stevenroose/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stevenroose/subscriptions",
        "organizations_url": "https://api.github.com/users/stevenroose/orgs",
        "repos_url": "https://api.github.com/users/stevenroose/repos",
        "events_url": "https://api.github.com/users/stevenroose/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stevenroose/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-05T17:37:32Z",
      "updated_at": "2024-03-05T17:37:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "I would like to propose to replace the per-item size limit with a total stack size limit that is equivalent and can be introduced as a softfork as well. Since we currently allow 1000 items of 520 bytes, I would propose a 520kB (520,000 bytes) size limit for the entire stack + altstack.\r\n\r\nThis can be implemented as such:\r\n```diff\r\ndiff --git a/src/script/interpreter.cpp b/src/script/interpreter.cpp\r\nindex 1583b5fadd3..cbe1695bab2 100644\r\n--- a/src/script/interpreter.cpp\r\n+++ b/src/script/interpreter.cpp\r\n@@ -545,8 +545,6 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\r\n                         return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n                     valtype& vch1 = stacktop(-2);\r\n                     valtype& vch2 = stacktop(-1);\r\n-                    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE)\r\n-                        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n                     vch1.insert(vch1.end(), vch2.begin(), vch2.end());\r\n                     stack.pop_back();\r\n                 }\r\n@@ -1287,8 +1285,17 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\r\n             }\r\n\r\n             // Size limits\r\n+            // limit number of elements in stacks\r\n             if (stack.size() + altstack.size() > MAX_STACK_SIZE)\r\n                 return set_error(serror, SCRIPT_ERR_STACK_SIZE);\r\n+            // limit total number of bytes in stacks\r\n+            unsigned int total_bytes = 0;\r\n+            for (size_t i = 0; i < stack.size() ; i++)\r\n+                total_bytes += stack[i].size();\r\n+            for (size_t i = 0; i < altstack.size() ; i++)\r\n+                total_bytes += altstack[i].size();\r\n+            if (total_bytes > MAX_STACK_BYTES)\r\n+                return set_error(serror, SCRIPT_ERR_STACK_SIZE);\r\n         }\r\n     }\r\n     catch (...)\r\ndiff --git a/src/script/script.h b/src/script/script.h\r\nindex 305919f5ba4..ef40c3672ee 100644\r\n--- a/src/script/script.h\r\n+++ b/src/script/script.h\r\n@@ -38,6 +38,9 @@ static const int MAX_SCRIPT_SIZE = 10000;\r\n // Maximum number of values on script interpreter stack\r\n static const int MAX_STACK_SIZE = 1000;\r\n\r\n+// Maximum number of total bytes on script interpreter stack\r\n+static const int MAX_STACK_BYTES = 520000; // 520 * 1000\r\n+\r\n // Threshold for nLockTime: below this value it is interpreted as block number,\r\n // otherwise as UNIX timestamp.\r\n static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\r\n```",
      "user": {
        "login": "stevenroose",
        "id": 853468,
        "node_id": "MDQ6VXNlcjg1MzQ2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/853468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stevenroose",
        "html_url": "https://github.com/stevenroose",
        "followers_url": "https://api.github.com/users/stevenroose/followers",
        "following_url": "https://api.github.com/users/stevenroose/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stevenroose/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stevenroose/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stevenroose/subscriptions",
        "organizations_url": "https://api.github.com/users/stevenroose/orgs",
        "repos_url": "https://api.github.com/users/stevenroose/repos",
        "events_url": "https://api.github.com/users/stevenroose/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stevenroose/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-1979297869",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "commented",
      "id": 2002516346,
      "node_id": "IC_kwDOAN28mc53W_l6",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2002516346",
      "actor": {
        "login": "ChrisMartl",
        "id": 125733092,
        "node_id": "U_kgDOB36I5A",
        "avatar_url": "https://avatars.githubusercontent.com/u/125733092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChrisMartl",
        "html_url": "https://github.com/ChrisMartl",
        "followers_url": "https://api.github.com/users/ChrisMartl/followers",
        "following_url": "https://api.github.com/users/ChrisMartl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChrisMartl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChrisMartl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChrisMartl/subscriptions",
        "organizations_url": "https://api.github.com/users/ChrisMartl/orgs",
        "repos_url": "https://api.github.com/users/ChrisMartl/repos",
        "events_url": "https://api.github.com/users/ChrisMartl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChrisMartl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T15:51:37Z",
      "updated_at": "2024-03-17T15:51:37Z",
      "author_association": "NONE",
      "body": "NACK\r\n\r\nOP_CAT enables recursion which is computational equivalent to iteration; thus making Script Turing complete.",
      "user": {
        "login": "ChrisMartl",
        "id": 125733092,
        "node_id": "U_kgDOB36I5A",
        "avatar_url": "https://avatars.githubusercontent.com/u/125733092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChrisMartl",
        "html_url": "https://github.com/ChrisMartl",
        "followers_url": "https://api.github.com/users/ChrisMartl/followers",
        "following_url": "https://api.github.com/users/ChrisMartl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChrisMartl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChrisMartl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChrisMartl/subscriptions",
        "organizations_url": "https://api.github.com/users/ChrisMartl/orgs",
        "repos_url": "https://api.github.com/users/ChrisMartl/repos",
        "events_url": "https://api.github.com/users/ChrisMartl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChrisMartl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2002516346",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "subscribed",
      "id": 12143970795,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAALT1knr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12143970795",
      "actor": {
        "login": "GregTonoski",
        "id": 111286121,
        "node_id": "U_kgDOBqIXaQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/111286121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GregTonoski",
        "html_url": "https://github.com/GregTonoski",
        "followers_url": "https://api.github.com/users/GregTonoski/followers",
        "following_url": "https://api.github.com/users/GregTonoski/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GregTonoski/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GregTonoski/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GregTonoski/subscriptions",
        "organizations_url": "https://api.github.com/users/GregTonoski/orgs",
        "repos_url": "https://api.github.com/users/GregTonoski/repos",
        "events_url": "https://api.github.com/users/GregTonoski/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GregTonoski/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T20:30:06Z"
    },
    {
      "event": "commented",
      "id": 2002640756,
      "node_id": "IC_kwDOAN28mc53Xd90",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2002640756",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T22:35:19Z",
      "updated_at": "2024-03-17T22:35:19Z",
      "author_association": "NONE",
      "body": "@ChrisMartl How does OP_CAT add recursion? What's your source for this claim?",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2002640756",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 12144222951,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAALT2iLn",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12144222951",
      "actor": {
        "login": "ChrisMartl",
        "id": 125733092,
        "node_id": "U_kgDOB36I5A",
        "avatar_url": "https://avatars.githubusercontent.com/u/125733092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChrisMartl",
        "html_url": "https://github.com/ChrisMartl",
        "followers_url": "https://api.github.com/users/ChrisMartl/followers",
        "following_url": "https://api.github.com/users/ChrisMartl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChrisMartl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChrisMartl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChrisMartl/subscriptions",
        "organizations_url": "https://api.github.com/users/ChrisMartl/orgs",
        "repos_url": "https://api.github.com/users/ChrisMartl/repos",
        "events_url": "https://api.github.com/users/ChrisMartl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChrisMartl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T22:35:21Z"
    },
    {
      "event": "subscribed",
      "id": 12144222953,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAALT2iLp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12144222953",
      "actor": {
        "login": "ChrisMartl",
        "id": 125733092,
        "node_id": "U_kgDOB36I5A",
        "avatar_url": "https://avatars.githubusercontent.com/u/125733092?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChrisMartl",
        "html_url": "https://github.com/ChrisMartl",
        "followers_url": "https://api.github.com/users/ChrisMartl/followers",
        "following_url": "https://api.github.com/users/ChrisMartl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChrisMartl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChrisMartl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChrisMartl/subscriptions",
        "organizations_url": "https://api.github.com/users/ChrisMartl/orgs",
        "repos_url": "https://api.github.com/users/ChrisMartl/repos",
        "events_url": "https://api.github.com/users/ChrisMartl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChrisMartl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T22:35:21Z"
    },
    {
      "event": "commented",
      "id": 2002641827,
      "node_id": "IC_kwDOAN28mc53XeOj",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2002641827",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T22:39:11Z",
      "updated_at": "2024-03-17T22:39:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "In case this claim originates with something I've said publicly: I am confident that CAT does not introduce recursion to Script and I have never (intentionally) said that it did.\r\n\r\nCAT does introduce a form of *recursive covenants*. But the form of \"recursion\" here is one that involves a fresh transaction for every iteration, and does not change the computational model at all.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2002641827",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGIzNDkzNzQ2YjFhMTIwOGRkYWFlNTI2ODJmOThjZGZmZjFlMmQ1NjM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/b3493746b1a1208ddaae52682f98cdfff1e2d563",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/b3493746b1a1208ddaae52682f98cdfff1e2d563",
      "tree": {
        "sha": "909e6b96595cf0ff8c63df0b70dd24a50fa08080",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/909e6b96595cf0ff8c63df0b70dd24a50fa08080"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 909e6b96595cf0ff8c63df0b70dd24a50fa08080\nparent 2b5ab3b1fd4d12d0c9303de57a5188c767345fa3\nauthor Armin Sabouri <armins88@gmail.com> 1710973982 -0400\ncommitter Armin Sabouri <armins88@gmail.com> 1710973982 -0400\n\nupdate OP_CAT implementation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF3TF1Oa9/H5wFufep1cQWKWnigoFAmX7ZB8ACgkQp1cQWKWn\nigrUfQ//ZlvLvnbOrhQA79yqAfy0O+12p8bInGd0PzEd3pYuANKGUBiwhoRTcbHG\nB63vLfkGhOHeu46FcDy9D0Uva1DAUILe4o1UEEdZ0VfNK+yipo9f3yCxjICaHvTN\nhIWnlt3z83yx4K0MkCHj2E7fYCZoncgZ58pApVSU02VOrViklP1etkBHC/X/LQ/F\n3wJSo29rDpf9HsrYjq13E3NJZ29vaJVbgbCC1xGaBVK9Rqsc2LNr64vuEw7IMskb\nojoS4vBjHdjz6F9OmRyYhMfAd1NPsnXilTPwup6+z7RJwal70E5K04aqFD3D2dcb\ndkwI0UrVucYfAkHc7oHE2fkcOdf/uo9zWC9UyrtksdpD9eVV3hFcrifeJLTvcGun\nq045H1b2mDA8+VFskUPmSpe+F/clcgYYjdhkA6z0LMwJrkyuabUY22EXGqbHLX2K\nFWZpxNE4rBZF+wK4/8iHJ91MR80XVe0l/EY9g5BBH3JOBbgvurWJxKuY7b4xUZb+\nod9eGRjFpzzZPmtAqJ+DP32Yu0DlsEt6A3PWlBNKAe6d599q9m7EzrepnQqAH6Yi\neK/q6beAnNt4pfTFPQQ3w45WhlgA9+6Eg6R90Yx71+9hwTE3L63aMPdpUNI01hsj\n92H/mwcHgDaVeBQUUKsHNxb9+jEXA2Wf7MTg98aaXO+uMGz6wVg=\n=Pf+U\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2b5ab3b1fd4d12d0c9303de57a5188c767345fa3",
          "sha": "2b5ab3b1fd4d12d0c9303de57a5188c767345fa3",
          "html_url": "https://github.com/bitcoin/bips/commit/2b5ab3b1fd4d12d0c9303de57a5188c767345fa3"
        }
      ],
      "message": "update OP_CAT implementation",
      "committer": {
        "name": "Armin Sabouri",
        "email": "armins88@gmail.com",
        "date": "2024-03-20T22:33:02Z"
      },
      "author": {
        "name": "Armin Sabouri",
        "email": "armins88@gmail.com",
        "date": "2024-03-20T22:33:02Z"
      },
      "sha": "b3493746b1a1208ddaae52682f98cdfff1e2d563"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDM1NjQxYTg3ZDdmYjI5ZjIzYTJjMDNlOTNmZDQ1YWRmN2NlYTczMTQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/35641a87d7fb29f23a2c03e93fd45adf7cea7314",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/35641a87d7fb29f23a2c03e93fd45adf7cea7314",
      "tree": {
        "sha": "909e6b96595cf0ff8c63df0b70dd24a50fa08080",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/909e6b96595cf0ff8c63df0b70dd24a50fa08080"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 909e6b96595cf0ff8c63df0b70dd24a50fa08080\nparent 2b5ab3b1fd4d12d0c9303de57a5188c767345fa3\nparent b3493746b1a1208ddaae52682f98cdfff1e2d563\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1710992393 -0400\ncommitter GitHub <noreply@github.com> 1710992393 -0400\n\nMerge pull request #3 from 0xBEEFCAF3/cat\n\nUpdate OP_CAT implementation code",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJl+6wJCRC1aQ7uu5UhlAAAhg8QAF4f0WlLnXtZljlA887eIYcI\noqsx90pWF3Z73CA/6+ktVFhCP4SXGam0UIvwxqzg6y0I84BX1yfz8qjvdxTkeovd\nQYZVtfgaQXuSdPQfSw1XpRamurxvFMAAHvMgHizX/mvb4yoTC/2nE4dBZsgUdaX/\nqIZ0AqRX3r6Tu6dpylx0VWegLVHOQbU65ZU64yvIYD+z/4eZ23TC8Ov/5FYWyXxw\nTJvSt548qmFZ/pnD+gdT7eCikobSdUClUrsRSJ0LrPuV5+MR4YelvRJE4hQrwgn4\nlp+d5f6Q1Tnby8gWbkdsXyYpBhheV9J5i7Lxwael5N43Kuw6VD4+xNJWZCTtfbaE\n6ucGVxE6UO8hY9ygLgww7T8wNc5wkpX5LQzo357nEpoITK9SN3fiRsJMyZGha8sE\nuHAcfzdfKBIVo2l2q69Msq+NsYpkl5+ENkXsFsCO/zUD0gEDCismef13aY12j4sW\n0ZVLAIJ4rVLo9QgtZ+tph5XN62Fql7NfVIQX9jw4hVutieeh/53xiXQlx6zO2ai6\noNlUzQzRPpp8HXMAKCMK8pxDJlvbRsqJssNz499T07W8IpQjaujCRfBjwisQ9DPL\nWaE4PFPKxklGiepzQdAObCdc3SseN9zJ23lrM9M4Xe47qIy1c0r9e2+KQ25rW4PO\nc3cZ+QpMZVkb3UbTHphA\n=Cvki\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2b5ab3b1fd4d12d0c9303de57a5188c767345fa3",
          "sha": "2b5ab3b1fd4d12d0c9303de57a5188c767345fa3",
          "html_url": "https://github.com/bitcoin/bips/commit/2b5ab3b1fd4d12d0c9303de57a5188c767345fa3"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/b3493746b1a1208ddaae52682f98cdfff1e2d563",
          "sha": "b3493746b1a1208ddaae52682f98cdfff1e2d563",
          "html_url": "https://github.com/bitcoin/bips/commit/b3493746b1a1208ddaae52682f98cdfff1e2d563"
        }
      ],
      "message": "Merge pull request #3 from 0xBEEFCAF3/cat\n\nUpdate OP_CAT implementation code",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-03-21T03:39:53Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-03-21T03:39:53Z"
      },
      "sha": "35641a87d7fb29f23a2c03e93fd45adf7cea7314"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFjMjMxYTE3YzJlNjgzOWQ5YWY2NTc2ZDlhYTFjNzlmYjhjMTZlY2E",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ac231a17c2e6839d9af6576d9aa1c79fb8c16eca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/ac231a17c2e6839d9af6576d9aa1c79fb8c16eca",
      "tree": {
        "sha": "89da6585d6781b5d7f13091bd6ea159fff59392b",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/89da6585d6781b5d7f13091bd6ea159fff59392b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 89da6585d6781b5d7f13091bd6ea159fff59392b\nparent 35641a87d7fb29f23a2c03e93fd45adf7cea7314\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1710993233 -0400\ncommitter GitHub <noreply@github.com> 1710993233 -0400\n\nFixes broken mediawiki link",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJl+69RCRC1aQ7uu5UhlAAAoTAQAHVI2NuMnwO0oQzl5yZTVwsO\nM1VVLbGcOz5dVlQWoohzdBEYveDEMP5N1F+wT1LDfpAOyFak6N/7CTxVE98oLbew\nzqwlVtqsP7WnEf/YYulfsar2vxAVP5CMBU8F9LG0jaNoIYp8Ir76AL8v/Z3oxn4R\ngh5ivvBaaExU91JaAj+jbq5oMU+H+Fg/thRmDpJEyxKmi7xhjXfBeWjwTAVg+8RE\n0Ljn9VIkYuue0Ni+b2q6GjFanwLwnkRpE1nBLW8374qWkvitcuvTZFnn+crIpVM9\nozb5ijbZT90JmKHEQ/0MZADW6oZf7410xEgRTRfki1/nTcalw4gMnufd+5By6+Ti\no/cAPVdIhBebCZWn4MXUwM71a1apzaPuAhzTO7flMeRCoi2k5I6b6t5xPJFeZJ86\nLm160/nLztgvlMop0PYLjYzCCklGYl6F1602cGnmR1JDwyzDzqzQ96vvbHq/ADsd\nvovEdxpx/PahOqSQq4TIFSbTbrtbEASJztqTGYN25yY6yeruHRM8eFyrlnwnj2pL\nUyR7rH5gi/8xoXXD7c6JwIr7si+UsnNVm3p5Y+24FlrOOcRmxBD+dAt1rV/NHyCT\nHvcE8HRbSDJMVSXkCURpFgRelCWYJQ9NIGXDP8Jkj7LDTKS2xkia6eimEX/UMUwb\nDxzEoHI05VHZDcn5SZcn\n=Ie/O\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/35641a87d7fb29f23a2c03e93fd45adf7cea7314",
          "sha": "35641a87d7fb29f23a2c03e93fd45adf7cea7314",
          "html_url": "https://github.com/bitcoin/bips/commit/35641a87d7fb29f23a2c03e93fd45adf7cea7314"
        }
      ],
      "message": "Fixes broken mediawiki link",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-03-21T03:53:53Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-03-21T03:53:53Z"
      },
      "sha": "ac231a17c2e6839d9af6576d9aa1c79fb8c16eca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGMyMzVhYTQ5MzkzM2RmZmY4MmVmM2JhNDZhNWU1NmVlY2I4MGQzYzY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c235aa493933dfff82ef3ba46a5e56eecb80d3c6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/c235aa493933dfff82ef3ba46a5e56eecb80d3c6",
      "tree": {
        "sha": "b137b0e9cbd79ebd9797bfd27135f304c2214fe3",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b137b0e9cbd79ebd9797bfd27135f304c2214fe3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b137b0e9cbd79ebd9797bfd27135f304c2214fe3\nparent ac231a17c2e6839d9af6576d9aa1c79fb8c16eca\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1711499779 -0400\ncommitter GitHub <noreply@github.com> 1711499779 -0400\n\nAdds more acknowledgements",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmA2oDCRC1aQ7uu5UhlAAA1IMQAAf6WnGFDGjFJT0OgH7qvo4N\nMFsRJU5aG1bmJifi2+Asyjm4xv82kCPt7ARUZ8/caWAI3x8fe6RexOgQoa3Waj4a\n1kn971tnw8qq4ItAz0xqydExCMAf59PuFLiHcAhpbw8+8c4spKt9bGrlG45aJDSL\nAETv2jFROEDQFUkNLmeZ8PAha/BMASxYNyY+OPcGGGsf3Wxy/0MAfuQAMeAyiptP\nZKrjdGY/QGrgpreagBE27AH/6ZCxrz2OSQ2wDjtBfFSooDWqfushW0DwiaewWxlq\nsbM4O4V/AgbcckEmi2zKACRyTMa56aGpMfrdEHVzyjHx5PNPhttAh5QRzLuDewKi\nJuYYK+8tpLrPL9DP0/QV+/hbN27IOUHtVegJdh/mrfzNF04cJNKzV68g23nSVUhp\nNsVMBftA+J55ZT5Sq8LslRmX68hpspVBjfSIkXLb0gL6f3YggAGVdUFSRa3OlKvA\nRhpP9jNdtd0GqOS4Im3rK3qw8ggRLyLwmVjc58lWX2mvM5u2vppfZcV9TNMGquXm\nVC2NVNZMR/AUhuEtXvK2i57tZMU8f3H6Dfxr4clVQJJP12qvWJg79jQGg7yvqbHB\nruSU22CKmUqzfp9MkTMS3pJENW8DozROl2CWiVJ+mtdrfFTkUK2POtCccx1YzyL0\nPgmjl2UDKQM4BRhSghZ8\n=Eb4O\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ac231a17c2e6839d9af6576d9aa1c79fb8c16eca",
          "sha": "ac231a17c2e6839d9af6576d9aa1c79fb8c16eca",
          "html_url": "https://github.com/bitcoin/bips/commit/ac231a17c2e6839d9af6576d9aa1c79fb8c16eca"
        }
      ],
      "message": "Adds more acknowledgements",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-03-27T00:36:19Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-03-27T00:36:19Z"
      },
      "sha": "c235aa493933dfff82ef3ba46a5e56eecb80d3c6"
    },
    {
      "event": "commented",
      "id": 2035406050,
      "node_id": "IC_kwDOAN28mc55UdTi",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2035406050",
      "actor": {
        "login": "weikengchen",
        "id": 14937807,
        "node_id": "MDQ6VXNlcjE0OTM3ODA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/14937807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weikengchen",
        "html_url": "https://github.com/weikengchen",
        "followers_url": "https://api.github.com/users/weikengchen/followers",
        "following_url": "https://api.github.com/users/weikengchen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/weikengchen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/weikengchen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/weikengchen/subscriptions",
        "organizations_url": "https://api.github.com/users/weikengchen/orgs",
        "repos_url": "https://api.github.com/users/weikengchen/repos",
        "events_url": "https://api.github.com/users/weikengchen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/weikengchen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T19:20:53Z",
      "updated_at": "2024-04-03T19:21:35Z",
      "author_association": "NONE",
      "body": "To [stevenroose](https://github.com/stevenroose)'s proposal. **https://github.com/bitcoin/bips/pull/1525#issuecomment-1979297869**\r\n\r\n> I would like to propose to replace the per-item size limit with a total stack size limit that is equivalent and can be introduced as a softfork as well. Since we currently allow 1000 items of 520 bytes, I would propose a 520kB (520,000 bytes) size limit for the entire stack + altstack.\r\n> \r\n> This can be implemented as such:\r\n> \r\n> ```diff\r\n> diff --git a/src/script/interpreter.cpp b/src/script/interpreter.cpp\r\n> index 1583b5fadd3..cbe1695bab2 100644\r\n> --- a/src/script/interpreter.cpp\r\n> +++ b/src/script/interpreter.cpp\r\n> @@ -545,8 +545,6 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\r\n>                          return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n>                      valtype& vch1 = stacktop(-2);\r\n>                      valtype& vch2 = stacktop(-1);\r\n> -                    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE)\r\n> -                        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n>                      vch1.insert(vch1.end(), vch2.begin(), vch2.end());\r\n>                      stack.pop_back();\r\n>                  }\r\n> @@ -1287,8 +1285,17 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\r\n>              }\r\n> \r\n>              // Size limits\r\n> +            // limit number of elements in stacks\r\n>              if (stack.size() + altstack.size() > MAX_STACK_SIZE)\r\n>                  return set_error(serror, SCRIPT_ERR_STACK_SIZE);\r\n> +            // limit total number of bytes in stacks\r\n> +            unsigned int total_bytes = 0;\r\n> +            for (size_t i = 0; i < stack.size() ; i++)\r\n> +                total_bytes += stack[i].size();\r\n> +            for (size_t i = 0; i < altstack.size() ; i++)\r\n> +                total_bytes += altstack[i].size();\r\n> +            if (total_bytes > MAX_STACK_BYTES)\r\n> +                return set_error(serror, SCRIPT_ERR_STACK_SIZE);\r\n>          }\r\n>      }\r\n>      catch (...)\r\n> diff --git a/src/script/script.h b/src/script/script.h\r\n> index 305919f5ba4..ef40c3672ee 100644\r\n> --- a/src/script/script.h\r\n> +++ b/src/script/script.h\r\n> @@ -38,6 +38,9 @@ static const int MAX_SCRIPT_SIZE = 10000;\r\n>  // Maximum number of values on script interpreter stack\r\n>  static const int MAX_STACK_SIZE = 1000;\r\n> \r\n> +// Maximum number of total bytes on script interpreter stack\r\n> +static const int MAX_STACK_BYTES = 520000; // 520 * 1000\r\n> +\r\n>  // Threshold for nLockTime: below this value it is interpreted as block number,\r\n>  // otherwise as UNIX timestamp.\r\n>  static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\r\n> ```\r\n\r\nThis seems to require checking the size limit after every opcode is computed, and it might not be scalable. I think this may need to be left to a different PR. Calculating the delta and only updating the delta is possible, but it would need to change the implementation a lot. ",
      "user": {
        "login": "weikengchen",
        "id": 14937807,
        "node_id": "MDQ6VXNlcjE0OTM3ODA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/14937807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weikengchen",
        "html_url": "https://github.com/weikengchen",
        "followers_url": "https://api.github.com/users/weikengchen/followers",
        "following_url": "https://api.github.com/users/weikengchen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/weikengchen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/weikengchen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/weikengchen/subscriptions",
        "organizations_url": "https://api.github.com/users/weikengchen/orgs",
        "repos_url": "https://api.github.com/users/weikengchen/repos",
        "events_url": "https://api.github.com/users/weikengchen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/weikengchen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2035406050",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "commented",
      "id": 2036189611,
      "node_id": "IC_kwDOAN28mc55Xcmr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2036189611",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-04T04:54:51Z",
      "updated_at": "2024-04-04T04:55:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I would like to propose to replace the per-item size limit with a total stack size limit that is equivalent and can be introduced as a softfork as well. Since we currently allow 1000 items of 520 bytes, I would propose a 520kB (520,000 bytes) size limit for the entire stack + altstack.\r\n\r\nConsider the following script:\r\n\r\n```\r\n\"1234567\" DUP CAT 8 CAT\r\nDUP CAT DUP CAT DUP CAT DUP CAT DUP CAT DUP CAT DUP CAT\r\nDUP CAT DUP CAT DUP CAT DUP CAT DUP CAT DUP CAT DUP CAT\r\n\r\n1 SHA256 OVER CAT SHA256\r\n[ OVER CAT SHA256 ] * 130000\r\nCAT SHA256\r\n```\r\n\r\nIt constructs a ~246kB string on the stack consisting of lots of repeats of \"123456712345678\", then repeatedly concatenates that string to a sha256 hash, using the hash of the result as the new sha256 hash. Doing this 130k times means you're hashing about 32GB of data despite never having more than about 492kB on the stack in total, while still fitting in a standard tx with less than 400k weight units. For comparsion, constraining each stack element to being 520 bytes limits the total amount hashed to under 208MB for any standard transaction.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2036189611",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGY4YWQ2ZWRlNTc1M2I1MWJmZDhhNzgyZjdkZTZkNzRhN2UwNmNkOTU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
      "tree": {
        "sha": "7c9140f1007170417196bf530a2720c4d0f9af07",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/7c9140f1007170417196bf530a2720c4d0f9af07"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7c9140f1007170417196bf530a2720c4d0f9af07\nparent c235aa493933dfff82ef3ba46a5e56eecb80d3c6\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1712926134 -0400\ncommitter GitHub <noreply@github.com> 1712926134 -0400\n\nChanges OP_CAT BIP based on feedback given by Bob Summerwill\n\nBob Summerwill proposed a number of changes to the OP_CAT BIP to better follow BIP-2. This commit makes these changes:\r\n\r\n* Using the section order specified in BIP-2\r\n* Adding a Rationale section\r\n* Expand the specification section by moving details from the abstract into the specification\r\n\r\nAdditionally this commit as rewords some confusing language.\r\n\r\nThanks Bob",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmGS22CRC1aQ7uu5UhlAAA1D4QAFbB+oSG2eKKid8tiNNvltjA\n9TNIOAnkM6MLmPPbYhD0J5s+P+AIX0eEBgIJxne5rgURf1JcG+JQylnlNoYr7y9T\nGj/YoVOmWO1keWhh1EI/XwWTuJ7IwVRDbuETzOXfK1VYyrcQ4vyJZhDR/UsBmhwd\n1crH7XbvNUPhFnRmj8YCyXpcCWQ6yvdh2hqfNpdIrsXYV2DMafKz+wEu+H61C9J6\nmahEKlOWoCPRQp7PmEEQBxjC/tVLtxy79M3h7J99RFP54DQHU2iAPaJE5Gw9kuT+\nQMgwoGf6UguXaj1wy3aMJl2LO2me3VoeJepwH5BLgvfjGSDfYPa32B+60q42r7Tx\n10YitdD/2S+cRcMv71Y2XuOMCO/1UGmF8/KmeFrwIiANwagIRVdN4oAduUecbhmh\ngejDzvmUUrBth49N/6btClWHJqFeNSjVvfBkofHdPRbhTWHtDuBIllnP9eSCKoLO\nVYGRjZM76bYR0bz/9CQxYAUoaHYpFy9vg6Fc4qaTDFtuh6NA9YROCcJeQlmGp39A\nnA4Ora8Dr0lJxK4FmNlYkkAEtxvj41fVY6JhDQHGE5oH2wNafavMy/N8pLN35+Fe\nsB3EINuFudF7flJtEMk5CE0kgAXZg/JWV/S2zT6H+9xZPIwNHoOMSESsFanimlwV\nV8MjgPR5kVnRiUdLMPJD\n=L+Nx\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c235aa493933dfff82ef3ba46a5e56eecb80d3c6",
          "sha": "c235aa493933dfff82ef3ba46a5e56eecb80d3c6",
          "html_url": "https://github.com/bitcoin/bips/commit/c235aa493933dfff82ef3ba46a5e56eecb80d3c6"
        }
      ],
      "message": "Changes OP_CAT BIP based on feedback given by Bob Summerwill\n\nBob Summerwill proposed a number of changes to the OP_CAT BIP to better follow BIP-2. This commit makes these changes:\r\n\r\n* Using the section order specified in BIP-2\r\n* Adding a Rationale section\r\n* Expand the specification section by moving details from the abstract into the specification\r\n\r\nAdditionally this commit as rewords some confusing language.\r\n\r\nThanks Bob",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-12T12:48:54Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-12T12:48:54Z"
      },
      "sha": "f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95"
    },
    {
      "event": "reviewed",
      "id": 2004771971,
      "node_id": "PRR_kwDOAN28mc53fmSD",
      "url": null,
      "actor": null,
      "commit_id": "f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-2004771971",
      "submitted_at": "2024-04-17T00:07:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "comment_deleted",
      "id": 12513387457,
      "node_id": "CDE_lADOAN28mc55ZYRfzwAAAALp2yPB",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12513387457",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-17T19:50:41Z"
    },
    {
      "event": "commented",
      "id": 2075518532,
      "node_id": "IC_kwDOAN28mc57teZE",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2075518532",
      "actor": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T17:54:17Z",
      "updated_at": "2024-04-24T17:54:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Assigned BIP 347. ",
      "user": {
        "login": "Roasbeef",
        "id": 998190,
        "node_id": "MDQ6VXNlcjk5ODE5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/998190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Roasbeef",
        "html_url": "https://github.com/Roasbeef",
        "followers_url": "https://api.github.com/users/Roasbeef/followers",
        "following_url": "https://api.github.com/users/Roasbeef/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Roasbeef/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Roasbeef/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Roasbeef/subscriptions",
        "organizations_url": "https://api.github.com/users/Roasbeef/orgs",
        "repos_url": "https://api.github.com/users/Roasbeef/repos",
        "events_url": "https://api.github.com/users/Roasbeef/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Roasbeef/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2075518532",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "commented",
      "id": 2075573667,
      "node_id": "IC_kwDOAN28mc57tr2j",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2075573667",
      "actor": {
        "login": "delbonis",
        "id": 40217761,
        "node_id": "MDQ6VXNlcjQwMjE3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/40217761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/delbonis",
        "html_url": "https://github.com/delbonis",
        "followers_url": "https://api.github.com/users/delbonis/followers",
        "following_url": "https://api.github.com/users/delbonis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/delbonis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/delbonis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/delbonis/subscriptions",
        "organizations_url": "https://api.github.com/users/delbonis/orgs",
        "repos_url": "https://api.github.com/users/delbonis/repos",
        "events_url": "https://api.github.com/users/delbonis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/delbonis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T18:27:31Z",
      "updated_at": "2024-04-24T18:27:31Z",
      "author_association": "NONE",
      "body": "Does this mean we can also formally propose OP_{LEFT,RIGHT,SUBSTR} now too? :heart_eyes: ",
      "user": {
        "login": "delbonis",
        "id": 40217761,
        "node_id": "MDQ6VXNlcjQwMjE3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/40217761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/delbonis",
        "html_url": "https://github.com/delbonis",
        "followers_url": "https://api.github.com/users/delbonis/followers",
        "following_url": "https://api.github.com/users/delbonis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/delbonis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/delbonis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/delbonis/subscriptions",
        "organizations_url": "https://api.github.com/users/delbonis/orgs",
        "repos_url": "https://api.github.com/users/delbonis/repos",
        "events_url": "https://api.github.com/users/delbonis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/delbonis/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2075573667",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "commented",
      "id": 2075582151,
      "node_id": "IC_kwDOAN28mc57tt7H",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2075582151",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T18:32:43Z",
      "updated_at": "2024-04-24T18:32:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "@delbonis anybody can propose anything formally, by running through the process of creating a proposal, soliciting input on the mailing list, etc.\r\n\r\nBut the three opcodes you mention can be fairly-cheaply emulated using CAT, and have fewer direct usecases, so it may not be a productive direction to pursue.",
      "user": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2075582151",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 12596484195,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAALuzxhj",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12596484195",
      "actor": {
        "login": "delbonis",
        "id": 40217761,
        "node_id": "MDQ6VXNlcjQwMjE3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/40217761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/delbonis",
        "html_url": "https://github.com/delbonis",
        "followers_url": "https://api.github.com/users/delbonis/followers",
        "following_url": "https://api.github.com/users/delbonis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/delbonis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/delbonis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/delbonis/subscriptions",
        "organizations_url": "https://api.github.com/users/delbonis/orgs",
        "repos_url": "https://api.github.com/users/delbonis/repos",
        "events_url": "https://api.github.com/users/delbonis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/delbonis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T18:32:45Z"
    },
    {
      "event": "subscribed",
      "id": 12596484211,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAALuzxhz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12596484211",
      "actor": {
        "login": "delbonis",
        "id": 40217761,
        "node_id": "MDQ6VXNlcjQwMjE3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/40217761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/delbonis",
        "html_url": "https://github.com/delbonis",
        "followers_url": "https://api.github.com/users/delbonis/followers",
        "following_url": "https://api.github.com/users/delbonis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/delbonis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/delbonis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/delbonis/subscriptions",
        "organizations_url": "https://api.github.com/users/delbonis/orgs",
        "repos_url": "https://api.github.com/users/delbonis/repos",
        "events_url": "https://api.github.com/users/delbonis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/delbonis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T18:32:45Z"
    },
    {
      "event": "commented",
      "id": 2075886929,
      "node_id": "IC_kwDOAN28mc57u4VR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2075886929",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T21:33:50Z",
      "updated_at": "2024-04-24T21:33:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "LEFT/RIGHT/SUBSTR/SPLIT etc are actually a bit nicer in some ways than CAT because they only create same size or smaller elements on the stack, forgoing the concerns of max element size / working seamlessly if the element size should ever be changed to allow larger.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2075886929",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "commented",
      "id": 2075999950,
      "node_id": "IC_kwDOAN28mc57vT7O",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2075999950",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T22:59:54Z",
      "updated_at": "2024-04-24T22:59:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Please keep comments focused on technical review of the proposal -- thanks.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2075999950",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "comment_deleted",
      "id": 12599037536,
      "node_id": "CDE_lADOAN28mc55ZYRfzwAAAALu9g5g",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12599037536",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T23:00:04Z"
    },
    {
      "event": "comment_deleted",
      "id": 12599038616,
      "node_id": "CDE_lADOAN28mc55ZYRfzwAAAALu9hKY",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12599038616",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T23:00:12Z"
    },
    {
      "event": "comment_deleted",
      "id": 12599039168,
      "node_id": "CDE_lADOAN28mc55ZYRfzwAAAALu9hTA",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12599039168",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T23:00:17Z"
    },
    {
      "event": "commented",
      "id": 2076127071,
      "node_id": "IC_kwDOAN28mc57vy9f",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2076127071",
      "actor": {
        "login": "weikengchen",
        "id": 14937807,
        "node_id": "MDQ6VXNlcjE0OTM3ODA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/14937807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weikengchen",
        "html_url": "https://github.com/weikengchen",
        "followers_url": "https://api.github.com/users/weikengchen/followers",
        "following_url": "https://api.github.com/users/weikengchen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/weikengchen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/weikengchen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/weikengchen/subscriptions",
        "organizations_url": "https://api.github.com/users/weikengchen/orgs",
        "repos_url": "https://api.github.com/users/weikengchen/repos",
        "events_url": "https://api.github.com/users/weikengchen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/weikengchen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T01:11:21Z",
      "updated_at": "2024-04-25T01:13:03Z",
      "author_association": "NONE",
      "body": "@delbonis @JeremyRubin Re: OP_LEFT/RIGHT/SUBSTR \r\n\r\nThere are still values in OP_LEFT/RIGHT/SUBSTR. To emulate them with OP_CAT, one needs to provide a hint, and this takes space in the witness stack / input stack. This is inconvenient because the witness stack can have at most 1000 elements. \r\n\r\nIn our practice with Merkle trees for STARK proof verifier that uses OP_CAT, for each layer, we need to provide a sibling element. A standard transaction only prefers binary Merkle tree. And therefore, there are log_{2} n elements that we need to push in the witness stack. (nonstandard transaction is an easier situation, which allows log_{16} n) OP_LEFT/RIGHT/SUBSTR, if together with a nonstandard transaction, can allow one to pack elements compactly to save stack space.\r\n\r\nHere is the related codebase: https://github.com/Bitcoin-Wildlife-Sanctuary/bitcoin-circle-stark?tab=readme-ov-file#performance\r\n\r\nBut I think people can agree that bringing back OP_SUBSTR is enough. This allows us to save other successful opcodes for other purposes.\r\n\r\nThat said, this is not related to the OP_CAT BIP discussion, and may be better discussed in other venues. ",
      "user": {
        "login": "weikengchen",
        "id": 14937807,
        "node_id": "MDQ6VXNlcjE0OTM3ODA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/14937807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weikengchen",
        "html_url": "https://github.com/weikengchen",
        "followers_url": "https://api.github.com/users/weikengchen/followers",
        "following_url": "https://api.github.com/users/weikengchen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/weikengchen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/weikengchen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/weikengchen/subscriptions",
        "organizations_url": "https://api.github.com/users/weikengchen/orgs",
        "repos_url": "https://api.github.com/users/weikengchen/repos",
        "events_url": "https://api.github.com/users/weikengchen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/weikengchen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2076127071",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 12599788999,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAALvAYXH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12599788999",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T01:11:22Z"
    },
    {
      "event": "subscribed",
      "id": 12599789003,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAALvAYXL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12599789003",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T01:11:22Z"
    },
    {
      "event": "mentioned",
      "id": 12599789011,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAALvAYXT",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12599789011",
      "actor": {
        "login": "delbonis",
        "id": 40217761,
        "node_id": "MDQ6VXNlcjQwMjE3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/40217761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/delbonis",
        "html_url": "https://github.com/delbonis",
        "followers_url": "https://api.github.com/users/delbonis/followers",
        "following_url": "https://api.github.com/users/delbonis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/delbonis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/delbonis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/delbonis/subscriptions",
        "organizations_url": "https://api.github.com/users/delbonis/orgs",
        "repos_url": "https://api.github.com/users/delbonis/repos",
        "events_url": "https://api.github.com/users/delbonis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/delbonis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T01:11:22Z"
    },
    {
      "event": "subscribed",
      "id": 12599789018,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAALvAYXa",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12599789018",
      "actor": {
        "login": "delbonis",
        "id": 40217761,
        "node_id": "MDQ6VXNlcjQwMjE3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/40217761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/delbonis",
        "html_url": "https://github.com/delbonis",
        "followers_url": "https://api.github.com/users/delbonis/followers",
        "following_url": "https://api.github.com/users/delbonis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/delbonis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/delbonis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/delbonis/subscriptions",
        "organizations_url": "https://api.github.com/users/delbonis/orgs",
        "repos_url": "https://api.github.com/users/delbonis/repos",
        "events_url": "https://api.github.com/users/delbonis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/delbonis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T01:11:22Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZjNzI5YzRiNDE4MDA2ZGVmNzhjYWFkMGQ5MjFmMTg0MWM0ZGIxZWU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6c729c4b418006def78caad0d921f1841c4db1ee",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6c729c4b418006def78caad0d921f1841c4db1ee",
      "tree": {
        "sha": "dd48c9c1b228a797b96c7fb32b7595d194cd0e66",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/dd48c9c1b228a797b96c7fb32b7595d194cd0e66"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
          "sha": "f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
          "html_url": "https://github.com/bitcoin/bips/commit/f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95"
        }
      ],
      "message": "Renamed to use BIP-0347",
      "committer": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-25T17:03:00Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-25T17:03:00Z"
      },
      "sha": "6c729c4b418006def78caad0d921f1841c4db1ee"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDBhMzg2OWQxMDIxYmZjMGU0YzVlODc3OWQxZmYzM2ZlNjc4NDZhZjg",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0a3869d1021bfc0e4c5e8779d1ff33fe67846af8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/0a3869d1021bfc0e4c5e8779d1ff33fe67846af8",
      "tree": {
        "sha": "d5063c7554438ae18dcd9aa6ce04089c4d4d4cfb",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/d5063c7554438ae18dcd9aa6ce04089c4d4d4cfb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d5063c7554438ae18dcd9aa6ce04089c4d4d4cfb\nparent 6c729c4b418006def78caad0d921f1841c4db1ee\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714065415 -0400\ncommitter GitHub <noreply@github.com> 1714065415 -0400\n\nFixes comment URI",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmKpAHCRC1aQ7uu5UhlAAArKgQAHb6JsYqlFD/LCVKx3PNjMkB\nVinHsgCQ6hciRTz33+iLdbfiOmz/6TbXRneAag85lxmrFRZBA5X0G3T69tx8k2PR\n/5DuO6Y3b7eF9l9i5rMMtzK/KqaR9L1YbQ9NfblXY6zeRRJW1X3ksXqs3QO+jg1R\n7sLaS1RExDwnFqW7VffxIbUwIWMZvMCEY0xTP0AEnTjL9uFjR3w6DqOW3rq9rSZF\nKj598OrJF5aDFa/0OyENknFbYXaa3cAPWEOgQ5us3rZ3a+O9/UYxvXu0PkQGrRbt\nqAy+czSmVfqionRNSF8t/t7TUcrkESnb4p2SgdE5Fojt5QqdCI5Axx+4yYM2lJC7\nTQ8SwKTbpt4aXKqioKrdwmhHNznVrYMuyIPvkK1/ryVc0t0dS4oc/T7Z/KuEWU8P\nsx90y1pwJHeeOdsQ408KCqNeO4C1lQOvLP0QHkro2zT6m6KvAIi//eK2u0SHVUsG\novF9vvRWZuvdCfvikukUOiPnpdtEEVCkEe0luy7Y16q2eyq+Y3LY9mmJ8VntMQT2\nXdcxqkZysvCEOFCY99YeeDL+uGAbYsOlCXMl+yvMW7sIJv0WKgphhCV2kMupLGrc\n1QqtSEuhgElbuTFFacCboY0bTer5fkYMTMXXtR2ioVxfab7crVROAFh1OvQhG2aZ\nxALFKjCNdvw8D0SugTNo\n=4BKa\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6c729c4b418006def78caad0d921f1841c4db1ee",
          "sha": "6c729c4b418006def78caad0d921f1841c4db1ee",
          "html_url": "https://github.com/bitcoin/bips/commit/6c729c4b418006def78caad0d921f1841c4db1ee"
        }
      ],
      "message": "Fixes comment URI",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-25T17:16:55Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-25T17:16:55Z"
      },
      "sha": "0a3869d1021bfc0e4c5e8779d1ff33fe67846af8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDdlZDhmNmYzOGM2N2VkZTMwZTM4MTE0NjMyYjNmYTZiYmUzOTY4MDA",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/7ed8f6f38c67ede30e38114632b3fa6bbe396800",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/7ed8f6f38c67ede30e38114632b3fa6bbe396800",
      "tree": {
        "sha": "840c3c9711905309e985a990e6db1c1ef08e39f2",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/840c3c9711905309e985a990e6db1c1ef08e39f2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 840c3c9711905309e985a990e6db1c1ef08e39f2\nparent 0a3869d1021bfc0e4c5e8779d1ff33fe67846af8\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714066944 -0400\ncommitter GitHub <noreply@github.com> 1714066944 -0400\n\nBetter quantum resistant section based Tim's comments\n\nAdds additional acks",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmKpYACRC1aQ7uu5UhlAAAF24QAE12GqzWfwkSNtuoXucZoi+4\n/Ld912YREt3hfjryZPwISoW2pGaHQYfl/tA3/fUno1DMcsima8WhQKHkGFVsm96r\nbIVBpMvgFomauadT04LBNm7kNDdcC2JYUnqENhodtQnUR24QJK/ZI/3c6H6ADG4/\nVIMg4CoXgEoP+CiNhuGTiXZmdFR/YHMD++NbuLIf7RWGiEtoS9nMOUIkXymN215Q\neMncQWAbK0D5RNEkwe6ukfa18d4d1j3muNn5QNX8eE+b67Cwja9a3gpAviv5Wkh3\nBgXTOO4Z980IjZGD6iJJRXx7nR+mXIUiYBG42pfXhxLot80nt8z1wU5JkVB7NKh0\nzLKVGC+w0Po6+HrHvg1/bdihw57JraW8p/roTL9uVSc/78o4NtWSCuSpgIDSks6K\nl6IbH9pJbJfUbG7nHubt3ZhhwuU1mbALPLz3eBXb2Pdbsquxw/1s0gxuwST7vHo+\nyn+nRJpwfrY35JGNVhZYgSCpw4p86w+LjvuEcghoDD4Day+OoHUYJrgi2XidyDzK\nZANpsavM0XMlbRbRB0nr9bJetMMCRRZ8OQDJreR6pMQ2jQJZzQsmxTo/zQhBAl04\nJ3Q8DEX0xu1PjmOXdJbHyGozzKsCAErDei7J2rNPCevaIL6aIPfPlYiVnl2i+N0P\nwp9DHpfPt3waDwERJ/ti\n=o4Z7\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0a3869d1021bfc0e4c5e8779d1ff33fe67846af8",
          "sha": "0a3869d1021bfc0e4c5e8779d1ff33fe67846af8",
          "html_url": "https://github.com/bitcoin/bips/commit/0a3869d1021bfc0e4c5e8779d1ff33fe67846af8"
        }
      ],
      "message": "Better quantum resistant section based Tim's comments\n\nAdds additional acks",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-25T17:42:24Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-25T17:42:24Z"
      },
      "sha": "7ed8f6f38c67ede30e38114632b3fa6bbe396800"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDg1MjUwMmI5Y2YwNTY4ZGM0Yzc1ZDkzYWFhYWVlM2QxMDIwMDJlYzc",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "tree": {
        "sha": "f510876bc8364e489b75b406bddb8d6de322d5f2",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f510876bc8364e489b75b406bddb8d6de322d5f2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f510876bc8364e489b75b406bddb8d6de322d5f2\nparent 7ed8f6f38c67ede30e38114632b3fa6bbe396800\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714091572 -0400\ncommitter GitHub <noreply@github.com> 1714091572 -0400\n\nSpecifies exact tree signature limit (suggested by Ali Sherief)",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmKvY0CRC1aQ7uu5UhlAAArTQQACDDaADFoIRPNMJXmysJfp8E\nVLfW7f2p4jqMk8x8bBbBt4r2pREENqIZ5OfMDrqHmP/5UTPKuT8tC1KccxGPmIr2\n4Eela0iXhoIaIL1+bqFmFfnuWS9KrYPvtTdopk8Z/hAn8DIN5Wga44C1nexhFPc2\niuSue563LgBnM2562JDkFXr1DmorJmMG071j/Dp6nX6yPYFzO2H98udiDzSSTnid\nMfaLdx5gjuby92ibK2TG814JHoi56ZhAK2bbO78E9bkpoZyQJhDyb41ZHJsmq/fQ\n3NH7/SMuytrEesrZtt4yM0Kqe40VSnSCb6gsnasdu00rTGy947ls2pgHM3qc+feS\nneO9rtI3pwAmXWv9CLSoQxf/jgFbyenO3d6IzcbO+AFNGjD72kE0FC1cldAtbhnH\nAg8QzTFbeMCiQoGJ4GL9jWHZ/9a6GLeqP0CKvbdp/2u7BK6dZn/MlIqZfj8d2sH2\nPggb8XPcLn70n/31g0WR0TJY/XPxromDU1oUIIRvqRmocyDKPix7Ei7b+FhGmFkw\npF5gvMs3PBSXI9oGLKiMjHZbzL5dokiQbNKwg+FdjAnnkzQcouKSaMOmUC9TT+qG\nQrf3ZOrYdp2DG3tkWlV10Y41+yUGyIw/9k0X/w0GUPPR2JMAzwVb+uqXov4dr8TX\nm1PKBscU1lG+5msh9Uny\n=+okj\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/7ed8f6f38c67ede30e38114632b3fa6bbe396800",
          "sha": "7ed8f6f38c67ede30e38114632b3fa6bbe396800",
          "html_url": "https://github.com/bitcoin/bips/commit/7ed8f6f38c67ede30e38114632b3fa6bbe396800"
        }
      ],
      "message": "Specifies exact tree signature limit (suggested by Ali Sherief)",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-26T00:32:52Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-26T00:32:52Z"
      },
      "sha": "852502b9cf0568dc4c75d93aaaaee3d102002ec7"
    },
    {
      "event": "commented",
      "id": 2079337423,
      "node_id": "IC_kwDOAN28mc578CvP",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2079337423",
      "actor": {
        "login": "OminousPeace",
        "id": 140734521,
        "node_id": "U_kgDOCGNwOQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/140734521?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OminousPeace",
        "html_url": "https://github.com/OminousPeace",
        "followers_url": "https://api.github.com/users/OminousPeace/followers",
        "following_url": "https://api.github.com/users/OminousPeace/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/OminousPeace/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/OminousPeace/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/OminousPeace/subscriptions",
        "organizations_url": "https://api.github.com/users/OminousPeace/orgs",
        "repos_url": "https://api.github.com/users/OminousPeace/repos",
        "events_url": "https://api.github.com/users/OminousPeace/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/OminousPeace/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T12:55:10Z",
      "updated_at": "2024-04-26T12:55:10Z",
      "author_association": "NONE",
      "body": "Could you point me toward where i can learn more about the stack size limit referred? I'm not technically savvy enough to catch how the 520 bytes stack limit is imposed on OP_CAT operation when there are no mention of the rationale in the commit. Is it enforced by tapscript?  @EthanHeilman thank you\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "user": {
        "login": "OminousPeace",
        "id": 140734521,
        "node_id": "U_kgDOCGNwOQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/140734521?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OminousPeace",
        "html_url": "https://github.com/OminousPeace",
        "followers_url": "https://api.github.com/users/OminousPeace/followers",
        "following_url": "https://api.github.com/users/OminousPeace/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/OminousPeace/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/OminousPeace/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/OminousPeace/subscriptions",
        "organizations_url": "https://api.github.com/users/OminousPeace/orgs",
        "repos_url": "https://api.github.com/users/OminousPeace/repos",
        "events_url": "https://api.github.com/users/OminousPeace/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/OminousPeace/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2079337423",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 12623512410,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAALwa4Na",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12623512410",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T12:55:12Z"
    },
    {
      "event": "subscribed",
      "id": 12623512420,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAALwa4Nk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12623512420",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T12:55:12Z"
    },
    {
      "event": "commented",
      "id": 2079536134,
      "node_id": "IC_kwDOAN28mc578zQG",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2079536134",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T14:43:53Z",
      "updated_at": "2024-04-26T14:53:11Z",
      "author_association": "NONE",
      "body": "Thanks for your question!\r\n\r\n> Could you point me toward where i can learn more about the stack size limit referred? @OminousPeace\r\n\r\n In the OP_CAT reference implementation in BIP-347:\r\n \r\n ```cpp\r\n case OP_CAT:\r\n{\r\n  if (stack.size() < 2)\r\n    return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n  valtype& vch1 = stacktop(-2);\r\n  valtype& vch2 = stacktop(-1);\r\n  if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE)\r\n    return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\r\n  vch1.insert(vch1.end(), vch2.begin(), vch2.end());\r\n  stack.pop_back();\r\n}\r\nbreak;\r\n```\r\n \r\nWe check that their are sufficient elements on the stack:\r\n\r\n ```cpp\r\n   if (stack.size() < 2)\r\n    return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n```\r\n\r\nThen we check that the CAT operation will not create a stack element larger than the max stack element:\r\n\r\n```cpp\r\n  if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE)\r\n    return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\r\n```\r\n\r\n`MAX_SCRIPT_ELEMENT_SIZE` is [defined as 520 (bytes) in bitcoin-core](https://github.com/bitcoin/bitcoin/blob/2eff198f4900c34442439ef2cbd9d82f4903f915/src/script/script.h#L26-L27). \r\n\r\n```cpp\r\n// Maximum number of bytes pushable to the stack\r\nstatic const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520;\r\n```\r\n\r\nOP_CAT is neutral with regard to the total size of stack because it joins two elements together which were already on the stack. That is, an OP_CAT operation should never increase or decrease the total size of stack in bytes. \r\n\r\nFor running code see [our implementation of OP_CAT in bitcoin-inquisition](https://github.com/bitcoin-inquisition/bitcoin/blob/45e7722e14ad27636f1e143081d856253fc9e487/src/script/interpreter.cpp#L543-L554).\r\n\r\n> Is it enforced by tapscript?\r\n\r\nBoth script and tapscript enforce the element stack size limit and the total stack size limit when a OP_PUSH occurs. OP_CAT like any other opcode which pushes data on the stack, must also ensure that it does not violate this limit, which is why returns an error if it would push an element greater than the maximum stack element size (520).\r\n\r\n### Rationale\r\n\r\nWe do provide a rationale for why we don't alter bitcoin consensus to increase the stack element size limit in the rationale section of the BIP.\r\n\r\nDid that answer your question?\r\n\r\n\r\n",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2079536134",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "mentioned",
      "id": 12624838490,
      "node_id": "MEE_lADOAN28mc55ZYRfzwAAAALwf79a",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12624838490",
      "actor": {
        "login": "OminousPeace",
        "id": 140734521,
        "node_id": "U_kgDOCGNwOQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/140734521?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OminousPeace",
        "html_url": "https://github.com/OminousPeace",
        "followers_url": "https://api.github.com/users/OminousPeace/followers",
        "following_url": "https://api.github.com/users/OminousPeace/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/OminousPeace/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/OminousPeace/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/OminousPeace/subscriptions",
        "organizations_url": "https://api.github.com/users/OminousPeace/orgs",
        "repos_url": "https://api.github.com/users/OminousPeace/repos",
        "events_url": "https://api.github.com/users/OminousPeace/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/OminousPeace/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T14:43:54Z"
    },
    {
      "event": "subscribed",
      "id": 12624838512,
      "node_id": "SE_lADOAN28mc55ZYRfzwAAAALwf79w",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12624838512",
      "actor": {
        "login": "OminousPeace",
        "id": 140734521,
        "node_id": "U_kgDOCGNwOQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/140734521?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/OminousPeace",
        "html_url": "https://github.com/OminousPeace",
        "followers_url": "https://api.github.com/users/OminousPeace/followers",
        "following_url": "https://api.github.com/users/OminousPeace/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/OminousPeace/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/OminousPeace/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/OminousPeace/subscriptions",
        "organizations_url": "https://api.github.com/users/OminousPeace/orgs",
        "repos_url": "https://api.github.com/users/OminousPeace/repos",
        "events_url": "https://api.github.com/users/OminousPeace/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/OminousPeace/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T14:43:54Z"
    },
    {
      "event": "reviewed",
      "id": 2025285797,
      "node_id": "PRR_kwDOAN28mc54t2il",
      "url": null,
      "actor": null,
      "commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looks mostly good to me. I have some suggestions for the Motivation section and the Backwards Compatibility section and I would suggest adding links to discussions about the proposal",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-2025285797",
      "submitted_at": "2024-04-26T17:07:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGMxMDg3MGEzOTBhNzE0MWViMjIzZWQ4MTQxY2FiNDg2NjgyMzk1MzY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c10870a390a7141eb223ed8141cab48668239536",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/c10870a390a7141eb223ed8141cab48668239536",
      "tree": {
        "sha": "b89b5595bf43a732f004b566b047a66635f34e9e",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b89b5595bf43a732f004b566b047a66635f34e9e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b89b5595bf43a732f004b566b047a66635f34e9e\nparent 852502b9cf0568dc4c75d93aaaaee3d102002ec7\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714154368 -0400\ncommitter GitHub <noreply@github.com> 1714154368 -0400\n\nAdds comma\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmK+uACRC1aQ7uu5UhlAAARl8QACqhT2nzWsRzCS19h2KkFagv\nu5CgiLli60nRE8zZVomdNISYbAZmKOiS+rok2KcbybjxlOpiOG15V0DVMZI5cyre\nvdaRSLQiQn+pkWIgCiVDH2ZKWCqR19pNnQi40TyTRxG7SZvVBpuYb/uSCliCHVL1\nMm1jxctW8WDPiOMwkQJVPNypmqHdzWqCee2OPPfoCF3pnU53DpKfLNSmWW+yTX9+\nbC0/60s8u+ZplsRlFBDNCj/Crzlf3UtwmnUET2h3f+cwp/QCqng7sr7dGwtj6pPf\nzEmovYfj9ezsgES3E9c+kFKAwEAM2fcnGYuz788jlZ1n1VfEWzaNa7zjlF8jkUYM\nprS406FjcmKVRmtYrFomFV0vFNQHuAfiCNy516HWnqM/1/fCZrVGbI4l4W9MpV+w\n8UyHWFO8HTWGIxx22klyU9KsnRL87ijMpBPq5xJmjg8vi56q6bDWeEh0smtI+o+/\nYbP26ZsRBcW8CJRscX1Es8y9SkuAqs+CCnC8/l2o4mOc6/GzKQlIjIN1pxyw5ZTG\nAdlIwhwHKFwPAS5vXBbYu67QsJS9onF49ORHBOPONuVo1klnIaWJQQcB7rHRz3e9\nlal7eEa0JjStYLaVQ/HIAHP8xQ8gpIkBBlceeTaDGzbU5YNetl/Xjk0XypAHIwMN\n9Idi0kBnHGsOzvpK/Arc\n=qkgC\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/852502b9cf0568dc4c75d93aaaaee3d102002ec7",
          "sha": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
          "html_url": "https://github.com/bitcoin/bips/commit/852502b9cf0568dc4c75d93aaaaee3d102002ec7"
        }
      ],
      "message": "Adds comma\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-26T17:59:28Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-26T17:59:28Z"
      },
      "sha": "c10870a390a7141eb223ed8141cab48668239536"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDU0MTNlMThmZDkzYzA3OGQ0YzEyZDQ4NDVhMDhiN2M5YTliMjRhZGE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5413e18fd93c078d4c12d4845a08b7c9a9b24ada",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/5413e18fd93c078d4c12d4845a08b7c9a9b24ada",
      "tree": {
        "sha": "4827217407b151e12284e96afd212affacd0fc45",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/4827217407b151e12284e96afd212affacd0fc45"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4827217407b151e12284e96afd212affacd0fc45\nparent c10870a390a7141eb223ed8141cab48668239536\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714154519 -0400\ncommitter GitHub <noreply@github.com> 1714154519 -0400\n\nConsistent formatting for Section Headings\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmK+wYCRC1aQ7uu5UhlAAAsvAQAH79pSBCm6m3LYEhm0PQJ0YU\n3m1jksGX8JBIXmswuSpJkCc8yBPnKgyC/yjKHS+KVByQW/qxo59NpSgTWm480RoX\nfi49QQUVulQx1Cu/ZZcTVEsaqBM32+MuewrImzf5GgqihCIl10IWVUfE/6j0IWgY\nIrgyAqxpqos14qTLMaaF6spmCen2ITH9ILeKxm1/aeqrNRFJH1VtZJVmS2151qyc\nRN7eHSvP70DyjGE4g3/uwBVypoS6OOAHPTFhEXrJZUrCUWHxgc8Mb9dPHHheontW\n8KkLm/30oSYGsR5SrqIa4zYVqkuyKk1D0dI8mbMPplQ3NJ7hHqCwRg0AyX5Zx3eo\nYEXfbvuQ+NTX2NK2Dtbw07oun207dyf8A0Q2I6oof4bvNM6Sk4AHmGgWiRp8Znda\n7Ax0C9mUSYwN+KpQtBrf0lHSPHwvdfxPUrYBjAqkk1FV4KbZttp1xakiDkvyxaS+\n8pRGXcdp8My3X36ZgZZBXdeFWVcVXSMj/EofqNKvJ4mJ/J8b1aHMp0IBxNZoXWPG\n+upXlwBMiQkPB9LewChxQpAIQrxOVm3YeUgQJN8pL1Wmuy5EVxC6jOsIGnR5o3rW\nqbiRuf6a2YceW9nQ5PY3vauYqfA95d8J+6iO2AXYmMaGX6JItGhHTaJ8byROO0VD\nWokXOJBS4dZk81OKRiYW\n=Z2cV\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c10870a390a7141eb223ed8141cab48668239536",
          "sha": "c10870a390a7141eb223ed8141cab48668239536",
          "html_url": "https://github.com/bitcoin/bips/commit/c10870a390a7141eb223ed8141cab48668239536"
        }
      ],
      "message": "Consistent formatting for Section Headings\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-26T18:01:59Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-26T18:01:59Z"
      },
      "sha": "5413e18fd93c078d4c12d4845a08b7c9a9b24ada"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGRiYzYxMmVkZmExMzdjZTFmMWNiY2I5ZDQwZjU4NzczNzU4MzE1YWU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/dbc612edfa137ce1f1cbcb9d40f58773758315ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/dbc612edfa137ce1f1cbcb9d40f58773758315ae",
      "tree": {
        "sha": "782092d9d861ffc63295f4d5d2ac671b7b043719",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/782092d9d861ffc63295f4d5d2ac671b7b043719"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 782092d9d861ffc63295f4d5d2ac671b7b043719\nparent 5413e18fd93c078d4c12d4845a08b7c9a9b24ada\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714154533 -0400\ncommitter GitHub <noreply@github.com> 1714154533 -0400\n\nConsistent formatting for Section Headings\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmK+wlCRC1aQ7uu5UhlAAA060QALFeCRn40qT4s7weKkAYKXkh\nYF58PkcGJ2Kd5S8FmLezqb+nPMbe0ikYhsVgwCYd0R2jMhBC4bhjpNmXkIbIpV8f\nP6KTaSr8maBqf3QPOBBoKLFZ+TLAX4U5RUN18X8gBSpQ8USCNzQjcSjINSh3Cwwb\ndYajEbCntxhb49s9W6MbPwN1yUbTMndr2Ze9kRqhtzzOh+0ztNIv8cUg/TQ9S8PN\nUWXeclTYLIjxv8D230XGAjMdzKCe1D3CYx8QgScsBD5tgkXEWo/2jmfYTLAyh2fK\n5+VtRDcZgJpF6hwlH4asu1ClNLfZo6lGZ7Dv/xJYL5L933xHTZmpx4Vw/yYssRj5\n0rS1o5ReVCN+fREhfQVPjY1zLwJnjK6B9E78Q1lPLS8cbqElyFlyxWOrWlNAqj4i\nTSXcAbifd6+HzqOAfjhrhtxZMdv1vRH+HcvsV4kjRbEewcGL3ldZtM5fHEBOUY+A\nN2lEIJriC4k8DFDK/bCT4za+56hSLCVPRgLb6Gc+Y8sSW35v5/AHyk9pG8/JXX8U\nCq3RkM3a3v7DDuyWnGzn6AGA041pBS3O8ot1XXjzy9z/doXM5jf9h9HcjTah2wSP\n9r6kGCCoDB1RYURx9vRQTQ2o+XwVib6zSJYH8iT8s3SuOrIWkDZkkRbLNE11Zo/o\n9VcXM5uu3YigkKsOEICV\n=V4Nc\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5413e18fd93c078d4c12d4845a08b7c9a9b24ada",
          "sha": "5413e18fd93c078d4c12d4845a08b7c9a9b24ada",
          "html_url": "https://github.com/bitcoin/bips/commit/5413e18fd93c078d4c12d4845a08b7c9a9b24ada"
        }
      ],
      "message": "Consistent formatting for Section Headings\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-26T18:02:13Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-26T18:02:13Z"
      },
      "sha": "dbc612edfa137ce1f1cbcb9d40f58773758315ae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGEwNTU0M2NjNTg4ZWJjYjI2NmFhMzI1MTQ3MjMyNDY3MWUzODRhZmU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/a05543cc588ebcb266aa3251472324671e384afe",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/a05543cc588ebcb266aa3251472324671e384afe",
      "tree": {
        "sha": "f8bc09d102738038205fc93bd7ef13b369109cf8",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f8bc09d102738038205fc93bd7ef13b369109cf8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f8bc09d102738038205fc93bd7ef13b369109cf8\nparent dbc612edfa137ce1f1cbcb9d40f58773758315ae\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714430664 -0400\ncommitter GitHub <noreply@github.com> 1714430664 -0400\n\nChanges title of BIP to \"Enable OP_CAT in Tapscript\"",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmMCLICRC1aQ7uu5UhlAAAeO8QAKPwf0up5odFfLyYTelvohHY\n/8iVym24phgjsN+aASW38DhzJPNA34SAnTpMAKKn6QVCYEPCCX6KDh7MaGcxfR58\nSWmgL2GE6ZW83oSNZye/5MbeG+t/W1P71Htah6jIa6W9TFlJD1GSStnMLnX+Oi7o\nx12Pd+MPqLBCGqjL/IPIPh9a5wF5r8igB7cfZT21BzyD/k95B52NBMFyV2fFcFZm\n5GVs9wbFLG2HVxBhRMkBtoI7dOv4loFpv7cN70fx9rgzvDjCRP1iivkTCsC0X9dA\nkMIZbX7vHmc/4utbc5PEmxNFn1XTsWgUz843IpoS35kajwIp0xp+xjFcq9SOomCh\nifzRUR0XIrQD3kYIE5/HQ998FES0uw5C3ZEIbunRT2JiquT76950NfbRGvWSKyoI\ncaomf6jFi+bWV+WiGVjI0j4GuC8DYsJ/ANyjsT/eKhTikyIU+eZipEO3W4y3kUgo\nVNdor1/w2UKaW7Xys+T78YaBY9EbjbboQ03qEYklwXISsrWQGXazm2btxhn0+YeV\n2aXf/GPCZGBWA0+fneUxpmPT8JCNBbY4M2lSuWwRxTkeM/i6dkh04vEfc4tTcwVz\nlGhuJwVI/MVIS0nAB0y9daO200Wpdxbcywu988DSeWnRFWBDcWpowkgP1HAkhCJv\ngq8n0cKYmhZCqLBzNmUh\n=sFo/\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/dbc612edfa137ce1f1cbcb9d40f58773758315ae",
          "sha": "dbc612edfa137ce1f1cbcb9d40f58773758315ae",
          "html_url": "https://github.com/bitcoin/bips/commit/dbc612edfa137ce1f1cbcb9d40f58773758315ae"
        }
      ],
      "message": "Changes title of BIP to \"Enable OP_CAT in Tapscript\"",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-29T22:44:24Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-29T22:44:24Z"
      },
      "sha": "a05543cc588ebcb266aa3251472324671e384afe"
    },
    {
      "event": "renamed",
      "id": 12650027068,
      "node_id": "RTE_lADOAN28mc55ZYRfzwAAAALyABg8",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12650027068",
      "actor": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T22:45:20Z",
      "rename": {
        "from": "BIP for reenabling OP_CAT",
        "to": "BIP for enabling OP_CAT in tapscript"
      }
    },
    {
      "event": "reviewed",
      "id": 2029800847,
      "node_id": "PRR_kwDOAN28mc54_E2P",
      "url": null,
      "actor": null,
      "commit_id": "a05543cc588ebcb266aa3251472324671e384afe",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#pullrequestreview-2029800847",
      "submitted_at": "2024-04-29T22:59:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDFkNTUzMDQ0M2RkNjYwZGMwOTAxNDUwNjFiYzE0NmQ0YzY0ZmZhYjM",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1d5530443dd660dc090145061bc146d4c64ffab3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/1d5530443dd660dc090145061bc146d4c64ffab3",
      "tree": {
        "sha": "e40fb1bf726c27d513a6065a730738dc1a07c25e",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/e40fb1bf726c27d513a6065a730738dc1a07c25e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e40fb1bf726c27d513a6065a730738dc1a07c25e\nparent a05543cc588ebcb266aa3251472324671e384afe\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714433786 -0400\ncommitter GitHub <noreply@github.com> 1714433786 -0400\n\nOP_CAT in Tapscript\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmMC76CRC1aQ7uu5UhlAAAn3kQAFKUUDVyPbO1SVD6hLyTPyip\nLrwNvJFoJMsqPY9e1N7NwsT+4sErDH7UoVMDJMEZSWN12/flQkdhY/KJcNOYTE6P\njWn9aGYxlkHnYk5wbU0qGuYKb0rt8mLwr3uMoeq5/LtD51Ov0JQlAoybLT7+Egk7\nVfay5rLwA40wD2x8TgTRRbYeguAX0W16JVCaEYNC5B1RqbCAqIobD2rSMZGQoI7W\n//N3Cpt+Cf704/RljEGAUh/CCGmd7AxQMTWfsYBScJ8lSIpVPPiT2Ha5sq9DHOB9\nFtXaXcB5qsVg/sHXxtALNVCxVv1vuye4MevlIfmD3T01VBNNK8knwupqS/XmCe62\nQAv8zxNcWq9mySux+X2zVYx7JdeB0tf60Tu7Gv/0P1NwkLymiCRR+hNL281SaBSd\n0/3W/CaBUQmYYCL28dOxrcNhagz67EBPg4btWDoB7D5Ka/W6pCbZ2Pes0a9Rvup4\n1CCZV79Oe8IC9zEMgGbR6xSnOER+20YgKaB5HENpO9LZDU1RrM1/OkozSKMSoOSd\nEdH6bKvuTIVfPuVVmxGR3mOoPams7Ye56pq2AwiAA+9U886Atrg+iMCvBn0nx+I9\njLVTERZnb7NGaTZ/YPwc2ZIWuojDGWB/A31vBcJZMvxxrrvf827MstMtodmlw8Ob\nHJjJB0aSKZt/XcQM9BJd\n=dXUx\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/a05543cc588ebcb266aa3251472324671e384afe",
          "sha": "a05543cc588ebcb266aa3251472324671e384afe",
          "html_url": "https://github.com/bitcoin/bips/commit/a05543cc588ebcb266aa3251472324671e384afe"
        }
      ],
      "message": "OP_CAT in Tapscript\n\nCo-authored-by: Vojtěch Strnad <43024885+vostrnad@users.noreply.github.com>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-29T23:36:26Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-29T23:36:26Z"
      },
      "sha": "1d5530443dd660dc090145061bc146d4c64ffab3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDNkNzhjYzA4ODYzODY0ZDdjYWVhODVhMjI5ZmIyMjNkZWEyNTU0MGY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3d78cc08863864d7caea85a229fb223dea25540f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/3d78cc08863864d7caea85a229fb223dea25540f",
      "tree": {
        "sha": "f76deacef79cc4c17dc2d123be873ba0e02df3c3",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f76deacef79cc4c17dc2d123be873ba0e02df3c3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f76deacef79cc4c17dc2d123be873ba0e02df3c3\nparent 1d5530443dd660dc090145061bc146d4c64ffab3\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714439055 -0400\ncommitter GitHub <noreply@github.com> 1714439055 -0400\n\nFixes typos\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmMEOPCRC1aQ7uu5UhlAAA5A4QABywxxI9W2OtMbRgKu7k+PYr\no5QVPN+d5O2kjIY7/o1q7384R1F3w8aOqlSlWQZEw10DQgM3AU0AkN36v99V4r/q\nse0XTjF6q2XVHmzOa/qdKuFD3u5qQvMuuwJOQ5Q0TQo+QJs0ywa3WCRfTc+K/2IV\nxpVPjGfRQNeAVyqwT4hH6GW7GAV9rgssFquchhOwWX5J9muAkjEcrrGXz4jMP5wm\n3oLUzPCtJSON+dRT4xy0klyUuUTM/KxI0HbgvKNNrwaLNLejpmthChB4oix4TU/s\n9WLzQsp0upfz96ewc4lpNsteQ+k7IryXokQJSJIJuZYjWnK0kWx85kVBJal/Iubh\nYNxcibU43F5eE8Eh3k6Fo2MLpDH6F0cIUb30CROceycgEFrjt9naTC08rVOmPvro\nT34n9isuuXR+n78yroM5YArKJBLL/iUAN/83hNnsud788FgVQQb/YhLy63aY0YmQ\nc2thy1EUOfO2foBXVC+BF6JQZF6bLryhwnetp3AaG86FLID1d8RvwIjAQqaRbWbS\nIPgh/TofnacLgCV/dog2qoBMPwToEZnLt27uFIp2Ks0p11Tu3GY5tLh/FovlghJS\nHWwtK4IYgiWkcYDNXQKdo8n4zi6ZODWBh/pKQMqVm7u/Wj2oMU0ENJR3A+ui3UD1\ntNbX0rLIQuIq1t4K/n/L\n=7JgV\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1d5530443dd660dc090145061bc146d4c64ffab3",
          "sha": "1d5530443dd660dc090145061bc146d4c64ffab3",
          "html_url": "https://github.com/bitcoin/bips/commit/1d5530443dd660dc090145061bc146d4c64ffab3"
        }
      ],
      "message": "Fixes typos\n\nCo-authored-by: Mark \"Murch\" Erhardt <murch@murch.one>",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-04-30T01:04:15Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-04-30T01:04:15Z"
      },
      "sha": "3d78cc08863864d7caea85a229fb223dea25540f"
    },
    {
      "event": "renamed",
      "id": 12658919004,
      "node_id": "RTE_lADOAN28mc55ZYRfzwAAAALyh8Zc",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12658919004",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T14:21:47Z",
      "rename": {
        "from": "BIP for enabling OP_CAT in tapscript",
        "to": "BIP 347: OP_CAT in Tapscript"
      }
    },
    {
      "event": "commented",
      "id": 2085465067,
      "node_id": "IC_kwDOAN28mc58Tavr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2085465067",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-30T14:22:13Z",
      "updated_at": "2024-04-30T14:54:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "I put the BIP number in the title, I hope you don’t mind. It seems to me that there are still a couple open review comments, will swing by again later to check whether it’s ready for the next round of review.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1525#issuecomment-2085465067",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1525"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDY5NmNjMTcxM2I5MzE1ODlkMDFjNTQ0ZDMwMTZmM2NmNTdiZTAwNTg",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/696cc1713b931589d01c544d3016f3cf57be0058",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/696cc1713b931589d01c544d3016f3cf57be0058",
      "tree": {
        "sha": "1cac60cc2fdbf5b3e5565fa9f69bafbd2f122a2b",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/1cac60cc2fdbf5b3e5565fa9f69bafbd2f122a2b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1cac60cc2fdbf5b3e5565fa9f69bafbd2f122a2b\nparent 3d78cc08863864d7caea85a229fb223dea25540f\nauthor Ethan Heilman <ethan.r.heilman@gmail.com> 1714526023 -0400\ncommitter GitHub <noreply@github.com> 1714526023 -0400\n\nAdds post history, fixes created date",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmMZdHCRC1aQ7uu5UhlAAA2ZEQACgG5srtFgxi2oMVrn1orE2I\n0CPyWfZbOFzwsnctE4Fb+V/P6J/mNHUaKEhXSb0SmTWIaJzlzp2lyenuUb6VxdFJ\no4+YfiZ2v+bTfi/foe/80PP9yPjITDBZQTqnYar0SvvFkvgh2+f8L4qAwZkgtIP8\nsE8jfRF2mXoZpQVkCNrq6i+yUV5vcRr4lZSJpzikAy4csA2ZDB8kRtypM7KeOP46\n95Dk4ukmAGVWLfxPEs/xgUYyv1jHD3O4C66rpxubs9bg+u2OE08R4PE+e5oGvCcM\nhoT3zzIiBLmr5esXRxakqmGT5m1PRTLdfW3GGv79M0OVudKdurOwG9ChXP8HD6wM\n4I232UhG5apGFyHEpENt5Zov49u7ir7LSZ2CmPcbyZWKFx/FxdIF0XaxRDE5BTQ1\na+/XZmn4RGWGl7sKIozFGjSr9N1Kxx8VC1UjesXySi5tMkk+aWjTSyVQLbaRboAW\nbmeSMt4IcJK/2y9/XygoK8vOEbI5n7XR/jT6DCnuVgXmev71YTGJLAbYKfmHjtiC\nNtpDs7My0ifdBce7RN+FQat/UkhWnZS/NTp5/VlxtoVNQ7uOGnYpXmsG/9u9A+jH\nI2p1ObezXYzfgw2pVcbsamr/VsUMO79Nr8fWWdKbGcXP0fH+xKnBQlxZP+jTAABd\n2nPs1aESFamFVXgn3A+P\n=3inZ\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3d78cc08863864d7caea85a229fb223dea25540f",
          "sha": "3d78cc08863864d7caea85a229fb223dea25540f",
          "html_url": "https://github.com/bitcoin/bips/commit/3d78cc08863864d7caea85a229fb223dea25540f"
        }
      ],
      "message": "Adds post history, fixes created date",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-05-01T01:13:43Z"
      },
      "author": {
        "name": "Ethan Heilman",
        "email": "ethan.r.heilman@gmail.com",
        "date": "2024-05-01T01:13:43Z"
      },
      "sha": "696cc1713b931589d01c544d3016f3cf57be0058"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423924713",
      "pull_request_review_id": 1777360806,
      "id": 1423924713,
      "node_id": "PRRC_kwDOAN28mc5U313p",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref> A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298 </ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed an 1 Byte value on the stack then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements of the stack, concatenates them together in stack order and pushes the resultant element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nOP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\r\n```",
      "created_at": "2023-12-12T12:30:37Z",
      "updated_at": "2023-12-12T12:34:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1423924713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423924713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423925177",
      "pull_request_review_id": 1777360806,
      "id": 1423925177,
      "node_id": "PRRC_kwDOAN28mc5U31-5",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref> A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298 </ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed an 1 Byte value on the stack then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements of the stack, concatenates them together in stack order and pushes the resultant element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2)\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 49,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    if (stack.size() < 2) {\r\n        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n    }\r\n```",
      "created_at": "2023-12-12T12:31:05Z",
      "updated_at": "2023-12-12T12:34:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1423925177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423925177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": 48,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423925496",
      "pull_request_review_id": 1777360806,
      "id": 1423925496,
      "node_id": "PRRC_kwDOAN28mc5U32D4",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref> A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298 </ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed an 1 Byte value on the stack then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements of the stack, concatenates them together in stack order and pushes the resultant element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2)\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE)\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 53,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\r\n        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\r\n    }\r\n```",
      "created_at": "2023-12-12T12:31:22Z",
      "updated_at": "2023-12-12T12:34:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1423925496",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423925496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423926258",
      "pull_request_review_id": 1777360806,
      "id": 1423926258,
      "node_id": "PRRC_kwDOAN28mc5U32Py",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref> A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298 </ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed an 1 Byte value on the stack then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements of the stack, concatenates them together in stack order and pushes the resultant element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2)\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE)\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. Alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 59,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\r\n```",
      "created_at": "2023-12-12T12:32:05Z",
      "updated_at": "2023-12-12T12:34:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1423926258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423926258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423992825",
      "pull_request_review_id": 1777469261,
      "id": 1423992825,
      "node_id": "PRRC_kwDOAN28mc5U4Gf5",
      "diff_hunk": "@@ -0,0 +1,89 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref> A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298 </ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed an 1 Byte value on the stack then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements of the stack, concatenates them together in stack order and pushes the resultant element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2)\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE)\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 53,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "83ca57f22268edb1ff2815085a4383ba8d1b55fe",
      "in_reply_to_id": 1423925496,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@kallewoof Thanks for the help!",
      "created_at": "2023-12-12T13:27:57Z",
      "updated_at": "2023-12-12T13:27:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1423992825",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1423992825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427494652",
      "pull_request_review_id": 1783046400,
      "id": 1427494652,
      "node_id": "PRRC_kwDOAN28mc5VFdb8",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\r\n```",
      "created_at": "2023-12-15T02:46:09Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427494652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427494652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427494976",
      "pull_request_review_id": 1783046400,
      "id": 1427494976,
      "node_id": "PRRC_kwDOAN28mc5VFdhA",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 20,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n# concatenates the popped values together,\r\n```",
      "created_at": "2023-12-15T02:46:51Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427494976",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427494976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427495138",
      "pull_request_review_id": 1783046400,
      "id": 1427495138,
      "node_id": "PRRC_kwDOAN28mc5VFdji",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 23,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nOP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\r\n```",
      "created_at": "2023-12-15T02:47:14Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427495138",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427495138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427495621",
      "pull_request_review_id": 1783046400,
      "id": 1427495621,
      "node_id": "PRRC_kwDOAN28mc5VFdrF",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 26,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nBitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\r\n```\r\n\r\n(Alternatively, \"For instance this prevents the ability to...\". Both \"For instance\" and \"many other things\" seem redundant.)",
      "created_at": "2023-12-15T02:48:14Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427495621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427495621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427496335",
      "pull_request_review_id": 1783046400,
      "id": 1427496335,
      "node_id": "PRRC_kwDOAN28mc5VFd2P",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\r\n```",
      "created_at": "2023-12-15T02:49:53Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427496335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427496335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427496713",
      "pull_request_review_id": 1783046400,
      "id": 1427496713,
      "node_id": "PRRC_kwDOAN28mc5VFd8J",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 34,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\r\n```",
      "created_at": "2023-12-15T02:50:49Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427496713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427496713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427496956",
      "pull_request_review_id": 1783046400,
      "id": 1427496956,
      "node_id": "PRRC_kwDOAN28mc5VFd_8",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref> A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298 </ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 35,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\r\n```",
      "created_at": "2023-12-15T02:51:22Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427496956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427496956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427497517",
      "pull_request_review_id": 1783046400,
      "id": 1427497517,
      "node_id": "PRRC_kwDOAN28mc5VFeIt",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP defines OP_CAT a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenate the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size of greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. For instance this prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely requires the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref> M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref> A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298 </ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed an 1 Byte value on the stack then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 38,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "3d31e5c8947bf5d2d8ba02dc22c5302085b9f91b",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nFor instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\r\n```",
      "created_at": "2023-12-15T02:52:49Z",
      "updated_at": "2023-12-15T02:54:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427497517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427497517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564110",
      "pull_request_review_id": 1783146554,
      "id": 1427564110,
      "node_id": "PRRC_kwDOAN28mc5VFuZO",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 23,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nOP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\r\n```",
      "created_at": "2023-12-15T05:30:02Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564110",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564168",
      "pull_request_review_id": 1783146554,
      "id": 1427564168,
      "node_id": "PRRC_kwDOAN28mc5VFuaI",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 26,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"Bitcoin Script\" or just \"tapscript\" are perfectly normal terms, their combination somewhat less so:\r\n```suggestion\r\nTapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\r\n```",
      "created_at": "2023-12-15T05:30:07Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564240",
      "pull_request_review_id": 1783146554,
      "id": 1427564240,
      "node_id": "PRRC_kwDOAN28mc5VFubQ",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lamport signatures in tapscript aren't actually quantum secure because the taptweak still relies on EC operations.",
      "created_at": "2023-12-15T05:30:15Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564361",
      "pull_request_review_id": 1783146554,
      "id": 1427564361,
      "node_id": "PRRC_kwDOAN28mc5VFudJ",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThe opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script whose evaluation could have memory usage exponential in the size of the script.\r\n```",
      "created_at": "2023-12-15T05:30:28Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564361",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564572",
      "pull_request_review_id": 1783146554,
      "id": 1427564572,
      "node_id": "PRRC_kwDOAN28mc5VFugc",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 38,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nFor example, a script that pushed a 1-byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 bytes.\r\n```",
      "created_at": "2023-12-15T05:30:57Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564572",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564748",
      "pull_request_review_id": 1783146554,
      "id": 1427564748,
      "node_id": "PRRC_kwDOAN28mc5VFujM",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nOP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack _[x1, x2]_, where _x2_ is at the top of the stack, OP_CAT will push _x1 || x2_ onto the stack. By _||_ we denote concatenation.\r\n```",
      "created_at": "2023-12-15T05:31:20Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564748",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564796",
      "pull_request_review_id": 1783146554,
      "id": 1427564796,
      "node_id": "PRRC_kwDOAN28mc5VFuj8",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 44,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n===Implementation===\r\n```",
      "created_at": "2023-12-15T05:31:23Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564827",
      "pull_request_review_id": 1783146554,
      "id": 1427564827,
      "node_id": "PRRC_kwDOAN28mc5VFukb",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 63,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThe value of <code>MAX_SCRIPT_ELEMENT_SIZE</code> is 520.\r\n```",
      "created_at": "2023-12-15T05:31:27Z",
      "updated_at": "2023-12-15T13:15:12Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564871",
      "pull_request_review_id": 1783146554,
      "id": 1427564871,
      "node_id": "PRRC_kwDOAN28mc5VFulH",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes\n+\n+==Notes==\n+\n+OP_CAT as it existed in the Bitcoin codebase prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefL381</ref> which disabled it.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 67,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nOP_CAT as it existed in the Bitcoin codebase prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefL381</ref> which disabled it:\r\n```\r\nAlso, perhaps have the link point to [line 94](https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefR94) where the disabling happens, as opposed to the unreachable code?",
      "created_at": "2023-12-15T05:31:37Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564911",
      "pull_request_review_id": 1783146554,
      "id": 1427564911,
      "node_id": "PRRC_kwDOAN28mc5VFulv",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes\n+\n+==Notes==\n+\n+OP_CAT as it existed in the Bitcoin codebase prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefL381</ref> which disabled it.\n+\n+<pre>\n+  // (x1 x2 -- out)\n+  if (stack.size() < 2)\n+    return false;\n+  valtype& vch1 = stacktop(-2);\n+  valtype& vch2 = stacktop(-1);\n+  vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+  stack.pop_back();\n+  if (stacktop(-1).size() > 5000)\n+    return false;\n+  }\n+</pre>\n+\n+==References==\n+\n+<references/>\n+\n+==Acknowledgements==\n+\n+We wish to acknowledge Dan Gould for encouraging and helping review this effort. \n+\n+== Copyright ==\n+This document is placed in the public domain.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 91,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The BIP header says BSD-3-Clause.",
      "created_at": "2023-12-15T05:31:42Z",
      "updated_at": "2023-12-15T05:31:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427564911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427564911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427940436",
      "pull_request_review_id": 1783898470,
      "id": 1427940436,
      "node_id": "PRRC_kwDOAN28mc5VHKRU",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 63,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564827,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is not mediawiki formatting, it is markdown.",
      "created_at": "2023-12-15T12:48:10Z",
      "updated_at": "2023-12-15T12:48:11Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427940436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427940436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427940973",
      "pull_request_review_id": 1783900459,
      "id": 1427940973,
      "node_id": "PRRC_kwDOAN28mc5VHKZt",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564748,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Original is fine IMO.",
      "created_at": "2023-12-15T12:48:49Z",
      "updated_at": "2023-12-15T12:48:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427940973",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427940973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427941449",
      "pull_request_review_id": 1783902012,
      "id": 1427941449,
      "node_id": "PRRC_kwDOAN28mc5VHKhJ",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 38,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564572,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For instance and for example mean the same thing. Original is fine, though I guess I agree 'byte' looks better uncapitalized.",
      "created_at": "2023-12-15T12:49:21Z",
      "updated_at": "2023-12-15T12:49:21Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427941449",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427941449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427941800",
      "pull_request_review_id": 1783903224,
      "id": 1427941800,
      "node_id": "PRRC_kwDOAN28mc5VHKmo",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 37,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564361,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Slightly like the change over original but both are fine IMO.",
      "created_at": "2023-12-15T12:49:46Z",
      "updated_at": "2023-12-15T12:49:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427941800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427941800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427942352",
      "pull_request_review_id": 1783904979,
      "id": 1427942352,
      "node_id": "PRRC_kwDOAN28mc5VHKvQ",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 26,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564168,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the original is fine.",
      "created_at": "2023-12-15T12:50:23Z",
      "updated_at": "2023-12-15T12:50:24Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427942352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427942352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427942879",
      "pull_request_review_id": 1783906926,
      "id": 1427942879,
      "node_id": "PRRC_kwDOAN28mc5VHK3f",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 23,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564110,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Original fine. Tiny preference for the uncapitalized 'bytes' too, though.",
      "created_at": "2023-12-15T12:51:03Z",
      "updated_at": "2023-12-15T12:51:03Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427942879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427942879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427964078",
      "pull_request_review_id": 1783976434,
      "id": 1427964078,
      "node_id": "PRRC_kwDOAN28mc5VHQCu",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 63,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564827,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My bad, corrected.",
      "created_at": "2023-12-15T13:15:08Z",
      "updated_at": "2023-12-15T13:15:08Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427964078",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427964078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427970160",
      "pull_request_review_id": 1783996379,
      "id": 1427970160,
      "node_id": "PRRC_kwDOAN28mc5VHRhw",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 23,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564110,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've yet to find a source claiming the capitalized version is correct. And in particular, the BIP repository uses exclusively the lowercase version with [two exceptions in BIP136](https://github.com/bitcoin/bips/blob/master/bip-0136.mediawiki#tx-position-value).",
      "created_at": "2023-12-15T13:21:58Z",
      "updated_at": "2023-12-15T13:21:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1427970160",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1427970160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428463203",
      "pull_request_review_id": 1784894798,
      "id": 1428463203,
      "node_id": "PRRC_kwDOAN28mc5VJJ5j",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script whose evaluation could have memory usage exponential in the size of the script.\n+For example, a script that pushed a 1-byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes\n+\n+==Notes==\n+\n+OP_CAT as it existed in the Bitcoin codebase prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefL381</ref> which disabled it.\n+\n+<pre>\n+  // (x1 x2 -- out)\n+  if (stack.size() < 2)\n+    return false;\n+  valtype& vch1 = stacktop(-2);\n+  valtype& vch2 = stacktop(-1);\n+  vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+  stack.pop_back();\n+  if (stacktop(-1).size() > 5000)\n+    return false;\n+  }\n+</pre>\n+\n+==References==\n+\n+<references/>\n+\n+==Acknowledgements==\n+\n+We wish to acknowledge Dan Gould for encouraging and helping review this effort. \n+\n+== Copyright ==\n+This document is placed in the public domain.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 91,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "d4f85b11464a60961962960b306cac72461a977f",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis document is licensed under the 3-clause BSD license.\r\n```",
      "created_at": "2023-12-15T20:43:37Z",
      "updated_at": "2023-12-15T20:43:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428463203",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428463203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428471328",
      "pull_request_review_id": 1784906544,
      "id": 1428471328,
      "node_id": "PRRC_kwDOAN28mc5VJL4g",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes\n+\n+==Notes==\n+\n+OP_CAT as it existed in the Bitcoin codebase prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefL381</ref> which disabled it.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 67,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564871,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With regard to line 94, the intent here is to provide a citation to what OP_CAT looked like in the commit at which it was disabled not the mechanism which disabled it. Keeping the link to line 381 unless this is a blocker.",
      "created_at": "2023-12-15T20:51:29Z",
      "updated_at": "2023-12-15T20:51:29Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428471328",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428471328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428640295",
      "pull_request_review_id": 1785103109,
      "id": 1428640295,
      "node_id": "PRRC_kwDOAN28mc5VJ1In",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script for which an evaluation could have memory usage exponential in the size of the script.\n+For instance a script which pushed a 1 Byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 Terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 Bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack [x1,x2], where x2 is at the top of the stack, OP_CAT will push x1||x2 onto the stack. By '||' we denote concatenation.\n+\n+Implementation\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of MAX_SCRIPT_ELEMENT_SIZE is 520 Bytes\n+\n+==Notes==\n+\n+OP_CAT as it existed in the Bitcoin codebase prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefL381</ref> which disabled it.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 67,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564871,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If that is the intent, I'd prefer linking to the last commit where it was still active (i.e. one commit before).",
      "created_at": "2023-12-16T01:56:10Z",
      "updated_at": "2023-12-16T01:56:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428640295",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428640295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428650576",
      "pull_request_review_id": 1785109104,
      "id": 1428650576,
      "node_id": "PRRC_kwDOAN28mc5VJ3pQ",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564240,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As far as I know it is an open question if the taptweak based commitment is quantum secure or not. This BIP could not take a position on this question. I will reword this to fix any confusion.",
      "created_at": "2023-12-16T02:35:50Z",
      "updated_at": "2023-12-16T02:35:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428650576",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428650576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428660601",
      "pull_request_review_id": 1785114161,
      "id": 1428660601,
      "node_id": "PRRC_kwDOAN28mc5VJ6F5",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564240,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, I spoke too soon.",
      "created_at": "2023-12-16T03:13:52Z",
      "updated_at": "2023-12-16T03:13:52Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428660601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428660601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428660962",
      "pull_request_review_id": 1785114295,
      "id": 1428660962,
      "node_id": "PRRC_kwDOAN28mc5VJ6Li",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 26,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564168,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I've checked and it seems \"Bitcoin tapscript\" isn't actually all that uncommon. Disregard.",
      "created_at": "2023-12-16T03:15:16Z",
      "updated_at": "2023-12-16T03:15:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428660962",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428660962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428929174",
      "pull_request_review_id": 1785309961,
      "id": 1428929174,
      "node_id": "PRRC_kwDOAN28mc5VK7qW",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "77509f6c23a6036a3e4ac929ab2fe7c6d8dbdeec",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport Signatures can be preserved when used in a taproot output.\r\n```",
      "created_at": "2023-12-16T21:21:26Z",
      "updated_at": "2023-12-16T21:21:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428929174",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428929174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428931647",
      "pull_request_review_id": 1785310367,
      "id": 1428931647,
      "node_id": "PRRC_kwDOAN28mc5VK8Q_",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 Bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref>",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "945e2a374249114c313d6204d7db61dfe496fe97",
      "in_reply_to_id": 1427564240,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm glad you brought this up. I wouldn't want the BIP to be seen as making an authoritative statement on this question. Let me know if you think my change addresses the issue or not.",
      "created_at": "2023-12-16T21:27:05Z",
      "updated_at": "2023-12-19T02:55:24Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1428931647",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1428931647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429034009",
      "pull_request_review_id": 1785346609,
      "id": 1429034009,
      "node_id": "PRRC_kwDOAN28mc5VLVQZ",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport Signatures can be preserved when used in a taproot output.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "4f39e4b9d55960432d5548fa7e52568d3051428a",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.\r\n```",
      "created_at": "2023-12-17T06:20:10Z",
      "updated_at": "2023-12-17T06:20:28Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1429034009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429034009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429034026",
      "pull_request_review_id": 1785346609,
      "id": 1429034026,
      "node_id": "PRRC_kwDOAN28mc5VLVQq",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport Signatures can be preserved when used in a taproot output.\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script whose evaluation could have memory usage exponential in the size of the script.\n+For example, a script that pushed a 1-byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack _[x1, x2]_, where _x2_ is at the top of the stack, OP_CAT will push _x1 || x2_ onto the stack. By _||_ we denote concatenation.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "4f39e4b9d55960432d5548fa7e52568d3051428a",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you check the rendered version, the italics aren't actually showing, it appears `''` needs to be used. The brackets also mess with the result and need a nowiki tag. I've tested on my branch that this works:\r\n```suggestion\r\nOP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation.\r\n```",
      "created_at": "2023-12-17T06:20:20Z",
      "updated_at": "2023-12-17T06:20:28Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1429034026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429034026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429221934",
      "pull_request_review_id": 1785480808,
      "id": 1429221934,
      "node_id": "PRRC_kwDOAN28mc5VMDIu",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport Signatures can be preserved when used in a taproot output.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "4f39e4b9d55960432d5548fa7e52568d3051428a",
      "in_reply_to_id": 1429034009,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looking at usage, you are correct, signature is lowercase. I'm rejecting this suggesting because I want to fix it in the first sentence as well.",
      "created_at": "2023-12-17T17:46:11Z",
      "updated_at": "2023-12-17T17:46:11Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1429221934",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429221934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429222654",
      "pull_request_review_id": 1785481181,
      "id": 1429222654,
      "node_id": "PRRC_kwDOAN28mc5VMDT-",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree Signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport Signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport Signatures can be preserved when used in a taproot output.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "4f39e4b9d55960432d5548fa7e52568d3051428a",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\r\n* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.\r\n```",
      "created_at": "2023-12-17T17:49:28Z",
      "updated_at": "2023-12-17T17:49:28Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1429222654",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1429222654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": 31,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1430807203",
      "pull_request_review_id": 1787950014,
      "id": 1430807203,
      "node_id": "PRRC_kwDOAN28mc5VSGKj",
      "diff_hunk": "@@ -0,0 +1,91 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+OP_CAT fails if there are less than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expands the toolbox of the tapscript developer with a simple, modular and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficent to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However OP_CAT was removed because it enabled the construction of a script whose evaluation could have memory usage exponential in the size of the script.\n+For example, a script that pushed a 1-byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 bytes.\n+\n+==Specification==\n+\n+OP_CAT pops two elements off the stack, concatenates them together in stack order and pushes the resulting element onto the stack. Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation.\n+\n+===Implementation===\n+<pre>\n+case OP_CAT:\n+{\n+    if (stack.size() < 2) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    valtype& vch1 = stacktop(-2);\n+    valtype& vch2 = stacktop(-1);\n+    if (vch1.size() + vch2.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+        return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+    }\n+    vch1.insert(vch1.end(), vch2.begin(), vch2.end());\n+    stack.pop_back();\n+}\n+break;\n+</pre>\n+This implementation is inspired by the original implementation of OP_CAT as shown below. An alternative implementation of OP_CAT can be found in Elements <ref>Roose S., Elements Project, \"Re-enable several disabled opcodes\", 2019, https://github.com/ElementsProject/elements/commit/13e1103abe3e328c5a4e2039b51a546f8be6c60a#diff-a0337ffd7259e8c7c9a7786d6dbd420c80abfa1afdb34ebae3261109d9ae3c19R740-R759</ref>.\n+\n+The value of <code>MAX_SCRIPT_ELEMENT_SIZE</code> is 520.\n+\n+==Notes==\n+\n+OP_CAT as it existed in the Bitcoin codebase prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefL381</ref> which disabled it:",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 67,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "e3dc3ba3617d33dc1c434196f5f7b4e463254e49",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n[OP_CAT as it existed in the Bitcoin codebase](https://github.com/bitcoin/bitcoin/blob/01cd2fdaf3ac6071304ceb80fb7436ac02b1059e/script.cpp#L381-L393) prior to the commit \"misc changes\" 4bd188c<ref>S. Nakamoto, \"misc changes\", Aug 25 2010, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82#diff-27496895958ca30c47bbb873299a2ad7a7ea1003a9faa96b317250e3b7aa1fefR94</ref> which disabled it:\r\n```",
      "created_at": "2023-12-19T01:27:55Z",
      "updated_at": "2023-12-19T01:27:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1430807203",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1430807203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1438436661",
      "pull_request_review_id": 1799250600,
      "id": 1438436661,
      "node_id": "PRRC_kwDOAN28mc5VvM01",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "e91621efcee811056ff916a740cce651ad485de7",
      "in_reply_to_id": null,
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Adding a `(0x7e)` might help be a bit clearer. Libraries in various languages have small variations on OP code naming.",
      "created_at": "2023-12-29T22:58:43Z",
      "updated_at": "2023-12-29T22:58:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1438436661",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1438436661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1438440985",
      "pull_request_review_id": 1799255097,
      "id": 1438440985,
      "node_id": "PRRC_kwDOAN28mc5VvN4Z",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP reintroduces OP_CAT in the form of a new tapscript opcode which allows the concatenation of two values on the stack. This opcode would be activated via a soft fork by redefining the opcode OP_SUCCESS126.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "e91621efcee811056ff916a740cce651ad485de7",
      "in_reply_to_id": 1438436661,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, updated bip",
      "created_at": "2023-12-29T23:30:23Z",
      "updated_at": "2023-12-29T23:30:24Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1438440985",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1438440985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1441721012",
      "pull_request_review_id": 1804114678,
      "id": 1441721012,
      "node_id": "PRRC_kwDOAN28mc5V7uq0",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 15,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
      "in_reply_to_id": null,
      "user": {
        "login": "halseth",
        "id": 3765732,
        "node_id": "MDQ6VXNlcjM3NjU3MzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3765732?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/halseth",
        "html_url": "https://github.com/halseth",
        "followers_url": "https://api.github.com/users/halseth/followers",
        "following_url": "https://api.github.com/users/halseth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/halseth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/halseth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/halseth/subscriptions",
        "organizations_url": "https://api.github.com/users/halseth/orgs",
        "repos_url": "https://api.github.com/users/halseth/repos",
        "events_url": "https://api.github.com/users/halseth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/halseth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a note that this is the same opcode used for OP_CAT originally.",
      "created_at": "2024-01-04T13:00:58Z",
      "updated_at": "2024-01-04T13:03:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1441721012",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1441721012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1441961655",
      "pull_request_review_id": 1804501454,
      "id": 1441961655,
      "node_id": "PRRC_kwDOAN28mc5V8pa3",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 15,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
      "in_reply_to_id": 1441721012,
      "user": {
        "login": "0xBEEFCAF3",
        "id": 24356537,
        "node_id": "MDQ6VXNlcjI0MzU2NTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/24356537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xBEEFCAF3",
        "html_url": "https://github.com/0xBEEFCAF3",
        "followers_url": "https://api.github.com/users/0xBEEFCAF3/followers",
        "following_url": "https://api.github.com/users/0xBEEFCAF3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xBEEFCAF3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xBEEFCAF3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xBEEFCAF3/subscriptions",
        "organizations_url": "https://api.github.com/users/0xBEEFCAF3/orgs",
        "repos_url": "https://api.github.com/users/0xBEEFCAF3/repos",
        "events_url": "https://api.github.com/users/0xBEEFCAF3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xBEEFCAF3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point!",
      "created_at": "2024-01-04T16:15:46Z",
      "updated_at": "2024-01-04T16:15:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1441961655",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1441961655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1444076799",
      "pull_request_review_id": 1807880182,
      "id": 1444076799,
      "node_id": "PRRC_kwDOAN28mc5WEtz_",
      "diff_hunk": "@@ -0,0 +1,94 @@\n+<pre>\n+  BIP: ???\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 15,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "82fe9fc3dba07d51533dbce4de4b5eb58ddbed55",
      "in_reply_to_id": 1441721012,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2024-01-07T21:34:49Z",
      "updated_at": "2024-01-07T21:34:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1444076799",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1444076799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1568056563",
      "pull_request_review_id": 2004771971,
      "id": 1568056563,
      "node_id": "PRRC_kwDOAN28mc5ddqTz",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
      "in_reply_to_id": null,
      "user": {
        "login": "real-or-random",
        "id": 1071625,
        "node_id": "MDQ6VXNlcjEwNzE2MjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1071625?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/real-or-random",
        "html_url": "https://github.com/real-or-random",
        "followers_url": "https://api.github.com/users/real-or-random/followers",
        "following_url": "https://api.github.com/users/real-or-random/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/real-or-random/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/real-or-random/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/real-or-random/subscriptions",
        "organizations_url": "https://api.github.com/users/real-or-random/orgs",
        "repos_url": "https://api.github.com/users/real-or-random/repos",
        "events_url": "https://api.github.com/users/real-or-random/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/real-or-random/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n* Post-quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.\r\n```\r\n---\r\n\r\n> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.\r\n\r\nI'm not sure if this adds even more confusion. In the most direct sense, taproot outputs are clearly not post-quantum secure because the attacker can perform a key-path spend. Maybe something like: \"Putting aside the ability to perform key-path spends, which clearly makes taproot insecure against a quantum attacker, it is an open question if the quantum resistance of Lamport signatures can be preserved when used in a script committed to in a taproot output.\" ",
      "created_at": "2024-04-17T00:07:45Z",
      "updated_at": "2024-04-17T00:07:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1568056563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1568056563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1568057890",
      "pull_request_review_id": 2004773756,
      "id": 1568057890,
      "node_id": "PRRC_kwDOAN28mc5ddqoi",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
      "in_reply_to_id": 1568056563,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FWIW: https://bitcoin.stackexchange.com/questions/120996/is-the-taproot-script-tree-commitment-quantum-safe",
      "created_at": "2024-04-17T00:10:29Z",
      "updated_at": "2024-04-17T00:10:29Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1568057890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1568057890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1568732921",
      "pull_request_review_id": 2005859262,
      "id": 1568732921,
      "node_id": "PRRC_kwDOAN28mc5dgPb5",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
      "in_reply_to_id": 1568056563,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@real-or-random Thanks for taking a look at this.\r\n\r\nThere is some history behind the intentional ambiguity in our statement here. we've been doing research on the quantum security of tapscript. I agree the script spend commit is probably provably quantum resistant under some assumptions. I had hoped I could find a way to prevent key path spends by constructing the taproot output in such a way that it would break the key spend path, e.g. an output where the only key spend signatures result in an invalid curve point. I haven't fully thrown in the towel on that attempt but it is looking highly unlikely at this point.\r\n\r\nLet me edit this",
      "created_at": "2024-04-17T12:04:29Z",
      "updated_at": "2024-04-17T12:04:29Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1568732921",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1568732921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1579888460",
      "pull_request_review_id": 2023189049,
      "id": 1579888460,
      "node_id": "PRRC_kwDOAN28mc5eKy9M",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+<pre>\n+  BIP: ?\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-op-cat\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with a thousand public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if the quantum resistance of Lamport signatures can be preserved when used in a taproot output.",
      "path": "bip-???-cat.mediawiki",
      "position": null,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "f8ad6ede5753b51bfd8a782f7de6d74a7e06cd95",
      "in_reply_to_id": 1568056563,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@real-or-random  Edited the quantum resistance section. Let me know what you think about it now",
      "created_at": "2024-04-25T17:43:59Z",
      "updated_at": "2024-04-25T17:43:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1579888460",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1579888460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581171529",
      "pull_request_review_id": 2025285797,
      "id": 1581171529,
      "node_id": "PRRC_kwDOAN28mc5ePsNJ",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause",
      "path": "bip-0347.mediawiki",
      "position": 11,
      "original_position": 11,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you please add the \"Post-History\" header to link to discussion on the mailing list about this proposal?",
      "created_at": "2024-04-26T15:09:55Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581171529",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581171529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 11,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581174469",
      "pull_request_review_id": 2025285797,
      "id": 1581174469,
      "node_id": "PRRC_kwDOAN28mc5ePs7F",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==",
      "path": "bip-0347.mediawiki",
      "position": 19,
      "original_position": 18,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Consistency-nit: Some of your Section Headings are followed by a blank line, while others are not. Please add blank lines under each Heading, or remove them all:\r\n\r\n```suggestion\r\n== Copyright ==\r\n\r\n```",
      "created_at": "2024-04-26T15:11:17Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581174469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581174469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581181325",
      "pull_request_review_id": 2025285797,
      "id": 1581181325,
      "node_id": "PRRC_kwDOAN28mc5ePumN",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==",
      "path": "bip-0347.mediawiki",
      "position": 34,
      "original_position": 32,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: please use consistent formatting for Section Headings.\r\n\r\n```suggestion\r\n==Motivation==\r\n\r\n```",
      "created_at": "2024-04-26T15:15:18Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581181325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581181325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581183941",
      "pull_request_review_id": 2025285797,
      "id": 1581183941,
      "node_id": "PRRC_kwDOAN28mc5ePvPF",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 23,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nWhen evaluated, the OP_CAT instruction:\r\n```",
      "created_at": "2024-04-26T15:17:11Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581183941",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581183941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581197066",
      "pull_request_review_id": 2025285797,
      "id": 1581197066,
      "node_id": "PRRC_kwDOAN28mc5ePycK",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with up to 4,294,967,296 public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if a tapscript commitment would preserve the quantum resistance of Lamport signatures. Beyond this question, the use of Lamport Signatures in taproot outputs is unlikely to be quantum resistant even if the script spend-path is made quantum resistant. This is because taproot outputs can also be spent with a key. An attacker with a sufficiently powerful quantum computer could bypass the taproot script spend-path by finding the discrete log of the taproot output and thus spending the output using the key spend-path. The use of \"Nothing Up My Sleeve\" (NUMS) points as described in [[bip-0341.mediawiki|BIP341]] to disable the key spend-path does not disable the key spend-path against a quantum attacker as NUMS relies on the hardness of finding discrete logs. We are not aware of any mechanism which could disable the key spend-path in a taproot output without a softfork change to taproot.",
      "path": "bip-0347.mediawiki",
      "position": 42,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I’m confused by the \"Post-Quantum Lamport signature\" example use-case. It seems to me that the description indicates that OP_CAT implemented in Tapscript would _not_ enable quantum security.",
      "created_at": "2024-04-26T15:27:48Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581197066",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581197066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581201026",
      "pull_request_review_id": 2025285797,
      "id": 1581201026,
      "node_id": "PRRC_kwDOAN28mc5ePzaC",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with up to 4,294,967,296 public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if a tapscript commitment would preserve the quantum resistance of Lamport signatures. Beyond this question, the use of Lamport Signatures in taproot outputs is unlikely to be quantum resistant even if the script spend-path is made quantum resistant. This is because taproot outputs can also be spent with a key. An attacker with a sufficiently powerful quantum computer could bypass the taproot script spend-path by finding the discrete log of the taproot output and thus spending the output using the key spend-path. The use of \"Nothing Up My Sleeve\" (NUMS) points as described in [[bip-0341.mediawiki|BIP341]] to disable the key spend-path does not disable the key spend-path against a quantum attacker as NUMS relies on the hardness of finding discrete logs. We are not aware of any mechanism which could disable the key spend-path in a taproot output without a softfork change to taproot.\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficient to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However, OP_CAT was removed because it enabled the construction of a script whose evaluation could have memory usage exponential in the size of the script.\n+For example, a script that pushed a 1-byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 bytes.\n+\n+==Rationale==\n+\n+Our decision to reenable OP_CAT by redefining a tapscript OP_SUCCESSx opcode to OP_CAT was motivated to leverage the tapscript softfork opcode upgrade path introduced in [[bip-0342.mediawiki|BIP342]].\n+\n+We specifically choose to use OP_SUCCESS126 rather than another OP_SUCCESSx as OP_SUCCESS126 uses the same opcode value (126 in decimal and 0x7e in hexadecimal) that was used for OP_CAT prior to it being disabled in Bitcoin. This removes a potential source of confusion that would exist if we had a opcode value different from the one used in the original OP_CAT opcode.\n+\n+While the OP_SUCCESSx opcode upgrade path could enable us to increase the stack element size while reenabling OP_CAT, we wanted to separate the decision to change the stack element size limit from the decision to reenable OP_CAT. This BIP takes no position in favor or against increasing the stack element size limit.\n+\n+==Backwards Compatibility==\n+\n+OP_CAT usage in an non-tapscript script will continue to trigger the SCRIPT_ERR_DISABLED_OPCODE. The only change would be to OP_CAT usage in tapscript. This change to tapscript would be activated a soft fork that redefines an OP_SUCCESSx opcode (OP_SUCCESS126) to OP_CAT.",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nOP_CAT usage in a non-tapscript script will continue to trigger the SCRIPT_ERR_DISABLED_OPCODE. The only change would be to OP_CAT usage in tapscript. This change to tapscript would be activated as a soft fork that redefines an OP_SUCCESSx opcode (OP_SUCCESS126) to OP_CAT.\r\n```",
      "created_at": "2024-04-26T15:31:21Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581201026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581201026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581221779",
      "pull_request_review_id": 2025285797,
      "id": 1581221779,
      "node_id": "PRRC_kwDOAN28mc5eP4eT",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with up to 4,294,967,296 public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if a tapscript commitment would preserve the quantum resistance of Lamport signatures. Beyond this question, the use of Lamport Signatures in taproot outputs is unlikely to be quantum resistant even if the script spend-path is made quantum resistant. This is because taproot outputs can also be spent with a key. An attacker with a sufficiently powerful quantum computer could bypass the taproot script spend-path by finding the discrete log of the taproot output and thus spending the output using the key spend-path. The use of \"Nothing Up My Sleeve\" (NUMS) points as described in [[bip-0341.mediawiki|BIP341]] to disable the key spend-path does not disable the key spend-path against a quantum attacker as NUMS relies on the hardness of finding discrete logs. We are not aware of any mechanism which could disable the key spend-path in a taproot output without a softfork change to taproot.\n+* Non-equivocation contracts <ref>T. Ruffing, A. Kate, D. Schröder, \"Liar, Liar, Coins on Fire: Penalizing Equivocation by Loss of Bitcoins\", 2015, https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.727.6262&rep=rep1&type=pdf</ref> in tapscript provide a mechanism to punish equivocation/double spending in Bitcoin payment channels. OP_CAT enables this by enforcing rules on the spending transaction's nonce. The capability is a useful building block for payment channels and other Bitcoin protocols.\n+* Vaults <ref>M. Moser, I. Eyal, and E. G. Sirer, Bitcoin Covenants, http://fc16.ifca.ai/bitcoin/papers/MES16.pdf</ref> which are a specialized covenant that allows a user to block a malicious party who has compromised the user's secret key from stealing the funds in that output. As shown in <ref>A. Poelstra, \"CAT and Schnorr Tricks II\", 2021, https://www.wpsoftware.net/andrew/blog/cat-and-schnorr-tricks-ii.html</ref> OP_CAT is sufficient to build vaults in Bitcoin.\n+* Replicating CheckSigFromStack <ref>A. Poelstra, \"CAT and Schnorr Tricks I\", 2021, https://medium.com/blockstream/cat-and-schnorr-tricks-i-faf1b59bd298</ref> which would allow the creation of simple covenants and other advanced contracts without having to presign spending transactions, possibly reducing complexity and the amount of data that needs to be stored. Originally shown to work with Schnorr signatures, this result has been extended to ECDSA signatures <ref>R. Linus, \"Covenants with CAT and ECDSA\", 2023, https://gist.github.com/RobinLinus/9a69f5552be94d13170ec79bf34d5e85#file-covenants_cat_ecdsa-md</ref>.\n+\n+The opcode OP_CAT was available in early versions of Bitcoin. However, OP_CAT was removed because it enabled the construction of a script whose evaluation could have memory usage exponential in the size of the script.\n+For example, a script that pushed a 1-byte value on the stack and then repeated the opcodes OP_DUP, OP_CAT 40 times would result in a stack value whose size was greater than 1 terabyte. This is no longer an issue because tapscript enforces a maximum stack element size of 520 bytes.\n+\n+==Rationale==\n+\n+Our decision to reenable OP_CAT by redefining a tapscript OP_SUCCESSx opcode to OP_CAT was motivated to leverage the tapscript softfork opcode upgrade path introduced in [[bip-0342.mediawiki|BIP342]].\n+\n+We specifically choose to use OP_SUCCESS126 rather than another OP_SUCCESSx as OP_SUCCESS126 uses the same opcode value (126 in decimal and 0x7e in hexadecimal) that was used for OP_CAT prior to it being disabled in Bitcoin. This removes a potential source of confusion that would exist if we had a opcode value different from the one used in the original OP_CAT opcode.\n+\n+While the OP_SUCCESSx opcode upgrade path could enable us to increase the stack element size while reenabling OP_CAT, we wanted to separate the decision to change the stack element size limit from the decision to reenable OP_CAT. This BIP takes no position in favor or against increasing the stack element size limit.\n+\n+==Backwards Compatibility==\n+\n+OP_CAT usage in an non-tapscript script will continue to trigger the SCRIPT_ERR_DISABLED_OPCODE. The only change would be to OP_CAT usage in tapscript. This change to tapscript would be activated a soft fork that redefines an OP_SUCCESSx opcode (OP_SUCCESS126) to OP_CAT.",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581201026,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps some readers would find it useful, if you were to describe here how a transaction with OP_CAT would be interpreted by a node that has not upgraded to a version that enforces OP_CAT, and how it therefore is safe to be soft-forked in.",
      "created_at": "2024-04-26T15:47:58Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581221779",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581221779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581224631",
      "pull_request_review_id": 2025285797,
      "id": 1581224631,
      "node_id": "PRRC_kwDOAN28mc5eP5K3",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps include in the title that the opcode is only added to Tapscript:\r\n\r\n```suggestion\r\n  Title: Reenable OP_CAT in Tapscript\r\n```",
      "created_at": "2024-04-26T15:50:31Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581224631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581224631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581296493",
      "pull_request_review_id": 2025285797,
      "id": 1581296493,
      "node_id": "PRRC_kwDOAN28mc5eQKtt",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.",
      "path": "bip-0347.mediawiki",
      "position": 36,
      "original_position": 33,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript.\"\r\n\r\nThis phrasing sounds a bit funny to me. Since there are other ways how such features could be implemented, the absence of OP_CAT does not prevent the implementation of said features. Rather, OP_CAT provides a means to achieve the features.",
      "created_at": "2024-04-26T16:59:05Z",
      "updated_at": "2024-04-26T17:07:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581296493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581296493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581338016",
      "pull_request_review_id": 2025550924,
      "id": 1581338016,
      "node_id": "PRRC_kwDOAN28mc5eQU2g",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581224631,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How about \"Enable OP_CAT in Tapscript\"? I'm concerned Renable may read as saying OP_CAT was enabled in the past in tapscript.",
      "created_at": "2024-04-26T17:41:56Z",
      "updated_at": "2024-04-26T17:41:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581338016",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581338016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581353338",
      "pull_request_review_id": 2025577512,
      "id": 1581353338,
      "node_id": "PRRC_kwDOAN28mc5eQYl6",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with up to 4,294,967,296 public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if a tapscript commitment would preserve the quantum resistance of Lamport signatures. Beyond this question, the use of Lamport Signatures in taproot outputs is unlikely to be quantum resistant even if the script spend-path is made quantum resistant. This is because taproot outputs can also be spent with a key. An attacker with a sufficiently powerful quantum computer could bypass the taproot script spend-path by finding the discrete log of the taproot output and thus spending the output using the key spend-path. The use of \"Nothing Up My Sleeve\" (NUMS) points as described in [[bip-0341.mediawiki|BIP341]] to disable the key spend-path does not disable the key spend-path against a quantum attacker as NUMS relies on the hardness of finding discrete logs. We are not aware of any mechanism which could disable the key spend-path in a taproot output without a softfork change to taproot.",
      "path": "bip-0347.mediawiki",
      "position": 42,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581197066,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for this comment, I want to be very careful we are not over claiming the quantum security OP_CAT gets you.\r\n\r\nAssuming that the script-spend commitment is quantum resistant (there is no published security proof for this assumption), then OP_CAT in tapscript will not enable quantum security unless:\r\n\r\n1. Someone invents a way to construct a taproot output which can not be spent via the key spend path but can be spent via the script spend path. There is no known way to do this and it is probably impossible. However it has not been shown to be impossible.\r\n\r\n2. OR a mechanism is added to bitcoin to disable key-spend paths. \r\n\r\nIt has been proposed that if ECDSA is broken or a powerful quantum computer was on the horizon, there might be an effort to protect ownership of bitcoins by allowing people to mark their taproot outputs as \"script-spend only\" and then move their coins into such outputs. Such a mechanism could be used in conjunction with OP_CAT to enable quantum security. \r\n\r\nThis is a confusing topic to discuss without speculation on future unknowns and security countermeasures that go well beyond the scope of OP_CAT. \r\n\r\nWhat are your thoughts on increasing clarity of this paragraph while staying within the scope of the BIP? Should I just say less?",
      "created_at": "2024-04-26T17:59:11Z",
      "updated_at": "2024-04-26T21:25:52Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581353338",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581353338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581406156",
      "pull_request_review_id": 2025661933,
      "id": 1581406156,
      "node_id": "PRRC_kwDOAN28mc5eQlfM",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581224631,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Even better!",
      "created_at": "2024-04-26T18:43:05Z",
      "updated_at": "2024-04-26T18:43:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581406156",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581406156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581427395",
      "pull_request_review_id": 2025695023,
      "id": 1581427395,
      "node_id": "PRRC_kwDOAN28mc5eQqrD",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with up to 4,294,967,296 public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if a tapscript commitment would preserve the quantum resistance of Lamport signatures. Beyond this question, the use of Lamport Signatures in taproot outputs is unlikely to be quantum resistant even if the script spend-path is made quantum resistant. This is because taproot outputs can also be spent with a key. An attacker with a sufficiently powerful quantum computer could bypass the taproot script spend-path by finding the discrete log of the taproot output and thus spending the output using the key spend-path. The use of \"Nothing Up My Sleeve\" (NUMS) points as described in [[bip-0341.mediawiki|BIP341]] to disable the key spend-path does not disable the key spend-path against a quantum attacker as NUMS relies on the hardness of finding discrete logs. We are not aware of any mechanism which could disable the key spend-path in a taproot output without a softfork change to taproot.",
      "path": "bip-0347.mediawiki",
      "position": 42,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581197066,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see thanks for the explanation. Perhaps another sentence to provide the context of the scenario you are alluding to would help to clarify:\r\n\r\nPerhaps:\r\n```suggestion\r\n* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It has been proposed that if ECDSA is broken or a powerful computer was on the horizon, there might be an effort to protect ownership of bitcoins by allowing people to mark their taproot outputs as \"script-path only\" and then move their coins into such outputs with a leaf in the script tree requiring a Lamport signature. It is an open question if a tapscript commitment would preserve the quantum resistance of Lamport signatures. Beyond this question, the use of Lamport Signatures in taproot outputs is unlikely to be quantum resistant even if the script spend-path is made quantum resistant. This is because taproot outputs can also be spent with a key. An attacker with a sufficiently powerful quantum computer could bypass the taproot script spend-path by finding the discrete log of the taproot output and thus spending the output using the key spend-path. The use of \"Nothing Up My Sleeve\" (NUMS) points as described in [[bip-0341.mediawiki|BIP341]] to disable the key spend-path does not disable the key spend-path against a quantum attacker as NUMS relies on the hardness of finding discrete logs. We are not aware of any mechanism which could disable the key spend-path in a taproot output without a softfork change to taproot.\r\n```",
      "created_at": "2024-04-26T19:03:42Z",
      "updated_at": "2024-04-26T19:03:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581427395",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581427395"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581427709",
      "pull_request_review_id": 2025695523,
      "id": 1581427709,
      "node_id": "PRRC_kwDOAN28mc5eQqv9",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.\n+\n+OP_CAT aims to expand the toolbox of the tapscript developer with a simple, modular, and useful opcode in the spirit of Unix <ref>R. Pike and B. Kernighan, \"Program design in the UNIX environment\", 1983, https://harmful.cat-v.org/cat-v/unix_prog_design.pdf</ref>. To demonstrate the usefulness of OP_CAT below we provide a non-exhaustive list of some usecases that OP_CAT would enable:\n+\n+* Bitstream, a protocol for the atomic swap (fair exchange) of bitcoins for decryption keys, that enables decentralized file hosting systems paid in Bitcoin. While such swaps are currently possible on Bitcoin without OP_CAT they require the use of complex and computationally expensive Verifiable Computation cryptographic techniques. OP_CAT would remove this requirement on Verifiable Computation, making such protocols far more practical to build in Bitcoin. <ref>R. Linus, \"BitStream: Decentralized File Hosting Incentivised via Bitcoin Payments\", 2023, https://robinlinus.com/bitstream.pdf</ref>\n+* Tree signatures provide a multisignature script whose size can be logarithmic in the number of public keys and can encode spend conditions beyond n-of-m. For instance a transaction less than 1KB in size could support tree signatures with up to 4,294,967,296 public keys. This also enables generalized logical spend conditions. <ref> P. Wuille, \"Multisig on steroids using tree signatures\", 2015, https://blog.blockstream.com/en-treesignatures/</ref>\n+* Post-Quantum Lamport signatures in Bitcoin transactions. Lamport signatures merely require the ability to hash and concatenate values on the stack. <ref>J. Rubin, \"[bitcoin-dev] OP_CAT Makes Bitcoin Quantum Secure [was CheckSigFromStack for Arithmetic Values]\", 2021, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-July/019233.html</ref> It is an open question if a tapscript commitment would preserve the quantum resistance of Lamport signatures. Beyond this question, the use of Lamport Signatures in taproot outputs is unlikely to be quantum resistant even if the script spend-path is made quantum resistant. This is because taproot outputs can also be spent with a key. An attacker with a sufficiently powerful quantum computer could bypass the taproot script spend-path by finding the discrete log of the taproot output and thus spending the output using the key spend-path. The use of \"Nothing Up My Sleeve\" (NUMS) points as described in [[bip-0341.mediawiki|BIP341]] to disable the key spend-path does not disable the key spend-path against a quantum attacker as NUMS relies on the hardness of finding discrete logs. We are not aware of any mechanism which could disable the key spend-path in a taproot output without a softfork change to taproot.",
      "path": "bip-0347.mediawiki",
      "position": 42,
      "original_position": 39,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581197066,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, if your lines were shorter, it might be easier to see what I added. ;)",
      "created_at": "2024-04-26T19:04:04Z",
      "updated_at": "2024-04-26T19:04:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1581427709",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1581427709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583840637",
      "pull_request_review_id": 2029742643,
      "id": 1583840637,
      "node_id": "PRRC_kwDOAN28mc5eZ319",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581224631,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could also amend the title of the PR in the same manner",
      "created_at": "2024-04-29T22:11:32Z",
      "updated_at": "2024-04-29T22:11:32Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1583840637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583840637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583866813",
      "pull_request_review_id": 2029780420,
      "id": 1583866813,
      "node_id": "PRRC_kwDOAN28mc5eZ-O9",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581224631,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed in title and PR title",
      "created_at": "2024-04-29T22:45:43Z",
      "updated_at": "2024-04-29T22:45:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1583866813",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583866813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583876447",
      "pull_request_review_id": 2029792460,
      "id": 1583876447,
      "node_id": "PRRC_kwDOAN28mc5eaAlf",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause\n+</pre>\n+\n+==Abstract==\n+\n+This BIP introduces OP_CAT as a tapscript opcode which allows the concatenation of two values on the stack. OP_CAT would be activated via a soft fork by redefining the opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal). This is the same opcode value used by the original OP_CAT.\n+\n+== Copyright ==\n+This document is licensed under the 3-clause BSD license.\n+\n+==Specification==\n+\n+When evaluated the OP_CAT instruction:\n+# Pops the top two values off the stack,\n+# concatenates the popped values together in stack order,\n+# and then pushes the concatenated value on the top of the stack.\n+\n+Given the stack ''<nowiki>[x1, x2]</nowiki>'', where ''x2'' is at the top of the stack, OP_CAT will push ''x1 || x2'' onto the stack. By ''||'' we denote concatenation. OP_CAT fails if there are fewer than two values on the stack or if a concatenated value would have a combined size greater than the maximum script element size of 520 bytes.\n+\n+This opcode would be activated via a soft fork by redefining the tapscript opcode OP_SUCCESS126 (126 in decimal and 0x7e in hexadecimal) to OP_CAT.\n+\n+==Motivation==\n+Bitcoin tapscript lacks a general purpose way of combining objects on the stack restricting the expressiveness and power of tapscript. This prevents among many other things the ability to construct and evaluate merkle trees and other hashed data structures in tapscript. OP_CAT by adding a general purpose way to concatenate stack values would overcome this limitation and greatly increase the functionality of tapscript.",
      "path": "bip-0347.mediawiki",
      "position": 36,
      "original_position": 33,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581296493,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This isn't saying that the absence of OP_CAT specifically prevents this, but rather the absence of anyway to combine objects on the stack prevents this*. 256-bit add would let you do this, as would a hash op code that takes two stack elements. There are plenty of other ways to do this, OP_CAT is just a simple solution.\r\n\r\n*-Technically you can OP_ADD two 4 byte objects on the stack, but once you hash them, you can't meaningfully combine that hash output with another hash output.",
      "created_at": "2024-04-29T22:51:57Z",
      "updated_at": "2024-04-29T22:51:57Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1583876447",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583876447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583881176",
      "pull_request_review_id": 2029800847,
      "id": 1583881176,
      "node_id": "PRRC_kwDOAN28mc5eaBvY",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: Enable OP_CAT in Tapscript",
      "path": "bip-0347.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "a05543cc588ebcb266aa3251472324671e384afe",
      "in_reply_to_id": null,
      "user": {
        "login": "vostrnad",
        "id": 43024885,
        "node_id": "MDQ6VXNlcjQzMDI0ODg1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43024885?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vostrnad",
        "html_url": "https://github.com/vostrnad",
        "followers_url": "https://api.github.com/users/vostrnad/followers",
        "following_url": "https://api.github.com/users/vostrnad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vostrnad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vostrnad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vostrnad/subscriptions",
        "organizations_url": "https://api.github.com/users/vostrnad/orgs",
        "repos_url": "https://api.github.com/users/vostrnad/repos",
        "events_url": "https://api.github.com/users/vostrnad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vostrnad/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "BIP titles normally don't start with a verb (unlike e.g. commit names):\r\n```suggestion\r\n  Title: OP_CAT in Tapscript\r\n```",
      "created_at": "2024-04-29T22:59:58Z",
      "updated_at": "2024-04-29T22:59:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1583881176",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1583881176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1585772198",
      "pull_request_review_id": 2032884180,
      "id": 1585772198,
      "node_id": "PRRC_kwDOAN28mc5ehPam",
      "diff_hunk": "@@ -0,0 +1,106 @@\n+<pre>\n+  BIP: 347\n+  Layer: Consensus (soft fork)\n+  Title: OP_CAT\n+  Author: Ethan Heilman <ethan.r.heilman@gmail.com>\n+          Armin Sabouri <arminsdev@gmail.com>\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0347\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2023-10-21\n+  License: BSD-3-Clause",
      "path": "bip-0347.mediawiki",
      "position": 11,
      "original_position": 11,
      "commit_id": "696cc1713b931589d01c544d3016f3cf57be0058",
      "original_commit_id": "852502b9cf0568dc4c75d93aaaaee3d102002ec7",
      "in_reply_to_id": 1581171529,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added!",
      "created_at": "2024-05-01T01:15:35Z",
      "updated_at": "2024-05-01T01:15:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1525#discussion_r1585772198",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1585772198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1525"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 11,
      "original_line": 11,
      "side": "RIGHT"
    }
  ]
}