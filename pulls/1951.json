{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1951",
    "id": 2798218369,
    "node_id": "PR_kwDOAN28mc6myWyB",
    "html_url": "https://github.com/bitcoin/bips/pull/1951",
    "diff_url": "https://github.com/bitcoin/bips/pull/1951.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1951.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1951",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1951/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
    "number": 1951,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Bip draft: Bitcoin Encrypted Backup",
    "user": {
      "login": "pythcoiner",
      "id": 124568858,
      "node_id": "U_kgDOB2zFGg",
      "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pythcoiner",
      "html_url": "https://github.com/pythcoiner",
      "followers_url": "https://api.github.com/users/pythcoiner/followers",
      "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
      "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
      "repos_url": "https://api.github.com/users/pythcoiner/repos",
      "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This is a bip for encrypted backup, an encryption scheme for bitcoin wallet related metadata.\r\n\r\nMailing list post: just sent\r\n\r\n```\r\nHi all,\r\n\r\nAt WizardSardine (where we’re building Liana wallet) we have been discussing an encryption scheme for descriptors for at least two years.  \r\n\r\nA few months ago Salvatore Ingala published on delvingbitcoin a clear scheme that matches our requirements.  \r\nI have been working on implementing this scheme over the past few weeks and would like to share a draft implementations & BIP in order to collect feedback, remarks, and reviews.\r\n\r\nDraft BIP: https://github.com/bitcoin/bips/pull/1951\r\nRust implementation + CLI: https://github.com/pythcoiner/encrypted_backup\r\nA simple GUI using rust implem: https://github.com/pythcoiner/bed\r\nSalvatore delving post: https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts\r\n\r\n**Open questions**\r\n\r\n- **Deterministic nonce:** Currently the nonce is generated randomly. Is it safe to produce a deterministic nonce, e.g. `hash(\"NONCE\" || plaintext || key_1 || … || key_n)`, or are there known security concerns with this approach?  \r\n- **Cipher choice:** I arbitrarily chose AES‑GCM‑256. Is this the best choice for this use case, or would another construction be preferable?  \r\n- **Byte order:** All fields are defined to be encoded in big‑endian. Is there any reason to consider a different endianness?\r\n\r\nAny thoughts, suggestions, or references are welcome.\r\n\r\nThanks,  \r\npyth  \r\n```",
    "labels": [],
    "created_at": "2025-09-04T06:47:33Z",
    "updated_at": "2025-09-04T08:18:47Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merged": false,
    "merge_commit_sha": "189eccf37853a9910387ce0e25d0aba8d3aa1abe",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "pythcoiner:encrypted_descriptor",
      "ref": "encrypted_descriptor",
      "sha": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "user": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1042613972,
        "node_id": "R_kgDOPiUG1A",
        "name": "bips",
        "full_name": "pythcoiner/bips",
        "owner": {
          "login": "pythcoiner",
          "id": 124568858,
          "node_id": "U_kgDOB2zFGg",
          "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pythcoiner",
          "html_url": "https://github.com/pythcoiner",
          "followers_url": "https://api.github.com/users/pythcoiner/followers",
          "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
          "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
          "repos_url": "https://api.github.com/users/pythcoiner/repos",
          "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/pythcoiner/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/pythcoiner/bips",
        "archive_url": "https://api.github.com/repos/pythcoiner/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pythcoiner/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pythcoiner/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pythcoiner/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pythcoiner/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pythcoiner/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pythcoiner/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pythcoiner/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pythcoiner/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pythcoiner/bips/contributors",
        "deployments_url": "https://api.github.com/repos/pythcoiner/bips/deployments",
        "downloads_url": "https://api.github.com/repos/pythcoiner/bips/downloads",
        "events_url": "https://api.github.com/repos/pythcoiner/bips/events",
        "forks_url": "https://api.github.com/repos/pythcoiner/bips/forks",
        "git_commits_url": "https://api.github.com/repos/pythcoiner/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pythcoiner/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pythcoiner/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pythcoiner/bips.git",
        "issue_comment_url": "https://api.github.com/repos/pythcoiner/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pythcoiner/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pythcoiner/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pythcoiner/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pythcoiner/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pythcoiner/bips/languages",
        "merges_url": "https://api.github.com/repos/pythcoiner/bips/merges",
        "milestones_url": "https://api.github.com/repos/pythcoiner/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pythcoiner/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pythcoiner/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pythcoiner/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:pythcoiner/bips.git",
        "stargazers_url": "https://api.github.com/repos/pythcoiner/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/pythcoiner/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pythcoiner/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/pythcoiner/bips/subscription",
        "tags_url": "https://api.github.com/repos/pythcoiner/bips/tags",
        "teams_url": "https://api.github.com/repos/pythcoiner/bips/teams",
        "trees_url": "https://api.github.com/repos/pythcoiner/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pythcoiner/bips.git",
        "hooks_url": "https://api.github.com/repos/pythcoiner/bips/hooks",
        "svn_url": "https://github.com/pythcoiner/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 16557,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-04T07:02:06Z",
        "created_at": "2025-08-22T09:43:18Z",
        "updated_at": "2025-08-22T09:43:18Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "4d6cd518a04a4101f3cd833cd18b1f31facbc129",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5719,
        "stargazers_count": 10170,
        "watchers_count": 10170,
        "size": 16581,
        "default_branch": "master",
        "open_issues_count": 38,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-03T21:06:40Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-09-03T21:06:45Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
      }
    },
    "author_association": "NONE",
    "draft": true,
    "additions": 268,
    "deletions": 0,
    "changed_files": 1,
    "commits": 2,
    "review_comments": 14,
    "comments": 0
  },
  "events": [
    {
      "event": "convert_to_draft",
      "id": 19496912255,
      "node_id": "CTDE_lADOAN28mc7Jm0XWzwAAAASKG0V_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19496912255",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-04T06:47:53Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDE5ZmRlNjE2ZDIzNzMzY2FjMDE0M2E3MWUyMDliOThiOGRjYWM2NmY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/19fde616d23733cac0143a71e209b98b8dcac66f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/19fde616d23733cac0143a71e209b98b8dcac66f",
      "tree": {
        "sha": "df1d0cfa67d5eb88b495b132db2aa57a1bcef624",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/df1d0cfa67d5eb88b495b132db2aa57a1bcef624"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree df1d0cfa67d5eb88b495b132db2aa57a1bcef624\nparent 2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3\nauthor pythcoiner <pythcoiner@proton.me> 1755856760 +0200\ncommitter pythcoiner <pythcoiner@proton.me> 1756969317 +0200\n\nbip encrypted_backup\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEaUDzTAAmS01IhXXCwQSK7t8wO4gFAmi5OWUACgkQwQSK7t8w\nO4hW0gf/cQxHHZ5asuZAH7KOtVJPojzw/+vLvwxCyoi5Lw2vDT71pRukZvJehb5s\nVKIUkINr+6x+P1HA+j35EOtOTwrdFBKd1MSs54Z1XIovUAARadko+opvfElpF54V\nANesMx8ut6HMi3GlSKi4cPisc8VkoVWoKAGArRdBAXzTuPgbdUoGKM42MJzGZAsu\nkHRJ7bhg5tL7jamQaiDPNSZ/HhDptueJFNiO9PC/VJ13lDwuPQjPhE04EH488Y/a\n9Hb8NYCecfTI5tDvlzgW8/234rJ65fFLoZM0NYoNgo55WpHdEZJWT7HpCRgayJaI\n5sBmQQ+5dFmrcCSN192Aod3oc+Qpcw==\n=lg+f\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3",
          "sha": "2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3",
          "html_url": "https://github.com/bitcoin/bips/commit/2e3dd3f2738fbcf59b966b554f9c59d3b2c939c3"
        }
      ],
      "message": "bip encrypted_backup",
      "committer": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-09-04T07:01:57Z"
      },
      "author": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-08-22T09:59:20Z"
      },
      "sha": "19fde616d23733cac0143a71e209b98b8dcac66f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGQ5ZDAyZmZjNWI1YzcwZWQxOWYxMTg1ZTY4ZjQ4ODIyNzNjNzFlZWY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "tree": {
        "sha": "e34ce8e19e4761c4875ae9effe26df5f8078e604",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/e34ce8e19e4761c4875ae9effe26df5f8078e604"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e34ce8e19e4761c4875ae9effe26df5f8078e604\nparent 19fde616d23733cac0143a71e209b98b8dcac66f\nauthor pythcoiner <pythcoiner@proton.me> 1756911044 +0200\ncommitter pythcoiner <pythcoiner@proton.me> 1756969317 +0200\n\nremove mentions about deterministic\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEaUDzTAAmS01IhXXCwQSK7t8wO4gFAmi5OWUACgkQwQSK7t8w\nO4isyggAppJbyqjOxwfLCz/WxgJ9BtdS+V8SoRy/jVJ1QOPX+3OHLkVo2C9/TW1J\nS5+YswI1Nl4Xlacvn/CIVcpnAVmsf14w/jm6WqIqnsH+mAOpDfvrVMtYIamHe5fj\nmiiWptI6gr1KMruCIQGvF3AvDPG19M0k1vz2elAfef+HyC4gd6M8hvourhV36U8t\n0ZL2OA3I7WGVCuuKaNPkZHawM7cRbVBB/f5mmMO+3DdRZTRWD4L0hlLjrbOrcvO4\n7vJztzobFUL77Js7/UoPK45btjnUIZ5zebUi2cDW2OQpT24nLit9GQWzVl46J3uc\nloWes9ZFA2DbKsFWXnrtWhdcFmoxzA==\n=4+CQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/19fde616d23733cac0143a71e209b98b8dcac66f",
          "sha": "19fde616d23733cac0143a71e209b98b8dcac66f",
          "html_url": "https://github.com/bitcoin/bips/commit/19fde616d23733cac0143a71e209b98b8dcac66f"
        }
      ],
      "message": "remove mentions about deterministic",
      "committer": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-09-04T07:01:57Z"
      },
      "author": {
        "name": "pythcoiner",
        "email": "pythcoiner@proton.me",
        "date": "2025-09-03T14:50:44Z"
      },
      "sha": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19497141103,
      "node_id": "HRFPE_lADOAN28mc7Jm0XWzwAAAASKHsNv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/19497141103",
      "actor": {
        "login": "pythcoiner",
        "id": 124568858,
        "node_id": "U_kgDOB2zFGg",
        "avatar_url": "https://avatars.githubusercontent.com/u/124568858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pythcoiner",
        "html_url": "https://github.com/pythcoiner",
        "followers_url": "https://api.github.com/users/pythcoiner/followers",
        "following_url": "https://api.github.com/users/pythcoiner/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pythcoiner/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pythcoiner/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pythcoiner/subscriptions",
        "organizations_url": "https://api.github.com/users/pythcoiner/orgs",
        "repos_url": "https://api.github.com/users/pythcoiner/repos",
        "events_url": "https://api.github.com/users/pythcoiner/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pythcoiner/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "commit_url": "https://api.github.com/repos/pythcoiner/bips/commits/d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "created_at": "2025-09-04T07:02:07Z"
    },
    {
      "event": "reviewed",
      "id": 3183882354,
      "node_id": "PRR_kwDOAN28mc69xjBy",
      "url": null,
      "actor": null,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-04T08:18:47Z",
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1951#pullrequestreview-3183882354",
      "submitted_at": "2025-09-04T08:18:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321154194",
      "pull_request_review_id": 3183882354,
      "id": 2321154194,
      "node_id": "PRRC_kwDOAN28mc6KWgCS",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  ",
      "path": "bip-encrypted-backup.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How about: Compact encryption scheme for non-seed wallet data\r\n\r\nOr some other wording to make it clear this isn't for storing keys.",
      "created_at": "2025-09-04T07:45:36Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321154194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321154194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321158710",
      "pull_request_review_id": 3183882354,
      "id": 2321158710,
      "node_id": "PRRC_kwDOAN28mc6KWhI2",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.",
      "path": "bip-encrypted-backup.md",
      "position": 29,
      "original_position": 29,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The abstract should also explicitly state that it's not intended for storing private key material.",
      "created_at": "2025-09-04T07:47:26Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321158710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321158710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321161670",
      "pull_request_review_id": 3183882354,
      "id": 2321161670,
      "node_id": "PRRC_kwDOAN28mc6KWh3G",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  ",
      "path": "bip-encrypted-backup.md",
      "position": 53,
      "original_position": 53,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "privacy risk",
      "created_at": "2025-09-04T07:48:31Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321161670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321161670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321163680",
      "pull_request_review_id": 3183882354,
      "id": 2321163680,
      "node_id": "PRRC_kwDOAN28mc6KWiWg",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  ",
      "path": "bip-encrypted-backup.md",
      "position": 64,
      "original_position": 64,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "decrypted",
      "created_at": "2025-09-04T07:49:18Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321163680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321163680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321165717",
      "pull_request_review_id": 3183882354,
      "id": 2321165717,
      "node_id": "PRRC_kwDOAN28mc6KWi2V",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the",
      "path": "bip-encrypted-backup.md",
      "position": 65,
      "original_position": 65,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't understand what you mean with this last sentence. Also do \"keys\" mean private keys or public keys?",
      "created_at": "2025-09-04T07:50:08Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321165717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321165717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321172572",
      "pull_request_review_id": 3183882354,
      "id": 2321172572,
      "node_id": "PRRC_kwDOAN28mc6KWkhc",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation",
      "path": "bip-encrypted-backup.md",
      "position": 38,
      "original_position": 38,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This section could be shorter imo. It feels a bit repetitive. You can also link to the Delving post for more background.",
      "created_at": "2025-09-04T07:52:58Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321172572",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321172572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321176670",
      "pull_request_review_id": 3183882354,
      "id": 2321176670,
      "node_id": "PRRC_kwDOAN28mc6KWlhe",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  ",
      "path": "bip-encrypted-backup.md",
      "position": 116,
      "original_position": 116,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Imo the primary motivation for this proposal is to store a descriptor or policy (they're interchangeable). Storing additional information is nice to have.",
      "created_at": "2025-09-04T07:54:35Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321176670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321176670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321180524",
      "pull_request_review_id": 3183882354,
      "id": 2321180524,
      "node_id": "PRRC_kwDOAN28mc6KWmds",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,",
      "path": "bip-encrypted-backup.md",
      "position": 120,
      "original_position": 120,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Another way to put this is: private keys and seeds MUST be removed (neutered) from descriptors before storing them in this scheme. ",
      "created_at": "2025-09-04T07:56:10Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321180524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321180524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 120,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321185420",
      "pull_request_review_id": 3183882354,
      "id": 2321185420,
      "node_id": "PRRC_kwDOAN28mc6KWnqM",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 132,
      "original_position": 132,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Instead of `BEB` I would suggest `BIP_XXX` (replaced with the BIP number once assigned).",
      "created_at": "2025-09-04T07:57:52Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321185420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321185420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 132,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321193456",
      "pull_request_review_id": 3183882354,
      "id": 2321193456,
      "node_id": "PRRC_kwDOAN28mc6KWpnw",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to",
      "path": "bip-encrypted-backup.md",
      "position": 21,
      "original_position": 21,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This scheme is generic enough that I don't think it needs the word \"bitcoin\" in it. I also don't think we need to pick a \"marketing name\", something more boring like \"BIP_XXX encrypted backup\" should be fine.",
      "created_at": "2025-09-04T08:00:05Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321193456",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321193456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321197879",
      "pull_request_review_id": 3183882354,
      "id": 2321197879,
      "node_id": "PRRC_kwDOAN28mc6KWqs3",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  ",
      "path": "bip-encrypted-backup.md",
      "position": 133,
      "original_position": 133,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If it's possible to use subscript in markdown then I would prefer to keep the original notation with small i. Otherwise let's use an underscore, i.e. `s_i`",
      "created_at": "2025-09-04T08:01:29Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321197879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321197879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321215113",
      "pull_request_review_id": 3183882354,
      "id": 2321215113,
      "node_id": "PRRC_kwDOAN28mc6KWu6J",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.",
      "path": "bip-encrypted-backup.md",
      "position": 206,
      "original_position": 206,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I would prefer to keep this secret _and_ have multiple pieces of content in a single backup. So my suggestion is to move this inside the encrypted payload and then allow for multiple content entries.",
      "created_at": "2025-09-04T08:07:49Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321215113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321215113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 206,
      "original_line": 206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321220248",
      "pull_request_review_id": 3183882354,
      "id": 2321220248,
      "node_id": "PRRC_kwDOAN28mc6KWwKY",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |",
      "path": "bip-encrypted-backup.md",
      "position": 214,
      "original_position": 214,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe point out that unlisted types should still be decrypted and that new types may be added to the BIP.\r\n\r\nThat said, a more generic approach would be to allow a bit more space for the type. E.g. a ~4 digit number that must represent a BIP number. Or a short string like \"BIP-0329\". Both avoid the need to maintain a central register.\r\n\r\nAlso, if you allow multiple pieces of content in a single encrypted blob, it's useful to have a padding type.",
      "created_at": "2025-09-04T08:10:03Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321220248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321220248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 214,
      "original_line": 214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321224447",
      "pull_request_review_id": 3183882354,
      "id": 2321224447,
      "node_id": "PRRC_kwDOAN28mc6KWxL_",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+```\n+BIP: ?  \n+Layer: Applications  \n+Title: Bitcoin Encrypted Backup  \n+Author: // TBD  \n+Comments-Summary: No comments yet.  \n+Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-????  \n+Status: Draft  \n+Type: Informational  \n+Created: 2025-08-22  \n+License: BSD-2-Clause  \n+```\n+\n+## Introduction\n+\n+### Abstract\n+\n+This BIP defines a compact encryption scheme for **wallet descriptors** (BIP-0380),\n+**wallet policies** (BIP-0388), **labels** (BIP-0329), and\n+**wallet backup metadata** (json). The encrypted output—called a\n+*bitcoin encrypted backup* (BEB), enables users to outsource long‑term storage to\n+untrusted media or cloud services without revealing which addresses, scripts, or\n+number of cosigners are involved.Encryption keys are derived from the\n+lexicographically‑sorted public keys inside the descriptor or policy, so any party\n+who already holds one of those keys can later decrypt the backup without extra secrets\n+or round‑trips. The format uses AES-GCM-256 with a 96‑bit random nonce and a 128‑bit\n+authentication tag to provide confidentiality and integrity.\n+While initially designed for descriptors and policies, the same scheme encrypts labels\n+and backup metadata, allowing a uniform, vendor‑neutral, and future‑extensible backup format.\n+\n+### Copyright\n+\n+This BIP is licensed under the BSD 2-Clause License.  \n+Redistribution and use in source and binary forms, with or without modification, are\n+permitted provided that the above copyright notice and this permission notice appear\n+in all copies.\n+\n+### Motivation\n+\n+In practice, losing the **wallet descriptor** (or **wallet policy**) is often **as\n+catastrophic as losing the wallet’s seed** itself.  While the seed grants the\n+ability to sign, the descriptor grants a map to the coins.  In multisig or\n+miniscript contexts, keys alone are **not sufficient** for recovery: without the\n+original descriptor the wallet cannot reconstruct the script.\n+\n+Offline storage of descriptors has two practical obstacles:\n+\n+1. **Descriptors are hard to store offline.**  \n+   Descriptor string representation can be far longer than a 12/24-word seed phrase.  \n+Paper, steel, and other long-term analog media quickly become impractical for such\n+lengths, or error-prone to transcribe.\n+\n+2. **Online redundancy carries risk.**  \n+   Keeping backups on USB thumb-drives, computers, phones, or (worst) cloud drives\n+avoids the first problem but amplifies surveillance risk: anyone who gains these\n+**plaintext descriptors** learns the wallet’s public keys, script structure,\n+etc...  Even with encryption at the cloud provider, an attacker or a subpoena can\n+compel access, and each extra copy multiplies the attack surface.\n+\n+These constraints lead to an acute need for an **encrypted**, and\n+ideally compact backup format that:\n+\n+* can be **safely stored in multiple places**, including untrusted on-line services,  \n+* can be **decrypt only by intended holders** of specified public keys,  \n+* and keeps both **keys and plaintext** hidden from any party who lacks the\n+necessary key(s).\n+\n+In bitcoin signing, the **seed** is what protects the key material that allows\n+spending funds.  Unauthorized access to the seed implies that attackers gain\n+ownership of the funds (or at least the specific access controls that the keys are\n+protecting).  Hence, it is very valuable for an attacker to gain access to seed, and\n+they will be willing to increase the cost and the sophistication of the attacks,\n+because of the potential of high returns.\n+\n+Therefore, for seeds:\n+\n+* **digital copies are a high risk**: hardware signing devices have been built to\n+keep the seeds in a secure enclave, separate from the machine the software wallet is\n+running on.  \n+* **redundant copies of the seed are a high risk**: the seed has to be physically\n+protected, and multiple copies in multiple places inherently make protection harder.\n+\n+**Descriptors** and **xpubs** are only private: unauthorized access allows an\n+attacker to spy on your funds.  That is bad, but not nearly as valuable as taking\n+your funds.  Attackers might use this to get information about you, and to inform\n+further attacks, but will lose interest once attempting an attack becomes too costly\n+or sophisticated.\n+\n+For **descriptors**:\n+\n+* **digital copies are unavoidable**: each party using the account will\n+necessarily have a digital copy in their software wallet.  \n+* additional **redundant copies pose only a moderate risk**.\n+\n+Therefore, having multiple copies of the descriptor, whether physical, digital, on\n+your disk or on the cloud, is a valid means to reduce the risk of loss of funds,\n+unlike replicating the seed, which would incur a much higher risk.\n+\n+### Expected properties\n+\n+* **Encrypted**: this allows users to outsource its storage to untrusted parties,\n+for example, cloud providers, specialized services, etc.  \n+* **Has access control**: decrypting it should only be available to the desired\n+parties (typically, a subset of the cosigners).  \n+* **Easy to implement**: it should not require any sophisticated tools.  \n+* **Vendor-independent**: it should be easy to implement using any hardware signing\n+device.  \n+\n+### Scope\n+\n+This specification applies to creating, encrypting and decrypting a *Bitcoin Encrypted Backup*\n+of **public-key-only wallet material**, namely:\n+\n+- a **descriptor** (BIP-0380)  \n+- a **wallet policy** (BIP-0388)  \n+- **BIP-329 labels** (JSONL)  \n+- **wallet-wide JSON backup metadata**  \n+\n+All four payloads are encrypted under the same key derivation rules detailed below.\n+The scheme is **not** intended for descriptors or policies that contain private keys,\n+seeds, mnemonics, or any other secret key material, nor is it designed for real-time,\n+interactive workflows.\n+\n+## Specification\n+\n+Note: in the followings sections, the operator ⊕ refers to the bitwise XOR.\n+\n+### Secret generation\n+\n+* Let `p_1`, `p_2`, .., `p_n` be the public keys in the descriptor/wallet policy, in\n+increasing lexicographical order.  \n+* let `secret` = sha256(\"BEB_DECRYPTION_SECRET\" ‖ `p1` ‖ `p2` ‖ ... ‖ `pn`)  \n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `pi`)  \n+* let `individual_secret_i` = `secret` ⊕ `si`\n+\n+### AES-GCM Encryption\n+\n+* let `nonce` = random()  \n+* let `ciphertext` = aes_gcm_256_encrypt(`payload`, `secret`, `nonce`)\n+\n+### AES-GCM Decryption\n+\n+In order to decrypt the payload of a backup, the owner of a certain public key p\n+computes:\n+\n+* let `si` = sha256(\"BEB_INDIVIDUAL_SECRET\" ‖ `p`)  \n+* for each `individual_secret_i` generate `reconstructed_secret_i` =\n+`individual_secret_i` ⊕ `si`  \n+* for each `reconstructed_secret_i` process `payload` =\n+aes_gcm_256_decrypt(`ciphertext`, `secret`, `nonce`)\n+\n+Decryption will succeed if and only if **p** was one of the keys in the\n+descriptor/wallet policy.\n+\n+### Encoding\n+\n+The encrypted backup must be encoded as follows:\n+\n+`MAGIC` `VERSION` `DERIVATION_PATHS` `INDIVIDUAL_SECRETS` `CONTENT` `ENCRYPTION`\n+`ENCRYPTED_PAYLOAD`\n+\n+#### Magic\n+\n+`MAGIC`: 3 bytes which are ASCII/UTF-8 representation of **BEB** (`0x42, 0x45,\n+0x42`).\n+\n+#### Version\n+\n+`VERSION`: 1 byte unsigned integer representing the format version. The current\n+specification defines version `0x01`.\n+\n+#### Derivation Paths\n+\n+ Note: the derivation-path vector should not contain duplicates.  \n+ Derivation paths are optional; they can be useful to simplify the recovery process\n+if one has used a non-common derivation path to derive his key.\n+\n+`DERIVATION_PATH` follows this format:\n+\n+`COUNT`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+`...`  \n+`CHILD_COUNT` `CHILD` `...` `CHILD`  \n+\n+`COUNT`: 1-byte unsigned integer (0–255) indicating how many derivation paths are\n+included.  \n+`CHILD_COUNT`: 1-byte unsigned integer (1–255) indicating how many children are in\n+the current path.  \n+`CHILD`: 4-byte big-endian unsigned integer representing a child index per BIP-32.\n+\n+#### Individual Secrets\n+\n+At least one individual secret must be supplied.\n+\n+The `INDIVIDUAL_SECRETS` section follows this format:\n+\n+`COUNT`  \n+`INDIVIDUAL_SECRET`  \n+`INDIVIDUAL_SECRET`\n+\n+`COUNT`: 1-byte unsigned integer (1–255) indicating how many secrets are included.  \n+`INDIVIDUAL_SECRET`: 32-byte serialization of the derived individual secret.\n+\n+#### Content\n+\n+`CONTENT`: 1-byte unsigned integer identifying what has been encrypted.\n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | BIP-0380 Descriptor (string)           |\n+| 0x02   | BIP-0388 Wallet policy (string)        |\n+| 0x03   | BIP-0329 Labels (JSONL)                |\n+| 0x04   | Wallet backup (JSON)                   |\n+\n+#### Encrypted Payload\n+\n+`ENCRYPTED_PAYLOAD` follows this format:\n+\n+`TYPE` `NONCE` `LENGTH` `CIPHERTEXT`\n+\n+`TYPE`: 1-byte unsigned integer identifying the encryption algorithm.  \n+\n+| Value  | Definition                             |\n+|:-------|:---------------------------------------|\n+| 0x00   | Undefined                              |\n+| 0x01   | AES-GCM-256                            |\n+\n+`NONCE`: 12-byte nonce for AES-GCM-256.  \n+`LENGTH`: [compact\n+size](https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer)\n+integer representing ciphertext length.  \n+`CIPHERTEXT`: variable-length ciphertext.\n+\n+Note: `CIPHERTEXT` is followed by the end of the `ENCRYPTED_PAYLOAD` section.  \n+Compliant parsers MUST stop reading after consuming `LENGTH` bytes of ciphertext;  \n+additional trailing bytes are reserved for vendor-specific extensions and MUST\n+be ignored.\n+\n+## Rationale\n+\n+ - Why derivation paths are optional: When standard derivation paths are used, they are\n+ easily discoverable, making them straightforward to brute-force. Omitting them\n+ enhances privacy by reducing the information shared publicly about the descriptor\n+ scheme.\n+\n+- Why avoid including fingerprints in plaintext encoding: Including fingerprints leaks\n+direct information about the descriptor participants, which compromises privacy.\n+\n+\n+### Future Extensions\n+\n+The version field enables possible future enhancements:\n+\n+- Additional encryption algorithms  \n+- Support for threshold-based decryption",
      "path": "bip-encrypted-backup.md",
      "position": 256,
      "original_position": 256,
      "commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "original_commit_id": "d9d02ffc5b5c70ed19f1185e68f4882273c71eef",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "- hide the number of participants\r\n- bech32m export (convenient for text based storage like an email to yourself, as well as for printing - if you're patient)",
      "created_at": "2025-09-04T08:11:45Z",
      "updated_at": "2025-09-04T08:18:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1951#discussion_r2321224447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2321224447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1951"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    }
  ]
}