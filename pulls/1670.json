{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1670",
    "id": 2096169006,
    "node_id": "PR_kwDOAN28mc588QAu",
    "html_url": "https://github.com/bitcoin/bips/pull/1670",
    "diff_url": "https://github.com/bitcoin/bips/pull/1670.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1670.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1670",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1670/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
    "number": 1670,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Draft: QuBit - P2QRH spending rules",
    "user": {
      "login": "cryptoquick",
      "id": 285690,
      "node_id": "MDQ6VXNlcjI4NTY5MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cryptoquick",
      "html_url": "https://github.com/cryptoquick",
      "followers_url": "https://api.github.com/users/cryptoquick/followers",
      "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
      "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
      "repos_url": "https://api.github.com/users/cryptoquick/repos",
      "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This spent several months gathering feedback from the mailing list and from other advisors. This is hopefully polished enough to submit upstream.\r\n\r\nLet me know if you have any questions or feedback, and of course feel free to submit suggestions.\r\n\r\nThank you for your time.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 6924377447,
        "node_id": "LA_kwDOAN28mc8AAAABnLmdZw",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/PR%20Author%20action%20required",
        "name": "PR Author action required",
        "description": "Needs updates, has unaddressed review comments, or is otherwise waiting for PR author",
        "color": "e99695",
        "default": false
      }
    ],
    "created_at": "2024-09-27T16:08:30Z",
    "updated_at": "2024-10-09T01:46:46Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "d8555c5dc3bbf20ca0449b03607431df7a982f22",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "cryptoquick:p2qrh",
      "ref": "p2qrh",
      "sha": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 800253367,
        "node_id": "R_kgDOL7Lltw",
        "name": "bips",
        "full_name": "cryptoquick/bips",
        "owner": {
          "login": "cryptoquick",
          "id": 285690,
          "node_id": "MDQ6VXNlcjI4NTY5MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cryptoquick",
          "html_url": "https://github.com/cryptoquick",
          "followers_url": "https://api.github.com/users/cryptoquick/followers",
          "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
          "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
          "repos_url": "https://api.github.com/users/cryptoquick/repos",
          "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/cryptoquick/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/cryptoquick/bips",
        "archive_url": "https://api.github.com/repos/cryptoquick/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/cryptoquick/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/cryptoquick/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/cryptoquick/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/cryptoquick/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/cryptoquick/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/cryptoquick/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/cryptoquick/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/cryptoquick/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/cryptoquick/bips/contributors",
        "deployments_url": "https://api.github.com/repos/cryptoquick/bips/deployments",
        "downloads_url": "https://api.github.com/repos/cryptoquick/bips/downloads",
        "events_url": "https://api.github.com/repos/cryptoquick/bips/events",
        "forks_url": "https://api.github.com/repos/cryptoquick/bips/forks",
        "git_commits_url": "https://api.github.com/repos/cryptoquick/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/cryptoquick/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/cryptoquick/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/cryptoquick/bips.git",
        "issue_comment_url": "https://api.github.com/repos/cryptoquick/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/cryptoquick/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/cryptoquick/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/cryptoquick/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/cryptoquick/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/cryptoquick/bips/languages",
        "merges_url": "https://api.github.com/repos/cryptoquick/bips/merges",
        "milestones_url": "https://api.github.com/repos/cryptoquick/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/cryptoquick/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/cryptoquick/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/cryptoquick/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:cryptoquick/bips.git",
        "stargazers_url": "https://api.github.com/repos/cryptoquick/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/cryptoquick/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/cryptoquick/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/cryptoquick/bips/subscription",
        "tags_url": "https://api.github.com/repos/cryptoquick/bips/tags",
        "teams_url": "https://api.github.com/repos/cryptoquick/bips/teams",
        "trees_url": "https://api.github.com/repos/cryptoquick/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/cryptoquick/bips.git",
        "hooks_url": "https://api.github.com/repos/cryptoquick/bips/hooks",
        "svn_url": "https://github.com/cryptoquick/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 2,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 15702,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-04T12:39:34Z",
        "created_at": "2024-05-14T01:43:35Z",
        "updated_at": "2024-09-27T15:57:20Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a1be309f91f70b855626c823af317d9b1163309e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5346,
        "stargazers_count": 9297,
        "watchers_count": 9297,
        "size": 15638,
        "default_branch": "master",
        "open_issues_count": 45,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-08T02:46:24Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-10-08T14:54:46Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
      }
    },
    "author_association": "NONE",
    "draft": true,
    "additions": 272,
    "deletions": 0,
    "changed_files": 2,
    "commits": 5,
    "review_comments": 22,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDFmYTI0ODUwNmUyYmVkZDdlY2Y4ZjA0ZDE3ODRlNjMxNDdmNWMxODE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1fa248506e2bedd7ecf8f04d1784e63147f5c181",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/1fa248506e2bedd7ecf8f04d1784e63147f5c181",
      "tree": {
        "sha": "11f8127cae693badeca5371294c3e243ef32f86e",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/11f8127cae693badeca5371294c3e243ef32f86e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 11f8127cae693badeca5371294c3e243ef32f86e\nparent a1be309f91f70b855626c823af317d9b1163309e\nauthor Hunter Trujillo <cryptoquick@pm.me> 1727453114 -0600\ncommitter Hunter Trujillo <cryptoquick@pm.me> 1727453114 -0600\n\nQuBit - P2QRH spending rules - Final draft before submitting upstream to bitcoin/bips\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQRkQQe4PNsaHdVkx/5n2nwXlg36zwUCZvbXugAKCRBn2nwXlg36\nzz7XAP44btwYcvPB8NI+9Ep066TcquKQRAUKqwqkA39Yx8QjiQD+KH4qUCmIc9v+\nUc1AMC/TIM2KB7M+MuppEy3Di6zW+gI=\n=PuKN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/a1be309f91f70b855626c823af317d9b1163309e",
          "sha": "a1be309f91f70b855626c823af317d9b1163309e",
          "html_url": "https://github.com/bitcoin/bips/commit/a1be309f91f70b855626c823af317d9b1163309e"
        }
      ],
      "message": "QuBit - P2QRH spending rules - Final draft before submitting upstream to bitcoin/bips",
      "committer": {
        "name": "Hunter Trujillo",
        "email": "cryptoquick@pm.me",
        "date": "2024-09-27T16:05:14Z"
      },
      "author": {
        "name": "Hunter Trujillo",
        "email": "cryptoquick@pm.me",
        "date": "2024-09-27T16:05:14Z"
      },
      "sha": "1fa248506e2bedd7ecf8f04d1784e63147f5c181"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDZmNjdhM2Q2ODYwOTIxYmY4Njk0MDRlMTQyMzk1ODFjMTM5ZmY2OWQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6f67a3d6860921bf869404e14239581c139ff69d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6f67a3d6860921bf869404e14239581c139ff69d",
      "tree": {
        "sha": "aeeedde1962af0f58422ec867b9573cbada480d3",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/aeeedde1962af0f58422ec867b9573cbada480d3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aeeedde1962af0f58422ec867b9573cbada480d3\nparent 1fa248506e2bedd7ecf8f04d1784e63147f5c181\nauthor Hunter Trujillo <cryptoquick@pm.me> 1727454221 -0600\ncommitter Hunter Trujillo <cryptoquick@pm.me> 1727454221 -0600\n\nAdd pqNTRUsign to .typos.toml.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQRkQQe4PNsaHdVkx/5n2nwXlg36zwUCZvbcDQAKCRBn2nwXlg36\nz2gpAP9qbYK4i8COGGKDQ8+KYAcZUmi9MkJ2pXJx8vkemaZHjQD9HDA9Pk9oBG9J\n8OiF0LC34jyufp6dEyBJzC+VaebQCgQ=\n=lJgQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1fa248506e2bedd7ecf8f04d1784e63147f5c181",
          "sha": "1fa248506e2bedd7ecf8f04d1784e63147f5c181",
          "html_url": "https://github.com/bitcoin/bips/commit/1fa248506e2bedd7ecf8f04d1784e63147f5c181"
        }
      ],
      "message": "Add pqNTRUsign to .typos.toml.",
      "committer": {
        "name": "Hunter Trujillo",
        "email": "cryptoquick@pm.me",
        "date": "2024-09-27T16:23:41Z"
      },
      "author": {
        "name": "Hunter Trujillo",
        "email": "cryptoquick@pm.me",
        "date": "2024-09-27T16:23:41Z"
      },
      "sha": "6f67a3d6860921bf869404e14239581c139ff69d"
    },
    {
      "event": "convert_to_draft",
      "id": 14434743535,
      "node_id": "CTDE_lADOAN28mc6YMAnczwAAAANcYLTv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14434743535",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T18:18:58Z"
    },
    {
      "event": "reviewed",
      "id": 2334631534,
      "node_id": "PRR_kwDOAN28mc6LJ6Zu",
      "url": null,
      "actor": null,
      "commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1670#pullrequestreview-2334631534",
      "submitted_at": "2024-09-27T20:55:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
    },
    {
      "event": "reviewed",
      "id": 2334635312,
      "node_id": "PRR_kwDOAN28mc6LJ7Uw",
      "url": null,
      "actor": null,
      "commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1670#pullrequestreview-2334635312",
      "submitted_at": "2024-09-27T20:59:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
    },
    {
      "event": "reviewed",
      "id": 2334683627,
      "node_id": "PRR_kwDOAN28mc6LKHHr",
      "url": null,
      "actor": null,
      "commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1670#pullrequestreview-2334683627",
      "submitted_at": "2024-09-27T21:41:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
    },
    {
      "event": "labeled",
      "id": 14437289209,
      "node_id": "LE_lADOAN28mc6YMAnczwAAAANch4z5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14437289209",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T22:04:43Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 2334779205,
      "node_id": "PRR_kwDOAN28mc6LKedF",
      "url": null,
      "actor": null,
      "commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Interesting (the question of resistance to quantum computing may have resurged lately with the publication of https://scottaaronson.blog/?p=8329, see also https://x.com/n1ckler/status/1839215426091249778).",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1670#pullrequestreview-2334779205",
      "submitted_at": "2024-09-27T22:56:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14441868370,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANczWxS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14441868370",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T18:00:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14441871643,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANczXkb",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14441871643",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T18:01:52Z"
    },
    {
      "event": "reviewed",
      "id": 2335387538,
      "node_id": "PRR_kwDOAN28mc6LMy-S",
      "url": null,
      "actor": null,
      "commit_id": "d6d15ad21c8cc20838b5bf5f5848833b47cbf83f",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "kingcathy23",
        "id": 115429405,
        "node_id": "U_kgDOBuFQHQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/115429405?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kingcathy23",
        "html_url": "https://github.com/kingcathy23",
        "followers_url": "https://api.github.com/users/kingcathy23/followers",
        "following_url": "https://api.github.com/users/kingcathy23/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kingcathy23/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kingcathy23/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kingcathy23/subscriptions",
        "organizations_url": "https://api.github.com/users/kingcathy23/orgs",
        "repos_url": "https://api.github.com/users/kingcathy23/repos",
        "events_url": "https://api.github.com/users/kingcathy23/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kingcathy23/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1670#pullrequestreview-2335387538",
      "submitted_at": "2024-09-28T18:10:24Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14441888946,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANczbyy",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14441888946",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T18:10:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14441891650,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANczcdC",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14441891650",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T18:12:10Z"
    },
    {
      "event": "review_requested",
      "id": 14441984555,
      "node_id": "RRE_lADOAN28mc6YMAnczwAAAANczzIr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14441984555",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T18:55:48Z",
      "requested_reviewer": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 14441984579,
      "node_id": "RRE_lADOAN28mc6YMAnczwAAAANczzJD",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14441984579",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T18:55:49Z",
      "requested_reviewer": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14444058416,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANc7tcw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14444058416",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T07:22:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14454505029,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANdjj5F",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14454505029",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T11:37:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14454584693,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANdj3V1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14454584693",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T11:42:50Z"
    },
    {
      "event": "reviewed",
      "id": 2338756440,
      "node_id": "PRR_kwDOAN28mc6LZpdY",
      "url": null,
      "actor": null,
      "commit_id": "7f4456de30db2528bcfc1dddbbc3c7533169646a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1670#pullrequestreview-2338756440",
      "submitted_at": "2024-09-30T23:02:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGQ4M2MyOWQ1OWI3ODQ0M2UyMGEwNDAzOTVjYTIzNzc3YmZjMzMyZjE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d83c29d59b78443e20a040395ca23777bfc332f1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/d83c29d59b78443e20a040395ca23777bfc332f1",
      "tree": {
        "sha": "474b9cd02dfdee6322b2473c3ec493d21640d647",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/474b9cd02dfdee6322b2473c3ec493d21640d647"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 474b9cd02dfdee6322b2473c3ec493d21640d647\nparent 6f67a3d6860921bf869404e14239581c139ff69d\nauthor Hunter Trujillo <cryptoquick@pm.me> 1727546251 -0600\ncommitter Hunter Trujillo <cryptoquick@pm.me> 1727744601 -0600\n\nQuBit - P2QRH\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQRkQQe4PNsaHdVkx/5n2nwXlg36zwUCZvtKWQAKCRBn2nwXlg36\nz9TMAP9FeMMUBGFOULw8dUir73X3RTbrNsLItKS6WnVlkIxK3wEA8ZAIxxsh7G0C\np12I+cGnzAJax9BrfFBM5H7ztSYEhgA=\n=AfXF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6f67a3d6860921bf869404e14239581c139ff69d",
          "sha": "6f67a3d6860921bf869404e14239581c139ff69d",
          "html_url": "https://github.com/bitcoin/bips/commit/6f67a3d6860921bf869404e14239581c139ff69d"
        }
      ],
      "message": "QuBit - P2QRH",
      "committer": {
        "name": "Hunter Trujillo",
        "email": "cryptoquick@pm.me",
        "date": "2024-10-01T01:03:21Z"
      },
      "author": {
        "name": "Hunter Trujillo",
        "email": "cryptoquick@pm.me",
        "date": "2024-09-28T17:57:31Z"
      },
      "sha": "d83c29d59b78443e20a040395ca23777bfc332f1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14464462151,
      "node_id": "HRFPE_lADOAN28mc6YMAnczwAAAANeJi1H",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14464462151",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T01:03:25Z"
    },
    {
      "event": "commented",
      "id": 2386654766,
      "node_id": "IC_kwDOAN28mc6OQXYu",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2386654766",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T18:09:31Z",
      "updated_at": "2024-10-01T18:17:06Z",
      "author_association": "MEMBER",
      "body": "@cryptoquick Can you begin to write up the sections currently marked as TBD, along with a backwards compatibility section (to describe incompatibilities, severity, and suggest mitigations, where applicable/relevant)?  We've begun to reserve a range of BIP numbers for this topic, pending continued progress here.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1670#issuecomment-2386654766",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1670"
    },
    {
      "event": "mentioned",
      "id": 14477292662,
      "node_id": "MEE_lADOAN28mc6YMAnczwAAAANe6fR2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14477292662",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T18:09:32Z"
    },
    {
      "event": "subscribed",
      "id": 14477292686,
      "node_id": "SE_lADOAN28mc6YMAnczwAAAANe6fSO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14477292686",
      "actor": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-01T18:09:33Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGFlMDkzNmFlNmY0NmZhMTIzMDFiNTIzYzliMjZkZDRhZjk3NjlmMzE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae0936ae6f46fa12301b523c9b26dd4af9769f31",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/ae0936ae6f46fa12301b523c9b26dd4af9769f31",
      "tree": {
        "sha": "4bc48f6d2f84da5507e1c899be53bc7defb2bf8f",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/4bc48f6d2f84da5507e1c899be53bc7defb2bf8f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4bc48f6d2f84da5507e1c899be53bc7defb2bf8f\nparent d83c29d59b78443e20a040395ca23777bfc332f1\nauthor Jameson Lopp <jameson.lopp@gmail.com> 1727879443 -0400\ncommitter GitHub <noreply@github.com> 1727879443 -0400\n\ntypo fix",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJm/VkTCRC1aQ7uu5UhlAAAiaYQAJOcl/gN6ZKMloz3mmWC01qx\nQTiAGzs0MbaTxBz+ypbrf4mfWZxnQ0b5iGGBv4Pq24ithgLa7M5vPfoPlR1x43lO\nCTeHIJ3upxe4ft1a7YUJmjGK2vGxrZ+shzQ453HvMiTbCuneYyk/Xn5QijZbtgIu\nl1EnnPIF7Ozr4XbQg0Huwu9rZ4SRCQzJ9QkC/PJtDoN+cxPNiUvapnR7inMC4h3n\n+OTgvCZl+4TLZGkoeLprZOi+nhAmsZ+JJ902XrDUVGX4QwpI3VIE+kpOhwBan2Py\n9sHEbsmpIDKCxzIezhShqkddfDPKvJPD5iNJvNgXpBa8BgKlmIYRKXNLcaK/FTNj\n3R1hCqUlobXLsejY0lCXB3ZfpWl1tz0/9fzcy+WMt9R4wP9fj5QsiEkQUzdriX9Y\n12tA/Rba2avnG0KCjnopv7OLhw7SJ8Ry0KV4cy+eV3kORU0K43/4fEcK5jWIMelJ\no9ZPJ/+zVumR0LFkI4ARrYBdx1VYSDHLAPvHtcPVkfBhPUMa6OAHnIznL+f1mFPC\n9Ud2D4bxcM9KDbkf3q8G6FdKHkhH5ZXzoZ4WHRtolxD4td8ACP2uIW4szXenVmDc\ndorVf3RJijPsXDHbe84/KvAkXIpsB/vUBIrjeVGjDa0OrOcAhuzfH0sgeHIIbKKz\n2H/B0W0i5NnRGJnpocMT\n=/HPO\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d83c29d59b78443e20a040395ca23777bfc332f1",
          "sha": "d83c29d59b78443e20a040395ca23777bfc332f1",
          "html_url": "https://github.com/bitcoin/bips/commit/d83c29d59b78443e20a040395ca23777bfc332f1"
        }
      ],
      "message": "typo fix",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-10-02T14:30:43Z"
      },
      "author": {
        "name": "Jameson Lopp",
        "email": "jameson.lopp@gmail.com",
        "date": "2024-10-02T14:30:43Z"
      },
      "sha": "ae0936ae6f46fa12301b523c9b26dd4af9769f31"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGQ4OWI3YzVjMDgyOGEyMzMwZThjYzI1NTIwMDZkMWNmZDBiN2IwZDI",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "tree": {
        "sha": "4bc48f6d2f84da5507e1c899be53bc7defb2bf8f",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/4bc48f6d2f84da5507e1c899be53bc7defb2bf8f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4bc48f6d2f84da5507e1c899be53bc7defb2bf8f\nparent d83c29d59b78443e20a040395ca23777bfc332f1\nparent ae0936ae6f46fa12301b523c9b26dd4af9769f31\nauthor Hunter Beast <hunter@cryptoquick.com> 1728045574 -0600\ncommitter GitHub <noreply@github.com> 1728045574 -0600\n\nMerge pull request #13 from jlopp/patch-3\n\ntypo fix",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJm/+IGCRC1aQ7uu5UhlAAADL4QAGYta0qcfrZJY1KlxIzW10sb\ns0H9l5Uj/jYQvl4ze4NlKPI8RyAuFZQvxNC3MDoRJB1F7dnPDAGvy2eVLyiVKkPB\n6fMwI5VwwDsAsR73dEsSMj7p6H4AB+CdEwMTG8FtOzD6Zv+Emughu8H3GWqdzt4/\n1E4IftDNQLhBCgetsTbXqQFJCdmZAOmtb8zxS45oDWh70M7eS4Sv2kiT2RELQdXi\nA6tB9Xi02ctmTTz8Tj0O4uz2dRtLoZrFspmcO2bV4svxc8rYGMPKfu2Yp9zb6UT2\nItydCZR6zJPnfTtuEuHm7wb6ltITBOdoGROvciWTbiMezxhLzltHDVAXMUcb4h6s\nLq6EHX4PqdRTOmYqF6++RpS01riD1rE6M/nTpleWBAjl8npd4ZSZOLHfo1aMbgAa\nbtTc9MH2JMWEAk2lDN7olvrS/2X2j83zgJC6kYNVRUJYKEuSx9G7im1j7dOF40+q\nECjvLWhBy1mPo2fEmq7OikKJRKqqbX13KMfu7Abo7s21zeuA133taxZDNqNMuNly\nauiBt/PBazoTNCyVSqQIsRQ6tGqERARh9dfwO3Ql2Ob1vkp/4Z0Xg8ukgw0kisHc\nL9TMyOEB2kvNE666FudmI916UaEsgVhy10fqeRnOLeT50gd8HMsLL1H5WvMaeMKM\no8LdN4LcwFVIvdYefL0P\n=wBbT\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d83c29d59b78443e20a040395ca23777bfc332f1",
          "sha": "d83c29d59b78443e20a040395ca23777bfc332f1",
          "html_url": "https://github.com/bitcoin/bips/commit/d83c29d59b78443e20a040395ca23777bfc332f1"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ae0936ae6f46fa12301b523c9b26dd4af9769f31",
          "sha": "ae0936ae6f46fa12301b523c9b26dd4af9769f31",
          "html_url": "https://github.com/bitcoin/bips/commit/ae0936ae6f46fa12301b523c9b26dd4af9769f31"
        }
      ],
      "message": "Merge pull request #13 from jlopp/patch-3\n\ntypo fix",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2024-10-04T12:39:34Z"
      },
      "author": {
        "name": "Hunter Beast",
        "email": "hunter@cryptoquick.com",
        "date": "2024-10-04T12:39:34Z"
      },
      "sha": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2"
    },
    {
      "event": "labeled",
      "id": 14564663989,
      "node_id": "LE_lADOAN28mc6YMAnczwAAAANkHyK1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14564663989",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T01:46:46Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779153889",
      "pull_request_review_id": 2334631534,
      "id": 1779153889,
      "node_id": "PRRC_kwDOAN28mc5qC7vh",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.\n+\n+It is proposed to implement a Pay to Quantum Resistant Hash (P2QRH) address type that relies on a post-quantum cryptographic (PQC) signature algorithm. This new address type protects transactions submitted to the mempool and helps preserve the free market by reducing the need for private, out-of-band mempool transactions.\n+\n+The following table is non-exhaustive, but meant to inform the average bitcoin user whether their bitcoin is vulnerable to quantum attack.\n+\n+{|\n+|+ Vulnerable address types\n+|-\n+! Address type !! Vulnerable !! Prefix !! Example\n+|-\n+| P2PK || Yes || 04 || 0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee\n+|-\n+| P2PKH || No || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
      "path": "bip-p2qrh.mediawiki",
      "position": 48,
      "original_position": 46,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It might be worth discussing the conditions under which P2PKH is vulnerable in more detail. While the Deloitte report covers this, this table leaves the impression that P2PKH is safe.\r\n\r\n```suggestion\r\n| P2PKH || No (trusted miner) || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\r\n| P2PKH (reused) || No || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\r\n```\r\n\r\n",
      "created_at": "2024-09-27T20:55:55Z",
      "updated_at": "2024-09-27T20:55:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779153889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779153889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779156396",
      "pull_request_review_id": 2334635312,
      "id": 1779156396,
      "node_id": "PRRC_kwDOAN28mc5qC8Ws",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 33,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about public keys that are derived via BIP-32 non-hardened child keys? While the public key is not reused, one might be able to guess and check child keys from revealed public keys and learn the public key for a p2pkh address prior to seeing a signature for that public key. Is there a reason this is not a concern?",
      "created_at": "2024-09-27T20:59:16Z",
      "updated_at": "2024-09-27T20:59:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779156396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779156396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779190521",
      "pull_request_review_id": 2334683627,
      "id": 1779190521,
      "node_id": "PRRC_kwDOAN28mc5qDEr5",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": null,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reading \"Benchmarking the quantum cryptanalysis of symmetric, public-key and hash-based cryptographic schemes\" it is unclear to me how the number 10^40 for applying Grover to Bitcoin's POW was arrived at in this BIP. It might be worth creating a footnote that details the derivation of this result from that paper.",
      "created_at": "2024-09-27T21:41:32Z",
      "updated_at": "2024-09-27T21:41:33Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779190521",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779190521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779282281",
      "pull_request_review_id": 2334779205,
      "id": 1779282281,
      "node_id": "PRRC_kwDOAN28mc5qDbFp",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.\n+\n+It is proposed to implement a Pay to Quantum Resistant Hash (P2QRH) address type that relies on a post-quantum cryptographic (PQC) signature algorithm. This new address type protects transactions submitted to the mempool and helps preserve the free market by reducing the need for private, out-of-band mempool transactions.\n+\n+The following table is non-exhaustive, but meant to inform the average bitcoin user whether their bitcoin is vulnerable to quantum attack.\n+\n+{|\n+|+ Vulnerable address types\n+|-\n+! Address type !! Vulnerable !! Prefix !! Example\n+|-\n+| P2PK || Yes || 04 || 0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee\n+|-\n+| P2PKH || No || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n+|-\n+| P2WPKH || No || bc1q || bc1qsnh5ktku9ztqeqfr89yrqjd05eh58nah884mku\n+|-\n+| P2TR || Yes || bc1p || bc1p92aslsnseq786wxfk3ekra90ds9ku47qttupfjsqmmj4z82xdq4q3rr58u\n+|}\n+\n+It should be noted that Taproot addresses are vulnerable in that they encode a 32-byte x-only public key, from which a full public key can be reconstructed.\n+\n+Should quantum advantage manifest, a convention is proposed in spending the full 65-byte P2PK key used by the coinbase output in Block 1 back to itself. It is proposed to call this the [https://mempool.space/address/0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee Canary address]. The reasoning behind this is that this can only be done by Satoshi, and given his absence, this can only be spent by others if there is a significant vulnerability in secp256k1. Should the Canary coins move, that will signal that bitcoin is presently vulnerable. Without the Canary, or an address like it, there may be some doubt as to whether the coins were moved with keys belonging to the original owner.\n+\n+As an interesting aside, coinbase outputs to P2PK keys go as far as block 200,000, so it's possible there are between 1-2 million coins that are vulnerable from the first epoch. These coins can be considered \"Satoshi's Shield.\" Any addresses with a balance of less than the original block subsidy of 50 coins can be considered incentive incompatible to capture until all of these are mined.\n+\n+It's for this reason that, for those who wish to be prepared for quantum emergency, it is recommended that no more than 50 bitcoin are kept under a single distinct, unused Native SegWit (P2WPKH, \"bc1q\") address at a time. This is assuming that the attacker is financially-motivated instead of, for example, a nation state looking to break confidence in Bitcoin. Additionally, this assumes that other vulnerable targets such as central banks have upgraded their cryptography already.\n+\n+The Commercial National Security Algorithm Suite (CNSA) 2.0 has a timeline for software and networking equipment to be upgraded by 2030, with browsers and operating systems fully upgraded by 2033.\n+\n+Lastly, it is worth noting by way of comparison that [https://ethresear.ch/t/how-to-hard-fork-to-save-most-users-funds-in-a-quantum-emergency/18901 Vitalik Buterin's proposed solution] in an Ethereum quantum emergency is quite different from the approach in this BIP. His plan involves a hard fork of the chain, reverting all blocks after a sufficient amount of theft, and using STARKs based on BIP-32 seeds to act as the authoritative secret when signing. These measures are deemed far too heavy-handed for bitcoin.\n+\n+\n+=== Rationale ===\n+\n+This is the first in a series of BIPs under a QuBit soft fork. A qubit is a fundamental unit of quantum computing, and the capital B represents its connection to bitcoin. The name QuBit also rhymes to some extent with SegWit.\n+\n+It is proposed to use SegWit version 3. This results in addresses that start with bc1r, which could be a useful way to remember that these are [r]esistant addresses, similar to how bc1q corresponds to Se[q]Wit and bc1p corresponds to Ta[p]root. This is referencing the lookup table under [https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki#bech32 BIP-173].\n+\n+The proposal above also leaves a gap in case it makes sense to use version 2, or bc1z, for implementation of other address formats such as those that employ Cross Input Signature Aggregation (CISA).\n+\n+P2QRH is meant to be implemented on top of P2TR, combining the security of classical Schnorr signatures along with post-quantum cryptography. This is a form of \"hybrid cryptography\" such that no regression in security is presented should a vulnerability exist in one of the signature algorithms used. One key distinction between P2QRH and P2TR however is that P2QRH will encode a hash of the public key. This is a significant change in how Taproot works, but is necessary to avoid exposing public keys on-chain in advance of attackers.\n+\n+P2QRH uses a 32-byte HASH256 (specifically SHA-256 twice-over, which is similar to that used in [https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki#specification BIP-16]) of the public key to reduce the size of new outputs and also to increase security by not having the public key available on-chain. This hash serves as a minimal cryptographic commitment to a public key. It goes into the output spend script, which does not receive the witness discount.\n+\n+Not having public keys exposed on-chain is an important step for quantum security. Otherwise funds would need to be spent to new addresses on a regular basis in order to prevent the possibility of a \"long-range CRQC attack\" recovering the key behind high value addresses. A long-range quantum attack can be considered one performed with chain data, such as that from a used address or one encoded in a spend script. A \"short-range quantum attack\" would be one done on keys in the mempool, which is seen as impractical given transaction throughput and block time. As the value being sent increases, so too should the fee in order to commit the transaction to the chain as soon as possible.  This makes useless the public key revealed by spending a UTXO, so long as it is never reused.\n+\n+Post-quantum public keys are generally larger than those used by ECC, depending on the security level. To promote user adoption and general user-friendliness, the most secure variant (NIST V, 256 bit) is proposed, despite the increase in key length and verification time.\n+\n+Support for FALCON signatures will be introduced first, with the intention of adding SQIsign and other post-quantum algorithms as they are approved. By way of comparison, FALCON signatures are roughly 4x larger than SQIsign signatures and 20x larger than Schnorr signatures. FALCON is a more conservative approach to applied lattice cryptography than SQIsign, and its use has recently been approved by NIST. NIST approval streamlines implementations through establishing consensus in the scientific and developer community. However, even SQIsign signatures are roughly 5x larger than Schnorr signatures. This means, to maintain present transaction throughput, an increase in the witness discount will likely be desired in a QuBit soft fork. That will be specified in a future QuBit BIP.\n+\n+An increase in the witness discount must not be taken lightly.  It must be resistant to applications that might take advantage of this discount (e.g. storage of arbitrary data as seen with \"inscriptions\") without a corresponding increase in economic activity. Such an increase would not only impact node runners but those with inscriptions would also have the scarcity of their non-monetary assets affected. The only way to prevent this while also increasing the discount is to have a completely separate witness, a quantum witness, or \"quitness,\" that is solely responsible for providing post-quantum signatures.\n+\n+To address the risk of arbitrary data being stored using P2QRH (QuBit) addresses, very specific rules will be applied to spending from the witness stack in SegWit v3 outputs. A fixed signature size will be necessary for spending the output, and the output must be spendable to be considered valid within node consensus. A fixed signature size will also be helpful to disambiguate between signature types without an additional version byte, as SQIsign signatures are substantially smaller than FALCON signatures. Consequently, the correct signature algorithm can be inferred through byte length. The public key and signature will be pushed separately to the quitness stack. Multiple signatures can be included in order to support multisig applications, and also for spending multiple inputs.\n+\n+Since only valid signatures can be committed to in a SegWit v3 quitness, arbitrary data cannot be added by miners, as that would affect the consensus of their block. A CRQC operator is economically disincentivized from computing a spendable public key that matched arbitrary signature data due to the cost of that computation. That is because the cost of such a computation could prove quite substantial, rather than simply putting the arbitrary data within a Taproot witness. Doing the work to meet the requirement for it to be consensus-valid data would prove cost-prohibitive.\n+\n+Additionally, it should be noted, whether an output with a P2QRH spend script corresponds to a FALCON or SQIsign signature is not known until the output is spent.\n+\n+While it might be seen as a maintenance burden for bitcoin ecosystem devs to go from a single cryptosystem implementation to two distinct cryptosystems-- and it most certainly is-- the ramifications of a chain broken through extrinsic factors should provide sufficient motivation. An increase in software maintenance everywhere signatures are used should be seen as an acceptable compromise for maintained integrity of bitcoin transfers during a regime of quantum advantage.\n+\n+In the distant future, following the implementation of the P2QRH address format in a QuBit soft fork, there will likely be a need for Pay to Quantum Secure (P2QS) addresses. These will require specialized quantum hardware for signing, while still [https://quantum-journal.org/papers/q-2023-01-19-901/ using public keys that are verifiable via classical means]. Additional follow-on BIPs will be needed to implement P2QS. However, until specialized quantum cryptography hardware is widespread, quantum resistant addresses should be an adequate intermediate solution.\n+\n+\n+== Description ==\n+\n+We first build up a definition of the signature scheme by going through the design choices. Afterwards, we specify the exact encodings and operations.\n+\n+\n+=== Design ===\n+\n+For P2QRH descriptors, <code>qrh()</code> should be used.\n+\n+> Further specific details to be completed later in the draft process as outlined in [https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki BIP-2]\n+\n+\n+== Security ==\n+\n+{|\n+|+ Proposed quantum resistant signature algorithms ordered by largest to smallest signature size, NIST I\n+|-\n+! Signature algorithm !! Year first introduced !! Signature size, NIST I !! Public key size, NIST I\n+|-\n+| [https://sphincs.org/data/sphincs+-r3.1-specification.pdf SPHINCS+ Rd. 3.1 (FIPS 205 - SLH-DSA)] || 2015 || 7856 bytes || 32 bytes\n+|-\n+| [https://pq-crystals.org/dilithium/ CRYSTALS-Dilithium (FIPS 204 - ML-DSA)] || 2017 || 2420 bytes || 1312 bytes\n+|-\n+| [https://eprint.iacr.org/2014/457.pdf pqNTRUsign] || 2016 || 702 bytes || 752 bytes\n+|-\n+| [https://falcon-sign.info FALCON (FIPS 206 - FN-DSA)] || 2017 || 666 bytes || 897 bytes\n+|-\n+| [https://eprint.iacr.org/2022/1155.pdf HAWK] || 2022 || 652 bytes || 1006 bytes\n+|-\n+| [https://sqisign.org SQIsign] || 2023 || 177 bytes || 64 bytes\n+|-\n+| [https://eprint.iacr.org/2024/760.pdf SQIsign2D-West] || 2024 || 148 bytes || 66 bytes\n+|-\n+| [https://link.springer.com/content/pdf/10.1007/978-3-031-58716-0_1.pdf SQIsignHD] || 2024 || 109 bytes || not provided\n+|}\n+\n+{|\n+|+ Proposed quantum resistant signature algorithms ordered by largest to smallest signature size, NIST V\n+|-\n+! Signature algorithm !! Year first introduced !! Signature size, NIST V !! Public key size, NIST V\n+|-\n+| Lamport signature || 1977 || 8192 bytes || 16384 bytes\n+|-\n+| SPHINCS+ Rd. 3.1 (FIPS 205 - SLH-DSA) || 2015 || 29792 bytes || 64 bytes\n+|-\n+| CRYSTALS-Dilithium (FIPS 204 - ML-DSA) || 2017 || 4595 bytes || 2592 bytes\n+|-\n+| pqNTRUsign || 2016 || 1814 bytes || 1927 bytes\n+|-\n+| FALCON (FIPS 206 - FN-DSA) || 2017 || 1280 bytes || 1793 bytes\n+|-\n+| HAWK || 2022 || 1261 bytes || 2329 bytes\n+|-\n+| SQIsign || 2023 || 335 bytes || 128 bytes\n+|-\n+| SQIsign2D-West || 2024 || 294 bytes || 130 bytes\n+|-\n+| SQIsignHD || 2023 || not provided || not provided\n+|}\n+\n+As shown, supersingular elliptic curve quaternion isogeny signature algorithms represent the state of the art in post-quantum cryptography, beyond lattice cryptography alone, especially when key and signature length are major constraints. This makes inclusion of SQIsign attractive, and support is planned, but it will be some time until it is approved for production use. Meanwhile, FALCON signatures are already approved and have achieved broader community consensus.\n+\n+In comparison, the size of currently used signature algorithms are:\n+\n+* ECDSA - 70-72 bytes\n+* Schnorr - 64 bytes\n+\n+In comparison to year, secp256k1 [https://www.secg.org/SEC1-Ver-1.0.pdf was originally specified in 2000].\n+\n+One consideration for choosing an algorithm is its maturity. secp256k1 was already 8 years old by the time it was chosen as bitcoin's curve. Isogeny cryptography when it was first introduced was broken over a weekend.\n+\n+Ideally SQIsign also proves to be flexible enough to support [https://www.pierrickdartois.fr/homepage/wp-content/uploads/2022/04/Report_OSIDH_DARTOIS.pdf Isogeny Diffie-Hellman] to replace ECDH applications, and also provide methods for the key tweaking necessary to support TapScript for P2QR addresses. Additionally, isogeny-based post-quantum cryptography is based on higher-order elliptic curves, and so it might be possible to implement Isogeny Schnorr signatures.\n+\n+Signature verification speed as it compares to Schnorr or ECDSA isn't seen as high a consideration as signature size due to block space being the primary fee constraint. As a P2QRH implementation materializes, a benchmark will be added for performance comparison. Fortunately, SQIsign signatures are substantially faster to verify than it is to generate keys or to sign, which is a major consideration when a transaction need only be signed once, or a handful of times with PSBT, compared to being verified simultaneously on tens of thousands of nodes. Key generation may need to cached in [https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki BIP-32 HD wallets].\n+\n+An additional consideration is security levels. Longer signature sizes provide more security. NIST has standardized five security levels for post-quantum cryptography. NIST security level I provides security equivalent to 128-bit keys, and security level V provides 256-bit security.\n+\n+\n+== Specification ==\n+\n+How the quitness is differentiated from the witness can be accomplished similar to how [https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#user-content-Transaction_ID BIP-141] introduced the marker and flag, with the QuBit flag being set to 0x02. This means all QuBit transactions are also SegWit transactions. The additional data would be included as a second array of byte arrays following the witness stack.\n+\n+The new transaction serialization format would be as follows:\n+\n+  [nVersion][marker][flag][txins][txouts][witness][quitness][nLockTime]\n+\n+WIP\n+\n+=== Public Key Generation ===\n+\n+TBD, pending test vectors\n+\n+=== Public Key Conversion ===\n+\n+TBD\n+\n+=== Default Signing ===\n+\n+TBD\n+\n+=== Alternative Signing ===\n+\n+TBD\n+\n+=== Verification ===\n+\n+TBD\n+\n+=== Batch Verification ===\n+\n+TBD\n+\n+=== Usage Considerations ===\n+\n+TBD\n+\n+== Test Vectors and Reference Code ==\n+\n+TBD\n+\n+\n+== References ==\n+\n+* [https://groups.google.com/g/bitcoindev/c/Aee8xKuIC2s/m/cu6xej1mBQAJ Mailing list discussion]\n+* [https://delvingbitcoin.org/t/proposing-a-p2qrh-bip-towards-a-quantum-resistant-soft-fork/956?u=cryptoquick Delving Bitcoin discussion]\n+* [https://bitcoinops.org/en/newsletters/2024/06/14/ Bitcoin OpTech newsletter]\n+* [https://bitcoinops.org/en/podcast/2024/06/18/#draft-bip-for-quantum-safe-address-format Bitcoin OpTech discussion transcript]\n+\n+<references />\n+\n+\n+== Changelog ==\n+\n+To help implementors understand updates to this BIP, we keep a list of substantial changes.\n+\n+* 2024-06: High level rough draft\n+* 2024-07: Additional algorithms in PQC table\n+* 2024-08: Add FALCON signatures, update to use NIST standard terminology, add public key sizes.\n+* 2024-09: Additional detail on P2QS. Deprecate P2QR. Postpone SQIsign. Add details on quitness.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 235,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A few non-urgent nits regarding the changelog:\r\n\r\n- latest version first\r\n- use [semvar](https://semver.org/); for the final draft, maybe these should be collapsed to one initial version entry\r\n- YYYY-MM-DD date format\r\n\r\n(See https://keepachangelog.com and https://www.gnu.org/prep/standards/html_node/Style-of-Change-Logs)",
      "created_at": "2024-09-27T22:54:52Z",
      "updated_at": "2024-09-27T22:57:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779282281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779282281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779592875",
      "pull_request_review_id": 2335182157,
      "id": 1779592875,
      "node_id": "PRRC_kwDOAN28mc5qEm6r",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 33,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779156396,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That is a concern I haven't considered. I'll be sure to add that.",
      "created_at": "2024-09-28T15:09:20Z",
      "updated_at": "2024-09-28T15:09:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779592875",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779592875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779606859",
      "pull_request_review_id": 2335204810,
      "id": 1779606859,
      "node_id": "PRRC_kwDOAN28mc5qEqVL",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.\n+\n+It is proposed to implement a Pay to Quantum Resistant Hash (P2QRH) address type that relies on a post-quantum cryptographic (PQC) signature algorithm. This new address type protects transactions submitted to the mempool and helps preserve the free market by reducing the need for private, out-of-band mempool transactions.\n+\n+The following table is non-exhaustive, but meant to inform the average bitcoin user whether their bitcoin is vulnerable to quantum attack.\n+\n+{|\n+|+ Vulnerable address types\n+|-\n+! Address type !! Vulnerable !! Prefix !! Example\n+|-\n+| P2PK || Yes || 04 || 0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee\n+|-\n+| P2PKH || No || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
      "path": "bip-p2qrh.mediawiki",
      "position": 48,
      "original_position": 46,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779153889,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I'd like to structure that information differently, similar to how I did so on this slide:\r\n![Screenshot from 2024-09-28 09-10-37](https://github.com/user-attachments/assets/b83fac54-d811-4c99-8430-31a822c2a957)\r\nI'll also need to add a 5th case: Unhardened BIP-32 HD wallet keys",
      "created_at": "2024-09-28T15:11:50Z",
      "updated_at": "2024-09-28T15:11:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779606859",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779606859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779726567",
      "pull_request_review_id": 2335386298,
      "id": 1779726567,
      "node_id": "PRRC_kwDOAN28mc5qFHjn",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.\n+\n+It is proposed to implement a Pay to Quantum Resistant Hash (P2QRH) address type that relies on a post-quantum cryptographic (PQC) signature algorithm. This new address type protects transactions submitted to the mempool and helps preserve the free market by reducing the need for private, out-of-band mempool transactions.\n+\n+The following table is non-exhaustive, but meant to inform the average bitcoin user whether their bitcoin is vulnerable to quantum attack.\n+\n+{|\n+|+ Vulnerable address types\n+|-\n+! Address type !! Vulnerable !! Prefix !! Example\n+|-\n+| P2PK || Yes || 04 || 0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee\n+|-\n+| P2PKH || No || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
      "path": "bip-p2qrh.mediawiki",
      "position": 48,
      "original_position": 46,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779153889,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should be resolved now. Let me know if it's not.",
      "created_at": "2024-09-28T18:02:39Z",
      "updated_at": "2024-09-28T18:02:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779726567",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779726567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779726638",
      "pull_request_review_id": 2335386383,
      "id": 1779726638,
      "node_id": "PRRC_kwDOAN28mc5qFHku",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.\n+\n+It is proposed to implement a Pay to Quantum Resistant Hash (P2QRH) address type that relies on a post-quantum cryptographic (PQC) signature algorithm. This new address type protects transactions submitted to the mempool and helps preserve the free market by reducing the need for private, out-of-band mempool transactions.\n+\n+The following table is non-exhaustive, but meant to inform the average bitcoin user whether their bitcoin is vulnerable to quantum attack.\n+\n+{|\n+|+ Vulnerable address types\n+|-\n+! Address type !! Vulnerable !! Prefix !! Example\n+|-\n+| P2PK || Yes || 04 || 0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee\n+|-\n+| P2PKH || No || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n+|-\n+| P2WPKH || No || bc1q || bc1qsnh5ktku9ztqeqfr89yrqjd05eh58nah884mku\n+|-\n+| P2TR || Yes || bc1p || bc1p92aslsnseq786wxfk3ekra90ds9ku47qttupfjsqmmj4z82xdq4q3rr58u\n+|}\n+\n+It should be noted that Taproot addresses are vulnerable in that they encode a 32-byte x-only public key, from which a full public key can be reconstructed.\n+\n+Should quantum advantage manifest, a convention is proposed in spending the full 65-byte P2PK key used by the coinbase output in Block 1 back to itself. It is proposed to call this the [https://mempool.space/address/0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee Canary address]. The reasoning behind this is that this can only be done by Satoshi, and given his absence, this can only be spent by others if there is a significant vulnerability in secp256k1. Should the Canary coins move, that will signal that bitcoin is presently vulnerable. Without the Canary, or an address like it, there may be some doubt as to whether the coins were moved with keys belonging to the original owner.\n+\n+As an interesting aside, coinbase outputs to P2PK keys go as far as block 200,000, so it's possible there are between 1-2 million coins that are vulnerable from the first epoch. These coins can be considered \"Satoshi's Shield.\" Any addresses with a balance of less than the original block subsidy of 50 coins can be considered incentive incompatible to capture until all of these are mined.\n+\n+It's for this reason that, for those who wish to be prepared for quantum emergency, it is recommended that no more than 50 bitcoin are kept under a single distinct, unused Native SegWit (P2WPKH, \"bc1q\") address at a time. This is assuming that the attacker is financially-motivated instead of, for example, a nation state looking to break confidence in Bitcoin. Additionally, this assumes that other vulnerable targets such as central banks have upgraded their cryptography already.\n+\n+The Commercial National Security Algorithm Suite (CNSA) 2.0 has a timeline for software and networking equipment to be upgraded by 2030, with browsers and operating systems fully upgraded by 2033.\n+\n+Lastly, it is worth noting by way of comparison that [https://ethresear.ch/t/how-to-hard-fork-to-save-most-users-funds-in-a-quantum-emergency/18901 Vitalik Buterin's proposed solution] in an Ethereum quantum emergency is quite different from the approach in this BIP. His plan involves a hard fork of the chain, reverting all blocks after a sufficient amount of theft, and using STARKs based on BIP-32 seeds to act as the authoritative secret when signing. These measures are deemed far too heavy-handed for bitcoin.\n+\n+\n+=== Rationale ===\n+\n+This is the first in a series of BIPs under a QuBit soft fork. A qubit is a fundamental unit of quantum computing, and the capital B represents its connection to bitcoin. The name QuBit also rhymes to some extent with SegWit.\n+\n+It is proposed to use SegWit version 3. This results in addresses that start with bc1r, which could be a useful way to remember that these are [r]esistant addresses, similar to how bc1q corresponds to Se[q]Wit and bc1p corresponds to Ta[p]root. This is referencing the lookup table under [https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki#bech32 BIP-173].\n+\n+The proposal above also leaves a gap in case it makes sense to use version 2, or bc1z, for implementation of other address formats such as those that employ Cross Input Signature Aggregation (CISA).\n+\n+P2QRH is meant to be implemented on top of P2TR, combining the security of classical Schnorr signatures along with post-quantum cryptography. This is a form of \"hybrid cryptography\" such that no regression in security is presented should a vulnerability exist in one of the signature algorithms used. One key distinction between P2QRH and P2TR however is that P2QRH will encode a hash of the public key. This is a significant change in how Taproot works, but is necessary to avoid exposing public keys on-chain in advance of attackers.\n+\n+P2QRH uses a 32-byte HASH256 (specifically SHA-256 twice-over, which is similar to that used in [https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki#specification BIP-16]) of the public key to reduce the size of new outputs and also to increase security by not having the public key available on-chain. This hash serves as a minimal cryptographic commitment to a public key. It goes into the output spend script, which does not receive the witness discount.\n+\n+Not having public keys exposed on-chain is an important step for quantum security. Otherwise funds would need to be spent to new addresses on a regular basis in order to prevent the possibility of a \"long-range CRQC attack\" recovering the key behind high value addresses. A long-range quantum attack can be considered one performed with chain data, such as that from a used address or one encoded in a spend script. A \"short-range quantum attack\" would be one done on keys in the mempool, which is seen as impractical given transaction throughput and block time. As the value being sent increases, so too should the fee in order to commit the transaction to the chain as soon as possible.  This makes useless the public key revealed by spending a UTXO, so long as it is never reused.\n+\n+Post-quantum public keys are generally larger than those used by ECC, depending on the security level. To promote user adoption and general user-friendliness, the most secure variant (NIST V, 256 bit) is proposed, despite the increase in key length and verification time.\n+\n+Support for FALCON signatures will be introduced first, with the intention of adding SQIsign and other post-quantum algorithms as they are approved. By way of comparison, FALCON signatures are roughly 4x larger than SQIsign signatures and 20x larger than Schnorr signatures. FALCON is a more conservative approach to applied lattice cryptography than SQIsign, and its use has recently been approved by NIST. NIST approval streamlines implementations through establishing consensus in the scientific and developer community. However, even SQIsign signatures are roughly 5x larger than Schnorr signatures. This means, to maintain present transaction throughput, an increase in the witness discount will likely be desired in a QuBit soft fork. That will be specified in a future QuBit BIP.\n+\n+An increase in the witness discount must not be taken lightly.  It must be resistant to applications that might take advantage of this discount (e.g. storage of arbitrary data as seen with \"inscriptions\") without a corresponding increase in economic activity. Such an increase would not only impact node runners but those with inscriptions would also have the scarcity of their non-monetary assets affected. The only way to prevent this while also increasing the discount is to have a completely separate witness, a quantum witness, or \"quitness,\" that is solely responsible for providing post-quantum signatures.\n+\n+To address the risk of arbitrary data being stored using P2QRH (QuBit) addresses, very specific rules will be applied to spending from the witness stack in SegWit v3 outputs. A fixed signature size will be necessary for spending the output, and the output must be spendable to be considered valid within node consensus. A fixed signature size will also be helpful to disambiguate between signature types without an additional version byte, as SQIsign signatures are substantially smaller than FALCON signatures. Consequently, the correct signature algorithm can be inferred through byte length. The public key and signature will be pushed separately to the quitness stack. Multiple signatures can be included in order to support multisig applications, and also for spending multiple inputs.\n+\n+Since only valid signatures can be committed to in a SegWit v3 quitness, arbitrary data cannot be added by miners, as that would affect the consensus of their block. A CRQC operator is economically disincentivized from computing a spendable public key that matched arbitrary signature data due to the cost of that computation. That is because the cost of such a computation could prove quite substantial, rather than simply putting the arbitrary data within a Taproot witness. Doing the work to meet the requirement for it to be consensus-valid data would prove cost-prohibitive.\n+\n+Additionally, it should be noted, whether an output with a P2QRH spend script corresponds to a FALCON or SQIsign signature is not known until the output is spent.\n+\n+While it might be seen as a maintenance burden for bitcoin ecosystem devs to go from a single cryptosystem implementation to two distinct cryptosystems-- and it most certainly is-- the ramifications of a chain broken through extrinsic factors should provide sufficient motivation. An increase in software maintenance everywhere signatures are used should be seen as an acceptable compromise for maintained integrity of bitcoin transfers during a regime of quantum advantage.\n+\n+In the distant future, following the implementation of the P2QRH address format in a QuBit soft fork, there will likely be a need for Pay to Quantum Secure (P2QS) addresses. These will require specialized quantum hardware for signing, while still [https://quantum-journal.org/papers/q-2023-01-19-901/ using public keys that are verifiable via classical means]. Additional follow-on BIPs will be needed to implement P2QS. However, until specialized quantum cryptography hardware is widespread, quantum resistant addresses should be an adequate intermediate solution.\n+\n+\n+== Description ==\n+\n+We first build up a definition of the signature scheme by going through the design choices. Afterwards, we specify the exact encodings and operations.\n+\n+\n+=== Design ===\n+\n+For P2QRH descriptors, <code>qrh()</code> should be used.\n+\n+> Further specific details to be completed later in the draft process as outlined in [https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki BIP-2]\n+\n+\n+== Security ==\n+\n+{|\n+|+ Proposed quantum resistant signature algorithms ordered by largest to smallest signature size, NIST I\n+|-\n+! Signature algorithm !! Year first introduced !! Signature size, NIST I !! Public key size, NIST I\n+|-\n+| [https://sphincs.org/data/sphincs+-r3.1-specification.pdf SPHINCS+ Rd. 3.1 (FIPS 205 - SLH-DSA)] || 2015 || 7856 bytes || 32 bytes\n+|-\n+| [https://pq-crystals.org/dilithium/ CRYSTALS-Dilithium (FIPS 204 - ML-DSA)] || 2017 || 2420 bytes || 1312 bytes\n+|-\n+| [https://eprint.iacr.org/2014/457.pdf pqNTRUsign] || 2016 || 702 bytes || 752 bytes\n+|-\n+| [https://falcon-sign.info FALCON (FIPS 206 - FN-DSA)] || 2017 || 666 bytes || 897 bytes\n+|-\n+| [https://eprint.iacr.org/2022/1155.pdf HAWK] || 2022 || 652 bytes || 1006 bytes\n+|-\n+| [https://sqisign.org SQIsign] || 2023 || 177 bytes || 64 bytes\n+|-\n+| [https://eprint.iacr.org/2024/760.pdf SQIsign2D-West] || 2024 || 148 bytes || 66 bytes\n+|-\n+| [https://link.springer.com/content/pdf/10.1007/978-3-031-58716-0_1.pdf SQIsignHD] || 2024 || 109 bytes || not provided\n+|}\n+\n+{|\n+|+ Proposed quantum resistant signature algorithms ordered by largest to smallest signature size, NIST V\n+|-\n+! Signature algorithm !! Year first introduced !! Signature size, NIST V !! Public key size, NIST V\n+|-\n+| Lamport signature || 1977 || 8192 bytes || 16384 bytes\n+|-\n+| SPHINCS+ Rd. 3.1 (FIPS 205 - SLH-DSA) || 2015 || 29792 bytes || 64 bytes\n+|-\n+| CRYSTALS-Dilithium (FIPS 204 - ML-DSA) || 2017 || 4595 bytes || 2592 bytes\n+|-\n+| pqNTRUsign || 2016 || 1814 bytes || 1927 bytes\n+|-\n+| FALCON (FIPS 206 - FN-DSA) || 2017 || 1280 bytes || 1793 bytes\n+|-\n+| HAWK || 2022 || 1261 bytes || 2329 bytes\n+|-\n+| SQIsign || 2023 || 335 bytes || 128 bytes\n+|-\n+| SQIsign2D-West || 2024 || 294 bytes || 130 bytes\n+|-\n+| SQIsignHD || 2023 || not provided || not provided\n+|}\n+\n+As shown, supersingular elliptic curve quaternion isogeny signature algorithms represent the state of the art in post-quantum cryptography, beyond lattice cryptography alone, especially when key and signature length are major constraints. This makes inclusion of SQIsign attractive, and support is planned, but it will be some time until it is approved for production use. Meanwhile, FALCON signatures are already approved and have achieved broader community consensus.\n+\n+In comparison, the size of currently used signature algorithms are:\n+\n+* ECDSA - 70-72 bytes\n+* Schnorr - 64 bytes\n+\n+In comparison to year, secp256k1 [https://www.secg.org/SEC1-Ver-1.0.pdf was originally specified in 2000].\n+\n+One consideration for choosing an algorithm is its maturity. secp256k1 was already 8 years old by the time it was chosen as bitcoin's curve. Isogeny cryptography when it was first introduced was broken over a weekend.\n+\n+Ideally SQIsign also proves to be flexible enough to support [https://www.pierrickdartois.fr/homepage/wp-content/uploads/2022/04/Report_OSIDH_DARTOIS.pdf Isogeny Diffie-Hellman] to replace ECDH applications, and also provide methods for the key tweaking necessary to support TapScript for P2QR addresses. Additionally, isogeny-based post-quantum cryptography is based on higher-order elliptic curves, and so it might be possible to implement Isogeny Schnorr signatures.\n+\n+Signature verification speed as it compares to Schnorr or ECDSA isn't seen as high a consideration as signature size due to block space being the primary fee constraint. As a P2QRH implementation materializes, a benchmark will be added for performance comparison. Fortunately, SQIsign signatures are substantially faster to verify than it is to generate keys or to sign, which is a major consideration when a transaction need only be signed once, or a handful of times with PSBT, compared to being verified simultaneously on tens of thousands of nodes. Key generation may need to cached in [https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki BIP-32 HD wallets].\n+\n+An additional consideration is security levels. Longer signature sizes provide more security. NIST has standardized five security levels for post-quantum cryptography. NIST security level I provides security equivalent to 128-bit keys, and security level V provides 256-bit security.\n+\n+\n+== Specification ==\n+\n+How the quitness is differentiated from the witness can be accomplished similar to how [https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#user-content-Transaction_ID BIP-141] introduced the marker and flag, with the QuBit flag being set to 0x02. This means all QuBit transactions are also SegWit transactions. The additional data would be included as a second array of byte arrays following the witness stack.\n+\n+The new transaction serialization format would be as follows:\n+\n+  [nVersion][marker][flag][txins][txouts][witness][quitness][nLockTime]\n+\n+WIP\n+\n+=== Public Key Generation ===\n+\n+TBD, pending test vectors\n+\n+=== Public Key Conversion ===\n+\n+TBD\n+\n+=== Default Signing ===\n+\n+TBD\n+\n+=== Alternative Signing ===\n+\n+TBD\n+\n+=== Verification ===\n+\n+TBD\n+\n+=== Batch Verification ===\n+\n+TBD\n+\n+=== Usage Considerations ===\n+\n+TBD\n+\n+== Test Vectors and Reference Code ==\n+\n+TBD\n+\n+\n+== References ==\n+\n+* [https://groups.google.com/g/bitcoindev/c/Aee8xKuIC2s/m/cu6xej1mBQAJ Mailing list discussion]\n+* [https://delvingbitcoin.org/t/proposing-a-p2qrh-bip-towards-a-quantum-resistant-soft-fork/956?u=cryptoquick Delving Bitcoin discussion]\n+* [https://bitcoinops.org/en/newsletters/2024/06/14/ Bitcoin OpTech newsletter]\n+* [https://bitcoinops.org/en/podcast/2024/06/18/#draft-bip-for-quantum-safe-address-format Bitcoin OpTech discussion transcript]\n+\n+<references />\n+\n+\n+== Changelog ==\n+\n+To help implementors understand updates to this BIP, we keep a list of substantial changes.\n+\n+* 2024-06: High level rough draft\n+* 2024-07: Additional algorithms in PQC table\n+* 2024-08: Add FALCON signatures, update to use NIST standard terminology, add public key sizes.\n+* 2024-09: Additional detail on P2QS. Deprecate P2QR. Postpone SQIsign. Add details on quitness.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 235,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779282281,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sounds good. Let me know if my latest changes have resolved this.",
      "created_at": "2024-09-28T18:03:11Z",
      "updated_at": "2024-09-28T18:03:11Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779726638",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779726638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779728051",
      "pull_request_review_id": 2335387619,
      "id": 1779728051,
      "node_id": "PRRC_kwDOAN28mc5qFH6z",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Those figures were provided by Pierre-Luc, along with the relevant paper. I've included a footnote with his comments.\r\n\r\n",
      "created_at": "2024-09-28T18:10:58Z",
      "updated_at": "2024-09-28T18:10:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779728051",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779728051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779807924",
      "pull_request_review_id": 2335484424,
      "id": 1779807924,
      "node_id": "PRRC_kwDOAN28mc5qFba0",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I completely agree with your claim that: \r\n> It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\r\n\r\nThe math in the footnote is for finding SHA256 preimages, but the text and cited article discusses Bitcoin mining/POW which is only a partial preimage, e.g. find SHA256 output with 75 zeros in front. These partial preimages should be not as hard as finding a full SHA256 preimage.\r\n\r\nThe quantum safety of Bitcoin POW is a an open question. Is a quantum computer than can do the POW significantly faster than a classic miner an attack or simply better mining technology? Are there other quantum attacks on Bitcoin mining?\r\n\r\nI would frame this as symmetric cryptography in Bitcoin, such as preimages in the transactions Merkle tree, rather than mining.",
      "created_at": "2024-09-28T22:09:45Z",
      "updated_at": "2024-09-28T22:09:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779807924",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779807924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779918823",
      "pull_request_review_id": 2335705303,
      "id": 1779918823,
      "node_id": "PRRC_kwDOAN28mc5qF2fn",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Very interesting. I'll be sure to include that nuance.",
      "created_at": "2024-09-29T06:15:28Z",
      "updated_at": "2024-09-29T06:15:29Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779918823",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779918823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779947292",
      "pull_request_review_id": 2335742734,
      "id": 1779947292,
      "node_id": "PRRC_kwDOAN28mc5qF9cc",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've reworked the paragraph. Let me know if that works. The 95 zeros figure came from the `log2_work` message from Bitcoin Core in the latest block... Let me know if that's not right.",
      "created_at": "2024-09-29T07:23:38Z",
      "updated_at": "2024-09-29T07:23:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1779947292",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1779947292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1780170002",
      "pull_request_review_id": 2335996978,
      "id": 1780170002,
      "node_id": "PRRC_kwDOAN28mc5qGz0S",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Log2 work is [the total work from the genesis block all the way to that current block](https://bitcoin.stackexchange.com/a/116486 ) not a measure of work of that block alone.\r\n\r\nBitcoin PoW per hash is ~700 Exahash/second. That roughly $log2(700 * 10^{18} )=2^{68.2}$ per second and $2^{74.5}$ per block. 75 zero bits would more the accurate current number.\r\n\r\nThere is a big difference between the cost of preimages on SHA256 and HASH160 with a quadratic reduction: \r\nSHA256 as you point out is $2^{128} \\approx 10^{40}$ but HASH160 used in P2PKH is  $2^{80} \\approx 10^{24}$. Still much larger than ECC, but I wanted to call this out because it is unlikely we will ever build a computer classical or quantum that can do $2^{128}$ within the next 100 years whereas Bitcoin currently does $2^{80}$ every 30 minutes. \r\n\r\nIf I didn't misunderstand [\"Applying Grover's Algorithm to Hash Functions\"](https://arxiv.org/pdf/2202.10982) the cost of a groover preimage attack on a n-bit hash function where you are trying to want to find 1 preimage out of a set of k preimages is $\\sqrt{2^{n-\\log2{(k)}}}$. Let's say we are looking for any preimage of a P2PKH output. [As of Sept 29 2024](https://bitaps.com/statistic/outputs) there are 53,102,992 P2PKH in Bitcoin's UTXO set. This gets us an attack cost of $\\sqrt{2^{160-25.66}}=2^{67.17} \\approx 10^{20}$.\r\n\r\nAll of this still supports your argument that the current pressing need in Bitcoin is ECC. It worth having tighter bounds, so we know when we are in danger for the symmetric side of Bitcoin.\r\n\r\n\r\n\r\n",
      "created_at": "2024-09-29T20:56:55Z",
      "updated_at": "2024-09-29T20:56:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1780170002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1780170002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1780193350",
      "pull_request_review_id": 2336030169,
      "id": 1780193350,
      "node_id": "PRRC_kwDOAN28mc5qG5hG",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "All very good points. I'll make sure those are reflected in the BIP.",
      "created_at": "2024-09-29T22:31:33Z",
      "updated_at": "2024-09-29T22:31:33Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1780193350",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1780193350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1780957226",
      "pull_request_review_id": 2337254602,
      "id": 1780957226,
      "node_id": "PRRC_kwDOAN28mc5qJ0Aq",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've published some more updates you can see here: \r\n\r\nhttps://github.com/bitcoin/bips/compare/eae4707e74805435e3e57d0bb1902d9313955ef3..19d45929a2229b03d26503b6530eeed1524ff31f\r\n\r\nAlso, is P2WPKH not also as vulnerable as P2PKH? I think they both use HASH160, do they not?",
      "created_at": "2024-09-30T11:38:16Z",
      "updated_at": "2024-09-30T11:38:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1780957226",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1780957226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781089592",
      "pull_request_review_id": 2337478700,
      "id": 1781089592,
      "node_id": "PRRC_kwDOAN28mc5qKUU4",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes P2WPKH, P2PKH, P2SH all use HASH160 (20 Byte) whereas P2WSH uses SHA256 (32 Byte).\r\n\r\nThanks for the updates and making the changes. My main concern is that if precise numbers are going to be used for Bitcoin and Groovers I want to avoid a situation where the numbers are not representative of the threat. I suspect many people in Bitcoin will use this BIP to educate themselves on quantum attacks. I'll write up a longer comment during my lunch break today.",
      "created_at": "2024-09-30T13:01:44Z",
      "updated_at": "2024-09-30T13:01:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1781089592",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781089592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781133437",
      "pull_request_review_id": 2337556440,
      "id": 1781133437,
      "node_id": "PRRC_kwDOAN28mc5qKfB9",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 33,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779156396,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Let me know if this is sufficient:\r\nhttps://github.com/bitcoin/bips/pull/1670/files?short_path=917a32a#diff-917a32a71b69bf62d7c85dfb13d520a0340a30a2889b015b82d36411ed45e754:~:text=If%20a%20key%20is%20recovered%20by%20a%20CRQC%2C%20it%20can%20also%20be%20trivially%20checked%20to%20see%20if%20any%20child%20keys%20were%20produced%20using%20an%20unhardened%20BIP%2D32%20derivation%20path.\r\n\r\nIt's also been added to the new table for scenarios for revealed public keys on bitcoin.",
      "created_at": "2024-09-30T13:29:23Z",
      "updated_at": "2024-09-30T13:29:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1781133437",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781133437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781509175",
      "pull_request_review_id": 2338191441,
      "id": 1781509175,
      "node_id": "PRRC_kwDOAN28mc5qL6w3",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "EthanHeilman",
        "id": 274814,
        "node_id": "MDQ6VXNlcjI3NDgxNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EthanHeilman",
        "html_url": "https://github.com/EthanHeilman",
        "followers_url": "https://api.github.com/users/EthanHeilman/followers",
        "following_url": "https://api.github.com/users/EthanHeilman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/EthanHeilman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/EthanHeilman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
        "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
        "repos_url": "https://api.github.com/users/EthanHeilman/repos",
        "events_url": "https://api.github.com/users/EthanHeilman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I realize by pointing out the nuances I've accidentally caused this section to grow into two large paragraphs, when really all you are trying to do make is the reasonable point that quantum attacks on ECC signatures should be the most immediate concern.\r\n\r\nHere is my attempt to get the same point across but without having to get into the details:\r\n\r\n\r\n> The primary threat to Bitcoin by CRQCs is [https://en.bitcoin.it/wiki/Quantum_computing_and_Bitcoin#QC_attacks generally considered to be to its uses of ECC (Ecliptic Curve Cryptography) used in Bitcoin's signatures and Taproot commitments]. This is because Shor's algorithm enables a CRQC to break the cryptographic assumptions of ECC in roughly 10^8 ≈ 2^26) quantum operations. While a QRQC could use Grover's algorithm to gain a quadratic speed up on brute force attacks on the hash functions used in Bitcoin, a significantly more power quantum computer is needed for these attacks to meaningfully impact Bitcoin. For instance a preimage attack on HASH160 using Grover's algorithm would require at least 10^24 ≈ 2^80 quantum operations.\r\n\r\n\r\nIt does make sense to discuss Grover's algorithm w.r.t. multi-target preimage attacks against P2SH and P2PKH when discussing the security of address types against a QRQC.",
      "created_at": "2024-09-30T17:24:37Z",
      "updated_at": "2024-09-30T17:24:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1781509175",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781509175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781873035",
      "pull_request_review_id": 2338756440,
      "id": 1781873035,
      "node_id": "PRRC_kwDOAN28mc5qNTmL",
      "diff_hunk": "@@ -0,0 +1,274 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of [https://en.wikipedia.org/wiki/Grover's_algorithm Grover's algorithm]. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's. Grover's potentially requires roughly 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC, should no optimization for partial preimages be needed. Partial preimage optimization may lower the difficulty to find a block than the full 256-bit preimage (say, for a number with 75 zero bits in front).<ref>See [https://quantumcomputing.stackexchange.com/a/12847 Sam Jaques on Bitcoin mining].</ref> Regardless of such optimizations, the primary threat to Bitcoin by CRQCs is [https://en.bitcoin.it/wiki/Quantum_computing_and_Bitcoin#QC_attacks generally considered to be to its signature algorithm] and not necessarily Proof of Work, hence the focus on a new address format. Additionally, should quantum mining demonstrate quantum advantage over ASIC miners, miners will transition to operating CRQCs instead.<ref>Grover's algorithm is a quadratic speedup, so instead of 2^256 tries it takes about 2^128 calls to the oracle (which is about 10^38 operations) to get a 256 bit preimage. The number of gates would be some multiple of that number. That's roughly how we get the correct order of magnitude, Mosca did a more finegrained calculation and land ballpark in similar large numbers. The number is so large, it's unclear the exact calculation with all the prefactors so far, contrary to ECC, which is roughly 10^8 operations, including the constant factors. A talk by [https://sam-jaques.appspot.com/papers Sam Jaques] gave some estimate of the size of the machine that would be necessary for Grover to attack hashes and it was a small astronomical body.</ref>\n+\n+It is worth mentioning that any addresses using RIPEMD160 / HASH160 could also be vulnerable to Grover's algorithm.<ref>There is a big difference between the cost of preimages on SHA256 and HASH160 with a quadratic reduction:\n+SHA256 is 2^128 ≈ 10^40 but HASH160 used in P2PKH and P2WPKH is 2^80 ≈ 10^24 quantum operations. This is much larger than ECC, and while it is unlikely a classical or quantum computer that can perform 2^128 within the next 100 years, Bitcoin currently does 2^80 classical operations every 30 minutes. Additionally, with Grover's, [https://bitcoin.stackexchange.com/a/115849/139611 a black box function could sidestep Shor's entirely, and SHA-256, providing the private key itself to a P2PKH or P2SH address.]</ref>\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack. As of the time of writing, that number is now closer to 20%.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 34,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "7f4456de30db2528bcfc1dddbbc3c7533169646a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Another vulnerability estimation in early 2019: 5M-10M bitcoin\r\n\r\nhttps://x.com/pwuille/status/1108097835365339136",
      "created_at": "2024-09-30T23:02:34Z",
      "updated_at": "2024-09-30T23:02:34Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1781873035",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781873035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781979561",
      "pull_request_review_id": 2338917603,
      "id": 1781979561,
      "node_id": "PRRC_kwDOAN28mc5qNtmp",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack.\n+\n+Ordinarily, when a transaction is signed, the public key can be recovered from the signature. This makes a transaction submitted to the mempool vulnerable to quantum attack until it's mined. One way to mitigate this is to submit the transaction directly to a mining pool, which bypasses the mempool. This process is known as an out-of-band transaction. The mining pool must be trusted not to reveal the key to attackers.\n+\n+It is proposed to implement a Pay to Quantum Resistant Hash (P2QRH) address type that relies on a post-quantum cryptographic (PQC) signature algorithm. This new address type protects transactions submitted to the mempool and helps preserve the free market by reducing the need for private, out-of-band mempool transactions.\n+\n+The following table is non-exhaustive, but meant to inform the average bitcoin user whether their bitcoin is vulnerable to quantum attack.\n+\n+{|\n+|+ Vulnerable address types\n+|-\n+! Address type !! Vulnerable !! Prefix !! Example\n+|-\n+| P2PK || Yes || 04 || 0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee\n+|-\n+| P2PKH || No || 1 || 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n+|-\n+| P2WPKH || No || bc1q || bc1qsnh5ktku9ztqeqfr89yrqjd05eh58nah884mku\n+|-\n+| P2TR || Yes || bc1p || bc1p92aslsnseq786wxfk3ekra90ds9ku47qttupfjsqmmj4z82xdq4q3rr58u\n+|}\n+\n+It should be noted that Taproot addresses are vulnerable in that they encode a 32-byte x-only public key, from which a full public key can be reconstructed.\n+\n+Should quantum advantage manifest, a convention is proposed in spending the full 65-byte P2PK key used by the coinbase output in Block 1 back to itself. It is proposed to call this the [https://mempool.space/address/0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee Canary address]. The reasoning behind this is that this can only be done by Satoshi, and given his absence, this can only be spent by others if there is a significant vulnerability in secp256k1. Should the Canary coins move, that will signal that bitcoin is presently vulnerable. Without the Canary, or an address like it, there may be some doubt as to whether the coins were moved with keys belonging to the original owner.\n+\n+As an interesting aside, coinbase outputs to P2PK keys go as far as block 200,000, so it's possible there are between 1-2 million coins that are vulnerable from the first epoch. These coins can be considered \"Satoshi's Shield.\" Any addresses with a balance of less than the original block subsidy of 50 coins can be considered incentive incompatible to capture until all of these are mined.\n+\n+It's for this reason that, for those who wish to be prepared for quantum emergency, it is recommended that no more than 50 bitcoin are kept under a single distinct, unused Native SegWit (P2WPKH, \"bc1q\") address at a time. This is assuming that the attacker is financially-motivated instead of, for example, a nation state looking to break confidence in Bitcoin. Additionally, this assumes that other vulnerable targets such as central banks have upgraded their cryptography already.\n+\n+The Commercial National Security Algorithm Suite (CNSA) 2.0 has a timeline for software and networking equipment to be upgraded by 2030, with browsers and operating systems fully upgraded by 2033.\n+\n+Lastly, it is worth noting by way of comparison that [https://ethresear.ch/t/how-to-hard-fork-to-save-most-users-funds-in-a-quantum-emergency/18901 Vitalik Buterin's proposed solution] in an Ethereum quantum emergency is quite different from the approach in this BIP. His plan involves a hard fork of the chain, reverting all blocks after a sufficient amount of theft, and using STARKs based on BIP-32 seeds to act as the authoritative secret when signing. These measures are deemed far too heavy-handed for bitcoin.\n+\n+\n+=== Rationale ===\n+\n+This is the first in a series of BIPs under a QuBit soft fork. A qubit is a fundamental unit of quantum computing, and the capital B represents its connection to bitcoin. The name QuBit also rhymes to some extent with SegWit.\n+\n+It is proposed to use SegWit version 3. This results in addresses that start with bc1r, which could be a useful way to remember that these are [r]esistant addresses, similar to how bc1q corresponds to Se[q]Wit and bc1p corresponds to Ta[p]root. This is referencing the lookup table under [https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki#bech32 BIP-173].\n+\n+The proposal above also leaves a gap in case it makes sense to use version 2, or bc1z, for implementation of other address formats such as those that employ Cross Input Signature Aggregation (CISA).\n+\n+P2QRH is meant to be implemented on top of P2TR, combining the security of classical Schnorr signatures along with post-quantum cryptography. This is a form of \"hybrid cryptography\" such that no regression in security is presented should a vulnerability exist in one of the signature algorithms used. One key distinction between P2QRH and P2TR however is that P2QRH will encode a hash of the public key. This is a significant change in how Taproot works, but is necessary to avoid exposing public keys on-chain in advance of attackers.\n+\n+P2QRH uses a 32-byte HASH256 (specifically SHA-256 twice-over, which is similar to that used in [https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki#specification BIP-16]) of the public key to reduce the size of new outputs and also to increase security by not having the public key available on-chain. This hash serves as a minimal cryptographic commitment to a public key. It goes into the output spend script, which does not receive the witness discount.\n+\n+Not having public keys exposed on-chain is an important step for quantum security. Otherwise funds would need to be spent to new addresses on a regular basis in order to prevent the possibility of a \"long-range CRQC attack\" recovering the key behind high value addresses. A long-range quantum attack can be considered one performed with chain data, such as that from a used address or one encoded in a spend script. A \"short-range quantum attack\" would be one done on keys in the mempool, which is seen as impractical given transaction throughput and block time. As the value being sent increases, so too should the fee in order to commit the transaction to the chain as soon as possible.  This makes useless the public key revealed by spending a UTXO, so long as it is never reused.\n+\n+Post-quantum public keys are generally larger than those used by ECC, depending on the security level. To promote user adoption and general user-friendliness, the most secure variant (NIST V, 256 bit) is proposed, despite the increase in key length and verification time.\n+\n+Support for FALCON signatures will be introduced first, with the intention of adding SQIsign and other post-quantum algorithms as they are approved. By way of comparison, FALCON signatures are roughly 4x larger than SQIsign signatures and 20x larger than Schnorr signatures. FALCON is a more conservative approach to applied lattice cryptography than SQIsign, and its use has recently been approved by NIST. NIST approval streamlines implementations through establishing consensus in the scientific and developer community. However, even SQIsign signatures are roughly 5x larger than Schnorr signatures. This means, to maintain present transaction throughput, an increase in the witness discount will likely be desired in a QuBit soft fork. That will be specified in a future QuBit BIP.\n+\n+An increase in the witness discount must not be taken lightly.  It must be resistant to applications that might take advantage of this discount (e.g. storage of arbitrary data as seen with \"inscriptions\") without a corresponding increase in economic activity. Such an increase would not only impact node runners but those with inscriptions would also have the scarcity of their non-monetary assets affected. The only way to prevent this while also increasing the discount is to have a completely separate witness, a quantum witness, or \"quitness,\" that is solely responsible for providing post-quantum signatures.\n+\n+To address the risk of arbitrary data being stored using P2QRH (QuBit) addresses, very specific rules will be applied to spending from the witness stack in SegWit v3 outputs. A fixed signature size will be necessary for spending the output, and the output must be spendable to be considered valid within node consensus. A fixed signature size will also be helpful to disambiguate between signature types without an additional version byte, as SQIsign signatures are substantially smaller than FALCON signatures. Consequently, the correct signature algorithm can be inferred through byte length. The public key and signature will be pushed separately to the quitness stack. Multiple signatures can be included in order to support multisig applications, and also for spending multiple inputs.\n+\n+Since only valid signatures can be committed to in a SegWit v3 quitness, arbitrary data cannot be added by miners, as that would affect the consensus of their block. A CRQC operator is economically disincentivized from computing a spendable public key that matched arbitrary signature data due to the cost of that computation. That is because the cost of such a computation could prove quite substantial, rather than simply putting the arbitrary data within a Taproot witness. Doing the work to meet the requirement for it to be consensus-valid data would prove cost-prohibitive.\n+\n+Additionally, it should be noted, whether an output with a P2QRH spend script corresponds to a FALCON or SQIsign signature is not known until the output is spent.\n+\n+While it might be seen as a maintenance burden for bitcoin ecosystem devs to go from a single cryptosystem implementation to two distinct cryptosystems-- and it most certainly is-- the ramifications of a chain broken through extrinsic factors should provide sufficient motivation. An increase in software maintenance everywhere signatures are used should be seen as an acceptable compromise for maintained integrity of bitcoin transfers during a regime of quantum advantage.\n+\n+In the distant future, following the implementation of the P2QRH address format in a QuBit soft fork, there will likely be a need for Pay to Quantum Secure (P2QS) addresses. These will require specialized quantum hardware for signing, while still [https://quantum-journal.org/papers/q-2023-01-19-901/ using public keys that are verifiable via classical means]. Additional follow-on BIPs will be needed to implement P2QS. However, until specialized quantum cryptography hardware is widespread, quantum resistant addresses should be an adequate intermediate solution.\n+\n+\n+== Description ==\n+\n+We first build up a definition of the signature scheme by going through the design choices. Afterwards, we specify the exact encodings and operations.\n+\n+\n+=== Design ===\n+\n+For P2QRH descriptors, <code>qrh()</code> should be used.\n+\n+> Further specific details to be completed later in the draft process as outlined in [https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki BIP-2]\n+\n+\n+== Security ==\n+\n+{|\n+|+ Proposed quantum resistant signature algorithms ordered by largest to smallest signature size, NIST I\n+|-\n+! Signature algorithm !! Year first introduced !! Signature size, NIST I !! Public key size, NIST I\n+|-\n+| [https://sphincs.org/data/sphincs+-r3.1-specification.pdf SPHINCS+ Rd. 3.1 (FIPS 205 - SLH-DSA)] || 2015 || 7856 bytes || 32 bytes\n+|-\n+| [https://pq-crystals.org/dilithium/ CRYSTALS-Dilithium (FIPS 204 - ML-DSA)] || 2017 || 2420 bytes || 1312 bytes\n+|-\n+| [https://eprint.iacr.org/2014/457.pdf pqNTRUsign] || 2016 || 702 bytes || 752 bytes\n+|-\n+| [https://falcon-sign.info FALCON (FIPS 206 - FN-DSA)] || 2017 || 666 bytes || 897 bytes\n+|-\n+| [https://eprint.iacr.org/2022/1155.pdf HAWK] || 2022 || 652 bytes || 1006 bytes\n+|-\n+| [https://sqisign.org SQIsign] || 2023 || 177 bytes || 64 bytes\n+|-\n+| [https://eprint.iacr.org/2024/760.pdf SQIsign2D-West] || 2024 || 148 bytes || 66 bytes\n+|-\n+| [https://link.springer.com/content/pdf/10.1007/978-3-031-58716-0_1.pdf SQIsignHD] || 2024 || 109 bytes || not provided\n+|}\n+\n+{|\n+|+ Proposed quantum resistant signature algorithms ordered by largest to smallest signature size, NIST V\n+|-\n+! Signature algorithm !! Year first introduced !! Signature size, NIST V !! Public key size, NIST V\n+|-\n+| Lamport signature || 1977 || 8192 bytes || 16384 bytes\n+|-\n+| SPHINCS+ Rd. 3.1 (FIPS 205 - SLH-DSA) || 2015 || 29792 bytes || 64 bytes\n+|-\n+| CRYSTALS-Dilithium (FIPS 204 - ML-DSA) || 2017 || 4595 bytes || 2592 bytes\n+|-\n+| pqNTRUsign || 2016 || 1814 bytes || 1927 bytes\n+|-\n+| FALCON (FIPS 206 - FN-DSA) || 2017 || 1280 bytes || 1793 bytes\n+|-\n+| HAWK || 2022 || 1261 bytes || 2329 bytes\n+|-\n+| SQIsign || 2023 || 335 bytes || 128 bytes\n+|-\n+| SQIsign2D-West || 2024 || 294 bytes || 130 bytes\n+|-\n+| SQIsignHD || 2023 || not provided || not provided\n+|}\n+\n+As shown, supersingular elliptic curve quaternion isogeny signature algorithms represent the state of the art in post-quantum cryptography, beyond lattice cryptography alone, especially when key and signature length are major constraints. This makes inclusion of SQIsign attractive, and support is planned, but it will be some time until it is approved for production use. Meanwhile, FALCON signatures are already approved and have achieved broader community consensus.\n+\n+In comparison, the size of currently used signature algorithms are:\n+\n+* ECDSA - 70-72 bytes\n+* Schnorr - 64 bytes\n+\n+In comparison to year, secp256k1 [https://www.secg.org/SEC1-Ver-1.0.pdf was originally specified in 2000].\n+\n+One consideration for choosing an algorithm is its maturity. secp256k1 was already 8 years old by the time it was chosen as bitcoin's curve. Isogeny cryptography when it was first introduced was broken over a weekend.\n+\n+Ideally SQIsign also proves to be flexible enough to support [https://www.pierrickdartois.fr/homepage/wp-content/uploads/2022/04/Report_OSIDH_DARTOIS.pdf Isogeny Diffie-Hellman] to replace ECDH applications, and also provide methods for the key tweaking necessary to support TapScript for P2QR addresses. Additionally, isogeny-based post-quantum cryptography is based on higher-order elliptic curves, and so it might be possible to implement Isogeny Schnorr signatures.\n+\n+Signature verification speed as it compares to Schnorr or ECDSA isn't seen as high a consideration as signature size due to block space being the primary fee constraint. As a P2QRH implementation materializes, a benchmark will be added for performance comparison. Fortunately, SQIsign signatures are substantially faster to verify than it is to generate keys or to sign, which is a major consideration when a transaction need only be signed once, or a handful of times with PSBT, compared to being verified simultaneously on tens of thousands of nodes. Key generation may need to cached in [https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki BIP-32 HD wallets].\n+\n+An additional consideration is security levels. Longer signature sizes provide more security. NIST has standardized five security levels for post-quantum cryptography. NIST security level I provides security equivalent to 128-bit keys, and security level V provides 256-bit security.\n+\n+\n+== Specification ==\n+\n+How the quitness is differentiated from the witness can be accomplished similar to how [https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#user-content-Transaction_ID BIP-141] introduced the marker and flag, with the QuBit flag being set to 0x02. This means all QuBit transactions are also SegWit transactions. The additional data would be included as a second array of byte arrays following the witness stack.\n+\n+The new transaction serialization format would be as follows:\n+\n+  [nVersion][marker][flag][txins][txouts][witness][quitness][nLockTime]\n+\n+WIP\n+\n+=== Public Key Generation ===\n+\n+TBD, pending test vectors\n+\n+=== Public Key Conversion ===\n+\n+TBD\n+\n+=== Default Signing ===\n+\n+TBD\n+\n+=== Alternative Signing ===\n+\n+TBD\n+\n+=== Verification ===\n+\n+TBD\n+\n+=== Batch Verification ===\n+\n+TBD\n+\n+=== Usage Considerations ===\n+\n+TBD\n+\n+== Test Vectors and Reference Code ==\n+\n+TBD\n+\n+\n+== References ==\n+\n+* [https://groups.google.com/g/bitcoindev/c/Aee8xKuIC2s/m/cu6xej1mBQAJ Mailing list discussion]\n+* [https://delvingbitcoin.org/t/proposing-a-p2qrh-bip-towards-a-quantum-resistant-soft-fork/956?u=cryptoquick Delving Bitcoin discussion]\n+* [https://bitcoinops.org/en/newsletters/2024/06/14/ Bitcoin OpTech newsletter]\n+* [https://bitcoinops.org/en/podcast/2024/06/18/#draft-bip-for-quantum-safe-address-format Bitcoin OpTech discussion transcript]\n+\n+<references />\n+\n+\n+== Changelog ==\n+\n+To help implementors understand updates to this BIP, we keep a list of substantial changes.\n+\n+* 2024-06: High level rough draft\n+* 2024-07: Additional algorithms in PQC table\n+* 2024-08: Add FALCON signatures, update to use NIST standard terminology, add public key sizes.\n+* 2024-09: Additional detail on P2QS. Deprecate P2QR. Postpone SQIsign. Add details on quitness.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 235,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779282281,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks good for now, thank you.",
      "created_at": "2024-10-01T00:29:55Z",
      "updated_at": "2024-10-01T00:29:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1781979561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781979561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781994737",
      "pull_request_review_id": 2338939886,
      "id": 1781994737,
      "node_id": "PRRC_kwDOAN28mc5qNxTx",
      "diff_hunk": "@@ -0,0 +1,240 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of Grover's algorithm. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's, requiring 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC. It's for this reason that the primary threat to Bitcoin by quantum computers is to its signature algorithm and not Proof of Work, hence the focus on a new address format.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 29,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "6f67a3d6860921bf869404e14239581c139ff69d",
      "in_reply_to_id": 1779190521,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for that. I've made some edits and replaced the other sections with that. Here's the diff:\r\nhttps://github.com/bitcoin/bips/compare/7f4456de30db2528bcfc1dddbbc3c7533169646a..d83c29d59b78443e20a040395ca23777bfc332f1",
      "created_at": "2024-10-01T01:04:12Z",
      "updated_at": "2024-10-01T01:04:12Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1781994737",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781994737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781995162",
      "pull_request_review_id": 2338940555,
      "id": 1781995162,
      "node_id": "PRRC_kwDOAN28mc5qNxaa",
      "diff_hunk": "@@ -0,0 +1,274 @@\n+<pre>\n+  BIP: TBD\n+  Title: QuBit - P2QRH spending rules\n+  Author: Hunter Beast <hunter@surmount.systems>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-TBD\n+  Status: Draft\n+  Type: Standards Track\n+  License: BSD-3-Clause\n+  Created: 2024-06-08\n+</pre>\n+\n+== Introduction ==\n+\n+=== Abstract ===\n+\n+This document proposes a new SegWit output type, with spending rules based initially-- but not solely-- upon FALCON signatures. (For more on why, see the Rationale and Security sections.) A constraint is that no hard fork or increase in block size are necessary. This document is inspired by [https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki BIP-341], which introduced the design of the P2TR (Taproot) address type using Schnorr signatures.\n+\n+\n+=== Copyright ===\n+\n+This document is licensed under the 3-clause BSD license.\n+\n+\n+=== Motivation ===\n+\n+This proposal aims to improve the quantum resistance of bitcoin's signature security should the Discrete Logarithm Problem (DLP) which secures Elliptic Curve Cryptography (ECC) no longer prove to be computationally hard, likely through quantum advantage by Cryptographically-Relevant Quantum Computers (CRQCs). [https://arxiv.org/pdf/quant-ph/0301141 A variant of Shor's algorithm] is believed to be capable of deriving the private key from a public key exponentially faster than classical means. The application of this variant of Shor's algorithm is herein referred to as quantum key decryption. Note that doubling the public key length, such as with a hypothetical secp512k1 curve, would only make deriving the private key twice as hard. The computational complexity of this is investigated further in the paper, [https://pubs.aip.org/avs/aqs/article/4/1/013801/2835275/The-impact-of-hardware-specifications-on-reaching ''The impact of hardware specifications on reaching quantum advantage in the fault tolerant regime''].\n+\n+Mining may one day be vulnerable to disruption by very advanced quantum computers making use of [https://en.wikipedia.org/wiki/Grover's_algorithm Grover's algorithm]. However, Grover's [https://arxiv.org/pdf/1902.02332 scales very poorly] compared to Shor's. Grover's potentially requires roughly 10^40 quantum operations in comparison to 10^8 for running Shor's over ECC, should no optimization for partial preimages be needed. Partial preimage optimization may lower the difficulty to find a block than the full 256-bit preimage (say, for a number with 75 zero bits in front).<ref>See [https://quantumcomputing.stackexchange.com/a/12847 Sam Jaques on Bitcoin mining].</ref> Regardless of such optimizations, the primary threat to Bitcoin by CRQCs is [https://en.bitcoin.it/wiki/Quantum_computing_and_Bitcoin#QC_attacks generally considered to be to its signature algorithm] and not necessarily Proof of Work, hence the focus on a new address format. Additionally, should quantum mining demonstrate quantum advantage over ASIC miners, miners will transition to operating CRQCs instead.<ref>Grover's algorithm is a quadratic speedup, so instead of 2^256 tries it takes about 2^128 calls to the oracle (which is about 10^38 operations) to get a 256 bit preimage. The number of gates would be some multiple of that number. That's roughly how we get the correct order of magnitude, Mosca did a more finegrained calculation and land ballpark in similar large numbers. The number is so large, it's unclear the exact calculation with all the prefactors so far, contrary to ECC, which is roughly 10^8 operations, including the constant factors. A talk by [https://sam-jaques.appspot.com/papers Sam Jaques] gave some estimate of the size of the machine that would be necessary for Grover to attack hashes and it was a small astronomical body.</ref>\n+\n+It is worth mentioning that any addresses using RIPEMD160 / HASH160 could also be vulnerable to Grover's algorithm.<ref>There is a big difference between the cost of preimages on SHA256 and HASH160 with a quadratic reduction:\n+SHA256 is 2^128 ≈ 10^40 but HASH160 used in P2PKH and P2WPKH is 2^80 ≈ 10^24 quantum operations. This is much larger than ECC, and while it is unlikely a classical or quantum computer that can perform 2^128 within the next 100 years, Bitcoin currently does 2^80 classical operations every 30 minutes. Additionally, with Grover's, [https://bitcoin.stackexchange.com/a/115849/139611 a black box function could sidestep Shor's entirely, and SHA-256, providing the private key itself to a P2PKH or P2SH address.]</ref>\n+\n+The vulnerability of existing bitcoin addresses is investigated in [https://web.archive.org/web/20240715101040/https://www2.deloitte.com/nl/nl/pages/innovatie/artikelen/quantum-computers-and-the-bitcoin-blockchain.html this Deloitte report]. The report estimates that in 2020 approximately 25% of the bitcoin supply is held within addresses vulnerable to quantum attack. As of the time of writing, that number is now closer to 20%.",
      "path": "bip-p2qrh.mediawiki",
      "position": null,
      "original_position": 34,
      "commit_id": "d89b7c5c0828a2330e8cc2552006d1cfd0b7b0d2",
      "original_commit_id": "7f4456de30db2528bcfc1dddbbc3c7533169646a",
      "in_reply_to_id": 1781873035,
      "user": {
        "login": "cryptoquick",
        "id": 285690,
        "node_id": "MDQ6VXNlcjI4NTY5MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/285690?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cryptoquick",
        "html_url": "https://github.com/cryptoquick",
        "followers_url": "https://api.github.com/users/cryptoquick/followers",
        "following_url": "https://api.github.com/users/cryptoquick/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cryptoquick/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cryptoquick/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cryptoquick/subscriptions",
        "organizations_url": "https://api.github.com/users/cryptoquick/orgs",
        "repos_url": "https://api.github.com/users/cryptoquick/repos",
        "events_url": "https://api.github.com/users/cryptoquick/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cryptoquick/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for that, I've added that link as a reference.",
      "created_at": "2024-10-01T01:05:06Z",
      "updated_at": "2024-10-01T01:05:06Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1670#discussion_r1781995162",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1781995162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1670"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    }
  ]
}