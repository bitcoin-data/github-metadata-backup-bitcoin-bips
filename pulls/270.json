{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/270",
    "id": 55055794,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTUwNTU3OTQ=",
    "html_url": "https://github.com/bitcoin/bips/pull/270",
    "diff_url": "https://github.com/bitcoin/bips/pull/270.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/270.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/270",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/270/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/270/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/270/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
    "number": 270,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP 143: Transaction signature verification for version 0 and version 1 witness program",
    "user": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jl2012/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jl2012/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This proposal defines a new transaction digest algorithm for signature verification in version 0 and version 1 witness program, in order to minimize redundant data hashing in verification, and to cover the input value by the signature.\n",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2016-01-05T05:26:34Z",
    "updated_at": "2016-01-08T17:58:21Z",
    "closed_at": "2016-01-08T17:58:21Z",
    "mergeable_state": "unknown",
    "merged_at": "2016-01-08T17:58:21Z",
    "merge_commit_sha": "c72a1d1e37a186fe84f7a090fa8b19e632706238",
    "assignee": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jl2012:segwit-checksig",
      "ref": "segwit-checksig",
      "sha": "7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "user": {
        "login": "jl2012",
        "id": 8403418,
        "node_id": "MDQ6VXNlcjg0MDM0MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jl2012",
        "html_url": "https://github.com/jl2012",
        "followers_url": "https://api.github.com/users/jl2012/followers",
        "following_url": "https://api.github.com/users/jl2012/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jl2012/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jl2012/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
        "organizations_url": "https://api.github.com/users/jl2012/orgs",
        "repos_url": "https://api.github.com/users/jl2012/repos",
        "events_url": "https://api.github.com/users/jl2012/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jl2012/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 34785021,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNDc4NTAyMQ==",
        "name": "bips",
        "full_name": "jl2012/bips",
        "owner": {
          "login": "jl2012",
          "id": 8403418,
          "node_id": "MDQ6VXNlcjg0MDM0MTg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jl2012",
          "html_url": "https://github.com/jl2012",
          "followers_url": "https://api.github.com/users/jl2012/followers",
          "following_url": "https://api.github.com/users/jl2012/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jl2012/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jl2012/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
          "organizations_url": "https://api.github.com/users/jl2012/orgs",
          "repos_url": "https://api.github.com/users/jl2012/repos",
          "events_url": "https://api.github.com/users/jl2012/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jl2012/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jl2012/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/jl2012/bips",
        "archive_url": "https://api.github.com/repos/jl2012/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jl2012/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jl2012/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jl2012/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jl2012/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jl2012/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jl2012/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jl2012/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jl2012/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jl2012/bips/contributors",
        "deployments_url": "https://api.github.com/repos/jl2012/bips/deployments",
        "downloads_url": "https://api.github.com/repos/jl2012/bips/downloads",
        "events_url": "https://api.github.com/repos/jl2012/bips/events",
        "forks_url": "https://api.github.com/repos/jl2012/bips/forks",
        "git_commits_url": "https://api.github.com/repos/jl2012/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jl2012/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jl2012/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jl2012/bips.git",
        "issue_comment_url": "https://api.github.com/repos/jl2012/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jl2012/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jl2012/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jl2012/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jl2012/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jl2012/bips/languages",
        "merges_url": "https://api.github.com/repos/jl2012/bips/merges",
        "milestones_url": "https://api.github.com/repos/jl2012/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jl2012/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jl2012/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jl2012/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:jl2012/bips.git",
        "stargazers_url": "https://api.github.com/repos/jl2012/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/jl2012/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jl2012/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/jl2012/bips/subscription",
        "tags_url": "https://api.github.com/repos/jl2012/bips/tags",
        "teams_url": "https://api.github.com/repos/jl2012/bips/teams",
        "trees_url": "https://api.github.com/repos/jl2012/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jl2012/bips.git",
        "hooks_url": "https://api.github.com/repos/jl2012/bips/hooks",
        "svn_url": "https://github.com/jl2012/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 5,
        "stargazers_count": 30,
        "watchers_count": 30,
        "size": 4605,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-08-07T18:35:41Z",
        "created_at": "2015-04-29T09:31:22Z",
        "updated_at": "2021-11-28T19:06:02Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "627ffecd5ac7fbc28167dad72c1c9c33170965ef",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5178,
        "stargazers_count": 8116,
        "watchers_count": 8116,
        "size": 13694,
        "default_branch": "master",
        "open_issues_count": 115,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-08T12:03:37Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-06-12T10:53:19Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/270"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 0,
    "deletions": 0,
    "changed_files": 0,
    "commits": 1,
    "review_comments": 4,
    "comments": 6
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 505588924,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NTA1NTg4OTI0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/505588924",
      "actor": {
        "login": "jl2012",
        "id": 8403418,
        "node_id": "MDQ6VXNlcjg0MDM0MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jl2012",
        "html_url": "https://github.com/jl2012",
        "followers_url": "https://api.github.com/users/jl2012/followers",
        "following_url": "https://api.github.com/users/jl2012/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jl2012/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jl2012/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
        "organizations_url": "https://api.github.com/users/jl2012/orgs",
        "repos_url": "https://api.github.com/users/jl2012/repos",
        "events_url": "https://api.github.com/users/jl2012/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jl2012/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-05T06:40:18Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzODI2NzA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 169277202,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTI3NzIwMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/169277202",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-06T09:37:05Z",
      "updated_at": "2016-01-06T09:45:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "So, this basically redefines the 4 ECDSA OPs in the case of segwit scripts.\n\nThe only downside I see is outweighted by the upside.\n\nOn the good side, signature checkers already know the transaction being spent. From that they can parse the input being signed, and see if it is segwit. If it is, then change the hash rule, this is easy change.\n\nHowever, I am a bit concerned about needing the previous input values. Actually transaction checkers don't have this information. Requiring it will make lots more code to change to support segwit, because the signature checker need now more data than before. It might not really be a valid complain though considering the upside.\n\n(btw, people using NBitcoin with TransactionBuilder won't have any breaking code because of that, the TransactionBuilder already requires the full spent txout)\n",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/270#issuecomment-169277202",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/270"
    },
    {
      "event": "commented",
      "id": 169345339,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTM0NTMzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/169345339",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-06T14:58:36Z",
      "updated_at": "2016-01-06T14:58:36Z",
      "author_association": "MEMBER",
      "body": "On Jan 6, 2016 01:37, \"Nicolas Dorier\" notifications@github.com wrote:\n\n> However, I am a bit concerned about needing the previous input values.\n> Actually transaction checkers don't have this information. Requiring it\n> will make lots more code to change to support segwit, because the signature\n> checker need now more data than before. It might not really be a valid\n> complain though considering the upside.\n\nI am a bit confused what signature checker you are talking about. Either\nyou are a full node that maintains a UTXO set, and you have the amounts, or\nyou can't usefully verify anything at all. If you're talking about the\nsigning code: that should have access to amounts or it couldn't construct a\ncorrect transaction.\n\nHowever, I don't consider signing amounts or not a deal breaker. We had to\npropose changing the sighashing algorithm to fix the O(n^2) behaviour, and\nif we're doing that, it would seem stupid to not also make the probably\nmost-often requested related feature (amount signing). If there is\nsubstantial controversy about it, I think we can remove that, and postpone\nit to be an optional feature of a future softfork.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/270#issuecomment-169345339",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/270"
    },
    {
      "event": "commented",
      "id": 169416052,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTQxNjA1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/169416052",
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-06T18:43:15Z",
      "updated_at": "2016-01-06T18:43:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "I don't think this will be controversial.\nMy point is that the method (in all frameworks and language)\n\n```\nEvalScript(Script scriptPubKey, Script scriptSig, Transaction, Input)\n```\n\nWill become\n\n```\nEvalScript(TxOut previous, Script scriptSig, Transaction, Input)\n```\n\nAnd same thing for the \"Sign\" method.\nIn practice, this will be easy to fix, people who can fetch the scriptPubKey before will most likely be able to fetch the TxOut easily as you said. But this will not be automatic.\n\nFrankly, I don't think that matter, wallet providers, hardware wallet provider, and service providers like myself want so much the benefit of having the input value in the hash that nobody will likely complain. \n",
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/270#issuecomment-169416052",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/270"
    },
    {
      "event": "labeled",
      "id": 507521167,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUwNzUyMTE2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/507521167",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-06T20:39:45Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 507521168,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUwNzUyMTE2OA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/507521168",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-06T20:39:45Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6N2NlY2ZhY2RmNTFhMDRmMDBhYTg1YzRhY2Q2Y2FmOWEwOGE4Mzg3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "tree": {
        "sha": "1034f465a7a6b60c2b63d7e03f7b3da8f5726129",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/1034f465a7a6b60c2b63d7e03f7b3da8f5726129"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/fd55dd92e60b1d664da63e2e01b58bab174090c4",
          "sha": "fd55dd92e60b1d664da63e2e01b58bab174090c4",
          "html_url": "https://github.com/bitcoin/bips/commit/fd55dd92e60b1d664da63e2e01b58bab174090c4"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/627ffecd5ac7fbc28167dad72c1c9c33170965ef",
          "sha": "627ffecd5ac7fbc28167dad72c1c9c33170965ef",
          "html_url": "https://github.com/bitcoin/bips/commit/627ffecd5ac7fbc28167dad72c1c9c33170965ef"
        }
      ],
      "message": "Merge pull request #5 from MarcoFalke/patch-1\n\nFix syntax error </ref>",
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@users.noreply.github.com",
        "date": "2016-01-07T13:10:47Z"
      },
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@users.noreply.github.com",
        "date": "2016-01-07T13:10:47Z"
      },
      "sha": "7cecfacdf51a04f00aa85c4acd6caf9a08a83871"
    },
    {
      "event": "commented",
      "id": 169679802,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTY3OTgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/169679802",
      "actor": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-07T14:31:17Z",
      "updated_at": "2016-01-07T14:31:17Z",
      "author_association": "NONE",
      "body": "This update seems like the perfect opportunity to get rid of that CHECKMULTISIG bug where one item too many is popped off the stack.\n",
      "user": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/270#issuecomment-169679802",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/270"
    },
    {
      "event": "commented",
      "id": 169900005,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTkwMDAwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/169900005",
      "actor": {
        "login": "jl2012",
        "id": 8403418,
        "node_id": "MDQ6VXNlcjg0MDM0MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jl2012",
        "html_url": "https://github.com/jl2012",
        "followers_url": "https://api.github.com/users/jl2012/followers",
        "following_url": "https://api.github.com/users/jl2012/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jl2012/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jl2012/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
        "organizations_url": "https://api.github.com/users/jl2012/orgs",
        "repos_url": "https://api.github.com/users/jl2012/repos",
        "events_url": "https://api.github.com/users/jl2012/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jl2012/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T05:25:54Z",
      "updated_at": "2016-01-08T05:25:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "@FelixWeis I'm not sure if it's worth extra testing and reviewing. The improvement is just 1 byte per CHECKMULTISIG. And CHECKMULTISIG will become obsolete when we introduce new signature scheme like Schnorr after the segwit softfork.\n",
      "user": {
        "login": "jl2012",
        "id": 8403418,
        "node_id": "MDQ6VXNlcjg0MDM0MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jl2012",
        "html_url": "https://github.com/jl2012",
        "followers_url": "https://api.github.com/users/jl2012/followers",
        "following_url": "https://api.github.com/users/jl2012/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jl2012/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jl2012/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
        "organizations_url": "https://api.github.com/users/jl2012/orgs",
        "repos_url": "https://api.github.com/users/jl2012/repos",
        "events_url": "https://api.github.com/users/jl2012/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jl2012/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/270#issuecomment-169900005",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/270"
    },
    {
      "event": "mentioned",
      "id": 509068019,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTA5MDY4MDE5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509068019",
      "actor": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T05:25:54Z"
    },
    {
      "event": "subscribed",
      "id": 509068020,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwOTA2ODAyMA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509068020",
      "actor": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T05:25:54Z"
    },
    {
      "event": "commented",
      "id": 169903489,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTkwMzQ4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/169903489",
      "actor": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T05:51:59Z",
      "updated_at": "2016-01-08T05:51:59Z",
      "author_association": "NONE",
      "body": "If schnorr is replacing these completly not fixing makes sense, thanks!\n\nOn Fri, 8 Jan 2016 14:25 Johnson Lau notifications@github.com wrote:\n\n> @FelixWeis https://github.com/FelixWeis I'm not sure if it's worth\n> extra testing and reviewing. The improvement is just 1 byte per\n> CHECKMULTISIG. And CHECKMULTISIG will become obsolete when we introduce new\n> signature scheme like Schnorr after the segwit softfork.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bips/pull/270#issuecomment-169900005.\n",
      "user": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/270#issuecomment-169903489",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/270"
    },
    {
      "event": "mentioned",
      "id": 509079686,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTA5MDc5Njg2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509079686",
      "actor": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T05:52:00Z"
    },
    {
      "event": "subscribed",
      "id": 509079687,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDUwOTA3OTY4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509079687",
      "actor": {
        "login": "FelixWeis",
        "id": 551068,
        "node_id": "MDQ6VXNlcjU1MTA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/551068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FelixWeis",
        "html_url": "https://github.com/FelixWeis",
        "followers_url": "https://api.github.com/users/FelixWeis/followers",
        "following_url": "https://api.github.com/users/FelixWeis/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FelixWeis/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FelixWeis/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FelixWeis/subscriptions",
        "organizations_url": "https://api.github.com/users/FelixWeis/orgs",
        "repos_url": "https://api.github.com/users/FelixWeis/repos",
        "events_url": "https://api.github.com/users/FelixWeis/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FelixWeis/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T05:52:00Z"
    },
    {
      "event": "assigned",
      "id": 509636168,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQ1MDk2MzYxNjg=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509636168",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:11:25Z",
      "assignee": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "renamed",
      "id": 509662925,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NTA5NjYyOTI1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509662925",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:35:04Z",
      "rename": {
        "from": "New BIP: Transaction signature verification for version 0 and version 1 witness program",
        "to": "BIP 143: Transaction signature verification for version 0 and version 1 witness program"
      }
    },
    {
      "event": "unlabeled",
      "id": 509662983,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NTA5NjYyOTgz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509662983",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:35:06Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "merged",
      "id": 509687533,
      "node_id": "MDExOk1lcmdlZEV2ZW50NTA5Njg3NTMz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509687533",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "created_at": "2016-01-08T17:58:21Z"
    },
    {
      "event": "closed",
      "id": 509687534,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTA5Njg3NTM0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509687534",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:58:21Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48939247",
      "pull_request_review_id": null,
      "id": 48939247,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MjQ3",
      "diff_hunk": "@@ -0,0 +1,132 @@\n+<pre>\n+  BIP: x\n+  Title: Transaction signature verification for version 0 and version 1 witness program\n+  Author: Johnson Lau <jl2012@xbt.hk>\n+          Pieter Wuille <pieter.wuille@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-01-03\n+</pre>\n+\n+== Abstract ==\n+This proposal defines a new transaction digest algorithm for signature verification in version 0 and version 1 witness program, in order to minimize redundant data hashing in verification, and to cover the input value by the signature.\n+\n+== Motivation ==\n+There are 4 ECDSA signature verification codes in the original Bitcoin script system: CHECKSIG, CHECKSIGVERIFY, CHECKMULTISIG, CHECKMULTISIGVERIFY (“sigops”). According to the sighash type (ALL, NONE, SINGLE, ANYONECANPAY), a transaction digest is generated with a double SHA256 of a serialized subset of the transaction, and the signature is verified against this digest with a given public key. The detailed procedure is described in a Bitcoin Wiki article. <ref name=wiki>[https://en.bitcoin.it/wiki/OP_CHECKSIG]</ref>\n+\n+Unfortunately, there are at least 2 weaknesses in the original transaction digest algorithm:\n+\n+* For the verification of each signature, the amount of data hashing is proportional to the size of the transaction. Therefore, data hashing grows in O(n<sup>2</sup>) as the number of sigops in a transaction increases. While a 1 MB block would normally take 2 seconds to verify with an average computer in 2015, a 1MB transaction with 5569 sigops may take 25 seconds to verify. This could be fixed by optimizing the digest algorithm by introducing some reusable “midstate”, so the time complexity becomes O(n). <ref>[https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2292 CVE-2013-2292]</ref><ref>[https://bitcointalk.org/?topic=140078 New Bitcoin vulnerability: A transaction that takes at least 3 minutes to verify]</ref><ref>[http://rusty.ozlabs.org/?p=522 The Megatransaction: Why Does It Take 25 Seconds?]</ref>\n+* The algorithm does not involve the amount of Bitcoin being spent by the input. This is usually not a problem for online network nodes as they could request for the specified transaction to acquire the output value. For an offline transaction signing device (\"cold wallet\"), however, the unknowing of input amount makes it impossible to calculate the exact amount being spent and the transaction fee. To cope with this problem a cold wallet must also acquire the full transaction being spent, which could be a big obstacle in the implementation of lightweight, air-gapped wallet. By including the input value of part of the transaction digest, a cold wallet may safely sign a transaction by learning the value from an untrusted source. In the case that a wrong value is provided and signed, the signature would be invalid and no funding might be lost. <ref>[https://bitcointalk.org/index.php?topic=181734.0 SIGHASH_WITHINPUTVALUE: Super-lightweight HW wallets and offline data]</ref>\n+\n+Deploying the aforementioned fixes in the original script system is not a simple task. That would be either a hardfork, or a softfork for new sigops without the ability to remove or insert stack items. However, the introduction of segregated witness softfork offers an opportunity to define a different set of script semantics without disrupting the original system, as the unupgraded nodes would always consider such a transaction output is spendable by arbitrary signature or no signature at all. <ref>[https://github.com/CodeShark/bips/blob/segwit/bip-codeshark-jl2012-segwit.mediawiki BIPx: Segregated Witness (Consensus layer)]</ref>\n+\n+== Specification ==\n+A new transaction digest algorithm is defined, but only applicable to sigops in version 0 and version 1 witness program:\n+  Double SHA256 of the serialization of:\n+     1. nVersion of the transaction\n+     2. hashPrevouts\n+     3. hashSequence\n+     4. transaction id and output index of the output spent by this input\n+     5. subscript of the input\n+     6. value of the output spent by this input\n+     7. nSequence of the input\n+     8. hashOutputs\n+     9. nLocktime of the transaction\n+    10. sighash type of the signature\n+\n+The items 1, 4, 5, 7, 9, 10 have the same meaning as the original algorithm. <ref name=wiki>\n+\n+The item 6 is a 8-byte value of the amount of bitcoin spent in this input.\n+\n+hashPrevouts:\n+*If the ANYONECANPAY flag is not set, hashPrevouts is the double SHA256 of the serialization of all transaction ids and output indexes involved in this transaction;\n+*Otherwise, hashPrevouts is a uint256 of 0x0000......0000.\n+\n+hashSequence:\n+*If none of the ANYONECANPAY, SINGLE, NONE sighash type is set, hashSequence is the double SHA256 of the serialization of nSequence of all inputs;\n+*Otherwise, hashSequence is a uint256 of 0x0000......0000.\n+\n+hashOutputs:\n+*If the sighash type is neither SINGLE nor NONE, hashOutputs is the double SHA256 of the serialization of all output scriptPubKey with value;\n+*If sighash type is SINGLE and the input index is not greater than the number of outputs, hashOutputs is the double SHA256 of the output scriptPubKey with value of the same index as the input;\n+*Otherwise, hashOutputs is a uint256 of 0x0000......0000.\n+\n+The hashPrevouts, hashSequence, and hashOutputs calculated in an earlier verification may be reused in other inputs of the same transaction, so that the time complexity of the whole hashing process reduces from O(n<sup>2</sup>) to O(n).\n+\n+Refer to the reference implementation, reproduced below, for the precise algorithm:\n+\n+  \n+  uint256 hashPrevouts;\n+  uint256 hashSequence;\n+  uint256 hashOutputs;\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY)) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].prevout;\n+      }\n+      hashPrevouts = ss.GetHash();\n+  }\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY) && (nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].nSequence;\n+      }\n+      hashSequence = ss.GetHash();\n+  }\n+  \n+  if ((nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vout.size(); n++) {\n+          ss << txTo.vout[n];\n+      }\n+      hashOutputs = ss.GetHash();\n+  } else if ((nHashType & 0x1f) == SIGHASH_SINGLE && nIn < txTo.vout.size()) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      ss << txTo.vout[nIn];\n+      hashOutputs = ss.GetHash();\n+  }\n+  \n+  CHashWriter ss(SER_GETHASH, 0);\n+  // Version\n+  ss << txTo.nVersion;\n+  // Input prevouts/nSequence (none/all, depending on flags)\n+  ss << hashPrevouts;\n+  ss << hashSequence;\n+  // The input being signed (replacing the scriptSig with scriptCode + amount)\n+  // The prevout may already be contained in hashPrevout, and the nSequence\n+  // may already be contain in hashSequence.\n+  ss << txTo.vin[nIn].prevout;\n+  ss << static_cast<const CScriptBase&>(scriptCode);",
      "path": "bip-segwit-checksig.mediawiki",
      "position": 102,
      "original_position": 102,
      "commit_id": "7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "original_commit_id": "fd55dd92e60b1d664da63e2e01b58bab174090c4",
      "in_reply_to_id": null,
      "user": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "render as \n\n```\nss << static_cast&lt;const&gt;&lt;/const&gt;(scriptCode);\n```\n",
      "created_at": "2016-01-06T09:21:20Z",
      "updated_at": "2016-01-07T13:10:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/270#discussion_r48939247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48939247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/270"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/49044575",
      "pull_request_review_id": null,
      "id": 49044575,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ0NTc1",
      "diff_hunk": "@@ -0,0 +1,132 @@\n+<pre>\n+  BIP: x\n+  Title: Transaction signature verification for version 0 and version 1 witness program\n+  Author: Johnson Lau <jl2012@xbt.hk>\n+          Pieter Wuille <pieter.wuille@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-01-03\n+</pre>\n+\n+== Abstract ==\n+This proposal defines a new transaction digest algorithm for signature verification in version 0 and version 1 witness program, in order to minimize redundant data hashing in verification, and to cover the input value by the signature.\n+\n+== Motivation ==\n+There are 4 ECDSA signature verification codes in the original Bitcoin script system: CHECKSIG, CHECKSIGVERIFY, CHECKMULTISIG, CHECKMULTISIGVERIFY (“sigops”). According to the sighash type (ALL, NONE, SINGLE, ANYONECANPAY), a transaction digest is generated with a double SHA256 of a serialized subset of the transaction, and the signature is verified against this digest with a given public key. The detailed procedure is described in a Bitcoin Wiki article. <ref name=wiki>[https://en.bitcoin.it/wiki/OP_CHECKSIG]</ref>\n+\n+Unfortunately, there are at least 2 weaknesses in the original transaction digest algorithm:\n+\n+* For the verification of each signature, the amount of data hashing is proportional to the size of the transaction. Therefore, data hashing grows in O(n<sup>2</sup>) as the number of sigops in a transaction increases. While a 1 MB block would normally take 2 seconds to verify with an average computer in 2015, a 1MB transaction with 5569 sigops may take 25 seconds to verify. This could be fixed by optimizing the digest algorithm by introducing some reusable “midstate”, so the time complexity becomes O(n). <ref>[https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2292 CVE-2013-2292]</ref><ref>[https://bitcointalk.org/?topic=140078 New Bitcoin vulnerability: A transaction that takes at least 3 minutes to verify]</ref><ref>[http://rusty.ozlabs.org/?p=522 The Megatransaction: Why Does It Take 25 Seconds?]</ref>\n+* The algorithm does not involve the amount of Bitcoin being spent by the input. This is usually not a problem for online network nodes as they could request for the specified transaction to acquire the output value. For an offline transaction signing device (\"cold wallet\"), however, the unknowing of input amount makes it impossible to calculate the exact amount being spent and the transaction fee. To cope with this problem a cold wallet must also acquire the full transaction being spent, which could be a big obstacle in the implementation of lightweight, air-gapped wallet. By including the input value of part of the transaction digest, a cold wallet may safely sign a transaction by learning the value from an untrusted source. In the case that a wrong value is provided and signed, the signature would be invalid and no funding might be lost. <ref>[https://bitcointalk.org/index.php?topic=181734.0 SIGHASH_WITHINPUTVALUE: Super-lightweight HW wallets and offline data]</ref>\n+\n+Deploying the aforementioned fixes in the original script system is not a simple task. That would be either a hardfork, or a softfork for new sigops without the ability to remove or insert stack items. However, the introduction of segregated witness softfork offers an opportunity to define a different set of script semantics without disrupting the original system, as the unupgraded nodes would always consider such a transaction output is spendable by arbitrary signature or no signature at all. <ref>[https://github.com/CodeShark/bips/blob/segwit/bip-codeshark-jl2012-segwit.mediawiki BIPx: Segregated Witness (Consensus layer)]</ref>\n+\n+== Specification ==\n+A new transaction digest algorithm is defined, but only applicable to sigops in version 0 and version 1 witness program:\n+  Double SHA256 of the serialization of:\n+     1. nVersion of the transaction\n+     2. hashPrevouts\n+     3. hashSequence\n+     4. transaction id and output index of the output spent by this input\n+     5. subscript of the input\n+     6. value of the output spent by this input\n+     7. nSequence of the input\n+     8. hashOutputs\n+     9. nLocktime of the transaction\n+    10. sighash type of the signature\n+\n+The items 1, 4, 5, 7, 9, 10 have the same meaning as the original algorithm. <ref name=wiki>\n+\n+The item 6 is a 8-byte value of the amount of bitcoin spent in this input.\n+\n+hashPrevouts:\n+*If the ANYONECANPAY flag is not set, hashPrevouts is the double SHA256 of the serialization of all transaction ids and output indexes involved in this transaction;\n+*Otherwise, hashPrevouts is a uint256 of 0x0000......0000.\n+\n+hashSequence:\n+*If none of the ANYONECANPAY, SINGLE, NONE sighash type is set, hashSequence is the double SHA256 of the serialization of nSequence of all inputs;\n+*Otherwise, hashSequence is a uint256 of 0x0000......0000.\n+\n+hashOutputs:\n+*If the sighash type is neither SINGLE nor NONE, hashOutputs is the double SHA256 of the serialization of all output scriptPubKey with value;\n+*If sighash type is SINGLE and the input index is not greater than the number of outputs, hashOutputs is the double SHA256 of the output scriptPubKey with value of the same index as the input;\n+*Otherwise, hashOutputs is a uint256 of 0x0000......0000.\n+\n+The hashPrevouts, hashSequence, and hashOutputs calculated in an earlier verification may be reused in other inputs of the same transaction, so that the time complexity of the whole hashing process reduces from O(n<sup>2</sup>) to O(n).\n+\n+Refer to the reference implementation, reproduced below, for the precise algorithm:\n+\n+  \n+  uint256 hashPrevouts;\n+  uint256 hashSequence;\n+  uint256 hashOutputs;\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY)) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].prevout;\n+      }\n+      hashPrevouts = ss.GetHash();\n+  }\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY) && (nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].nSequence;\n+      }\n+      hashSequence = ss.GetHash();\n+  }\n+  \n+  if ((nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vout.size(); n++) {\n+          ss << txTo.vout[n];\n+      }\n+      hashOutputs = ss.GetHash();\n+  } else if ((nHashType & 0x1f) == SIGHASH_SINGLE && nIn < txTo.vout.size()) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      ss << txTo.vout[nIn];\n+      hashOutputs = ss.GetHash();\n+  }\n+  \n+  CHashWriter ss(SER_GETHASH, 0);\n+  // Version\n+  ss << txTo.nVersion;\n+  // Input prevouts/nSequence (none/all, depending on flags)\n+  ss << hashPrevouts;\n+  ss << hashSequence;\n+  // The input being signed (replacing the scriptSig with scriptCode + amount)\n+  // The prevout may already be contained in hashPrevout, and the nSequence\n+  // may already be contain in hashSequence.\n+  ss << txTo.vin[nIn].prevout;\n+  ss << static_cast<const CScriptBase&>(scriptCode);",
      "path": "bip-segwit-checksig.mediawiki",
      "position": 102,
      "original_position": 102,
      "commit_id": "7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "original_commit_id": "fd55dd92e60b1d664da63e2e01b58bab174090c4",
      "in_reply_to_id": null,
      "user": {
        "login": "jl2012",
        "id": 8403418,
        "node_id": "MDQ6VXNlcjg0MDM0MTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jl2012",
        "html_url": "https://github.com/jl2012",
        "followers_url": "https://api.github.com/users/jl2012/followers",
        "following_url": "https://api.github.com/users/jl2012/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jl2012/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jl2012/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
        "organizations_url": "https://api.github.com/users/jl2012/orgs",
        "repos_url": "https://api.github.com/users/jl2012/repos",
        "events_url": "https://api.github.com/users/jl2012/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jl2012/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems a bug of github. Any idea?\n",
      "created_at": "2016-01-07T06:10:21Z",
      "updated_at": "2016-01-07T13:10:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/270#discussion_r49044575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/49044575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/270"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/49044598",
      "pull_request_review_id": null,
      "id": 49044598,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ0NTk4",
      "diff_hunk": "@@ -0,0 +1,132 @@\n+<pre>\n+  BIP: x\n+  Title: Transaction signature verification for version 0 and version 1 witness program\n+  Author: Johnson Lau <jl2012@xbt.hk>\n+          Pieter Wuille <pieter.wuille@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-01-03\n+</pre>\n+\n+== Abstract ==\n+This proposal defines a new transaction digest algorithm for signature verification in version 0 and version 1 witness program, in order to minimize redundant data hashing in verification, and to cover the input value by the signature.\n+\n+== Motivation ==\n+There are 4 ECDSA signature verification codes in the original Bitcoin script system: CHECKSIG, CHECKSIGVERIFY, CHECKMULTISIG, CHECKMULTISIGVERIFY (“sigops”). According to the sighash type (ALL, NONE, SINGLE, ANYONECANPAY), a transaction digest is generated with a double SHA256 of a serialized subset of the transaction, and the signature is verified against this digest with a given public key. The detailed procedure is described in a Bitcoin Wiki article. <ref name=wiki>[https://en.bitcoin.it/wiki/OP_CHECKSIG]</ref>\n+\n+Unfortunately, there are at least 2 weaknesses in the original transaction digest algorithm:\n+\n+* For the verification of each signature, the amount of data hashing is proportional to the size of the transaction. Therefore, data hashing grows in O(n<sup>2</sup>) as the number of sigops in a transaction increases. While a 1 MB block would normally take 2 seconds to verify with an average computer in 2015, a 1MB transaction with 5569 sigops may take 25 seconds to verify. This could be fixed by optimizing the digest algorithm by introducing some reusable “midstate”, so the time complexity becomes O(n). <ref>[https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2292 CVE-2013-2292]</ref><ref>[https://bitcointalk.org/?topic=140078 New Bitcoin vulnerability: A transaction that takes at least 3 minutes to verify]</ref><ref>[http://rusty.ozlabs.org/?p=522 The Megatransaction: Why Does It Take 25 Seconds?]</ref>\n+* The algorithm does not involve the amount of Bitcoin being spent by the input. This is usually not a problem for online network nodes as they could request for the specified transaction to acquire the output value. For an offline transaction signing device (\"cold wallet\"), however, the unknowing of input amount makes it impossible to calculate the exact amount being spent and the transaction fee. To cope with this problem a cold wallet must also acquire the full transaction being spent, which could be a big obstacle in the implementation of lightweight, air-gapped wallet. By including the input value of part of the transaction digest, a cold wallet may safely sign a transaction by learning the value from an untrusted source. In the case that a wrong value is provided and signed, the signature would be invalid and no funding might be lost. <ref>[https://bitcointalk.org/index.php?topic=181734.0 SIGHASH_WITHINPUTVALUE: Super-lightweight HW wallets and offline data]</ref>\n+\n+Deploying the aforementioned fixes in the original script system is not a simple task. That would be either a hardfork, or a softfork for new sigops without the ability to remove or insert stack items. However, the introduction of segregated witness softfork offers an opportunity to define a different set of script semantics without disrupting the original system, as the unupgraded nodes would always consider such a transaction output is spendable by arbitrary signature or no signature at all. <ref>[https://github.com/CodeShark/bips/blob/segwit/bip-codeshark-jl2012-segwit.mediawiki BIPx: Segregated Witness (Consensus layer)]</ref>\n+\n+== Specification ==\n+A new transaction digest algorithm is defined, but only applicable to sigops in version 0 and version 1 witness program:\n+  Double SHA256 of the serialization of:\n+     1. nVersion of the transaction\n+     2. hashPrevouts\n+     3. hashSequence\n+     4. transaction id and output index of the output spent by this input\n+     5. subscript of the input\n+     6. value of the output spent by this input\n+     7. nSequence of the input\n+     8. hashOutputs\n+     9. nLocktime of the transaction\n+    10. sighash type of the signature\n+\n+The items 1, 4, 5, 7, 9, 10 have the same meaning as the original algorithm. <ref name=wiki>\n+\n+The item 6 is a 8-byte value of the amount of bitcoin spent in this input.\n+\n+hashPrevouts:\n+*If the ANYONECANPAY flag is not set, hashPrevouts is the double SHA256 of the serialization of all transaction ids and output indexes involved in this transaction;\n+*Otherwise, hashPrevouts is a uint256 of 0x0000......0000.\n+\n+hashSequence:\n+*If none of the ANYONECANPAY, SINGLE, NONE sighash type is set, hashSequence is the double SHA256 of the serialization of nSequence of all inputs;\n+*Otherwise, hashSequence is a uint256 of 0x0000......0000.\n+\n+hashOutputs:\n+*If the sighash type is neither SINGLE nor NONE, hashOutputs is the double SHA256 of the serialization of all output scriptPubKey with value;\n+*If sighash type is SINGLE and the input index is not greater than the number of outputs, hashOutputs is the double SHA256 of the output scriptPubKey with value of the same index as the input;\n+*Otherwise, hashOutputs is a uint256 of 0x0000......0000.\n+\n+The hashPrevouts, hashSequence, and hashOutputs calculated in an earlier verification may be reused in other inputs of the same transaction, so that the time complexity of the whole hashing process reduces from O(n<sup>2</sup>) to O(n).\n+\n+Refer to the reference implementation, reproduced below, for the precise algorithm:\n+\n+  \n+  uint256 hashPrevouts;\n+  uint256 hashSequence;\n+  uint256 hashOutputs;\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY)) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].prevout;\n+      }\n+      hashPrevouts = ss.GetHash();\n+  }\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY) && (nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].nSequence;\n+      }\n+      hashSequence = ss.GetHash();\n+  }\n+  \n+  if ((nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vout.size(); n++) {\n+          ss << txTo.vout[n];\n+      }\n+      hashOutputs = ss.GetHash();\n+  } else if ((nHashType & 0x1f) == SIGHASH_SINGLE && nIn < txTo.vout.size()) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      ss << txTo.vout[nIn];\n+      hashOutputs = ss.GetHash();\n+  }\n+  \n+  CHashWriter ss(SER_GETHASH, 0);\n+  // Version\n+  ss << txTo.nVersion;\n+  // Input prevouts/nSequence (none/all, depending on flags)\n+  ss << hashPrevouts;\n+  ss << hashSequence;\n+  // The input being signed (replacing the scriptSig with scriptCode + amount)\n+  // The prevout may already be contained in hashPrevout, and the nSequence\n+  // may already be contain in hashSequence.\n+  ss << txTo.vin[nIn].prevout;\n+  ss << static_cast<const CScriptBase&>(scriptCode);",
      "path": "bip-segwit-checksig.mediawiki",
      "position": 102,
      "original_position": 102,
      "commit_id": "7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "original_commit_id": "fd55dd92e60b1d664da63e2e01b58bab174090c4",
      "in_reply_to_id": null,
      "user": {
        "login": "btcdrak",
        "id": 7275704,
        "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btcdrak",
        "html_url": "https://github.com/btcdrak",
        "followers_url": "https://api.github.com/users/btcdrak/followers",
        "following_url": "https://api.github.com/users/btcdrak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/btcdrak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/btcdrak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
        "organizations_url": "https://api.github.com/users/btcdrak/orgs",
        "repos_url": "https://api.github.com/users/btcdrak/repos",
        "events_url": "https://api.github.com/users/btcdrak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/btcdrak/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah looks like output escaping.\n",
      "created_at": "2016-01-07T06:11:07Z",
      "updated_at": "2016-01-07T13:10:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/270#discussion_r49044598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/49044598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/270"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/49069138",
      "pull_request_review_id": null,
      "id": 49069138,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY5MTM4",
      "diff_hunk": "@@ -0,0 +1,132 @@\n+<pre>\n+  BIP: x\n+  Title: Transaction signature verification for version 0 and version 1 witness program\n+  Author: Johnson Lau <jl2012@xbt.hk>\n+          Pieter Wuille <pieter.wuille@gmail.com>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2016-01-03\n+</pre>\n+\n+== Abstract ==\n+This proposal defines a new transaction digest algorithm for signature verification in version 0 and version 1 witness program, in order to minimize redundant data hashing in verification, and to cover the input value by the signature.\n+\n+== Motivation ==\n+There are 4 ECDSA signature verification codes in the original Bitcoin script system: CHECKSIG, CHECKSIGVERIFY, CHECKMULTISIG, CHECKMULTISIGVERIFY (“sigops”). According to the sighash type (ALL, NONE, SINGLE, ANYONECANPAY), a transaction digest is generated with a double SHA256 of a serialized subset of the transaction, and the signature is verified against this digest with a given public key. The detailed procedure is described in a Bitcoin Wiki article. <ref name=wiki>[https://en.bitcoin.it/wiki/OP_CHECKSIG]</ref>\n+\n+Unfortunately, there are at least 2 weaknesses in the original transaction digest algorithm:\n+\n+* For the verification of each signature, the amount of data hashing is proportional to the size of the transaction. Therefore, data hashing grows in O(n<sup>2</sup>) as the number of sigops in a transaction increases. While a 1 MB block would normally take 2 seconds to verify with an average computer in 2015, a 1MB transaction with 5569 sigops may take 25 seconds to verify. This could be fixed by optimizing the digest algorithm by introducing some reusable “midstate”, so the time complexity becomes O(n). <ref>[https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-2292 CVE-2013-2292]</ref><ref>[https://bitcointalk.org/?topic=140078 New Bitcoin vulnerability: A transaction that takes at least 3 minutes to verify]</ref><ref>[http://rusty.ozlabs.org/?p=522 The Megatransaction: Why Does It Take 25 Seconds?]</ref>\n+* The algorithm does not involve the amount of Bitcoin being spent by the input. This is usually not a problem for online network nodes as they could request for the specified transaction to acquire the output value. For an offline transaction signing device (\"cold wallet\"), however, the unknowing of input amount makes it impossible to calculate the exact amount being spent and the transaction fee. To cope with this problem a cold wallet must also acquire the full transaction being spent, which could be a big obstacle in the implementation of lightweight, air-gapped wallet. By including the input value of part of the transaction digest, a cold wallet may safely sign a transaction by learning the value from an untrusted source. In the case that a wrong value is provided and signed, the signature would be invalid and no funding might be lost. <ref>[https://bitcointalk.org/index.php?topic=181734.0 SIGHASH_WITHINPUTVALUE: Super-lightweight HW wallets and offline data]</ref>\n+\n+Deploying the aforementioned fixes in the original script system is not a simple task. That would be either a hardfork, or a softfork for new sigops without the ability to remove or insert stack items. However, the introduction of segregated witness softfork offers an opportunity to define a different set of script semantics without disrupting the original system, as the unupgraded nodes would always consider such a transaction output is spendable by arbitrary signature or no signature at all. <ref>[https://github.com/CodeShark/bips/blob/segwit/bip-codeshark-jl2012-segwit.mediawiki BIPx: Segregated Witness (Consensus layer)]</ref>\n+\n+== Specification ==\n+A new transaction digest algorithm is defined, but only applicable to sigops in version 0 and version 1 witness program:\n+  Double SHA256 of the serialization of:\n+     1. nVersion of the transaction\n+     2. hashPrevouts\n+     3. hashSequence\n+     4. transaction id and output index of the output spent by this input\n+     5. subscript of the input\n+     6. value of the output spent by this input\n+     7. nSequence of the input\n+     8. hashOutputs\n+     9. nLocktime of the transaction\n+    10. sighash type of the signature\n+\n+The items 1, 4, 5, 7, 9, 10 have the same meaning as the original algorithm. <ref name=wiki>\n+\n+The item 6 is a 8-byte value of the amount of bitcoin spent in this input.\n+\n+hashPrevouts:\n+*If the ANYONECANPAY flag is not set, hashPrevouts is the double SHA256 of the serialization of all transaction ids and output indexes involved in this transaction;\n+*Otherwise, hashPrevouts is a uint256 of 0x0000......0000.\n+\n+hashSequence:\n+*If none of the ANYONECANPAY, SINGLE, NONE sighash type is set, hashSequence is the double SHA256 of the serialization of nSequence of all inputs;\n+*Otherwise, hashSequence is a uint256 of 0x0000......0000.\n+\n+hashOutputs:\n+*If the sighash type is neither SINGLE nor NONE, hashOutputs is the double SHA256 of the serialization of all output scriptPubKey with value;\n+*If sighash type is SINGLE and the input index is not greater than the number of outputs, hashOutputs is the double SHA256 of the output scriptPubKey with value of the same index as the input;\n+*Otherwise, hashOutputs is a uint256 of 0x0000......0000.\n+\n+The hashPrevouts, hashSequence, and hashOutputs calculated in an earlier verification may be reused in other inputs of the same transaction, so that the time complexity of the whole hashing process reduces from O(n<sup>2</sup>) to O(n).\n+\n+Refer to the reference implementation, reproduced below, for the precise algorithm:\n+\n+  \n+  uint256 hashPrevouts;\n+  uint256 hashSequence;\n+  uint256 hashOutputs;\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY)) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].prevout;\n+      }\n+      hashPrevouts = ss.GetHash();\n+  }\n+  \n+  if (!(nHashType & SIGHASH_ANYONECANPAY) && (nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+          ss << txTo.vin[n].nSequence;\n+      }\n+      hashSequence = ss.GetHash();\n+  }\n+  \n+  if ((nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      for (unsigned int n = 0; n < txTo.vout.size(); n++) {\n+          ss << txTo.vout[n];\n+      }\n+      hashOutputs = ss.GetHash();\n+  } else if ((nHashType & 0x1f) == SIGHASH_SINGLE && nIn < txTo.vout.size()) {\n+      CHashWriter ss(SER_GETHASH, 0);\n+      ss << txTo.vout[nIn];\n+      hashOutputs = ss.GetHash();\n+  }\n+  \n+  CHashWriter ss(SER_GETHASH, 0);\n+  // Version\n+  ss << txTo.nVersion;\n+  // Input prevouts/nSequence (none/all, depending on flags)\n+  ss << hashPrevouts;\n+  ss << hashSequence;\n+  // The input being signed (replacing the scriptSig with scriptCode + amount)\n+  // The prevout may already be contained in hashPrevout, and the nSequence\n+  // may already be contain in hashSequence.\n+  ss << txTo.vin[nIn].prevout;\n+  ss << static_cast<const CScriptBase&>(scriptCode);",
      "path": "bip-segwit-checksig.mediawiki",
      "position": 102,
      "original_position": 102,
      "commit_id": "7cecfacdf51a04f00aa85c4acd6caf9a08a83871",
      "original_commit_id": "fd55dd92e60b1d664da63e2e01b58bab174090c4",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not a bug. There is a syntax error in your mediawiki code: https://github.com/jl2012/bips/pull/5\n\nAlso you can activate code highlighting on the cpp code.\n",
      "created_at": "2016-01-07T12:43:37Z",
      "updated_at": "2016-01-07T13:10:48Z",
      "html_url": "https://github.com/bitcoin/bips/pull/270#discussion_r49069138",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/49069138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/270"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 102,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}