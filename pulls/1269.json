{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1269",
    "id": 816879303,
    "node_id": "PR_kwDOAN28mc4wsJbH",
    "html_url": "https://github.com/bitcoin/bips/pull/1269",
    "diff_url": "https://github.com/bitcoin/bips/pull/1269.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1269.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1269/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
    "number": 1269,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP 326: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols",
    "user": {
      "login": "chris-belcher",
      "id": 8398185,
      "node_id": "MDQ6VXNlcjgzOTgxODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-belcher",
      "html_url": "https://github.com/chris-belcher",
      "followers_url": "https://api.github.com/users/chris-belcher/followers",
      "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
      "repos_url": "https://api.github.com/users/chris-belcher/repos",
      "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds a BIP for improve could the privacy of certain off-chain protocols like Lightning, CoinSwap or DLCs.\r\n\r\nIt has already been implemented by Sparrow wallet.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2022-01-08T15:36:37Z",
    "updated_at": "2022-06-01T08:04:50Z",
    "closed_at": "2022-03-08T03:23:57Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-03-08T03:23:57Z",
    "merge_commit_sha": "34d211aa93931fa9edb6daee98499c68c7ac0b60",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "chris-belcher:bip-nsequence-anti-fee-snipe",
      "ref": "bip-nsequence-anti-fee-snipe",
      "sha": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 445856422,
        "node_id": "R_kgDOGpM6pg",
        "name": "bips",
        "full_name": "chris-belcher/bips",
        "owner": {
          "login": "chris-belcher",
          "id": 8398185,
          "node_id": "MDQ6VXNlcjgzOTgxODU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/chris-belcher",
          "html_url": "https://github.com/chris-belcher",
          "followers_url": "https://api.github.com/users/chris-belcher/followers",
          "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
          "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
          "repos_url": "https://api.github.com/users/chris-belcher/repos",
          "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/chris-belcher/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/chris-belcher/bips",
        "archive_url": "https://api.github.com/repos/chris-belcher/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/chris-belcher/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/chris-belcher/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/chris-belcher/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/chris-belcher/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/chris-belcher/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/chris-belcher/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/chris-belcher/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/chris-belcher/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/chris-belcher/bips/contributors",
        "deployments_url": "https://api.github.com/repos/chris-belcher/bips/deployments",
        "downloads_url": "https://api.github.com/repos/chris-belcher/bips/downloads",
        "events_url": "https://api.github.com/repos/chris-belcher/bips/events",
        "forks_url": "https://api.github.com/repos/chris-belcher/bips/forks",
        "git_commits_url": "https://api.github.com/repos/chris-belcher/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/chris-belcher/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/chris-belcher/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/chris-belcher/bips.git",
        "issue_comment_url": "https://api.github.com/repos/chris-belcher/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/chris-belcher/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/chris-belcher/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/chris-belcher/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/chris-belcher/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/chris-belcher/bips/languages",
        "merges_url": "https://api.github.com/repos/chris-belcher/bips/merges",
        "milestones_url": "https://api.github.com/repos/chris-belcher/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/chris-belcher/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/chris-belcher/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/chris-belcher/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:chris-belcher/bips.git",
        "stargazers_url": "https://api.github.com/repos/chris-belcher/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/chris-belcher/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/chris-belcher/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/chris-belcher/bips/subscription",
        "tags_url": "https://api.github.com/repos/chris-belcher/bips/tags",
        "teams_url": "https://api.github.com/repos/chris-belcher/bips/teams",
        "trees_url": "https://api.github.com/repos/chris-belcher/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/chris-belcher/bips.git",
        "hooks_url": "https://api.github.com/repos/chris-belcher/bips/hooks",
        "svn_url": "https://github.com/chris-belcher/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 12930,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-07-04T19:11:21Z",
        "created_at": "2022-01-08T15:29:46Z",
        "updated_at": "2022-02-09T00:33:43Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "97e02b2223b21753acefa813a4e59dbb6e849e77",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5535,
        "stargazers_count": 8220,
        "watchers_count": 8220,
        "size": 13787,
        "default_branch": "master",
        "open_issues_count": 112,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T12:09:15Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-08-01T09:08:43Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 129,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 28,
    "comments": 10
  },
  "events": [
    {
      "event": "commented",
      "id": 1008243272,
      "node_id": "IC_kwDOAN28mc48GJJI",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1008243272",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T07:11:27Z",
      "updated_at": "2022-01-09T07:12:05Z",
      "author_association": "MEMBER",
      "body": "ML discussion dated June 10 2021. No objections that I can see.\r\n\r\nPing @luke-jr.\r\n\r\nEdit: June, not July.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1008243272",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "mentioned",
      "id": 5861997278,
      "node_id": "MEE_lADOAN28mc5BYkgvzwAAAAFdZvre",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5861997278",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T07:11:28Z"
    },
    {
      "event": "subscribed",
      "id": 5861997279,
      "node_id": "SE_lADOAN28mc5BYkgvzwAAAAFdZvrf",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5861997279",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T07:11:28Z"
    },
    {
      "event": "reviewed",
      "id": 847229435,
      "node_id": "PRR_kwDOAN28mc4yf7H7",
      "url": null,
      "actor": null,
      "commit_id": "509b2e0ca1ca25d6c503067900a10d901dd94dfc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some nits/questions",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-847229435",
      "submitted_at": "2022-01-09T08:52:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "commented",
      "id": 1008276081,
      "node_id": "IC_kwDOAN28mc48GRJx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1008276081",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T11:04:59Z",
      "updated_at": "2022-01-09T11:04:59Z",
      "author_association": "MEMBER",
      "body": "Is there an intuition how much this will help in practice?\r\n\r\nI expect smart contract implementations to use \"magic numbers\" for nsequence, such as 144. Or at the least use an nsequence that is biased toward such magic numbers. This will make it easier to tell them apart from \"normal\" transactions. I don't have any data, but I think a tx output is (still) most likely to be spent in the block that created it (or in the few next ones that follow it). Such inputs would get marked with a small nsequence, for example `0` or `1`. Those values don't really make sense for smart contracts, so it will be easy to tell them apart.\r\n\r\nMaybe for small nsequence, it could make sense to also fall back to nlocktime?\r\n\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1008276081",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5862417264,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFdbWNw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5862417264",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T15:10:37Z"
    },
    {
      "event": "commented",
      "id": 1008320403,
      "node_id": "IC_kwDOAN28mc48Gb-T",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1008320403",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T15:36:35Z",
      "updated_at": "2022-01-09T15:36:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks so much for the reviews. I can't believe I got the date of the mailing list post wrong.\r\n\r\nIf fixed locktimes are used then a coinswap peer in a routed coinswap can tell their own position in the route from the locktime. Randomizing locktimes can be used to avoid this, and randomized locktimes will also blend into on-chain traffic a lot better. So this BIP will certainly help the privacy of CoinSwap/Teleport, which intends to eventually use a slightly randomized locktime.\r\n\r\nThe same privacy leak applies to Lightning, and the Lightning community might also decide to implement randomized locktimes in some form. The discussion is more complicated admittedly since public channel transactions are broadcasted to everyone in the LN.\r\n\r\nNSequence values of 1 could be used as an alternative to `OP_CSV 1` which is today being discussed as a way to stop transaction pinning.\r\n\r\nBecause off-chain tech is so much more efficient in block space than on-chain tech, we can expect that the vast majority of block space will be used by on-chain tech for a long time, so it's not a bad thing that this BIP marks on-chain transactions. The purpose of this BIP is to provide cover traffic for the rare occasion when an off-chain contract is closed with the timelock branch. This BIP aims to make that situation not immediately stand out. So I don't think it's worth changing anything for small nsequence values.",
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1008320403",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "commented",
      "id": 1008334655,
      "node_id": "IC_kwDOAN28mc48Gfc_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1008334655",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T16:50:44Z",
      "updated_at": "2022-01-09T16:50:44Z",
      "author_association": "MEMBER",
      "body": "Thanks for the context and providing an example of why an nsequence of `1` makes sense. I guess an nsequence value of `0` doesn't really make sense in practice? Moreover, in a (theoretical) edge case where a wallet spends *untrusted* unconfirmed coins, it might reduce the anti-fee-snipe guarantee. Assuming the incoming tx from another wallet didn't have any anti-fee-snipe mechanism set, then a miner could re-mine the current block while including both the incoming tx and the one just created by the (theoretical) wallet?\r\n\r\nAlso, I am wondering if the locktime and nsequence should remain unspecified in this BIP if they don't need to be set to achieve anti-fee-snipe? Given that smart contracts in practise will usually use either locktime *or* nsequence, shouldn't this BIP recommend to set them to their \"default\" value if not used? (see https://github.com/chris-belcher/bips/pull/2) Otherwise it will again be easy to tell \"normal\" and \"smart\" txs apart.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1008334655",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "commented",
      "id": 1008353812,
      "node_id": "IC_kwDOAN28mc48GkIU",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1008353812",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-09T18:52:12Z",
      "updated_at": "2022-01-09T18:52:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes you're right on both counts. I've edited the pseudocode to also only use nlocktime if the transaction has any unconfirmed inputs. And I've merged your pull request.",
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1008353812",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "reviewed",
      "id": 847294312,
      "node_id": "PRR_kwDOAN28mc4ygK9o",
      "url": null,
      "actor": null,
      "commit_id": "e79508c25c69b1850989c386c7cf97ecfd2186ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-847294312",
      "submitted_at": "2022-01-09T19:14:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "reviewed",
      "id": 848927086,
      "node_id": "PRR_kwDOAN28mc4ymZlu",
      "url": null,
      "actor": null,
      "commit_id": "e79508c25c69b1850989c386c7cf97ecfd2186ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-848927086",
      "submitted_at": "2022-01-11T09:55:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "reviewed",
      "id": 853605199,
      "node_id": "PRR_kwDOAN28mc4y4PtP",
      "url": null,
      "actor": null,
      "commit_id": "e79508c25c69b1850989c386c7cf97ecfd2186ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Let's use BIP number 326 for this",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-853605199",
      "submitted_at": "2022-01-15T23:24:30Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "renamed",
      "id": 5899614207,
      "node_id": "RTE_lADOAN28mc5BYkgvzwAAAAFfpPf_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5899614207",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-15T23:25:25Z",
      "rename": {
        "from": "Add BIP nsequence anti-fee-snipe",
        "to": "BIP 326: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols"
      }
    },
    {
      "event": "labeled",
      "id": 5899614264,
      "node_id": "LE_lADOAN28mc5BYkgvzwAAAAFfpPg4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5899614264",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-15T23:25:29Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5900450623,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFfsbs_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5900450623",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-16T15:34:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5900454810,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFfscua",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5900454810",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-16T15:37:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5900464088,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFfse_Y",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5900464088",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-16T15:45:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5900465574,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFfsfWm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5900465574",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-16T15:46:46Z"
    },
    {
      "event": "commented",
      "id": 1013900055,
      "node_id": "IC_kwDOAN28mc48buMX",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1013900055",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-16T15:48:09Z",
      "updated_at": "2022-01-16T15:48:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks Luke!\r\n\r\nI have dealt with your comments, edited the file name and other places to include the bip number, added an entry to the README, and squished all the commits into one.",
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1013900055",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "reviewed",
      "id": 859493173,
      "node_id": "PRR_kwDOAN28mc4zOtM1",
      "url": null,
      "actor": null,
      "commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-859493173",
      "submitted_at": "2022-01-21T12:38:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "commented",
      "id": 1019287578,
      "node_id": "IC_kwDOAN28mc48wRga",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1019287578",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-22T15:04:09Z",
      "updated_at": "2022-01-22T15:04:09Z",
      "author_association": "MEMBER",
      "body": "Created a draft implementation for Bitcoin Core: https://github.com/bitcoin/bitcoin/pull/24128",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1019287578",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "reviewed",
      "id": 860216696,
      "node_id": "PRR_kwDOAN28mc4zRd14",
      "url": null,
      "actor": null,
      "commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-860216696",
      "submitted_at": "2022-01-22T15:42:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "reviewed",
      "id": 860232054,
      "node_id": "PRR_kwDOAN28mc4zRhl2",
      "url": null,
      "actor": null,
      "commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "yahiheb",
        "id": 52379387,
        "node_id": "MDQ6VXNlcjUyMzc5Mzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/52379387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yahiheb",
        "html_url": "https://github.com/yahiheb",
        "followers_url": "https://api.github.com/users/yahiheb/followers",
        "following_url": "https://api.github.com/users/yahiheb/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yahiheb/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yahiheb/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yahiheb/subscriptions",
        "organizations_url": "https://api.github.com/users/yahiheb/orgs",
        "repos_url": "https://api.github.com/users/yahiheb/repos",
        "events_url": "https://api.github.com/users/yahiheb/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yahiheb/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-860232054",
      "submitted_at": "2022-01-22T19:17:58Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5938103074,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFh8EMi",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5938103074",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-23T11:49:53Z"
    },
    {
      "event": "reviewed",
      "id": 860313713,
      "node_id": "PRR_kwDOAN28mc4zR1hx",
      "url": null,
      "actor": null,
      "commit_id": "4760942da218a5698bd210acb28a3f855f1a144a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-860313713",
      "submitted_at": "2022-01-23T12:05:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "reviewed",
      "id": 860308684,
      "node_id": "PRR_kwDOAN28mc4zR0TM",
      "url": null,
      "actor": null,
      "commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-860308684",
      "submitted_at": "2022-01-23T12:12:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5942778203,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFiN5lb",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5942778203",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-24T14:10:02Z"
    },
    {
      "event": "review_requested",
      "id": 5944721827,
      "node_id": "RRE_lADOAN28mc5BYkgvzwAAAAFiVUGj",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5944721827",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-24T18:44:38Z",
      "requested_reviewer": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5971015675,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFj5nf7",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5971015675",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:16:17Z"
    },
    {
      "event": "commented",
      "id": 1024270475,
      "node_id": "IC_kwDOAN28mc49DSCL",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1024270475",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:21:44Z",
      "updated_at": "2022-01-28T14:21:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "I added a small paragraph explaining how this BIP relates to transaction pinning and `nSequence=1` values. It's a brief retelling of the discussion between @MarcoFalke and me, which I think is worth saying in the document too.",
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1024270475",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "mentioned",
      "id": 5971052780,
      "node_id": "MEE_lADOAN28mc5BYkgvzwAAAAFj5wjs",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5971052780",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:21:45Z"
    },
    {
      "event": "subscribed",
      "id": 5971052788,
      "node_id": "SE_lADOAN28mc5BYkgvzwAAAAFj5wj0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5971052788",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-28T14:21:45Z"
    },
    {
      "event": "reviewed",
      "id": 869294648,
      "node_id": "PRR_kwDOAN28mc4z0GI4",
      "url": null,
      "actor": null,
      "commit_id": "cd6b3fd020fc89504d603993809a6f93d1d98502",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-869294648",
      "submitted_at": "2022-02-01T15:27:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "comment_deleted",
      "id": 5992905726,
      "node_id": "CDE_lADOAN28mc5BYkgvzwAAAAFlNHv-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5992905726",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T03:48:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5995359151,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFlWeuv",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/5995359151",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-02T12:20:14Z"
    },
    {
      "event": "reviewed",
      "id": 870468152,
      "node_id": "PRR_kwDOAN28mc4z4ko4",
      "url": null,
      "actor": null,
      "commit_id": "b86ae635c5ff4334da81bb349b28eb5680415410",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK. RFM?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-870468152",
      "submitted_at": "2022-02-02T12:27:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "reviewed",
      "id": 900210244,
      "node_id": "PRR_kwDOAN28mc41qB5E",
      "url": null,
      "actor": null,
      "commit_id": "b86ae635c5ff4334da81bb349b28eb5680415410",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "div72",
        "id": 60045611,
        "node_id": "MDQ6VXNlcjYwMDQ1NjEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/60045611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/div72",
        "html_url": "https://github.com/div72",
        "followers_url": "https://api.github.com/users/div72/followers",
        "following_url": "https://api.github.com/users/div72/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/div72/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/div72/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/div72/subscriptions",
        "organizations_url": "https://api.github.com/users/div72/orgs",
        "repos_url": "https://api.github.com/users/div72/repos",
        "events_url": "https://api.github.com/users/div72/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/div72/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-900210244",
      "submitted_at": "2022-03-04T13:15:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDRkNWUxY2MxNjJlNWQ5M2JjZjhlMGVhOTRjZjJiYjk2ZTFkNzU5NGE",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "tree": {
        "sha": "a93a60f1602a93927f0d68680aea4176f16ee4e3",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/a93a60f1602a93927f0d68680aea4176f16ee4e3"
      },
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "payload": "tree a93a60f1602a93927f0d68680aea4176f16ee4e3\nparent 97e02b2223b21753acefa813a4e59dbb6e849e77\nauthor chris-belcher <chris-belcher@users.noreply.github.com> 1641655920 +0000\ncommitter chris-belcher <chris-belcher@users.noreply.github.com> 1646429784 +0000\n\nSpecify BIP 326: Anti-fee-sniping protection with nSequence in taproot\n\nTo improve privacy for off-chain protocols\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEECosDj14QzCeJv8//73NOpnfzESkFAmIihlgACgkQ73NOpnfz\nESltvhAAijEq9xglEats5MrBunomXFZdWAmTMZrK91lEZ++9NF+ib/VVRdnfiwvm\nXopQAHoE3139ZQZ8MVV80Lp5hhUOxPt3eglL04q6LIN+SMJbqW+/ceEHo3OO1wjM\nW59cEu1OGjbM/mGfC1atwv/tNVFaEihkE95Ih08pstv+ewjjDw9yWhzfQW9F5ZQ0\nSzZ0TGiX5PcbnT0YQWkzpOPTqJD9uy+WJ+bWvvQxDtN8HKA03Am3pQkzCJWZPjos\nwQKYhLk1jk4po+fXN4ttvtHLLKYGcHvx1Joy4kJXsehxoNlq4xYOGl4GvzC/IGFu\nEL2/zEftS3Ij1/T3tR6YGgNFBfoWqHVOYUYdblSV0x25GcbHVZi9XvHun4ISeqC4\nLXnKlem6niE1wuPbxt8wXkm5eJ3NItUcvZzO6jjLdb3ESjo+2O1QwEwwcYrbRv65\na3CiJO7EF7KOyxswDT69FDdW+K6WjUMcy2YQZwXMV34zXBRe1mHY+oMevg+KuP1a\n7bZNR16Lc97hS6U8rcEyCqLIARnMWGcwwM6G1/9NM65jCvlKZDw1neeT/Aj7WBOs\nDAXygV7RwEQouBFFfcBpT1rhtlGpy5tSQZ1jEhHV+NcyixusUiERIWJCdxikE9aB\nkwy5I9TOKWRS/lO8I5l38gZ0m/uCVlcL6qsMvQui1vfngqrmRh4=\n=qpoM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/97e02b2223b21753acefa813a4e59dbb6e849e77",
          "sha": "97e02b2223b21753acefa813a4e59dbb6e849e77",
          "html_url": "https://github.com/bitcoin/bips/commit/97e02b2223b21753acefa813a4e59dbb6e849e77"
        }
      ],
      "message": "Specify BIP 326: Anti-fee-sniping protection with nSequence in taproot\n\nTo improve privacy for off-chain protocols",
      "committer": {
        "name": "chris-belcher",
        "email": "chris-belcher@users.noreply.github.com",
        "date": "2022-03-04T21:36:24Z"
      },
      "author": {
        "name": "chris-belcher",
        "email": "chris-belcher@users.noreply.github.com",
        "date": "2022-01-08T15:32:00Z"
      },
      "sha": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6187876920,
      "node_id": "HRFPE_lADOAN28mc5BYkgvzwAAAAFw04I4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6187876920",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-04T21:38:29Z"
    },
    {
      "event": "commented",
      "id": 1060339508,
      "node_id": "IC_kwDOAN28mc4_M380",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1060339508",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:49:46Z",
      "updated_at": "2022-03-07T08:49:46Z",
      "author_association": "MEMBER",
      "body": "@kallewoof @luke-jr ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1060339508",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "mentioned",
      "id": 6193047961,
      "node_id": "MEE_lADOAN28mc5BYkgvzwAAAAFxImmZ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6193047961",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:49:46Z"
    },
    {
      "event": "subscribed",
      "id": 6193047970,
      "node_id": "SE_lADOAN28mc5BYkgvzwAAAAFxImmi",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6193047970",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:49:46Z"
    },
    {
      "event": "mentioned",
      "id": 6193047977,
      "node_id": "MEE_lADOAN28mc5BYkgvzwAAAAFxImmp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6193047977",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:49:46Z"
    },
    {
      "event": "subscribed",
      "id": 6193047979,
      "node_id": "SE_lADOAN28mc5BYkgvzwAAAAFxImmr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6193047979",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-07T08:49:46Z"
    },
    {
      "event": "merged",
      "id": 6199508205,
      "node_id": "ME_lADOAN28mc5BYkgvzwAAAAFxhPzt",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6199508205",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "34d211aa93931fa9edb6daee98499c68c7ac0b60",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/34d211aa93931fa9edb6daee98499c68c7ac0b60",
      "created_at": "2022-03-08T03:23:57Z"
    },
    {
      "event": "closed",
      "id": 6199508210,
      "node_id": "CE_lADOAN28mc5BYkgvzwAAAAFxhPzy",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6199508210",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T03:23:57Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 6202398995,
      "node_id": "HRDE_lADOAN28mc5BYkgvzwAAAAFxsRkT",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/6202398995",
      "actor": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-08T13:14:55Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-07T00:46:11Z",
      "updated_at": "2022-04-07T00:46:11Z",
      "source": {
        "issue": {
          "id": 1195346891,
          "node_id": "PR_kwDOAN28mc41xdhx",
          "url": "https://api.github.com/repos/bitcoin/bips/issues/1299",
          "repository_url": "https://api.github.com/repos/bitcoin/bips",
          "labels_url": "https://api.github.com/repos/bitcoin/bips/issues/1299/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1299/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bips/issues/1299/events",
          "html_url": "https://github.com/bitcoin/bips/pull/1299",
          "number": 1299,
          "state": "closed",
          "state_reason": null,
          "title": "bip-326: avoid errors from scripts/buildtable.pl",
          "body": "Merge of #1269 triggered CI errors due to `script/buildtable.pl`, in particular:\r\n\r\n * the Author: field is not a valid email address (\" at \" and \" dot \" rather than \"@\" and \".\")\r\n * missing Comments-URI\r\n * License code is wrong (should be \"CC0-1.0\" rather than \"CC-0\")\r\n * the Title field is longer than the 44 char maximum (could perhaps be \"Anti-fee-sniping in taproot transactions\", dropping the how and why)\r\n \r\nThis makes the trivial changes to the BIP to add the Comments field and fix the License code, and updates buildtable.pl to avoid complaining about the email address and title.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bips/pulls/1299",
            "html_url": "https://github.com/bitcoin/bips/pull/1299",
            "diff_url": "https://github.com/bitcoin/bips/pull/1299.diff",
            "patch_url": "https://github.com/bitcoin/bips/pull/1299.patch"
          },
          "closed_at": "2022-05-05T15:03:30Z",
          "created_at": "2022-04-07T00:46:11Z",
          "updated_at": "2022-05-05T15:05:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1117235306,
      "node_id": "IC_kwDOAN28mc5Cl6hq",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1117235306",
      "actor": {
        "login": "katesalazar",
        "id": 52637275,
        "node_id": "MDQ6VXNlcjUyNjM3Mjc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52637275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/katesalazar",
        "html_url": "https://github.com/katesalazar",
        "followers_url": "https://api.github.com/users/katesalazar/followers",
        "following_url": "https://api.github.com/users/katesalazar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/katesalazar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/katesalazar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/katesalazar/subscriptions",
        "organizations_url": "https://api.github.com/users/katesalazar/orgs",
        "repos_url": "https://api.github.com/users/katesalazar/repos",
        "events_url": "https://api.github.com/users/katesalazar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/katesalazar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-04T12:07:48Z",
      "updated_at": "2022-05-04T12:07:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "https://github.com/bitcoin/bips/commit/34d211aa93931fa9edb6daee98499c68c7ac0b60#r72852428\r\n",
      "user": {
        "login": "katesalazar",
        "id": 52637275,
        "node_id": "MDQ6VXNlcjUyNjM3Mjc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52637275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/katesalazar",
        "html_url": "https://github.com/katesalazar",
        "followers_url": "https://api.github.com/users/katesalazar/followers",
        "following_url": "https://api.github.com/users/katesalazar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/katesalazar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/katesalazar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/katesalazar/subscriptions",
        "organizations_url": "https://api.github.com/users/katesalazar/orgs",
        "repos_url": "https://api.github.com/users/katesalazar/repos",
        "events_url": "https://api.github.com/users/katesalazar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/katesalazar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#issuecomment-1117235306",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1269"
    },
    {
      "event": "reviewed",
      "id": 991556455,
      "node_id": "PRR_kwDOAN28mc47GfNn",
      "url": null,
      "actor": null,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1269#pullrequestreview-991556455",
      "submitted_at": "2022-06-01T08:04:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751505",
      "pull_request_review_id": 847229435,
      "id": 780751505,
      "node_id": "PRRC_kwDOAN28mc4uiVKR",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2021-06-10\n+  License: PD",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 9,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "509b2e0ca1ca25d6c503067900a10d901dd94dfc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd suggest to use less ambiguous CC-0 instead, see https://github.com/bitcoin/bips/blob/master/bip-0002.mediawiki#not-acceptable-licenses\r\n\r\n",
      "created_at": "2022-01-09T08:46:56Z",
      "updated_at": "2022-01-09T08:52:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r780751505",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751634",
      "pull_request_review_id": 847229435,
      "id": 780751634,
      "node_id": "PRRC_kwDOAN28mc4uiVMS",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2021-06-10\n+  License: PD\n+  Post-History: 2021-7-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 10,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "509b2e0ca1ca25d6c503067900a10d901dd94dfc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\r\n```",
      "created_at": "2022-01-09T08:48:17Z",
      "updated_at": "2022-01-09T08:52:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r780751634",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751779",
      "pull_request_review_id": 847229435,
      "id": 780751779,
      "node_id": "PRRC_kwDOAN28mc4uiVOj",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2021-06-10\n+  License: PD\n+  Post-History: 2021-7-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+Python-like pseudocode\n+\n+<source lang=\"python\">\n+def apply_anti_fee_sniping_fields(transaction):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+        || !input.is_taproot(), transaction.inputs))\\",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 60,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "509b2e0ca1ca25d6c503067900a10d901dd94dfc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: python doesn't have `||` and `!` operators. Maybe replace them or remove the mention of \"python\" and only say \"pseudocode\"?",
      "created_at": "2022-01-09T08:49:58Z",
      "updated_at": "2022-01-09T08:52:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r780751779",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751933",
      "pull_request_review_id": 847229435,
      "id": 780751933,
      "node_id": "PRRC_kwDOAN28mc4uiVQ9",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2021-06-10\n+  License: PD\n+  Post-History: 2021-7-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+Python-like pseudocode\n+\n+<source lang=\"python\">\n+def apply_anti_fee_sniping_fields(transaction):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+        || !input.is_taproot(), transaction.inputs))\\\n+        || randint(2) == 0:\n+    transaction.nlocktime = blockchain.height()\n+    if randint(10) == 0:\n+        transaction.nlocktime = max(0, transaction.nlocktime\n+        - randint(0, 99))\n+    # nsequence must be set in order for nlocktime to take effect\n+    # this value also enables RBF\n+    for input in transaction.inputs:\n+        input.nsequence = 2**32 - 3",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 69,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "509b2e0ca1ca25d6c503067900a10d901dd94dfc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Some wallets provide an option to the user to \"opt-out\" of RBF. It would be good to clarify how they should handle this BIP.\r\n\r\nEdit: Presumably, just setting to `2**32 - 2` should still work to enable locktime and \"disable\" rbf.",
      "created_at": "2022-01-09T08:51:58Z",
      "updated_at": "2022-01-09T09:45:41Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r780751933",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751947",
      "pull_request_review_id": 847229435,
      "id": 780751947,
      "node_id": "PRRC_kwDOAN28mc4uiVRL",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2021-06-10\n+  License: PD\n+  Post-History: 2021-7-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+Python-like pseudocode\n+\n+<source lang=\"python\">\n+def apply_anti_fee_sniping_fields(transaction):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+        || !input.is_taproot(), transaction.inputs))\\\n+        || randint(2) == 0:\n+    transaction.nlocktime = blockchain.height()",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 62,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "509b2e0ca1ca25d6c503067900a10d901dd94dfc",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: missing indent?",
      "created_at": "2022-01-09T08:52:08Z",
      "updated_at": "2022-01-09T08:52:37Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r780751947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/780751947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/781981449",
      "pull_request_review_id": 848927086,
      "id": 781981449,
      "node_id": "PRRC_kwDOAN28mc4unBcJ",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "e79508c25c69b1850989c386c7cf97ecfd2186ff",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the title is a bit too specific and might discourage wallets that have not or will not implement taproot to implement anti-fee-snipe at all. Maybe make the BIP a bit more general and remove \"taproot\" from the title? Also, the body could mention: \"Any wallets that can not or do not want to implement the more complex nSequence based anti-fee-sniping may implement only nLockTime based anti-fee-snipe\" (first if branch in the pseudocode)?",
      "created_at": "2022-01-11T09:55:28Z",
      "updated_at": "2022-01-11T09:55:28Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r781981449",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/781981449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/783165731",
      "pull_request_review_id": 850612671,
      "id": 783165731,
      "node_id": "PRRC_kwDOAN28mc4urikj",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "e79508c25c69b1850989c386c7cf97ecfd2186ff",
      "in_reply_to_id": 781981449,
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The BIP only applies for taproot spends so I think it's not a good idea to remove the word taproot. It's no big deal if some wallets decide to not implement it, because the amount of cover traffic needed isn't very large, and we've got at least a decade or two until the anti-fee-sniping becomes important (if ever)",
      "created_at": "2022-01-12T15:10:06Z",
      "updated_at": "2022-01-12T15:10:06Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r783165731",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/783165731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/785361391",
      "pull_request_review_id": 853605199,
      "id": 785361391,
      "node_id": "PRRC_kwDOAN28mc4uz6nv",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 7,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "e79508c25c69b1850989c386c7cf97ecfd2186ff",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This feels more like an Informational BIP IMO.",
      "created_at": "2022-01-15T23:21:30Z",
      "updated_at": "2022-01-15T23:24:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r785361391",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/785361391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/785361411",
      "pull_request_review_id": 853605199,
      "id": 785361411,
      "node_id": "PRRC_kwDOAN28mc4uz6oD",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+            || !input.is_taproot() || input.confirmations() == 0,\n+            transaction.inputs)) || randint(2) == 0:\n+        transaction.nlocktime = blockchain.height()\n+        if randint(10) == 0:\n+            transaction.nlocktime = max(0, transaction.nlocktime\n+            - randint(0, 99))\n+        # nsequence must be set in order for nlocktime to take effect\n+    else:\n+        transaction.nlocktime = 0\n+        input_index = randint(len(transaction.inputs))\n+        transaction.inputs[input_index].nsequence = transaction.inputs\\\n+            [input_index].confirmations()\n+        if randint(10) == 0:\n+            transaction.inputs[input_index].nsequence = max(0,\n+                transaction.inputs[input_index].nsequence - randint(0, 99))\n+</source>\n+\n+== Compatibility ==\n+\n+This BIP doesnt need any consensus changes. It can be adopted unilaterally and gradually by wallets. Although for greater privacy it would be good for software to adopt it as soon as possible. Ideally during the process of developers implementing their taproot wallets, so that when taproot starts to be used it will already include the nSequence code.\n+\n+All wallet software already keeps track of how many confirmations its UTXOs have, so the information required to set the nSequence field is already available.\n+\n+== Acknowledgements ==\n+\n+Originally suggested by David Harding[6] and mentioned to me by ZmnSCPxj.\n+\n+Thanks to craigraw for suggesting a new value for input nsequence in the absolute locktime case[7].\n+\n+== Copyright ==\n+\n+This document is placed in the public domain.",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 97,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "e79508c25c69b1850989c386c7cf97ecfd2186ff",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Public domain is not an acceptable license for new BIPs (see BIP 2)",
      "created_at": "2022-01-15T23:22:03Z",
      "updated_at": "2022-01-15T23:24:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r785361411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/785361411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/789624478",
      "pull_request_review_id": 859493173,
      "id": 789624478,
      "node_id": "PRRC_kwDOAN28mc4vELae",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+            || !input.is_taproot() || input.confirmations() == 0,\n+            transaction.inputs)) || randint(2) == 0:\n+        transaction.nlocktime = blockchain.height()\n+        if randint(10) == 0:\n+            transaction.nlocktime = max(0, transaction.nlocktime\n+            - randint(0, 99))\n+        # nsequence must be set in order for nlocktime to take effect\n+    else:\n+        transaction.nlocktime = 0\n+        input_index = randint(len(transaction.inputs))\n+        transaction.inputs[input_index].nsequence = transaction.inputs\\\n+            [input_index].confirmations()\n+        if randint(10) == 0:\n+            transaction.inputs[input_index].nsequence = max(0,\n+                transaction.inputs[input_index].nsequence - randint(0, 99))",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 80,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This might again drop the nSequence below `1`. Can be fixed by\r\n\r\n```py\r\nnseq -= randint(0, nseq)\r\nnseq -= randint(0, nseq - 1)\r\n```\r\n\r\nDepending on whether randint is inclusive or exclusive.\r\n\r\n\r\n```suggestion\r\n            transaction.inputs[input_index].nsequence -= randint(0, transaction.inputs[input_index].nsequence))\r\n```",
      "created_at": "2022-01-21T12:38:30Z",
      "updated_at": "2022-01-21T12:38:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r789624478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/789624478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": 79,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/789892418",
      "pull_request_review_id": 859881980,
      "id": 789892418,
      "node_id": "PRRC_kwDOAN28mc4vFM1C",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+            || !input.is_taproot() || input.confirmations() == 0,\n+            transaction.inputs)) || randint(2) == 0:\n+        transaction.nlocktime = blockchain.height()\n+        if randint(10) == 0:\n+            transaction.nlocktime = max(0, transaction.nlocktime\n+            - randint(0, 99))\n+        # nsequence must be set in order for nlocktime to take effect\n+    else:\n+        transaction.nlocktime = 0\n+        input_index = randint(len(transaction.inputs))\n+        transaction.inputs[input_index].nsequence = transaction.inputs\\\n+            [input_index].confirmations()\n+        if randint(10) == 0:\n+            transaction.inputs[input_index].nsequence = max(0,\n+                transaction.inputs[input_index].nsequence - randint(0, 99))",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 80,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": 789624478,
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think of `max(1, transaction.inputs[input_index].nsequence - randint(0, 99))` ?\r\n\r\ni.e. Changing `max(0,` into `max(1,` ?\r\n\r\nThe max stops the nseq going below 1. It also doesnt make assumptions about randint being exclusive or inclusive",
      "created_at": "2022-01-21T18:13:47Z",
      "updated_at": "2022-01-21T18:13:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r789892418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/789892418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": 79,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790154488",
      "pull_request_review_id": 860216696,
      "id": 790154488,
      "node_id": "PRRC_kwDOAN28mc4vGMz4",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": null,
      "user": null,
      "body": "`than that then` looks weird even if grammatically correct:\r\n\r\n```suggestion\r\nnSequence can only encode up to 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more than 65535 confirmations, then the wallet should use nLockTime instead.\r\n```",
      "created_at": "2022-01-22T15:42:44Z",
      "updated_at": "2022-01-22T15:42:45Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r790154488",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790154488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790173454",
      "pull_request_review_id": 860232054,
      "id": 790173454,
      "node_id": "PRRC_kwDOAN28mc4vGRcO",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 22,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": null,
      "user": {
        "login": "yahiheb",
        "id": 52379387,
        "node_id": "MDQ6VXNlcjUyMzc5Mzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/52379387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yahiheb",
        "html_url": "https://github.com/yahiheb",
        "followers_url": "https://api.github.com/users/yahiheb/followers",
        "following_url": "https://api.github.com/users/yahiheb/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yahiheb/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yahiheb/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yahiheb/subscriptions",
        "organizations_url": "https://api.github.com/users/yahiheb/orgs",
        "repos_url": "https://api.github.com/users/yahiheb/repos",
        "events_url": "https://api.github.com/users/yahiheb/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yahiheb/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nTaproot allows for point-time-locked contracts (PTLCs) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\r\n```",
      "created_at": "2022-01-22T18:47:25Z",
      "updated_at": "2022-01-22T19:17:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r790173454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790173454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790175646",
      "pull_request_review_id": 860232054,
      "id": 790175646,
      "node_id": "PRRC_kwDOAN28mc4vGR-e",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+            || !input.is_taproot() || input.confirmations() == 0,\n+            transaction.inputs)) || randint(2) == 0:\n+        transaction.nlocktime = blockchain.height()\n+        if randint(10) == 0:\n+            transaction.nlocktime = max(0, transaction.nlocktime\n+            - randint(0, 99))\n+        # nsequence must be set in order for nlocktime to take effect\n+    else:\n+        transaction.nlocktime = 0\n+        input_index = randint(len(transaction.inputs))\n+        transaction.inputs[input_index].nsequence = transaction.inputs\\\n+            [input_index].confirmations()\n+        if randint(10) == 0:\n+            transaction.inputs[input_index].nsequence = max(0,\n+                transaction.inputs[input_index].nsequence - randint(0, 99))\n+</source>\n+\n+== Compatibility ==\n+\n+This BIP doesnt need any consensus changes. It can be adopted unilaterally and gradually by wallets. Although for greater privacy it would be good for software to adopt it as soon as possible. Ideally during the process of developers implementing their taproot wallets, so that when taproot starts to be used it will already include the nSequence code.",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 85,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": null,
      "user": {
        "login": "yahiheb",
        "id": 52379387,
        "node_id": "MDQ6VXNlcjUyMzc5Mzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/52379387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yahiheb",
        "html_url": "https://github.com/yahiheb",
        "followers_url": "https://api.github.com/users/yahiheb/followers",
        "following_url": "https://api.github.com/users/yahiheb/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yahiheb/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yahiheb/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yahiheb/subscriptions",
        "organizations_url": "https://api.github.com/users/yahiheb/orgs",
        "repos_url": "https://api.github.com/users/yahiheb/repos",
        "events_url": "https://api.github.com/users/yahiheb/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yahiheb/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis BIP doesn't need any consensus changes. It can be adopted unilaterally and gradually by wallets. Although for greater privacy it would be good for software to adopt it as soon as possible. Ideally during the process of developers implementing their taproot wallets, so that when taproot starts to be used it will already include the nSequence code.\r\n```",
      "created_at": "2022-01-22T19:12:50Z",
      "updated_at": "2022-01-22T19:17:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r790175646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790175646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790261969",
      "pull_request_review_id": 860308684,
      "id": 790261969,
      "node_id": "PRRC_kwDOAN28mc4vGnDR",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 24,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68[5]. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\r\n```",
      "created_at": "2022-01-23T11:19:01Z",
      "updated_at": "2022-01-23T12:12:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r790261969",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790261969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790262562",
      "pull_request_review_id": 860308684,
      "id": 790262562,
      "node_id": "PRRC_kwDOAN28mc4vGnMi",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability",
      "path": "bip-0326.mediawiki",
      "position": 68,
      "original_position": 64,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you elaborate further why these conditions imply choosing 100% `nlocktime` or 50% `nlocktime` and 50% `nsequence`?",
      "created_at": "2022-01-23T11:24:45Z",
      "updated_at": "2022-01-23T12:12:22Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r790262562",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790262562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790267182",
      "pull_request_review_id": 860313713,
      "id": 790267182,
      "node_id": "PRRC_kwDOAN28mc4vGoUu",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLCs) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to 65535 for the block distance[5] so if the UTXOs being spent have more 65535 confirmations, then the wallet should use nLockTime instead.",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "4760942da218a5698bd210acb28a3f855f1a144a",
      "in_reply_to_id": null,
      "user": null,
      "body": "```suggestion\r\nnSequence can only encode up to 65535 for the block distance[5] so if the UTXOs being spent have more than 65535 confirmations, then the wallet should use nLockTime instead.\r\n```",
      "created_at": "2022-01-23T12:05:58Z",
      "updated_at": "2022-01-23T12:05:58Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r790267182",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790267182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790288404",
      "pull_request_review_id": 860333522,
      "id": 790288404,
      "node_id": "PRRC_kwDOAN28mc4vGtgU",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability",
      "path": "bip-0326.mediawiki",
      "position": 68,
      "original_position": 64,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "388bca531c7a76a3dcf2a0cba26049904c50968e",
      "in_reply_to_id": 790262562,
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand your question, please elaborate",
      "created_at": "2022-01-23T14:59:32Z",
      "updated_at": "2022-01-23T14:59:32Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r790288404",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/790288404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/796711373",
      "pull_request_review_id": 869294648,
      "id": 796711373,
      "node_id": "PRRC_kwDOAN28mc4vfNnN",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLCs) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68[5]. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+=== Transaction pinning ===\n+\n+Transaction pinning[8] is a method for making fee bumping prohibitively expensive by abusing node protections against attacks that can waste bandwidth, CPU, and memory. This can make fee management more difficult in multipart contract protocols (such as Lightning Network or CoinSwap). One possible way of solving the problem is to include a 1-block relative timelock `1 OP_CSV` to all spend paths, making it impossible to spend the unconfirmed UTXO. Such a 1-block locktime can also be created with an nSeqeuence value of 1. Many on-chain transactions in bitcoin spend inputs that were created just one or two blocks ago, following this BIP such transactions with `nSequence=1` would also provide cover traffic for off-chain transactions which disable transaction pinning.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to 65535 for the block distance[5] so if the UTXOs being spent have more than 65535 confirmations, then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 69,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "cd6b3fd020fc89504d603993809a6f93d1d98502",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    if not rbf_set or any(map(lambda input: input.confirmations() > 65535\r\n```\r\n\r\nThe wallet must use tx.locktime when the user asks for the bip125 opt-out sequence number",
      "created_at": "2022-02-01T15:27:07Z",
      "updated_at": "2022-02-01T15:27:07Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r796711373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/796711373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/797549769",
      "pull_request_review_id": 870461511,
      "id": 797549769,
      "node_id": "PRRC_kwDOAN28mc4viaTJ",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLCs) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68[5]. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+=== Transaction pinning ===\n+\n+Transaction pinning[8] is a method for making fee bumping prohibitively expensive by abusing node protections against attacks that can waste bandwidth, CPU, and memory. This can make fee management more difficult in multipart contract protocols (such as Lightning Network or CoinSwap). One possible way of solving the problem is to include a 1-block relative timelock `1 OP_CSV` to all spend paths, making it impossible to spend the unconfirmed UTXO. Such a 1-block locktime can also be created with an nSeqeuence value of 1. Many on-chain transactions in bitcoin spend inputs that were created just one or two blocks ago, following this BIP such transactions with `nSequence=1` would also provide cover traffic for off-chain transactions which disable transaction pinning.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to 65535 for the block distance[5] so if the UTXOs being spent have more than 65535 confirmations, then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 69,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "cd6b3fd020fc89504d603993809a6f93d1d98502",
      "in_reply_to_id": 796711373,
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-02-02T12:21:10Z",
      "updated_at": "2022-02-02T12:21:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r797549769",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/797549769"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/798281846",
      "pull_request_review_id": 871449257,
      "id": 798281846,
      "node_id": "PRRC_kwDOAN28mc4vlNB2",
      "diff_hunk": "@@ -0,0 +1,112 @@\n+<pre>\n+  BIP: TBD\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2021-06-10\n+  License: PD\n+  Post-History: 2021-7-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLC) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to a max of 65535 for the block distance, see BIP68[5], so if the UTXOs being spent have more confirmations than that then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+Python-like pseudocode\n+\n+<source lang=\"python\">\n+def apply_anti_fee_sniping_fields(transaction):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if any(map(lambda input: input.confirmations() > 65535\n+        || !input.is_taproot(), transaction.inputs))\\\n+        || randint(2) == 0:\n+    transaction.nlocktime = blockchain.height()\n+    if randint(10) == 0:\n+        transaction.nlocktime = max(0, transaction.nlocktime\n+        - randint(0, 99))\n+    # nsequence must be set in order for nlocktime to take effect\n+    # this value also enables RBF\n+    for input in transaction.inputs:\n+        input.nsequence = 2**32 - 3",
      "path": "bip-nsequence-anti-fee-snipe.mediawiki",
      "position": null,
      "original_position": 69,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "509b2e0ca1ca25d6c503067900a10d901dd94dfc",
      "in_reply_to_id": 780751933,
      "user": {
        "login": "Jelboy15",
        "id": 94635380,
        "node_id": "U_kgDOBaQFdA",
        "avatar_url": "https://avatars.githubusercontent.com/u/94635380?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jelboy15",
        "html_url": "https://github.com/Jelboy15",
        "followers_url": "https://api.github.com/users/Jelboy15/followers",
        "following_url": "https://api.github.com/users/Jelboy15/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Jelboy15/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Jelboy15/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Jelboy15/subscriptions",
        "organizations_url": "https://api.github.com/users/Jelboy15/orgs",
        "repos_url": "https://api.github.com/users/Jelboy15/repos",
        "events_url": "https://api.github.com/users/Jelboy15/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Jelboy15/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Algumas carteiras fornecem uma opção para o usuário \"opt-out\" da RBF. Seria bom esclarecer como eles devem lidar com esse BIP.\r\n> \r\n> Editar: Presumivelmente, apenas configurar para `2**32 - 2`ainda deve funcionar para habilitar o tempo de bloqueio e \"desabilitar\" o rbf.\r\n\r\n",
      "created_at": "2022-02-03T07:23:46Z",
      "updated_at": "2022-02-03T07:23:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r798281846",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/798281846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/819559751",
      "pull_request_review_id": 900210244,
      "id": 819559751,
      "node_id": "PRRC_kwDOAN28mc4w2X1H",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLCs) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68[5]. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+=== Transaction pinning ===\n+\n+Transaction pinning[8] is a method for making fee bumping prohibitively expensive by abusing node protections against attacks that can waste bandwidth, CPU, and memory. This can make fee management more difficult in multipart contract protocols (such as Lightning Network or CoinSwap). One possible way of solving the problem is to include a 1-block relative timelock `1 OP_CSV` to all spend paths, making it impossible to spend the unconfirmed UTXO. Such a 1-block locktime can also be created with an nSeqeuence value of 1. Many on-chain transactions in bitcoin spend inputs that were created just one or two blocks ago, following this BIP such transactions with `nSequence=1` would also provide cover traffic for off-chain transactions which disable transaction pinning.",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "b86ae635c5ff4334da81bb349b28eb5680415410",
      "in_reply_to_id": null,
      "user": {
        "login": "div72",
        "id": 60045611,
        "node_id": "MDQ6VXNlcjYwMDQ1NjEx",
        "avatar_url": "https://avatars.githubusercontent.com/u/60045611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/div72",
        "html_url": "https://github.com/div72",
        "followers_url": "https://api.github.com/users/div72/followers",
        "following_url": "https://api.github.com/users/div72/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/div72/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/div72/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/div72/subscriptions",
        "organizations_url": "https://api.github.com/users/div72/orgs",
        "repos_url": "https://api.github.com/users/div72/repos",
        "events_url": "https://api.github.com/users/div72/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/div72/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nTransaction pinning[8] is a method for making fee bumping prohibitively expensive by abusing node protections against attacks that can waste bandwidth, CPU, and memory. This can make fee management more difficult in multipart contract protocols (such as Lightning Network or CoinSwap). One possible way of solving the problem is to include a 1-block relative timelock `1 OP_CSV` to all spend paths, making it impossible to spend the unconfirmed UTXO. Such a 1-block locktime can also be created with an nSequence value of 1. Many on-chain transactions in bitcoin spend inputs that were created just one or two blocks ago, following this BIP such transactions with `nSequence=1` would also provide cover traffic for off-chain transactions which disable transaction pinning.\r\n```\r\nnit: typo",
      "created_at": "2022-03-04T13:15:02Z",
      "updated_at": "2022-03-04T13:15:03Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r819559751",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/819559751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/819934959",
      "pull_request_review_id": 900744400,
      "id": 819934959,
      "node_id": "PRRC_kwDOAN28mc4w3zbv",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLCs) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68[5]. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+=== Transaction pinning ===\n+\n+Transaction pinning[8] is a method for making fee bumping prohibitively expensive by abusing node protections against attacks that can waste bandwidth, CPU, and memory. This can make fee management more difficult in multipart contract protocols (such as Lightning Network or CoinSwap). One possible way of solving the problem is to include a 1-block relative timelock `1 OP_CSV` to all spend paths, making it impossible to spend the unconfirmed UTXO. Such a 1-block locktime can also be created with an nSeqeuence value of 1. Many on-chain transactions in bitcoin spend inputs that were created just one or two blocks ago, following this BIP such transactions with `nSequence=1` would also provide cover traffic for off-chain transactions which disable transaction pinning.",
      "path": "bip-0326.mediawiki",
      "position": null,
      "original_position": 42,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "b86ae635c5ff4334da81bb349b28eb5680415410",
      "in_reply_to_id": 819559751,
      "user": {
        "login": "chris-belcher",
        "id": 8398185,
        "node_id": "MDQ6VXNlcjgzOTgxODU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8398185?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chris-belcher",
        "html_url": "https://github.com/chris-belcher",
        "followers_url": "https://api.github.com/users/chris-belcher/followers",
        "following_url": "https://api.github.com/users/chris-belcher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/chris-belcher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/chris-belcher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/chris-belcher/subscriptions",
        "organizations_url": "https://api.github.com/users/chris-belcher/orgs",
        "repos_url": "https://api.github.com/users/chris-belcher/repos",
        "events_url": "https://api.github.com/users/chris-belcher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/chris-belcher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed. Thanks for the review",
      "created_at": "2022-03-04T21:39:15Z",
      "updated_at": "2022-03-04T21:39:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r819934959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/819934959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/886479630",
      "pull_request_review_id": 991556455,
      "id": 886479630,
      "node_id": "PRRC_kwDOAN28mc401psO",
      "diff_hunk": "@@ -0,0 +1,122 @@\n+<pre>\n+  BIP: 326\n+  Layer: Applications\n+  Title: Anti-fee-sniping protection with nSequence in taproot transactions to improve privacy for off-chain protocols\n+  Author: Chris Belcher <belcher at riseup dot net>\n+  Status: Draft\n+  Type: Informational\n+  Created: 2021-06-10\n+  License: CC-0\n+  Post-History: 2021-6-10: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019048.html\n+</pre>\n+\n+\n+== Abstract ==\n+\n+This document proposes a certain type of wallet behaviour which uses BIP341 taproot[1]. It provides a greater anonymity set for off-chain protocols which will make use of point-time-locked contracts (PTLCs) such as CoinSwap, Lightning and Discrete Log Contracts.\n+\n+== Motivation ==\n+\n+With taproot recently added to bitcoin, and wallet software about to implement taproot wallets, we are in a unique position to improve the privacy of off-chain protocols if we act soon.\n+\n+Taproot allows for point-time-locked contracts (PTLCs) as a more private replacement for hash-time-locked contracts (HTLCs). If an off-chain contract (for example a Lightning channel) is closed using a PTLC instead of an HTLC, then the blockchain will just see a regular taproot script instead of a hash value and preimage. However, if a contract is closed using the timelock path, then the blockchain will either see a OP_CHECKSEQUENCEVERIFY opcode or a nSequence value in the transaction, neither of which are very common today, and this would mark the closing transaction as something special and unusual.\n+\n+This BIP proposes to improve the privacy and fungibility of off-chain protocols by having on-chain wallets like Bitcoin Core also set the nSequence field in their taproot transactions as in BIP68[5]. This would be in place of their regular nLockTime anti-fee-sniping protection. The end result is that, if an observer of the blockchain sees a taproot spend with an nSequence value, then that could be either: a regular spend from a wallet, or an off-chain settlement transaction spent with a timelock. The two cases would be indistinguishable, and this could greatly improve the privacy and fungibility of bitcoin. The community and wallet developers should act now to implement this so that the anonymity set of nSequence transactions starts to be built up as soon as taproot itself becomes adopted by wallets.\n+\n+== Background ==\n+\n+=== Fee sniping ===\n+\n+Fee sniping is a hypothetical outcome of bad incentives to bitcoin mining in the low-inflation future. For a large miner the value of the transactions in the best block and the mempool can be exceeded by the cost of deliberately attempting to mine two blocks to orphan the best block. However with anti-fee-sniping protection using nLockTime or nSequence the bad miner will soon run out of transactions that can be put in the first block, which means they now need to go in the second. Anti-fee-sniping adds to the incentive to move the blockchain forward.\n+\n+The nLockTime field is being used this way today. It is implemented in Bitcoin Core[2] and Electrum[3], and adopted by approximately 20% of all recent transactions[4].\n+\n+=== Absolute vs relative locktime ===\n+\n+nLockTime is an absolute lock time, it allows the transaction to only be mined after a certain block height or unix time. The widespread adoption of it might have provided a good anonymity set for off-chain protocols. Unfortunately those protocols also commonly use relative lock times, because it allows contracts (for example Lightning payment channels or CoinSwaps) to remain open indefinitely as the countdown clock only starts ticking when the closing transaction is confirmed.\n+\n+Absolute locktimes are also still used, so we should keep using nLockTime, but also often use nSequence.\n+\n+=== Transaction pinning ===\n+\n+Transaction pinning[8] is a method for making fee bumping prohibitively expensive by abusing node protections against attacks that can waste bandwidth, CPU, and memory. This can make fee management more difficult in multipart contract protocols (such as Lightning Network or CoinSwap). One possible way of solving the problem is to include a 1-block relative timelock `1 OP_CSV` to all spend paths, making it impossible to spend the unconfirmed UTXO. Such a 1-block locktime can also be created with an nSequence value of 1. Many on-chain transactions in bitcoin spend inputs that were created just one or two blocks ago, following this BIP such transactions with `nSequence=1` would also provide cover traffic for off-chain transactions which disable transaction pinning.\n+\n+== Specifications ==\n+\n+When wallets create transactions spending UTXOs protected by BIP341 taproot, they should set either an nLockTime value or nSequence values to discourage fee sniping, by allowing the transaction to only be mined in the next block after the tip, not the current block. This BIP suggests 50% probability for using nLockTime and 50% for nSequence. If nSequence is set it should apply to at least one of the inputs of the transaction, if it has multiple inputs. It is suggested that on-chain wallets pick an input randomly.\n+\n+Wallets should also have a second random branch which sets the nLockTime or nSequence value even further back, so that transactions that are delayed after signing for whatever reason (e.g. high-latency mix networks) have better privacy. Existing behaviour is that with a probability of 10%, choose a random number between 0 and 99, and subtract it from the current block height. See the Bitcoin Core and Electrum source codes linked in the references for an example.\n+\n+nSequence can only encode up to 65535 for the block distance[5] so if the UTXOs being spent have more than 65535 confirmations, then the wallet should use nLockTime instead.\n+\n+=== Pseudocode ===\n+\n+<source>\n+def apply_anti_fee_sniping_fields(transaction, rbf_set):\n+    # bip68 requires v=2\n+    transaction.version = 2\n+    # Initialize all nsequence to indicate the requested RBF state\n+    # nsequence can not be 2**32 - 1 in order for nlocktime to take effect\n+    for input in transaction.inputs:\n+        if rbf_set:\n+            input.nsequence = 2**32 - 3\n+        else:\n+            input.nsequence = 2**32 - 2\n+    # always set nlocktime if any of the transaction inputs have more\n+    # confirmations than 65535 or are not taproot inputs, or have\n+    # unconfirmed inputs\n+    # otherwise choose either nlocktime or nsequence with 50% probability\n+    if not rbf_set || any(map(lambda input: input.confirmations() > 65535\n+            || !input.is_taproot() || input.confirmations() == 0,\n+            transaction.inputs)) || randint(2) == 0:\n+        transaction.nlocktime = blockchain.height()\n+        if randint(10) == 0:\n+            transaction.nlocktime = max(0, transaction.nlocktime\n+            - randint(0, 99))\n+        # nsequence must be set in order for nlocktime to take effect\n+    else:\n+        transaction.nlocktime = 0\n+        input_index = randint(len(transaction.inputs))\n+        transaction.inputs[input_index].nsequence = transaction.inputs\\\n+            [input_index].confirmations()\n+        if randint(10) == 0:\n+            transaction.inputs[input_index].nsequence = max(1,",
      "path": "bip-0326.mediawiki",
      "position": 83,
      "original_position": 83,
      "commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "original_commit_id": "4d5e1cc162e5d93bcf8e0ea94cf2bb96e1d7594a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Side-note: Actually there may be a use case of `0` here in smart contracts to force RBF-opt-in, absent full-RBF. See https://twitter.com/theinstagibbs/status/1531746713853038593\r\n\r\nThough, I guess it doesn't make sense to change this BIP to accommodate this, as `0` in key-path spends doesn't add a cover for script-path spend txs.",
      "created_at": "2022-06-01T08:04:50Z",
      "updated_at": "2022-06-01T08:04:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1269#discussion_r886479630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/886479630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1269"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    }
  ]
}