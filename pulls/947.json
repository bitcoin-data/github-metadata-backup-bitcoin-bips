{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/947",
    "id": 452985639,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDUyOTg1NjM5",
    "html_url": "https://github.com/bitcoin/bips/pull/947",
    "diff_url": "https://github.com/bitcoin/bips/pull/947.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/947.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/947/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/947/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/947/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
    "number": 947,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "bip-325: change signature scheme to be tx-based",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This changes the block signing algorithm for signet to be based on tx validation instead of a custom method. In particular, this allows the generalises the scheme so that new signets can make use of new signature/scripting methods (such as schnorr or musig) when they are added.\r\n\r\nNote: this is incompatible with existing signets and requires a chain restart.",
    "labels": [],
    "created_at": "2020-07-20T02:59:12Z",
    "updated_at": "2020-09-08T07:52:42Z",
    "closed_at": "2020-07-30T02:34:16Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-07-30T02:34:16Z",
    "merge_commit_sha": "7660d6015120a2c646af0719452c53c3f2dce906",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ajtowns:202007-signet-tx",
      "ref": "202007-signet-tx",
      "sha": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 158782389,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNTg3ODIzODk=",
        "name": "bips",
        "full_name": "ajtowns/bips",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bips",
        "archive_url": "https://api.github.com/repos/ajtowns/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bips/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bips/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bips/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bips/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bips/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bips.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bips/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bips/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bips.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bips/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bips/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bips/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bips.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bips/hooks",
        "svn_url": "https://github.com/ajtowns/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 3,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 14320,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-03-29T05:11:09Z",
        "created_at": "2018-11-23T04:53:50Z",
        "updated_at": "2022-06-17T10:32:37Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5cc0c6fb498efdc35debc17c044ee9ccaa13f0ce",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5178,
        "stargazers_count": 8116,
        "watchers_count": 8116,
        "size": 13694,
        "default_branch": "master",
        "open_issues_count": 115,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-08T12:03:37Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-06-12T10:53:19Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 42,
    "deletions": 30,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 22,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 660774839,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDc3NDgzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/660774839",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-20T03:02:20Z",
      "updated_at": "2020-07-20T03:02:20Z",
      "author_association": "MEMBER",
      "body": "Sample implementation is at https://github.com/ajtowns/bitcoin/commits/202007-signet\r\n\r\nThe approach is to support two headers for the signature data; one for filling in scriptSig, one for filling in scriptWitness. In general, it only (currently) ever makes sense to use one or the other, though you could use both if you wanted/needed. Likewise, at present, it only really makes sense to use scriptSig -- scriptWitness offers no benefits for block signing today, though perhaps it will with schnorr signatures only available via scriptWitness signing.\r\n\r\nReviewers may want to ensure that this does not introduce additional block malleability -- eg, that a signature does not remain valid if the scriptSig/scriptWitness headers are reordered, or empty/dummy headers are added/removed.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#issuecomment-660774839",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3563734520,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU2MzczNDUyMA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3563734520",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-20T03:41:35Z"
    },
    {
      "event": "reviewed",
      "id": 451282166,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjgyMTY2",
      "url": null,
      "actor": null,
      "commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#pullrequestreview-451282166",
      "submitted_at": "2020-07-20T04:01:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/947"
    },
    {
      "event": "reviewed",
      "id": 451298241,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjk4MjQx",
      "url": null,
      "actor": null,
      "commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Some nits while reading the changes, feel free to ignore.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#pullrequestreview-451298241",
      "submitted_at": "2020-07-20T05:15:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/947"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3574033641,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU3NDAzMzY0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3574033641",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T04:31:16Z"
    },
    {
      "event": "reviewed",
      "id": 452989436,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTg5NDM2",
      "url": null,
      "actor": null,
      "commit_id": "ef5480ba6c181d24109165d0f3ab726f8beaae30",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#pullrequestreview-452989436",
      "submitted_at": "2020-07-22T04:41:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/947"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6M2NmMjM5ZWVmMzA3NzM4OGRkNGI2NzNkYWJmNTdlNTNmYzRhZTlkMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "tree": {
        "sha": "715541129b2b3ba60b24e57d15068d571ffb753a",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/715541129b2b3ba60b24e57d15068d571ffb753a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5cc0c6fb498efdc35debc17c044ee9ccaa13f0ce",
          "sha": "5cc0c6fb498efdc35debc17c044ee9ccaa13f0ce",
          "html_url": "https://github.com/bitcoin/bips/commit/5cc0c6fb498efdc35debc17c044ee9ccaa13f0ce"
        }
      ],
      "message": "bip-325: change signature scheme to be tx-based",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-07-22T04:41:19Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-07-17T02:34:45Z"
      },
      "sha": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3574050676,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU3NDA1MDY3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3574050676",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T04:41:35Z"
    },
    {
      "event": "commented",
      "id": 662239018,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjIzOTAxOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/662239018",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T04:49:22Z",
      "updated_at": "2020-07-22T04:49:22Z",
      "author_association": "MEMBER",
      "body": "Updated with @sipa's suggested approach, some of @jonatack's suggested nits",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#issuecomment-662239018",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947"
    },
    {
      "event": "mentioned",
      "id": 3574064590,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU3NDA2NDU5MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3574064590",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T04:49:22Z"
    },
    {
      "event": "subscribed",
      "id": 3574064591,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1NzQwNjQ1OTE=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3574064591",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T04:49:22Z"
    },
    {
      "event": "mentioned",
      "id": 3574064594,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzU3NDA2NDU5NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3574064594",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T04:49:23Z"
    },
    {
      "event": "subscribed",
      "id": 3574064596,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM1NzQwNjQ1OTY=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3574064596",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-22T04:49:23Z"
    },
    {
      "event": "commented",
      "id": 664378162,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDM3ODE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/664378162",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-27T12:54:15Z",
      "updated_at": "2020-07-27T12:54:15Z",
      "author_association": "MEMBER",
      "body": "concept ACK! It fixes the biggest downside I felt of the current BIP(the lack of extensibility to taproot/script).",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#issuecomment-664378162",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947"
    },
    {
      "event": "commented",
      "id": 665999616,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTk5OTYxNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/665999616",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T00:25:30Z",
      "updated_at": "2020-07-30T00:25:30Z",
      "author_association": "MEMBER",
      "body": "ACK - please merge at your convenience, @luke-jr.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#issuecomment-665999616",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947"
    },
    {
      "event": "mentioned",
      "id": 3601426922,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzYwMTQyNjkyMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3601426922",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T00:25:30Z"
    },
    {
      "event": "subscribed",
      "id": 3601426924,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2MDE0MjY5MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3601426924",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T00:25:30Z"
    },
    {
      "event": "merged",
      "id": 3601701190,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzYwMTcwMTE5MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3601701190",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7660d6015120a2c646af0719452c53c3f2dce906",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/7660d6015120a2c646af0719452c53c3f2dce906",
      "created_at": "2020-07-30T02:34:16Z"
    },
    {
      "event": "closed",
      "id": 3601701196,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzYwMTcwMTE5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3601701196",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T02:34:16Z"
    },
    {
      "event": "commented",
      "id": 672572707,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjU3MjcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/672572707",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T04:56:20Z",
      "updated_at": "2020-08-12T04:56:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "concept ack  -- this fixes my concerns with signet I believe!",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#issuecomment-672572707",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947"
    },
    {
      "event": "reviewed",
      "id": 483728568,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNzI4NTY4",
      "url": null,
      "actor": null,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#pullrequestreview-483728568",
      "submitted_at": "2020-09-07T23:51:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/947"
    },
    {
      "event": "commented",
      "id": 688545771,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODU0NTc3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/688545771",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-07T23:53:52Z",
      "updated_at": "2020-09-07T23:53:52Z",
      "author_association": "MEMBER",
      "body": "Neha check the open PRs(on phone no link sorry) I change this because it's\nold leftover language.\n\nOn Mon, Sep 7, 2020, 7:52 PM Neha Narula <notifications@github.com> wrote:\n\n> *@narula* commented on this pull request.\n> ------------------------------\n>\n> In bip-0325.mediawiki\n> <https://github.com/bitcoin/bips/pull/947#discussion_r484588354>:\n>\n> > -|-\n> -|Int32||4||nVersion\n> -|-\n> -|Uint256||32||hashPrevBlock\n> -|-\n> -|Uint256||32||modifiedMerkleRoot\n> -|-\n> -|Uint32||4||nTime\n> -|-\n> -|Uint32||4||nBits\n> -|}\n> -\n> -The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n> -\n> -A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n> +The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n>\n> What is the choices this \"either\" is referring to?\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bips/pull/947#pullrequestreview-483728568>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMAFU5FUMTS5JSJT2S7CETSEVW2PANCNFSM4PBZBT5Q>\n> .\n>\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#issuecomment-688545771",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947"
    },
    {
      "event": "commented",
      "id": 688547508,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODU0NzUwOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/688547508",
      "actor": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T00:02:56Z",
      "updated_at": "2020-09-08T00:03:33Z",
      "author_association": "NONE",
      "body": "@instagibbs: thanks! It's here: https://github.com/bitcoin/bips/pull/976",
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/947#issuecomment-688547508",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/947"
    },
    {
      "event": "mentioned",
      "id": 3738600729,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzczODYwMDcyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3738600729",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T00:02:56Z"
    },
    {
      "event": "subscribed",
      "id": 3738600731,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3Mzg2MDA3MzE=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3738600731",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T00:02:56Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457026767",
      "pull_request_review_id": 451282166,
      "id": 457026767,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyNjc2Nw==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure if there were perhaps reasons not to do this, but maybe it is desirable to exactly structure it like transaction spending, as that would mean PSBT infrastructure can be reused for block signing.\r\n\r\nOne possibility would be, construct 2 virtual transactions. The first is a coinbase tx (perhaps intentionally BIP34-invalid), with a single output, whose scriptPubKey is the signet's challenge script. The second tx spends that output, referring to it using its txid, and its scriptSig/witness is what is put in the block. The first tx could even be cached and constant for all blocks.\r\n",
      "created_at": "2020-07-20T04:01:00Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r457026767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457026767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457036690",
      "pull_request_review_id": 451287684,
      "id": 457036690,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAzNjY5MA==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "PSBT compatibility would be great, yeah!",
      "created_at": "2020-07-20T04:24:58Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r457036690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457036690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457054629",
      "pull_request_review_id": 451298241,
      "id": 457054629,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1NDYyOQ==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 44,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nAny push operations that do not start with either of the 4-byte signet headers are ignored. Multiple push operations with either 4-byte signet header are ignored except for the first instance of each header.\r\n```",
      "created_at": "2020-07-20T05:06:26Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r457054629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457054629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457055955",
      "pull_request_review_id": 451298241,
      "id": 457055955,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1NTk1NQ==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock\n+    vin[0].prevout.n = 0\n+    vin[0].nSequence = 0\n+    vout[0].nValue = block.nVersion\n+    vout[0].scriptPubKey = signet_merkle_root\n+\n+The scriptSig and/or scriptWitness for <code>vin[0]</code> are filled in from the secondary commitment push above.\n+\n+The <code>signet_merkle_root</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet solution (that is the secondary commitment includes a four byte push of the Signet scriptSig header or scriptWitness header, with not additional solution data). This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 58,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThe <code>signet_merkle_root</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as-is, without the signet solution (that is, the secondary commitment includes a 4-byte push of the Signet scriptSig header or scriptWitness header, without additional solution data). This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\r\n```",
      "created_at": "2020-07-20T05:09:23Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r457055955",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457055955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457056269",
      "pull_request_review_id": 451298241,
      "id": 457056269,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1NjI2OQ==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock\n+    vin[0].prevout.n = 0\n+    vin[0].nSequence = 0\n+    vout[0].nValue = block.nVersion\n+    vout[0].scriptPubKey = signet_merkle_root\n+\n+The scriptSig and/or scriptWitness for <code>vin[0]</code> are filled in from the secondary commitment push above.\n+\n+The <code>signet_merkle_root</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet solution (that is the secondary commitment includes a four byte push of the Signet scriptSig header or scriptWitness header, with not additional solution data). This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n+\n+This virtual transaction is validated against a virtual UTXO being output 0 of txid <code>block.hashPrevBlock</code>, with scriptPubKey as the signet challenge, and amount as 20,999,999.99999999 (ie 1 satoshi less than 21 million).\n+\n+A block is considered fully validated only if the solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 62,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nA block is considered fully validated only if the solution is valid. It is recommended that this verification be done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\r\n```",
      "created_at": "2020-07-20T05:10:13Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r457056269",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457056269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457056501",
      "pull_request_review_id": 451298241,
      "id": 457056501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA1NjUwMQ==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock\n+    vin[0].prevout.n = 0\n+    vin[0].nSequence = 0\n+    vout[0].nValue = block.nVersion\n+    vout[0].scriptPubKey = signet_merkle_root\n+\n+The scriptSig and/or scriptWitness for <code>vin[0]</code> are filled in from the secondary commitment push above.\n+\n+The <code>signet_merkle_root</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet solution (that is the secondary commitment includes a four byte push of the Signet scriptSig header or scriptWitness header, with not additional solution data). This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n+\n+This virtual transaction is validated against a virtual UTXO being output 0 of txid <code>block.hashPrevBlock</code>, with scriptPubKey as the signet challenge, and amount as 20,999,999.99999999 (ie 1 satoshi less than 21 million).",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 60,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis virtual transaction is validated against a virtual UTXO being output 0 of txid <code>block.hashPrevBlock</code>, with scriptPubKey as the signet challenge, and amount as 20,999,999.99999999 (i.e. 1 satoshi less than 21 million).\r\n```",
      "created_at": "2020-07-20T05:10:46Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r457056501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457056501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457886182",
      "pull_request_review_id": 452185981,
      "id": 457886182,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4NjE4Mg==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock\n+    vin[0].prevout.n = 0\n+    vin[0].nSequence = 0\n+    vout[0].nValue = block.nVersion\n+    vout[0].scriptPubKey = signet_merkle_root\n+\n+The scriptSig and/or scriptWitness for <code>vin[0]</code> are filled in from the secondary commitment push above.\n+\n+The <code>signet_merkle_root</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet solution (that is the secondary commitment includes a four byte push of the Signet scriptSig header or scriptWitness header, with not additional solution data). This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n+\n+This virtual transaction is validated against a virtual UTXO being output 0 of txid <code>block.hashPrevBlock</code>, with scriptPubKey as the signet challenge, and amount as 20,999,999.99999999 (ie 1 satoshi less than 21 million).\n+\n+A block is considered fully validated only if the solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 62,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457056269,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I slightly prefer the original here.",
      "created_at": "2020-07-21T07:16:10Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r457886182",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/457886182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458529582",
      "pull_request_review_id": 452988686,
      "id": 458529582,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyOTU4Mg==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've updated the text and the sample implementation to use this approach, it seems much better!\r\n\r\nOne reason we might not have thought of it, is that an idea had been to allow signet users to opt-in to reorgs by allowing a different challenge: ie, normally signet might be checked against \"2 KEY_A KEY_B 2 CHECKMULTISIG\" and the solution is \"0 SIG_A SIG_B\"; but if you were to use \"DROP 1 KEY_A 1 CHECKMULTISIG\" as your script, and KEY_A alone was used to sign short reorgs as well as the main chain, you'd be able to test how well your software handled reorgs, while people who used the normal signet challenge wouldn't see any of the reorgs. By actually constructing a tx to spend that includes the challenge, this doesn't work so well anymore.\r\n\r\nOn the other hand, it probably doesn't work anyway, because at the p2p layer, the peer doing the reorgs would try forwarding the to-be-reorged blocks to its peers, who would see them as consensus-invalid and ban the peer. So I think it's fine to drop this idea in favour of PSBT support.",
      "created_at": "2020-07-22T04:38:38Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r458529582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458529582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458530236",
      "pull_request_review_id": 452989436,
      "id": 458530236,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMDIzNg==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n+\n+    1-4 bytes - Push the following (4 + x + y) bytes\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - scriptSig\n+    y bytes - scriptWitness",
      "path": "bip-0325.mediawiki",
      "position": 39,
      "original_position": 39,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "ef5480ba6c181d24109165d0f3ab726f8beaae30",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm starting to wonder if we even need the scriptSig part at all. It seems that the scriptWitness is a superset of the features we get from scriptSig, and any systems incorporating block sig validation will still need to handle segwit stuff, since that's a possibility now.",
      "created_at": "2020-07-22T04:41:15Z",
      "updated_at": "2020-07-22T04:41:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r458530236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458530236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458531311",
      "pull_request_review_id": 452990689,
      "id": 458531311,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMTMxMQ==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n+\n+    1-4 bytes - Push the following (4 + x + y) bytes\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - scriptSig\n+    y bytes - scriptWitness",
      "path": "bip-0325.mediawiki",
      "position": 39,
      "original_position": 39,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "ef5480ba6c181d24109165d0f3ab726f8beaae30",
      "in_reply_to_id": 458530236,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could do that, but the scriptWitness would be more data. With scriptSig, you can make the signet challenge be the actual script; but with scriptWitness, the challenge has to be p2wpkh or p2wsh and you have to then include either the pubkey or the script that matches the hash in every block solution.",
      "created_at": "2020-07-22T04:45:47Z",
      "updated_at": "2020-07-22T04:45:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r458531311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458531311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458533039",
      "pull_request_review_id": 452992675,
      "id": 458533039,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMzAzOQ==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n+\n+    1-4 bytes - Push the following (4 + x + y) bytes\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - scriptSig\n+    y bytes - scriptWitness",
      "path": "bip-0325.mediawiki",
      "position": 39,
      "original_position": 39,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "ef5480ba6c181d24109165d0f3ab726f8beaae30",
      "in_reply_to_id": 458530236,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That seems really backwards. It should be possible to put the pubkey/script into the challenge directly, IMO, but we can sort that out later.",
      "created_at": "2020-07-22T04:52:36Z",
      "updated_at": "2020-07-22T04:52:36Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r458533039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458533039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458550313",
      "pull_request_review_id": 453012875,
      "id": 458550313,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1MDMxMw==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n+\n+    1-4 bytes - Push the following (4 + x + y) bytes\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - scriptSig\n+    y bytes - scriptWitness",
      "path": "bip-0325.mediawiki",
      "position": 39,
      "original_position": 39,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "ef5480ba6c181d24109165d0f3ab726f8beaae30",
      "in_reply_to_id": 458530236,
      "user": {
        "login": "maaku",
        "id": 69154,
        "node_id": "MDQ6VXNlcjY5MTU0",
        "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maaku",
        "html_url": "https://github.com/maaku",
        "followers_url": "https://api.github.com/users/maaku/followers",
        "following_url": "https://api.github.com/users/maaku/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maaku/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maaku/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
        "organizations_url": "https://api.github.com/users/maaku/orgs",
        "repos_url": "https://api.github.com/users/maaku/repos",
        "events_url": "https://api.github.com/users/maaku/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maaku/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just make the witness pubkey/script implicit. The client knows it and can insert it where it belongs.",
      "created_at": "2020-07-22T05:52:12Z",
      "updated_at": "2020-07-22T05:52:13Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r458550313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/458550313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/460869226",
      "pull_request_review_id": 455753049,
      "id": 460869226,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2OTIyNg==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n+\n+    1-4 bytes - Push the following (4 + x + y) bytes\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - scriptSig\n+    y bytes - scriptWitness",
      "path": "bip-0325.mediawiki",
      "position": 39,
      "original_position": 39,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "ef5480ba6c181d24109165d0f3ab726f8beaae30",
      "in_reply_to_id": 458530236,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wallets do this all the time(fill out preimage details), now that the block is a \"signable transaction\" this is even more the case.",
      "created_at": "2020-07-27T12:56:17Z",
      "updated_at": "2020-07-27T12:56:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r460869226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/460869226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/460869814",
      "pull_request_review_id": 455753850,
      "id": 460869814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2OTgxNA==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "aside: I think it's kind of awesome you could get a ColdCard, put it into HSM mode, and have it blocksign!",
      "created_at": "2020-07-27T12:57:20Z",
      "updated_at": "2020-07-27T12:57:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r460869814",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/460869814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/463053062",
      "pull_request_review_id": 458475970,
      "id": 463053062,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA1MzA2Mg==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n+\n+    1-4 bytes - Push the following (4 + x + y) bytes\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - scriptSig\n+    y bytes - scriptWitness",
      "path": "bip-0325.mediawiki",
      "position": 39,
      "original_position": 39,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "ef5480ba6c181d24109165d0f3ab726f8beaae30",
      "in_reply_to_id": 458530236,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Out of curiosity @ajtowns why use the witness commitment for this and not an additional `OP_RETURN` with a different magic header?",
      "created_at": "2020-07-30T14:49:01Z",
      "updated_at": "2020-07-30T14:49:01Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r463053062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/463053062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475115137",
      "pull_request_review_id": 472941962,
      "id": 475115137,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTEzNw==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> On the other hand, it probably doesn't work anyway, because at the p2p layer, the peer doing the reorgs would try forwarding the to-be-reorged blocks to its peers, who would see them as consensus-invalid and ban the peer. So I think it's fine to drop this idea in favour of PSBT support.\r\n\r\nEven if the different signet policies are run on different p2p networks, it would be nice if the actual blockchain was identical. This would allow to restart the node and select a different signet reorg policy without a reindex/redownload (or selecting a different datadir).\r\n",
      "created_at": "2020-08-22T18:00:15Z",
      "updated_at": "2020-08-22T18:00:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r475115137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475115137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475117976",
      "pull_request_review_id": 472943776,
      "id": 475117976,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNzk3Ng==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A really dumb way to keep the psbt nature, but allow node operators to choose the signet reorg policy is to ask them to supply multiple challenges. Then try all and continue with the first one that matches.",
      "created_at": "2020-08-22T18:32:38Z",
      "updated_at": "2020-08-22T18:32:39Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r475117976",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475117976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475342555",
      "pull_request_review_id": 473119692,
      "id": 475342555,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0MjU1NQ==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I never thought of actually having multiple networks with the same underlying blockchain. That should totally work -- unfortunately signet now derives the magic from the block challenge, so you can't tweak that easily (well, you can, but it becomes a little messy). Perhaps add a -signet_magic flag that lets you override the derived one..",
      "created_at": "2020-08-24T04:56:47Z",
      "updated_at": "2020-08-24T04:56:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r475342555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475342555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475395982",
      "pull_request_review_id": 473184597,
      "id": 475395982,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5NTk4Mg==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you have to have a reindex if you're applying a different reorg policy -- otherwise, suppose your chain goes 100a 101a 102a 103a 104b 105b (for height 100-105) but the \"b\" blocks will eventually be reorged out and replaced by 104a 105a 106a but you've only seen 104a so far and that's a less-work tip. Switching to \"no reorgs\" means you want to move to 104a as your tip immediately. I guess you could do that with a specialised rewind instead of a reindex?",
      "created_at": "2020-08-24T07:33:10Z",
      "updated_at": "2020-08-24T07:33:10Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r475395982",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475395982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475668809",
      "pull_request_review_id": 473574687,
      "id": 475668809,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTY2ODgwOQ==",
      "diff_hunk": "@@ -26,36 +26,37 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:\n \n     1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+    4 bytes - Signet scriptSig header (0xecc7daa2)\n+    x bytes - Solution (scriptSig)\n+\n+or\n+\n+    1-4 bytes - Push the following (x + 4) bytes\n+    4 bytes - Signet scriptWitness header (0xecc7daa3)\n+    x bytes - Solution (scriptWitness)\n+\n+Any push operations that do not start with either of the 4 byte signet header are ignored. Multiple push operations with either 4 byte signet header are ignored except for the first instance of each header.\n+\n+To sign the block or verify a block signature, a virtual transaction with a single input and output is constructed from the block as follows:\n+\n+    nVersion = 1\n+    nLockTime = block.nTime\n+    vin[0].prevout.hash = block.hashPrevBlock",
      "path": "bip-0325.mediawiki",
      "position": null,
      "original_position": 50,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "5b1ca5603e46977c3fca7d7b8cf9f08c1aad4e48",
      "in_reply_to_id": 457026767,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As the challenge can only be changed at startup, simply disconnecting blocks until the just removed block can be connected again should suffice.",
      "created_at": "2020-08-24T14:50:19Z",
      "updated_at": "2020-08-24T14:50:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r475668809",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/475668809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/484588354",
      "pull_request_review_id": 483728568,
      "id": 484588354,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU4ODM1NA==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:",
      "path": "bip-0325.mediawiki",
      "position": 34,
      "original_position": 34,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "narula",
        "id": 177646,
        "node_id": "MDQ6VXNlcjE3NzY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/narula",
        "html_url": "https://github.com/narula",
        "followers_url": "https://api.github.com/users/narula/followers",
        "following_url": "https://api.github.com/users/narula/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/narula/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/narula/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
        "organizations_url": "https://api.github.com/users/narula/orgs",
        "repos_url": "https://api.github.com/users/narula/repos",
        "events_url": "https://api.github.com/users/narula/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/narula/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What are the choices this \"either\" is referring to? ",
      "created_at": "2020-09-07T23:51:54Z",
      "updated_at": "2020-09-07T23:52:57Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r484588354",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/484588354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/484721233",
      "pull_request_review_id": 483881320,
      "id": 484721233,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMTIzMw==",
      "diff_hunk": "@@ -26,36 +26,48 @@ A new type of test network would be more suitable for integration testing by org\n \n A new type of network (\"signet\"), which takes an additional consensus parameter called the challenge (scriptPubKey). The challenge can be a simple pubkey (P2PKH style), or a k-of-n multisig, or any other script you would want.\n \n-The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution):\n-\n-    1-4 bytes - Push the following (x + 4) bytes\n-    4 bytes - Signet header (0xecc7daa2)\n-    x bytes - Solution (sigScript)\n-\n-Any push operations that do not start with the 4 byte signet header are ignored. Multiple push operations with the 4 byte signet header are ignored except for the first entry.\n-\n-Any signature operations contained within the challenge use SHA256d(modifiedBlockHash), i.e. the double-SHA256 digest of the following data as the sighash:\n-\n-{|class=\"wikitable\" style=\"text-align: center;\"\n-|-\n-!Type\n-!Size\n-!Name\n-|-\n-|Int32||4||nVersion\n-|-\n-|Uint256||32||hashPrevBlock\n-|-\n-|Uint256||32||modifiedMerkleRoot\n-|-\n-|Uint32||4||nTime\n-|-\n-|Uint32||4||nBits\n-|}\n-\n-The <code>modifiedMerkleRoot</code> hash is obtained by generating the merkle root of the block transactions, with the coinbase witness commitment as is, without the signet extension. This means the merkle root of the block is different from the merkle root in the signet commitment. This is needed, because the signature can never be included in the very message (in this case, a block) that is being signed. Apart from the signature, to facilitate block generation (mining), the block nonce value is the only other component of the block that the signet signature does not commit to. When grinding proof of work, the extended nonce cannot be used as it would invalidate the signature. Instead, simply resigning the same (or an updated) block will give a new search space.\n-\n-A block is considered fully validated if the above commitment is found, and its solution is valid. It is recommended that this verification is done directly before or after the witness commitment verification, as the data required to do both is approximately the same.\n+The witness commitment of the coinbase transaction is extended to include a secondary commitment (the signature/solution) of either:",
      "path": "bip-0325.mediawiki",
      "position": 34,
      "original_position": 34,
      "commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "original_commit_id": "3cf239eef3077388dd4b673dabf57e53fc4ae9d3",
      "in_reply_to_id": 484588354,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An earlier draft had two different secondary commitments, one for scriptSig and a different one for scriptWitness. When they were combined the \"either\" wasn't removed.",
      "created_at": "2020-09-08T07:52:42Z",
      "updated_at": "2020-09-08T07:52:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/947#discussion_r484721233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/484721233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/947"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    }
  ]
}