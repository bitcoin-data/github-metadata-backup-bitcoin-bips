{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1555",
    "id": 1752086451,
    "node_id": "PR_kwDOAN28mc5obrez",
    "html_url": "https://github.com/bitcoin/bips/pull/1555",
    "diff_url": "https://github.com/bitcoin/bips/pull/1555.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1555.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1555/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
    "number": 1555,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIPâ€¯321: URI Scheme (Replace BIP 21 with a new BIP containing information about more modern usage of it)",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "As Bitcoin has grown, the introduction of new address formats describing new forms of payment instructions has become increasingly fraught with compatibility issues. Not only does there exist traditional on-chain addresses, but some recipients wish to receive Lightning (when the sender supports it) or newer formats such as Silent Payments.\r\n\r\nThis has led to increasing use of the BIP 21 query parameters to encode further optional payment instructions.\r\n\r\nLooking forward, as new payment instructions get adopted, it makes much more sense to include them in query parameters rather than replace the existing address field, ensuring compatibility with senders and recipients who may or may not be upgraded to support all the latest payment instructions.\r\n\r\nThis updates BIP 21 to suggest that future address formats do this.\r\n\r\nFurther, it updates BIP 21 to allow an empty bitcoin address in cases where new payment instructions have moved to becoming mandatory. This isn't a backwards-incompatible change any more than switching to a new address format is, so doesn't impact existing BIP 21 implementations in a new way, however provides a nice conclusion to the query-parameter-based upgrade path - once a form of payment instructions has broad adoption, senders can simply drop the existing address field, keeping their existing query parameter encoding, rather than replace the existing address field. It also addresses the question of what to do if a wallet no longer wishes to receive some legacy on-chain address, but has multiple payment instruction formats that they wish to include - deciding which one to place in the address field would be a difficult task.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-03-01T17:10:35Z",
    "updated_at": "2025-03-27T02:04:16Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merged": false,
    "merge_commit_sha": "b99985039d2e9da79291131e2fe43922dc103e63",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "TheBlueMatt:2024-03-uris-without-bodies",
      "ref": "2024-03-uris-without-bodies",
      "sha": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 57929990,
        "node_id": "MDEwOlJlcG9zaXRvcnk1NzkyOTk5MA==",
        "name": "bips",
        "full_name": "TheBlueMatt/bips",
        "owner": {
          "login": "TheBlueMatt",
          "id": 649246,
          "node_id": "MDQ6VXNlcjY0OTI0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBlueMatt",
          "html_url": "https://github.com/TheBlueMatt",
          "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
          "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
          "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
          "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/TheBlueMatt/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/TheBlueMatt/bips",
        "archive_url": "https://api.github.com/repos/TheBlueMatt/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheBlueMatt/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheBlueMatt/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheBlueMatt/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheBlueMatt/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheBlueMatt/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheBlueMatt/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheBlueMatt/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheBlueMatt/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheBlueMatt/bips/contributors",
        "deployments_url": "https://api.github.com/repos/TheBlueMatt/bips/deployments",
        "downloads_url": "https://api.github.com/repos/TheBlueMatt/bips/downloads",
        "events_url": "https://api.github.com/repos/TheBlueMatt/bips/events",
        "forks_url": "https://api.github.com/repos/TheBlueMatt/bips/forks",
        "git_commits_url": "https://api.github.com/repos/TheBlueMatt/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheBlueMatt/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheBlueMatt/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheBlueMatt/bips.git",
        "issue_comment_url": "https://api.github.com/repos/TheBlueMatt/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheBlueMatt/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheBlueMatt/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheBlueMatt/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheBlueMatt/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheBlueMatt/bips/languages",
        "merges_url": "https://api.github.com/repos/TheBlueMatt/bips/merges",
        "milestones_url": "https://api.github.com/repos/TheBlueMatt/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheBlueMatt/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheBlueMatt/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheBlueMatt/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheBlueMatt/bips.git",
        "stargazers_url": "https://api.github.com/repos/TheBlueMatt/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/TheBlueMatt/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheBlueMatt/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/TheBlueMatt/bips/subscription",
        "tags_url": "https://api.github.com/repos/TheBlueMatt/bips/tags",
        "teams_url": "https://api.github.com/repos/TheBlueMatt/bips/teams",
        "trees_url": "https://api.github.com/repos/TheBlueMatt/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheBlueMatt/bips.git",
        "hooks_url": "https://api.github.com/repos/TheBlueMatt/bips/hooks",
        "svn_url": "https://github.com/TheBlueMatt/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 8,
        "stargazers_count": 47,
        "watchers_count": 47,
        "size": 15030,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-26T13:07:53Z",
        "created_at": "2016-05-03T00:30:51Z",
        "updated_at": "2024-12-11T19:50:09Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "02ad0e01c2a9189124e05a52afe97ef90a3b7f1f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5550,
        "stargazers_count": 9818,
        "watchers_count": 9818,
        "size": 15459,
        "default_branch": "master",
        "open_issues_count": 32,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-24T18:55:28Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2025-03-26T22:04:25Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 241,
    "deletions": 0,
    "changed_files": 3,
    "commits": 4,
    "review_comments": 59,
    "comments": 50
  },
  "events": [
    {
      "event": "commented",
      "id": 1976433562,
      "node_id": "IC_kwDOAN28mc51zfua",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1976433562",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-04T12:05:58Z",
      "updated_at": "2024-03-04T12:05:58Z",
      "author_association": "MEMBER",
      "body": "(Background discussion for context: https://delvingbitcoin.org/t/revisiting-bip21/630)\r\n\r\nThanks for starting this! Conceptually, I agree with the updates but I think we can get a bigger win by advising the use of HRPs directly instead of key-value pairs. The benefits of this approach are:\r\n\r\n* Better taproot support: using HRPs directly would allow us to construct backwards compatible taproot URIs of the form `bitcoin:bc1q...?bc1p...=o` / `bitcoin:bc1q...?bc1p...`\r\n* Support for future payment instructions: any new payment protocol that encodes their payment instructions using bech32m can be included directly, e.g. `bitcoin:bc1q...?newprotocol1<bech32m encoded data>=o`\r\n* Existing unified QR codes can be made smaller: following an upgrade period to allow clients to update, we would be able to create URIs `bitcoin:bc1q...?lnbc1...=o` (instead of `?lightning=lnbc1...`) and fully static URIs `bitcoin:sp1q...?lno1...=o`\r\n\r\nFor senders, this simplifies implementing support for new address types in that clients can implement support for a generic BIP21 URI using HRPs as keys. As the client supports new bech32m encoded addresses, they are supported automatically without any additional changes.\r\n\r\nClients would still need to support new payment instructions that instead decided to use a query parameter, but I would expect most (if not all) clients to prefer bech32m encodings now that they get BIP21 support for free.\r\n\r\nI wrote a rough draft here, feel free use / modify as needed if you find it useful: https://github.com/josibake/bips/commit/07339bdb929113a9e7218f55ef1bfa72b3976f8e",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1976433562",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 1983715849,
      "node_id": "IC_kwDOAN28mc52PRoJ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1983715849",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T15:08:54Z",
      "updated_at": "2024-03-07T15:08:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Better taproot support: using HRPs directly would allow us to construct backwards compatible taproot URIs of the form bitcoin:bc1q...?bc1p...=o / bitcoin:bc1q...?bc1p...\r\n\r\nI think this ship has sailed, but K/V-vs-no-K has no impact on this. We could do bitcoin:bc1q...?taproot=bc1p. or whatever just fine. Ultimately its probably too late to update how any taproot anything appears in QR codes/URIs.\r\n\r\n> Support for future payment instructions\r\n\r\nThis is similarly untrue, the only difference is it reduces the characters used for future instructions, but whether it supports future instructions or not, both do.\r\n\r\n> Existing unified QR codes can be made smaller: following an upgrade period to allow clients to update, we would be able to create URIs bitcoin:bc1q...?lnbc1...=o (instead of ?lightning=lnbc1...) and fully static URIs bitcoin:sp1q...?lno1...=o\r\n\r\nIndeed, we can save a few characters here or there. I think the ship has similarly sailed for BOLT 11, but of course we can do something different for BOLT 12.\r\n\r\nUltimately I think the only difference between the two proposals are:\r\n\r\n * Skipping the key has slightly less bytes in the QR code, which helps very slightly on the margin.\r\n * Skipping the key means parsing is a bit trickier if/when we have some new payment instructions that don't use bech32m - do clients need to check the bech32m checksum for unknown payment instruction types? What do they do if its wrong? What happens when someone (without thinking) defines some payment instructions that match a bech32m HRP spuriously (but I guess probably the checksum would be wrong?). These should all be written out and considered if we want to go this path.\r\n\r\nI think the right approach here is the simpler one, but there's not a really strong reason to prefer either over the other, honestly.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1983715849",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 1983887437,
      "node_id": "IC_kwDOAN28mc52P7hN",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1983887437",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T16:19:38Z",
      "updated_at": "2024-03-07T16:19:38Z",
      "author_association": "MEMBER",
      "body": "> This is similarly untrue, the only difference is it reduces the characters used for future instructions, but whether it supports future instructions or not, both do.\r\n\r\nNo, they are not the same. This is especially relevant if wallets are using a BIP21 library: my wallet supports new address type `abc1xxxx`, which (according to your proposal) also gets a `abc` key defined (i.e. `abc=abc1xxx`. My wallet can parse the address but since my BIP21 library I am using hasn't added support for the new key, I am unable to parse these URIs. With my proposal of allowing bech32m encoded addresses to be used without a key, everything Just Works.\r\n\r\n> Skipping the key means parsing is a bit trickier if/when we have some new payment instructions that don't use bech32m - do clients need to check the bech32m checksum for unknown payment instruction types? What do they do if its wrong? What happens when someone (without thinking) defines some payment instructions that match a bech32m HRP spuriously (but I guess probably the checksum would be wrong?). These should all be written out and considered if we want to go this path.\r\n\r\nI'm not really sure what you're getting at here? My proposal is that any new payment addresses must use `bech32m` if they want to be used without a key, otherwise they must define a `key`. Everything you just mentioned was predicated on the assumption \"what if they don't use bech32m and don't define a key,\" which means they wouldn't be following the spec.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1983887437",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 1984019872,
      "node_id": "IC_kwDOAN28mc52Qb2g",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1984019872",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T17:06:04Z",
      "updated_at": "2024-03-07T17:06:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "> No, they are not the same. This is especially relevant if wallets are using a BIP21 library: my wallet supports new address type abc1xxxx, which (according to your proposal) also gets a abc key defined (i.e. abc=abc1xxx. My wallet can parse the address but since my BIP21 library I am using hasn't added support for the new key, I am unable to parse these URIs. With my proposal of allowing bech32m encoded addresses to be used without a key, everything Just Works.\r\n\r\nThat applies both to a K/V parameter and a non-K/V parameter equally - there's really no difference here. A BIP21 parsing library should pass all parameters that it doesn't know.\r\n\r\n> I'm not really sure what you're getting at here? My proposal is that any new payment addresses must use bech32m if they want to be used without a key, otherwise they must define a key. Everything you just mentioned was predicated on the assumption \"what if they don't use bech32m and don't define a key,\" which means they wouldn't be following the spec.\r\n\r\nAh, okay, I misunderstood the proposal. I'm not really super excited to bake \"future addresses will use bech32m\" into the spec in that way, because at some point we're gonna want \"bech32n\" or some other encoding (which would make sense for stuff that's only in QR codes as you could get the QR a bit denser) and then we'll be back having this same discussion, except now we *have* to shove everything in K/V pairs because we restricted non-K/V pairs to bech32m-only.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1984019872",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 1984128493,
      "node_id": "IC_kwDOAN28mc52Q2Xt",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1984128493",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T17:58:59Z",
      "updated_at": "2024-03-07T17:59:31Z",
      "author_association": "MEMBER",
      "body": "> I'm not really super excited to bake \"future addresses will use bech32m\" into the spec in that way, because at some point we're gonna want \"bech32n\"\r\n\r\nWhile certainly not perfect, I think this is better than the alternative of whitelisting a set of addresses that are allowed in a root in this BIP and requiring new formats to specify extension keys. My proposal gives us a way to specify a taproot address in a backwards compatible way, it allows for clients to save space by not needing to redundantly specify `hrp=hrp...`, leaves open the possibility for implementations to move to use the BOLT11 HRP directly to save space, and provides some future proofing for new address formats insomuch as bech32m continues to be the standard.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1984128493",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 1984212469,
      "node_id": "IC_kwDOAN28mc52RK31",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1984212469",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T18:51:05Z",
      "updated_at": "2024-03-07T18:51:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> While certainly not perfect, I think this is better than the alternative of whitelisting a set of addresses that are allowed in a root in this BIP and requiring new formats to specify extension keys. My proposal gives us a way to specify a taproot address in a backwards compatible way, it allows for clients to save space by not needing to redundantly specify hrp=hrp..., leaves open the possibility for implementations to move to use the BOLT11 HRP directly to save space, and provides some future proofing for new address formats insomuch as bech32m continues to be the standard.\r\n\r\nTo be clear, I think we should \"whitelist the set of addresses that are allowed in the root\" *either way*. IMO it was a (now-clear) mistake to have taproot at the root rather than in a parameter. Whether we go with K/V or not-K/V we still want to have all future address types in parameters rather than the URI root (and eventually basically phase out the URI root entirely, or at least make it taproot-only).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1984212469",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 1985343916,
      "node_id": "IC_kwDOAN28mc52VfGs",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1985343916",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T09:24:56Z",
      "updated_at": "2024-03-08T09:24:56Z",
      "author_association": "MEMBER",
      "body": "> To be clear, I think we should \"whitelist the set of addresses that are allowed in the root\" either way.\r\n\r\nEffectively, this is what you get with my proposal:\r\n\r\n> The bitcoinaddress body MUST be either a legacy base58 address (P2PKH, P2SH), or a bech32(m) encoded address. Future address formats that do not use bech32m encoding MUST instead be placed in query keys. Query keys SHOULD be defined by the respective BIP for the new address format.\r\n\r\nThe only distinction is newer bech32m address types can also be placed in the root. If you're planning to allow `bitcoin:?hrp=hrpxxx...&anotherhrp=anotherhrpxxx&amount=<>`, that's exactly the same as `bitcoin:hrpxxx...?anotherhrpxxx&amount=<>`, just more compact.\r\n",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1985343916",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 1986006392,
      "node_id": "IC_kwDOAN28mc52YA14",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/1986006392",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T16:29:31Z",
      "updated_at": "2024-03-08T16:29:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Effectively, this is what you get with my proposal:\r\n\r\nThis is unrelated to the K/V/no-K/V discussion. We can get it either way.\r\n\r\n> The only distinction is newer bech32m address types can also be placed in the root.\r\n\r\nI don't think we should allow this. It would be nice to only have one place to look for a given address type.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-1986006392",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2088859985,
      "node_id": "IC_kwDOAN28mc58gXlR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2088859985",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T18:07:15Z",
      "updated_at": "2024-05-01T18:07:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "I noticed that there is another pending PR that seeks to amend BIP21 #1394. At first glance, it seems like the change suggested there could be incorporated here.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2088859985",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "reviewed",
      "id": 2039339965,
      "node_id": "PRR_kwDOAN28mc55jdu9",
      "url": null,
      "actor": null,
      "commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "katesalazar",
        "id": 52637275,
        "node_id": "MDQ6VXNlcjUyNjM3Mjc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52637275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/katesalazar",
        "html_url": "https://github.com/katesalazar",
        "followers_url": "https://api.github.com/users/katesalazar/followers",
        "following_url": "https://api.github.com/users/katesalazar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/katesalazar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/katesalazar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/katesalazar/subscriptions",
        "organizations_url": "https://api.github.com/users/katesalazar/orgs",
        "repos_url": "https://api.github.com/users/katesalazar/repos",
        "events_url": "https://api.github.com/users/katesalazar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/katesalazar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2039339965",
      "submitted_at": "2024-05-04T11:58:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "labeled",
      "id": 12895631475,
      "node_id": "LE_lADOAN28mc6A-XLTzwAAAAMAo7hz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12895631475",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T14:31:00Z",
      "label": {
        "name": "Proposed BIP modification",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 12895631487,
      "node_id": "LE_lADOAN28mc6A-XLTzwAAAAMAo7h_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12895631487",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-22T14:31:00Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2071479102,
      "node_id": "PRR_kwDOAN28mc57eEM-",
      "url": null,
      "actor": null,
      "commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Iâ€™m a bit on the fence regarding this PR. There clearly exists a divergence of the practical use from the specification, and it makes sense to address this and make them line up better. On the other hand, it generally seems counterproductive to ship a new version of a spec under the same label.\r\n\r\nI would at least request that the changes are discussed on the mailing list and a Change Log section be added to document when and how the spec was amended. Perhaps it would be better to place these changes into an Appendix that comments on the practical use today and proposes these amendments.\r\n\r\nOverall I would prefer a new BIP over changes to a final BIP.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2071479102",
      "submitted_at": "2024-05-22T14:54:50Z",
      "state": "DISMISSED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "commented",
      "id": 2136079910,
      "node_id": "IC_kwDOAN28mc5_Uf4m",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2136079910",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-28T20:48:32Z",
      "updated_at": "2024-05-28T20:48:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Iâ€™m a bit on the fence regarding this PR. There clearly exists a divergence of the practical use from the specification, and it makes sense to address this and make them line up better. On the other hand, it generally seems counterproductive to ship a new version of a spec under the same label.\r\n\r\nYea, I see that its a bit weird to update something \"final\", but I think there's also tremendous value in being able to update something so that people aren't led to something that is stale, which would almost certainly happen given the number of existing links and references to \"BIP 21\". I would also be fine copying + pasting BIP 21 to a new BIP number if we update the headers with a \"Superseded: See BIP XXXX\" header, however, if we really don't want to update it.\r\n\r\nI'll wait to address feedback until we have clarity on the forward direction.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2136079910",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12963058977,
      "node_id": "HRFPE_lADOAN28mc6A-XLTzwAAAAMEqJUh",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12963058977",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "76c8049ed3ad9ea7a295aa6e3049d9fdd8ed483c",
      "commit_url": "https://api.github.com/repos/TheBlueMatt/bips/commits/76c8049ed3ad9ea7a295aa6e3049d9fdd8ed483c",
      "created_at": "2024-05-28T20:48:59Z"
    },
    {
      "event": "commented",
      "id": 2140256116,
      "node_id": "IC_kwDOAN28mc5_kbd0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2140256116",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T16:55:14Z",
      "updated_at": "2024-05-30T16:55:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'll wait to address feedback until we have clarity on the forward direction.\r\n\r\nIt might be useful to posit this amendment idea to the mailing list in order to get more input on the forward direction.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2140256116",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12992222630,
      "node_id": "HRFPE_lADOAN28mc6A-XLTzwAAAAMGZZWm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/12992222630",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fedb378b24a3f2c1c2b9f88b68c4b0e124adfd2c",
      "commit_url": "https://api.github.com/repos/TheBlueMatt/bips/commits/fedb378b24a3f2c1c2b9f88b68c4b0e124adfd2c",
      "created_at": "2024-05-30T21:54:04Z"
    },
    {
      "event": "commented",
      "id": 2140920958,
      "node_id": "IC_kwDOAN28mc5_m9x-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2140920958",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-30T21:54:39Z",
      "updated_at": "2024-05-30T21:54:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It might be useful to posit this amendment idea to the mailing list in order to get more input on the forward direction.\r\n\r\nDone",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2140920958",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2149227757,
      "node_id": "IC_kwDOAN28mc6AGpzt",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2149227757",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T08:42:55Z",
      "updated_at": "2024-06-05T08:42:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think there's a lot of advantage to updating even final BIPs with information about how those specifications are being widely used in practice, i.e. ` bitcoinaddress = *base58 / *bech32 / *bech32m`.\r\n\r\nI don't like adding proposed new features to a final BIP, i.e. defining new keys that haven't be used in practice (like `sp`).  One reason I don't like adding new features to a final BIP is well illustrated in the discussion between @TheBlueMatt and @josibake: they each have slightly different visions for the future of `bitcoin:` URIs but Matt will be in a privileged position to push for his vision if the existing and widely linked-to standard of BIP21 is updated to reflect his preferences.\r\n\r\nI'd prefer to see this PR revised to only document how BIP21 is used in practice today, with any new proposals placed in a new BIP (which can, of course, be a 99% copy of the existing text).",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2149227757",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "mentioned",
      "id": 13047420315,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMJr9Wb",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13047420315",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T08:42:57Z"
    },
    {
      "event": "subscribed",
      "id": 13047420326,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMJr9Wm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13047420326",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T08:42:57Z"
    },
    {
      "event": "mentioned",
      "id": 13047420354,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMJr9XC",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13047420354",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T08:42:57Z"
    },
    {
      "event": "subscribed",
      "id": 13047420365,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMJr9XN",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13047420365",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T08:42:57Z"
    },
    {
      "event": "commented",
      "id": 2149635622,
      "node_id": "IC_kwDOAN28mc6AINYm",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2149635622",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T11:49:25Z",
      "updated_at": "2024-06-05T11:51:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't like adding proposed new features to a final BIP, i.e. defining new keys that haven't be used in practice (like sp).\n\nThe point of the proposed change isn't to define 'sp' specifically but to define the rules for new formats going forward.\n\n> One reason I don't like adding new features to a final BIP is well illustrated in the discussion between @TheBlueMatt and @josibake: they each have slightly different visions for the future of bitcoin: URIs but Matt will be in a privileged position to push for his vision if the existing and widely linked-to standard of BIP21 is updated to reflect his preferences.\n\nI don't think this is a fair characterization. There was a lot of back-and-forth and my understanding is we got to a common ground (or at least equivalent suggestions where it didn't matter all that much where to go). If @josibake still has a different view I'm more than happy to amend the proposal here to make sure we're on the same page.\n\nRather, the back-and-forth there is a great example of why defining some new BIP just to suggest where to put new payment instructions in BIP 21s is going to lead to further fragmentation - lots of people have strong opinions about lots of equivalent naming schemes.\n\n> I'd prefer to see this PR revised to only document how BIP21 is used in practice today, with any new proposals placed in a new BIP (which can, of course, be a 99% copy of the existing text).\n\nThis would be pretty confusing, IMO, since we'd then specify \"lighting\" as a URI parameter here (since it's already in broad use) and then say \"oh, but that's kinda a weird name, in the future please do something different and use the HRP instead\" in a different doc. IMO that's likely to lead to a continued proliferation of unrelated keys which is less useful going forward.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2149635622",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "mentioned",
      "id": 13049943565,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMJ1lYN",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13049943565",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T11:49:26Z"
    },
    {
      "event": "subscribed",
      "id": 13049943593,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMJ1lYp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13049943593",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T11:49:26Z"
    },
    {
      "event": "mentioned",
      "id": 13049943620,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMJ1lZE",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13049943620",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T11:49:26Z"
    },
    {
      "event": "subscribed",
      "id": 13049943630,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMJ1lZO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13049943630",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T11:49:26Z"
    },
    {
      "event": "commented",
      "id": 2149823379,
      "node_id": "IC_kwDOAN28mc6AI7OT",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2149823379",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T13:03:24Z",
      "updated_at": "2024-06-05T13:03:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thinking on this more, I think a policy of \"we can update a final BIP to describe what is actually happening in practice but not to give forward guidance on how to do things people are going to do\" is inconsistent. This results in a neverending stream of changes to add query parameters that are being used in practice, but we can't add guidance for what query parameters to use to avoid that.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2149823379",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2150546631,
      "node_id": "IC_kwDOAN28mc6ALrzH",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2150546631",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:04:03Z",
      "updated_at": "2024-06-05T17:04:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "@TheBlueMatt \r\n\r\n> the back-and-forth there is a great example of why defining some new BIP just to suggest where to put new payment instructions in BIP 21s is going to lead to further fragmentation - lots of people have strong opinions about lots of equivalent naming schemes.\r\n\r\nIf there's a reasonable difference of opinion, each person should have equal access to the process for advocating for their position.  Each person creating a new BIP is equal access IMO.  One person being able to update a final BIP that is already widely deployed and referenced, while other parties can only create a new BIP and try to build support for it, is inequitable IMO.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2150546631",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "mentioned",
      "id": 13054696917,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMKHt3V",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13054696917",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:04:04Z"
    },
    {
      "event": "subscribed",
      "id": 13054696950,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMKHt32",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13054696950",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:04:04Z"
    },
    {
      "event": "commented",
      "id": 2150631518,
      "node_id": "IC_kwDOAN28mc6AMAhe",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2150631518",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T17:53:28Z",
      "updated_at": "2024-06-05T17:53:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Right, I believe my above claim is that there isn't any (more) difference of opinion :). Still, more generally I'm not at all convinced that \"access to a document\" is somehow privileged, or at least its very explicitly not supposed to be - BIPs are author documents - they aren't somehow blessed and implementers can do whatever they want, as evidenced by the fact that no one complies with BIP 21 given BIP 21 currently doesn't allow bech32[m] payments :)\r\n\r\nAs I mentioned above I'm okay with just saying \"no changes at all\", but I think your position that we can make some changes (to describe reality) but not others (to provide forward-looking guidance) results in a pretty bad outcome.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2150631518",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2150741297,
      "node_id": "IC_kwDOAN28mc6AMbUx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2150741297",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T18:52:56Z",
      "updated_at": "2024-06-05T18:52:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "@TheBlueMatt \r\n\r\n> my above claim is that there isn't any (more) difference of opinion :)\r\n\r\nI don't see the resolution to the discussion about bare keys vs key/values above, so it seems open to me, but perhaps you and @josibake hashed it out somewhere else (or I'm just misreading).  If it was resolved somewhere else public, I'd appreciate a link, as I was favoring several of Josie's proposals and I'd like to see what persuaded him to accept the full k/v approach.\r\n\r\n> BIPs are author documents - they aren't somehow blessed and implementers can do whatever they want\r\n\r\nBIPs in the _draft_ and _proposed_ stage are author documents for sure, but it doesn't seem clear to me that they should remain author documents once they enter the _final_ state.  If people implement a supposedly final specification and then the specification changes, that may unnecessarily lead to miscommunication.\r\n\r\n@ajtowns dealt with this problem in BINANAs by giving them revision numbers, so e.g. if I want to reference that a particular implementation of `OP_CAT` is based on the original proposal, I can say BIN24-1.0 and be protected against changes that become BIN24-1.1, etc.  We don't conveniently have that facility with BIPs (I'd have to refer to a commitish) and I think we deal with that by having a _final_ state after which significant changes are not expected.\r\n\r\n> I'm okay with just saying \"no changes at all\", but I think your position that we can make some changes (to describe reality) but not others (to provide forward-looking guidance) results in a pretty bad outcome.\r\n\r\nI'm also ok with \"no changes at all\".  That said, I think describing reality, especially if it's made clear that it differs from the original specification, is very advantageous to later implementers and those attempting to understand how their modern software works.  Not providing post-final forward-looking guidance in the updated BIP doesn't mean that we can't provide that guidance elsewhere, such as a new BIP or a link to a wiki page (in BIP125, I included a link to a [wiki page](https://en.bitcoin.it/wiki/Transaction_replacement) to help foster collaboration among implementers and provide a source of living documentation).\r\n\r\nI do want to mention that none of the above is a hill I care to die on; it's just my opinion about editing _final_ BIPs.  If nobody else thinks this is a problem, I'm ok with this PR being merged as-is.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2150741297",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "mentioned",
      "id": 13056045724,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMKM3Kc",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13056045724",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T18:52:57Z"
    },
    {
      "event": "subscribed",
      "id": 13056045739,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMKM3Kr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13056045739",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T18:52:57Z"
    },
    {
      "event": "mentioned",
      "id": 13056045761,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMKM3LB",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13056045761",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T18:52:58Z"
    },
    {
      "event": "subscribed",
      "id": 13056045770,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMKM3LK",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13056045770",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T18:52:58Z"
    },
    {
      "event": "mentioned",
      "id": 13056045787,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMKM3Lb",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13056045787",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T18:52:58Z"
    },
    {
      "event": "subscribed",
      "id": 13056045804,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMKM3Ls",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13056045804",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T18:52:58Z"
    },
    {
      "event": "commented",
      "id": 2151166170,
      "node_id": "IC_kwDOAN28mc6AODDa",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2151166170",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T00:28:13Z",
      "updated_at": "2024-06-06T00:28:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> That said, I think describing reality, especially if it's made clear that it differs from the original specification, is very advantageous to later implementers and those attempting to understand how their modern software works. \r\n\r\nThe point of a BIP is to have the information people need to implement it in one convenient place. That includes guidance for how to do the things people want to do. Updating to say \"btw, people put BOLT11s in the `lightning` key\" without saying \"and also we should put BOLT12s in the lno key\" is possibly the worst outcome, IMO. I see the rationale for getting there, but the outcome is just confusing for everyone (how does one write a general BIP 21 parser? You might have K-V entries, you might have just values, they may be under colliding keys, etc.\r\n\r\n> Not providing post-final forward-looking guidance in the updated BIP doesn't mean that we can't provide that guidance elsewhere, such as a new BIP or a link to a wiki page.\r\n\r\nAs long as the BIP gets marked \"superseded\" with a big link to some new BIP I'm happy with that. Just providing a link in a footnote also does not accomplish this, though, because people will just miss it.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2151166170",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2153433970,
      "node_id": "IC_kwDOAN28mc6AWsty",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2153433970",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T21:26:00Z",
      "updated_at": "2024-06-06T21:26:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "@TheBlueMatt \r\n\r\n> The point of a BIP is to have the information people need to implement it in one convenient place.\r\n\r\nThat's certainly ideal.  However, I think in the case of _final_ BIPs, that ideal conflicts with the ideal of not giving anyone unnecessarily privileged access to the specification process.  If there is more than one reasonable way to do something, I don't think the author of a long-adopted spec should be able to use that spec to favor their preferred choices.\r\n\r\nWhich ideal is more important, better documentation or less privilege?  I don't know, which is why I'm ok with this PR being merged even if I'd prefer to see it reduced to only describing how current widely adopted behavior differs from the original spec.",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2153433970",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "mentioned",
      "id": 13072442357,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAMLLaP1",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13072442357",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T21:26:02Z"
    },
    {
      "event": "subscribed",
      "id": 13072442369,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMLLaQB",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13072442369",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T21:26:02Z"
    },
    {
      "event": "commented",
      "id": 2153471254,
      "node_id": "IC_kwDOAN28mc6AW10W",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2153471254",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T21:58:52Z",
      "updated_at": "2024-06-06T21:58:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> the ideal of not giving anyone unnecessarily privileged access to the specification process\n\nI'll be honest, I'd never considered that an ideal of the BIP process, including the reason for final BIPs. Of course no one should have some kind of priviledged access to changing Bitcoin, but the BIP process hasn't historically been the gate for that.\n\nAdmittedly I'm not quite sure what ideal/goal we seek to meet with having a \"final\" state - I'd always considered it to exist because we don't have a concept of an \"accepted\" BIP (because the BIP process isn't for \"accepting\" ideas), but we still need some way to mark something as different from \"draft\"/proposed. In that context, the \"final\" concept only really makes any sense for consensus change BIPs. You could argue that a BIP in sufficient adoption is \"final\" in that future changes don't make sense as they invalidate existing implementations which makes no sense, but that doesn't really answer what to do about forward guidance as is proposed here (presumably it's fine?)",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2153471254",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2221284773,
      "node_id": "IC_kwDOAN28mc6EZh2l",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2221284773",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T19:39:20Z",
      "updated_at": "2024-07-10T19:39:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "I would posit that it may be simpler, less controversial, and more in line with the BIP Process to open a new BIP with the final state (or another evolution making use of the additional leeway) of this proposal. Then this BIPâ€™s Preamble could be updated to point to the successor with the Replaced-By header as described in BIPâ€¯2.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2221284773",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13495613566,
      "node_id": "HRFPE_lADOAN28mc6A-XLTzwAAAAMkZrh-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13495613566",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d7f4a5b80e3505c761188a49e38401c9b61c5cc",
      "commit_url": "https://api.github.com/repos/TheBlueMatt/bips/commits/6d7f4a5b80e3505c761188a49e38401c9b61c5cc",
      "created_at": "2024-07-13T14:46:37Z"
    },
    {
      "event": "renamed",
      "id": 13495613886,
      "node_id": "RTE_lADOAN28mc6A-XLTzwAAAAMkZrm-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13495613886",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-13T14:46:48Z",
      "rename": {
        "from": "Update BIP 21 with information about more modern usage of it",
        "to": "Replace BIP 21 with a new BIP containing information about more modern usage of it"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13495619506,
      "node_id": "HRFPE_lADOAN28mc6A-XLTzwAAAAMkZs-y",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13495619506",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ff719344caa72cc079dad786d49a064ab96e3b86",
      "commit_url": "https://api.github.com/repos/TheBlueMatt/bips/commits/ff719344caa72cc079dad786d49a064ab96e3b86",
      "created_at": "2024-07-13T14:49:49Z"
    },
    {
      "event": "commented",
      "id": 2226938620,
      "node_id": "IC_kwDOAN28mc6EvGL8",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2226938620",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-13T14:49:54Z",
      "updated_at": "2024-07-13T14:49:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Okay, updated this PR to instead add a new BIP.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2226938620",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "subscribed",
      "id": 13496042374,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAMkbUOG",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13496042374",
      "actor": {
        "login": "sethforprivacy",
        "id": 40500387,
        "node_id": "MDQ6VXNlcjQwNTAwMzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/40500387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sethforprivacy",
        "html_url": "https://github.com/sethforprivacy",
        "followers_url": "https://api.github.com/users/sethforprivacy/followers",
        "following_url": "https://api.github.com/users/sethforprivacy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sethforprivacy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sethforprivacy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sethforprivacy/subscriptions",
        "organizations_url": "https://api.github.com/users/sethforprivacy/orgs",
        "repos_url": "https://api.github.com/users/sethforprivacy/repos",
        "events_url": "https://api.github.com/users/sethforprivacy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sethforprivacy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-13T18:49:50Z"
    },
    {
      "event": "commented",
      "id": 2227046546,
      "node_id": "IC_kwDOAN28mc6EvgiS",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2227046546",
      "actor": {
        "login": "sethforprivacy",
        "id": 40500387,
        "node_id": "MDQ6VXNlcjQwNTAwMzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/40500387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sethforprivacy",
        "html_url": "https://github.com/sethforprivacy",
        "followers_url": "https://api.github.com/users/sethforprivacy/followers",
        "following_url": "https://api.github.com/users/sethforprivacy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sethforprivacy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sethforprivacy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sethforprivacy/subscriptions",
        "organizations_url": "https://api.github.com/users/sethforprivacy/orgs",
        "repos_url": "https://api.github.com/users/sethforprivacy/repos",
        "events_url": "https://api.github.com/users/sethforprivacy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sethforprivacy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-13T18:57:00Z",
      "updated_at": "2024-07-13T19:01:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've been testing out BIP 353 which led me to trying to use Silent Payments + BOLT 12 in the same BIP 21 URI and ultimately finding this PR.\n\nCould you clarify in the examples how to use two diverse payment codes together in one URI?\n\nThis is what I currently have for SP + BOLT 12, but I'm not sure it's correct and a good example here would be helpful once merged:\n\n`bitcoin:?lno=lno1pgqpvggzrdhszmg5yafguxmkm779vd8jftxskjyadjdrallmq8uxfjdjfyaq&sp=sp1qqweplq6ylpfrzuq6hfznzmv28djsraupudz0s0dclyt8erh70pgwxqkz2ydatksrdzf770umsntsmcjp4kcz7jqu03jeszh0gdmpjzmrf5u4zh0c`",
      "user": {
        "login": "sethforprivacy",
        "id": 40500387,
        "node_id": "MDQ6VXNlcjQwNTAwMzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/40500387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sethforprivacy",
        "html_url": "https://github.com/sethforprivacy",
        "followers_url": "https://api.github.com/users/sethforprivacy/followers",
        "following_url": "https://api.github.com/users/sethforprivacy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sethforprivacy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sethforprivacy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sethforprivacy/subscriptions",
        "organizations_url": "https://api.github.com/users/sethforprivacy/orgs",
        "repos_url": "https://api.github.com/users/sethforprivacy/repos",
        "events_url": "https://api.github.com/users/sethforprivacy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sethforprivacy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2227046546",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2227073742,
      "node_id": "IC_kwDOAN28mc6EvnLO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2227073742",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-13T19:45:31Z",
      "updated_at": "2024-07-13T19:45:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yep, that's right, I've added some examples.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2227073742",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2229234483,
      "node_id": "IC_kwDOAN28mc6E32sz",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2229234483",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T19:31:23Z",
      "updated_at": "2024-07-15T19:31:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "836ef064e433721238f0cddbf95da4b8c0ebe2b9 LGTM (obviously needs BIP # assigned and to be added to the index)",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2229234483",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "reviewed",
      "id": 2180896476,
      "node_id": "PRR_kwDOAN28mc6B_dbc",
      "url": null,
      "actor": null,
      "commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Did a quick first pass. This document is missing a Copyright section, I left a few more comments inline.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2180896476",
      "submitted_at": "2024-07-16T18:18:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "unlabeled",
      "id": 13525264221,
      "node_id": "UNLE_lADOAN28mc6A-XLTzwAAAAMmKydd",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13525264221",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:04Z",
      "label": {
        "name": "Proposed BIP modification",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 13525264233,
      "node_id": "LE_lADOAN28mc6A-XLTzwAAAAMmKydp",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/13525264233",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:04Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 2258120048,
      "node_id": "IC_kwDOAN28mc6GmC1w",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2258120048",
      "actor": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-30T11:24:59Z",
      "updated_at": "2024-07-30T11:24:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, sorry for the late review!",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2258120048",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2263655743,
      "node_id": "IC_kwDOAN28mc6G7KU_",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2263655743",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T18:02:48Z",
      "updated_at": "2024-08-01T18:02:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just one note regarding updating a final BIP: there's a huge difference between documenting which parameters people use (the spec specifically allows using custom parameters) and documenting that everyone actually ignores the specification in regard to bech32. It also looks to me that the requirement to use base58 was a mistake. I think it'd make sense to amend that part and that part only. Use a new BIP for everything else.",
      "user": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2263655743",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2349107291,
      "node_id": "IC_kwDOAN28mc6MBIhb",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2349107291",
      "actor": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T14:33:28Z",
      "updated_at": "2024-09-13T14:33:28Z",
      "author_association": "NONE",
      "body": "In addition to a BOLT12 `offer`, I'd also like to see an option for a BOLT12 `invoice_request`. Possibly using the key `lnir` would work? This addresses the following use case from the BOLT12 spec:\r\n\r\n\r\n\r\nhttps://github.com/rustyrussell/lightning-rfc/blob/db73bbb64d2dfc07fbc9c1dc09259d827f703868/12-offer-encoding.md?plain=1#L54\r\n\r\n```\r\nThe merchant-pays-user flow (e.g. ATM or refund):\r\n1. The merchant publishes an *invoice_request* which contains offer fields\r\n   which refer to its attempt to send money, including an amount.\r\n2. The user sends an *invoice* over the lightning network for the amount in the\r\n   *invoice_request*, using a (possibly temporary) *invoice_node_id*.\r\n3. The merchant confirms the *invoice_node_id* to ensure it's about to pay the correct\r\n   person, and makes a payment to the invoice.\r\n```\r\n\r\nwith more explanation later on....\r\n\r\n\r\nhttps://github.com/rustyrussell/lightning-rfc/blob/db73bbb64d2dfc07fbc9c1dc09259d827f703868/12-offer-encoding.md?plain=1#L367\r\n\r\n```\r\nThe second case is publishing an `invoice_request` without an offer,\r\nsuch as via QR code.  It contains neither `offer_issuer_id` nor `offer_paths`, setting the\r\n`invreq_payer_id` (and possibly `invreq_paths`) instead, as it in the one paying: the\r\nother offer fields are filled by the creator of the `invoice_request`,\r\nforming a kind of offer-to-send-money.\r\n```\r\n\r\n\r\n",
      "user": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2349107291",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2349596553,
      "node_id": "IC_kwDOAN28mc6MC_-J",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2349596553",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T17:34:55Z",
      "updated_at": "2024-09-13T17:34:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "BOLT 12 invoice_requests are not intended to be published. What you're looking for are BOLT 12 refunds. You are right that this could include refunds explicitly, however there's no reason to - it specifies that new types should simply use the bech32 HRP as the key.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2349596553",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2350010808,
      "node_id": "IC_kwDOAN28mc6MElG4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2350010808",
      "actor": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T19:25:26Z",
      "updated_at": "2024-09-13T19:25:26Z",
      "author_association": "NONE",
      "body": "Not sure how you can say `invoice_requests` are not intended to be published. That is literally stated in the spec that I quoted above.\r\n\r\nAre you saying that the key `lnr` is already supported automatically by your new BIP because of its generality?",
      "user": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2350010808",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2358479518,
      "node_id": "IC_kwDOAN28mc6Mk4qe",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2358479518",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-18T13:30:10Z",
      "updated_at": "2024-09-18T13:30:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Not sure how you can say invoice_requests are not intended to be published. That is literally stated in the spec that I quoted above.\r\n\r\nI believe its just a stale line that has slipped in. There is now a dedicated \"refund\" type which addresses that use-case. Thanks for reporting https://github.com/lightning/bolts/pull/798#discussion_r1765062764\r\n\r\n> Are you saying that the key lnr is already supported automatically by your new BIP because of its generality?\r\n\r\nYep!",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2358479518",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2371932580,
      "node_id": "IC_kwDOAN28mc6NYNGk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2371932580",
      "actor": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T17:48:53Z",
      "updated_at": "2024-09-24T17:48:53Z",
      "author_association": "NONE",
      "body": "> > Not sure how you can say invoice_requests are not intended to be published. That is literally stated in the spec that I quoted above.\r\n> \r\n> I believe its just a stale line that has slipped in. There is now a dedicated \"refund\" type which addresses that use-case. Thanks for reporting [lightning/bolts#798 (comment)](https://github.com/lightning/bolts/pull/798#discussion_r1765062764)\r\n> \r\n\r\nLooking at @rustyrussell's reply, it seems as there is no explicit refund workflow, it is instead just a modified use case of the offer workflow that can use used for refunds if you want to. So, in that use case, yes, I do think that `invoice_requests` are intended to be published. Do you agree?\r\n\r\n\r\n> > Are you saying that the key lnr is already supported automatically by your new BIP because of its generality?\r\n> \r\n> Yep!\r\n\r\nGreat, what is cool about this once this is supported by wallets, you can basically make QR code and a paper note with this standard and pass that around to people similar to a paper check, redeemable instantly from your lightning node! This is a great way to make backup in case your phone gets smashed before going on a trip. You can make notes in many denominations and destroy them whenever you want.\r\n\r\n",
      "user": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2371932580",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "mentioned",
      "id": 14385716810,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAANZdJ5K",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14385716810",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T17:48:54Z"
    },
    {
      "event": "subscribed",
      "id": 14385716833,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAANZdJ5h",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14385716833",
      "actor": {
        "login": "rustyrussell",
        "id": 775844,
        "node_id": "MDQ6VXNlcjc3NTg0NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/775844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rustyrussell",
        "html_url": "https://github.com/rustyrussell",
        "followers_url": "https://api.github.com/users/rustyrussell/followers",
        "following_url": "https://api.github.com/users/rustyrussell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rustyrussell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rustyrussell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rustyrussell/subscriptions",
        "organizations_url": "https://api.github.com/users/rustyrussell/orgs",
        "repos_url": "https://api.github.com/users/rustyrussell/repos",
        "events_url": "https://api.github.com/users/rustyrussell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rustyrussell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-24T17:48:54Z"
    },
    {
      "event": "commented",
      "id": 2380877028,
      "node_id": "IC_kwDOAN28mc6N6Uzk",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2380877028",
      "actor": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T19:44:59Z",
      "updated_at": "2024-09-28T19:45:31Z",
      "author_association": "NONE",
      "body": "[BIP-0353](https://github.com/bitcoin/bips/blob/master/bip-0353.mediawiki) uses this BIP (even though it says it uses BIP-0021). This BIP (and BIP-21) result in long URI. This presents a problem for QR code encoding and just simple writing of them in messages, etc. Wondering if we can have another URI form that will resolve a BIP-0353 address? For example, encoding something such as `bip353:matt@mattcorallo.com` is much shorter than `bitcoin:bc1qztwy6xen3zdtt7z0vrgapmjtfz8acjkfp5fp7l?lno=lno1qsg95t28fvk7aefdum96rgwq3psqzyxvqfcsq3pv8dulvphcpuezmxx5n8h0evrqtx00ch2wevqzp8pvk4qeqqhw37mc9659ses3xkamaksfd9dspq6gkgmvzcl7eppzd3er2w80rgpq9ys6szwh4e33p82jmu42e9zgay44rhg6whr4gq9l6xe6jd7penguqqeua845ptusy3xs5wxwrytm9ck6dh8l739jmw2rfsu8nudvtef90hfn4aj55aw0ezxxf2excmead9vaqvjtuq6s9a580e85rz8mdvp26kuc5vr2llmuexrgxhxx66l400275a3535qpqvemxtpdvuvrwh83qkjl53eagqckyypeq87wey4833z750a5kr5ppfzemeuhtemw6jpty2gznf76zakkj0c`. BIP-353 suggests using `â‚¿matt@mattcorallo.com`, but will that work for triggering apps with QR codes, clickable links, NFC intent on phones? Could we change it to `â‚¿:matt@mattcorallo.com` (but is that a valid link prefix type, and even if it is, is it easy for people to type?)? Alternatively, could we use `BTC:matt@mattcorallo.com` as a link prefix for BIP-0353?\r\n\r\nPossibly this discussion is about BIP-0353 and not a replacement to BIP-0021, but I'm not sure of the latest discussion area for BIP-353 since it is already issued and it doesn't really pertain to URI prefixes that trigger applications from the operating system, only how wallet applications should behave inside themselves.",
      "user": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2380877028",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2383446576,
      "node_id": "IC_kwDOAN28mc6OEIIw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2383446576",
      "actor": {
        "login": "stevenroose",
        "id": 853468,
        "node_id": "MDQ6VXNlcjg1MzQ2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/853468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stevenroose",
        "html_url": "https://github.com/stevenroose",
        "followers_url": "https://api.github.com/users/stevenroose/followers",
        "following_url": "https://api.github.com/users/stevenroose/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stevenroose/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stevenroose/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stevenroose/subscriptions",
        "organizations_url": "https://api.github.com/users/stevenroose/orgs",
        "repos_url": "https://api.github.com/users/stevenroose/repos",
        "events_url": "https://api.github.com/users/stevenroose/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stevenroose/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T14:56:14Z",
      "updated_at": "2024-09-30T14:58:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Haven't read the entire discussion here, but skimmed the proposed changes.\r\n\r\nFWIW, we're thinking of using BIP-21 for Ark addressing so that we can support bolt12 fallback easily. Also it gives flexibility to Ark implementations to support different arguments in a flexible key-value fashion.\r\n\r\nThe most important change (probably even only) to BIP21 that we need is to make the address part optional. I see that is already being proposed here. The URIs would then look something like this:\r\n\r\n```\r\nbitcoin:?ark_aspid=deadbeef&ark_pk=02deadbeef&ark_roundconfs=6&lno=lnbc1sdfa\r\n```\r\n\r\nNote that a wallet that doesn't support Ark can just read the bolt12 argument and deliver over lightning, while an Ark wallet can attempt to deliver straight over Ark.\r\n\r\nAlso, could this simply be an amendment to BIP21? Instead of getting a new number assigned?",
      "user": {
        "login": "stevenroose",
        "id": 853468,
        "node_id": "MDQ6VXNlcjg1MzQ2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/853468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stevenroose",
        "html_url": "https://github.com/stevenroose",
        "followers_url": "https://api.github.com/users/stevenroose/followers",
        "following_url": "https://api.github.com/users/stevenroose/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stevenroose/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stevenroose/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stevenroose/subscriptions",
        "organizations_url": "https://api.github.com/users/stevenroose/orgs",
        "repos_url": "https://api.github.com/users/stevenroose/repos",
        "events_url": "https://api.github.com/users/stevenroose/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stevenroose/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2383446576",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2383778143,
      "node_id": "IC_kwDOAN28mc6OFZFf",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2383778143",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T17:30:43Z",
      "updated_at": "2024-09-30T17:31:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "> [BIP-0353](https://github.com/bitcoin/bips/blob/master/bip-0353.mediawiki) uses this BIP (even though it says it uses BIP-0021). This BIP (and BIP-21) result in long URI. This presents a problem for QR code encoding and just simple writing of them in messages, etc. Wondering if we can have another URI form that will resolve a BIP-0353 address?\r\n\r\nIn generally you should strongly prefer not to do this. BIP 353 even says so explicitly, saying\r\n\r\n> Bitcoin wallets MUST NOT prefer to use DNS-based resolving when methods with explicit public keys or addresses are available. In other words, if a standard Bitcoin address or direct BIP 21 URI is available or would suffice, Bitcoin wallets MUST prefer to use that instead. \r\n\r\nThis is because if at all possible we should *strongly* prefer to avoid trusting the entire DNS+domain infrastructure - if there's a communication channel between the sender and recipient, that should be used to exchange cryptographic keys directly, rather than introducing an entire centralized stack as a trusted third party. Addressing QR code size is something individual protocols should do on their own (eg BOLT 12 in the lightning world has very small \"offers\" by just communicating what's required to fetch further payment instructions.\r\n\r\n> The most important change (probably even only) to BIP21 that we need is to make the address part optional. I see that is already being proposed here. The URIs would then look something like this:\r\n\r\nNice!\r\n\r\n> bitcoin:?ark_aspid=deadbeef&ark_pk=02deadbeef&ark_roundconfs=6&lno=lnbc1sdfa\r\n\r\nIt would be kinda nice to stick with the recommendations here of using bech32 HRPs as the keys in the query parameters. I assume you'll want some kind of bech32 string to communicate ark recipient info anyway (yay checksums), so might as well use it as-is here?\r\n\r\n> Also, could this simply be an amendment to BIP21? Instead of getting a new number assigned?\r\n\r\nHeh, lots of back-and-forth on that...BIP 21 is pretty ancient, so might as well just say we're replacing it and mark it DEPRECATED in bold at the top :man_shrugging: ",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2383778143",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2383847339,
      "node_id": "IC_kwDOAN28mc6OFp-r",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2383847339",
      "actor": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T18:03:37Z",
      "updated_at": "2024-09-30T18:03:37Z",
      "author_association": "NONE",
      "body": "> This is because if at all possible we should _strongly_ prefer to avoid trusting the entire DNS+domain infrastructure - if there's a communication channel between the sender and recipient, that should be used to exchange cryptographic keys directly, rather than introducing an entire centralized stack as a trusted third party. Addressing QR code size is something individual protocols should do on their own (eg BOLT 12 in the lightning world has very small \"offers\" by just communicating what's required to fetch further payment instructions.\r\n\r\n\r\nI get what you are saying, but it seems like BOLT12 offers aren't really that small. Here is a comparison of QR codes for both examples above (which I took the offer example from your proposed spec).\r\n\r\n\r\n`bitcoin:bc1qztwy6xen3zdtt7z0vrgapmjtfz8acjkfp5fp7l?lno=lno1qsg95t28fvk7aefdum96rgwq3psqzyxvqfcsq3pv8dulvphcpuezmxx5n8h0evrqtx00ch2wevqzp8pvk4qeqqhw37mc9659ses3xkamaksfd9dspq6gkgmvzcl7eppzd3er2w80rgpq9ys6szwh4e33p82jmu42e9zgay44rhg6whr4gq9l6xe6jd7penguqqeua845ptusy3xs5wxwrytm9ck6dh8l739jmw2rfsu8nudvtef90hfn4aj55aw0ezxxf2excmead9vaqvjtuq6s9a580e85rz8mdvp26kuc5vr2llmuexrgxhxx66l400275a3535qpqvemxtpdvuvrwh83qkjl53eagqckyypeq87wey4833z750a5kr5ppfzemeuhtemw6jpty2gznf76zakkj0c`\r\n![image](https://github.com/user-attachments/assets/35eeadba-3eb1-4089-a707-557f52be6d97)\r\n\r\n\r\n\r\n`BTC:matt@mattcorallo.com`\r\n![image](https://github.com/user-attachments/assets/3bec6e96-58e3-45ce-832b-c5b299a2a376)\r\n\r\n\r\nI think there is a substantial difference, we may want to have the option to do such a thing, but not necessarily encourage it for the reasons you've suggested. I think LNURL brings the size down pretty small, and we are going to be competing with that.",
      "user": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2383847339",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2383886649,
      "node_id": "IC_kwDOAN28mc6OFzk5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2383886649",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T18:26:28Z",
      "updated_at": "2024-09-30T18:26:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yea, sadly BOLT12 seeks to have privacy through blinded paths, but receivers who struggle to fit things in QR codes can opt to reduce size by trading off privacy. Also note that if you're putting a bech32 string in a QR code you really need to uppercase the entire thing, which makes things much less dense.\r\n\r\nFor people who want tons of options for payments in QR codes, we really should be thinking about something other than BIP 353 - we could publish full payment info in nostr or some other trivial bulletin board (in some kind of encrypted + blinded form where each fresh QR code leads to new payment details to avoid correlation), etc.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2383886649",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2383908930,
      "node_id": "IC_kwDOAN28mc6OF5BC",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2383908930",
      "actor": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T18:39:41Z",
      "updated_at": "2024-09-30T18:39:41Z",
      "author_association": "NONE",
      "body": "> For people who want tons of options for payments in QR codes, we really should be thinking about something other than BIP 353 - we could publish full payment info in nostr or some other trivial bulletin board (in some kind of encrypted + blinded form where each fresh QR code leads to new payment details to avoid correlation), etc.\r\n\r\nThis seems to me a bit like it is getting back to a heavy software stack, but maybe it is unavoidable.\r\n\r\nI like to sticking to DNS as the datastore because it is fairly low on the software stack. Wondering if we can in any way to make a more compact URI that includes `user`@`domain` plus some hints to find their nameserver and a pubkey used to sign the DNS records? However, maybe at that point the length is approaching that of an offer with a blinded path...\r\n",
      "user": {
        "login": "AndySchroder",
        "id": 4065710,
        "node_id": "MDQ6VXNlcjQwNjU3MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4065710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndySchroder",
        "html_url": "https://github.com/AndySchroder",
        "followers_url": "https://api.github.com/users/AndySchroder/followers",
        "following_url": "https://api.github.com/users/AndySchroder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/AndySchroder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/AndySchroder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/AndySchroder/subscriptions",
        "organizations_url": "https://api.github.com/users/AndySchroder/orgs",
        "repos_url": "https://api.github.com/users/AndySchroder/repos",
        "events_url": "https://api.github.com/users/AndySchroder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/AndySchroder/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2383908930",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2383938432,
      "node_id": "IC_kwDOAN28mc6OGAOA",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2383938432",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T18:57:22Z",
      "updated_at": "2024-09-30T18:57:22Z",
      "author_association": "CONTRIBUTOR",
      "body": ">  Wondering if we can in any way to make a more compact URI that includes user@domain plus some hints to find their nameserver and a pubkey used to sign the DNS records? However, maybe at that point the length is approaching that of an offer with a blinded path...\r\n\r\nSigning the DNS content via a direct key is great, but you start hitting censorship risk. Just telling people a nameserver IP doesn't really solve it, either, because in most cases people are trusting a third party to host that who can then censor them. You really just don't want to use DNS for this.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2383938432",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2400874496,
      "node_id": "IC_kwDOAN28mc6PGnAA",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2400874496",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-08T21:42:44Z",
      "updated_at": "2024-10-08T21:42:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Responded to some of the feedback, but still need to answer more. Since I'm writing a new BIP I'm gonna take this opportunity to define a new callback scheme which allows for wallets to return proof of payment to the initiating application. This is critical for lightning payments initiated by one app if the app itself isn't the recipient of the payment.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2400874496",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2401146136,
      "node_id": "IC_kwDOAN28mc6PHpUY",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2401146136",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T02:28:16Z",
      "updated_at": "2024-10-09T02:28:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Okay, I believe I've addressed all the comments here.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2401146136",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "unlabeled",
      "id": 14701296251,
      "node_id": "UNLE_lADOAN28mc6A-XLTzwAAAANsQ_p7",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14701296251",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-17T15:18:10Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "reviewed",
      "id": 2376955340,
      "node_id": "PRR_kwDOAN28mc6NrXXM",
      "url": null,
      "actor": null,
      "commit_id": "37404d4adaf5ab9108af0cfa04f9b1e9c5dd39ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2376955340",
      "submitted_at": "2024-10-18T04:35:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "reviewed",
      "id": 2379491430,
      "node_id": "PRR_kwDOAN28mc6N1Chm",
      "url": null,
      "actor": null,
      "commit_id": "869b99a4562233553b877e252e442eab62bb6a15",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2379491430",
      "submitted_at": "2024-10-19T14:08:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "reviewed",
      "id": 2380802247,
      "node_id": "PRR_kwDOAN28mc6N6CjH",
      "url": null,
      "actor": null,
      "commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bips/pull/1555/commits/d7c021a10278391580de33f847d443d5fcc1be53\r\n\r\n@dpad85 @robbiehanson what do you think of this? It would be useful to have a prototype implementation of this in Phoenix.",
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2380802247",
      "submitted_at": "2024-10-21T02:54:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "reviewed",
      "id": 2382059689,
      "node_id": "PRR_kwDOAN28mc6N-1ip",
      "url": null,
      "actor": null,
      "commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2382059689",
      "submitted_at": "2024-10-21T13:10:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "reviewed",
      "id": 2439041839,
      "node_id": "PRR_kwDOAN28mc6RYNMv",
      "url": null,
      "actor": null,
      "commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This is coming along nicely. I left a few comments and questions. Please add the missing Copyright section.\r\n\r\nLetâ€™s call this proposal **BIPâ€¯321**.\r\n\r\n",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2439041839",
      "submitted_at": "2024-11-15T21:23:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "commented",
      "id": 2479954843,
      "node_id": "IC_kwDOAN28mc6T0Rub",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2479954843",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T21:26:17Z",
      "updated_at": "2024-11-15T21:26:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "There also have been a few questions and comments recently on this proposal. Some of the points brought up in response  may be useful to retain as footnotes or in the Rationale.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2479954843",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "labeled",
      "id": 15318119774,
      "node_id": "LE_lADOAN28mc6A-XLTzwAAAAORB_Ve",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15318119774",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T21:52:21Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "renamed",
      "id": 15318176931,
      "node_id": "RTE_lADOAN28mc6A-XLTzwAAAAORCNSj",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/15318176931",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T21:56:04Z",
      "rename": {
        "from": "Replace BIP 21 with a new BIP containing information about more modern usage of it",
        "to": "BIPâ€¯321: URI Scheme (Replace BIP 21 with a new BIP containing information about more modern usage of it)"
      }
    },
    {
      "event": "commented",
      "id": 2480109461,
      "node_id": "IC_kwDOAN28mc6T03eV",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2480109461",
      "actor": {
        "login": "vitorpamplona",
        "id": 532031,
        "node_id": "MDQ6VXNlcjUzMjAzMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/532031?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vitorpamplona",
        "html_url": "https://github.com/vitorpamplona",
        "followers_url": "https://api.github.com/users/vitorpamplona/followers",
        "following_url": "https://api.github.com/users/vitorpamplona/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vitorpamplona/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vitorpamplona/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vitorpamplona/subscriptions",
        "organizations_url": "https://api.github.com/users/vitorpamplona/orgs",
        "repos_url": "https://api.github.com/users/vitorpamplona/repos",
        "events_url": "https://api.github.com/users/vitorpamplona/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vitorpamplona/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T23:09:55Z",
      "updated_at": "2024-11-15T23:09:55Z",
      "author_association": "NONE",
      "body": "Any comments on handling multiple invoices to separate receivers initially discussed at https://github.com/lightning/bolts/issues/1111? \r\n\r\nCommon payment (zap) splits in Nostr have 2-3 receivers to be paid at once. Less common ones might have between 5 to 10 invoices. Some extreme cases include up to 100 lightning invoices to be paid. \r\n\r\nThey won't fit in the QR/URI, obviously, but it would be nice to accept what could fit in. ",
      "user": {
        "login": "vitorpamplona",
        "id": 532031,
        "node_id": "MDQ6VXNlcjUzMjAzMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/532031?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vitorpamplona",
        "html_url": "https://github.com/vitorpamplona",
        "followers_url": "https://api.github.com/users/vitorpamplona/followers",
        "following_url": "https://api.github.com/users/vitorpamplona/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vitorpamplona/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vitorpamplona/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vitorpamplona/subscriptions",
        "organizations_url": "https://api.github.com/users/vitorpamplona/orgs",
        "repos_url": "https://api.github.com/users/vitorpamplona/repos",
        "events_url": "https://api.github.com/users/vitorpamplona/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vitorpamplona/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2480109461",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2708440089,
      "node_id": "IC_kwDOAN28mc6hb4QZ",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2708440089",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T18:43:26Z",
      "updated_at": "2025-03-08T18:43:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@vitorpamplona because of the QR thing, I believe the entire thing should be just replaced with some form of P2EP.",
      "user": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2708440089",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "mentioned",
      "id": 16642890959,
      "node_id": "MEE_lADOAN28mc6A-XLTzwAAAAPf_lzP",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16642890959",
      "actor": {
        "login": "vitorpamplona",
        "id": 532031,
        "node_id": "MDQ6VXNlcjUzMjAzMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/532031?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vitorpamplona",
        "html_url": "https://github.com/vitorpamplona",
        "followers_url": "https://api.github.com/users/vitorpamplona/followers",
        "following_url": "https://api.github.com/users/vitorpamplona/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vitorpamplona/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vitorpamplona/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vitorpamplona/subscriptions",
        "organizations_url": "https://api.github.com/users/vitorpamplona/orgs",
        "repos_url": "https://api.github.com/users/vitorpamplona/repos",
        "events_url": "https://api.github.com/users/vitorpamplona/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vitorpamplona/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T18:43:27Z"
    },
    {
      "event": "subscribed",
      "id": 16642890968,
      "node_id": "SE_lADOAN28mc6A-XLTzwAAAAPf_lzY",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16642890968",
      "actor": {
        "login": "vitorpamplona",
        "id": 532031,
        "node_id": "MDQ6VXNlcjUzMjAzMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/532031?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vitorpamplona",
        "html_url": "https://github.com/vitorpamplona",
        "followers_url": "https://api.github.com/users/vitorpamplona/followers",
        "following_url": "https://api.github.com/users/vitorpamplona/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vitorpamplona/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vitorpamplona/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vitorpamplona/subscriptions",
        "organizations_url": "https://api.github.com/users/vitorpamplona/orgs",
        "repos_url": "https://api.github.com/users/vitorpamplona/repos",
        "events_url": "https://api.github.com/users/vitorpamplona/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vitorpamplona/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T18:43:27Z"
    },
    {
      "event": "commented",
      "id": 2708447029,
      "node_id": "IC_kwDOAN28mc6hb581",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2708447029",
      "actor": {
        "login": "vitorpamplona",
        "id": 532031,
        "node_id": "MDQ6VXNlcjUzMjAzMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/532031?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vitorpamplona",
        "html_url": "https://github.com/vitorpamplona",
        "followers_url": "https://api.github.com/users/vitorpamplona/followers",
        "following_url": "https://api.github.com/users/vitorpamplona/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vitorpamplona/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vitorpamplona/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vitorpamplona/subscriptions",
        "organizations_url": "https://api.github.com/users/vitorpamplona/orgs",
        "repos_url": "https://api.github.com/users/vitorpamplona/repos",
        "events_url": "https://api.github.com/users/vitorpamplona/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vitorpamplona/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T19:00:11Z",
      "updated_at": "2025-03-08T19:00:11Z",
      "author_association": "NONE",
      "body": "I don't know about the QR needs, but we found a way for Android apps to receive multiple intents (uris) and pay them all at the same time. \n\nThe app just needs to be aware that multiple calls are part of the same payment. ",
      "user": {
        "login": "vitorpamplona",
        "id": 532031,
        "node_id": "MDQ6VXNlcjUzMjAzMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/532031?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vitorpamplona",
        "html_url": "https://github.com/vitorpamplona",
        "followers_url": "https://api.github.com/users/vitorpamplona/followers",
        "following_url": "https://api.github.com/users/vitorpamplona/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vitorpamplona/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vitorpamplona/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vitorpamplona/subscriptions",
        "organizations_url": "https://api.github.com/users/vitorpamplona/orgs",
        "repos_url": "https://api.github.com/users/vitorpamplona/repos",
        "events_url": "https://api.github.com/users/vitorpamplona/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vitorpamplona/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2708447029",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2708957474,
      "node_id": "IC_kwDOAN28mc6hd2ki",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2708957474",
      "actor": {
        "login": "schildbach",
        "id": 743306,
        "node_id": "MDQ6VXNlcjc0MzMwNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/743306?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/schildbach",
        "html_url": "https://github.com/schildbach",
        "followers_url": "https://api.github.com/users/schildbach/followers",
        "following_url": "https://api.github.com/users/schildbach/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/schildbach/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/schildbach/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/schildbach/subscriptions",
        "organizations_url": "https://api.github.com/users/schildbach/orgs",
        "repos_url": "https://api.github.com/users/schildbach/repos",
        "events_url": "https://api.github.com/users/schildbach/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/schildbach/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-09T16:50:21Z",
      "updated_at": "2025-03-09T16:50:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Regarding describing the status quo, I'd like to add two cents:\r\n\r\n1. Many apps that put Bitcoin URIs into QR codes use an all-uppercase variant of it, in order to save around 30% of QR code size due to the more efficient \"alphanumeric\" encoding. I think this should be mentioned in this BIP, so that apps make sure to register on \"BITCOIN:\" as well (on Android, it's case insensitive anyway), and make sure addresses are lowercased before being passed into Bech32(m) decoding.\r\n\r\n2. On Android, if you launch a \"bitcoin:\"-Intent, apps can return a \"proof of payment\" (a copy of the transaction) in the Intent result. This seems like a much more elegant alternative to the klunky callback approach described in this BIP, so maybe it should at least be mentioned as an alternative. Bitcoin Wallet returns this PoP since 13 years or so.",
      "user": {
        "login": "schildbach",
        "id": 743306,
        "node_id": "MDQ6VXNlcjc0MzMwNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/743306?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/schildbach",
        "html_url": "https://github.com/schildbach",
        "followers_url": "https://api.github.com/users/schildbach/followers",
        "following_url": "https://api.github.com/users/schildbach/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/schildbach/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/schildbach/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/schildbach/subscriptions",
        "organizations_url": "https://api.github.com/users/schildbach/orgs",
        "repos_url": "https://api.github.com/users/schildbach/repos",
        "events_url": "https://api.github.com/users/schildbach/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/schildbach/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2708957474",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "commented",
      "id": 2722873934,
      "node_id": "IC_kwDOAN28mc6iS8JO",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2722873934",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T23:02:03Z",
      "updated_at": "2025-03-13T23:02:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Many apps that put Bitcoin URIs into QR codes use an all-uppercase variant of it, in order to save around 30% of QR code size due to the more efficient \"alphanumeric\" encoding. I think this should be mentioned in this BIP, so that apps make sure to register on \"BITCOIN:\" as well (on Android, it's case insensitive anyway), and make sure addresses are lowercased before being passed into Bech32(m) decoding.\r\n\r\nThis was already implied, but I've added an example.\r\n\r\n> On Android, if you launch a \"bitcoin:\"-Intent, apps can return a \"proof of payment\" (a copy of the transaction) in the Intent result. This seems like a much more elegant alternative to the klunky callback approach described in this BIP, so maybe it should at least be mentioned as an alternative. Bitcoin Wallet returns this PoP since 13 years or so.\r\n\r\nWhile this is great on android, we probably should focus here on cross-platform behavior, and sadly intents are very android-specific. That said, with a PoP URI callback, building an identical UI should be doable, as the URI callback can simply be a deep link back to the calling application which resumes where it left off, no different than if it had received an intent result.\r\n\r\nOkay, I believe I've addressed all pending feedback!",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2722873934",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "reviewed",
      "id": 2686706588,
      "node_id": "PRR_kwDOAN28mc6gI-Oc",
      "url": null,
      "actor": null,
      "commit_id": "dd5093eeb9443572c5d537e37a13b54123d730c0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The last commit reverted the number assignment in the preamble.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2686706588",
      "submitted_at": "2025-03-14T20:25:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    },
    {
      "event": "commented",
      "id": 2743668221,
      "node_id": "IC_kwDOAN28mc6jiQ39",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2743668221",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-21T15:09:46Z",
      "updated_at": "2025-03-21T15:09:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hey, whatâ€™s the next step here? I can make these minor outstanding editorial changes, if that is all thatâ€™s missing.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2743668221",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDA1NmFlNzEwYTY0MjMyODcxYWUwYjY0ZGVlZTk3YWRiOWViNTY0ZGY",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/056ae710a64232871ae0b64deee97adb9eb564df",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/056ae710a64232871ae0b64deee97adb9eb564df",
      "tree": {
        "sha": "98d140721479962f8bd176b52a3442664463fbbe",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/98d140721479962f8bd176b52a3442664463fbbe"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/deae64bfd31f6938253c05392aa355bf6d7e7605",
          "sha": "deae64bfd31f6938253c05392aa355bf6d7e7605",
          "html_url": "https://github.com/bitcoin/bips/commit/deae64bfd31f6938253c05392aa355bf6d7e7605"
        }
      ],
      "message": "Copy BIP 21 into a new BIP 321 with only the header changed",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2025-03-25T00:25:26Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2024-07-13T14:39:51Z"
      },
      "sha": "056ae710a64232871ae0b64deee97adb9eb564df"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDEyMDkxNDNhNDA2M2RiNGIzNTBlOGY0NjNiZDFhYmNiNDM0OWI4NTA",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1209143a4063db4b350e8f463bd1abcb4349b850",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/1209143a4063db4b350e8f463bd1abcb4349b850",
      "tree": {
        "sha": "396d45c978c4e9c9d2ced08243f2d7cabf5a8039",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/396d45c978c4e9c9d2ced08243f2d7cabf5a8039"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/056ae710a64232871ae0b64deee97adb9eb564df",
          "sha": "056ae710a64232871ae0b64deee97adb9eb564df",
          "html_url": "https://github.com/bitcoin/bips/commit/056ae710a64232871ae0b64deee97adb9eb564df"
        }
      ],
      "message": "Update to include newer address types\n\nAdded bech32 and bech32m address types to reflect the newer SegWit and Taproot addresses.\n\nCo-Authored-By: Reese Russell <reese.russell@ymail.com>",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2025-03-25T00:25:26Z"
      },
      "author": {
        "name": "D++",
        "email": "82842780+dplusplus1024@users.noreply.github.com",
        "date": "2022-12-19T04:14:51Z"
      },
      "sha": "1209143a4063db4b350e8f463bd1abcb4349b850"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDYxZmQ1ZTViYjZjNzY3YTJiMjc4NTFkNWY2YmZlMWIxYzIyZTFhOTQ",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94",
      "tree": {
        "sha": "80c6c155bda732c2f1ebe6109b62ef3676380b36",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/80c6c155bda732c2f1ebe6109b62ef3676380b36"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1209143a4063db4b350e8f463bd1abcb4349b850",
          "sha": "1209143a4063db4b350e8f463bd1abcb4349b850",
          "html_url": "https://github.com/bitcoin/bips/commit/1209143a4063db4b350e8f463bd1abcb4349b850"
        }
      ],
      "message": "Update BIP 321 with information about more modern usage of it\n\nAs Bitcoin has grown, the introduction of new address formats\ndescribing new forms of payment instructions has become\nincreasingly fraught with compatibility issues. Not only does there\nexist traditional on-chain addresses, but some recipients wish to\nreceive Lightning (when the sender supports it) or newer formats\nsuch as Silent Payments.\n\nThis has led to increasing use of the BIP 21 query parameters to\nencode further optional payment instructions.\n\nLooking forward, as new payment instructions get adopted, it makes\nmuch more sense to include them in query parameters rather than\nreplace the existing address field, ensuring compatibility with\nsenders and recipients who may or may not be upgraded to support\nall the latest payment instructions.\n\nThis updates BIP 321 to suggest that future address formats do this.\n\nFurther, it updates BIP 321 to allow an empty bitcoin address in\ncases where new payment instructions have moved to becoming\nmandatory. This isn't a backwards-incompatible change any more than\nswitching to a new address format is, so doesn't impact existing\nBIP 21 implementations in a new way, however provides a nice\nconclusion to the query-parameter-based upgrade path - once a form\nof payment instructions has broad adoption, senders can simply drop\nthe existing address field, keeping their existing query parameter\nencoding, rather than replace the existing address field. It also\naddresses the question of what to do if a wallet no longer wishes\nto receive some legacy on-chain address, but has multiple payment\ninstruction formats that they wish to include - deciding which one\nto place in the address field would be a difficult task.\n\nFinally, it defines a new query parameter, the `pop` parameter,\nwhich allows the initiating application to receive callbacks for\nproof of payment completion.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2025-03-25T00:32:56Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2025-03-25T00:23:16Z"
      },
      "sha": "61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16965059115,
      "node_id": "HRFPE_lADOAN28mc6A-XLTzwAAAAPzMkIr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16965059115",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94",
      "commit_url": "https://api.github.com/repos/TheBlueMatt/bips/commits/61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94",
      "created_at": "2025-03-25T00:33:16Z"
    },
    {
      "event": "commented",
      "id": 2749731761,
      "node_id": "IC_kwDOAN28mc6j5ZOx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2749731761",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-25T00:34:03Z",
      "updated_at": "2025-03-25T00:34:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Apologies. I cleaned up the git history and pushed the fixes requested:\r\n\r\n```diff\r\n$ git diff-tree -U1 dd5093e 61fd5e5\r\ndiff --git a/bip-0321.mediawiki b/bip-0321.mediawiki\r\nindex 7d8529f..3262f54 100644\r\n--- a/bip-0321.mediawiki\r\n+++ b/bip-0321.mediawiki\r\n@@ -1,3 +1,3 @@\r\n <pre>\r\n-  BIP: XXXX\r\n+  BIP: 321\r\n   Layer: Applications\r\n@@ -6,6 +6,6 @@\r\n   Comments-Summary: No comments yet.\r\n-  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\r\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0321\r\n   Status: Draft\r\n   Type: Standards Track\r\n-  Created: 2024-07-13\r\n+  Created: 2024-11-15\r\n   License: BSD-2-Clause\r\n@@ -180,2 +180,5 @@ Many QR codes utilize all-uppercase URIs, which should be handled fine\r\n\r\n+A testnet segwit addresses must be included in the `tb` parameter\r\n+ bitcoin:?tb=tb1qghfhmd4zh7ncpmxl3qzhmq566jk8ckq4gafnmg\r\n+\r\n Characters must be URI encoded properly.\r\n@@ -196,2 +199,5 @@ Multiple proof of payment URIs must not appear, even if they are sometimes prefi\r\n\r\n+A testnet segwit addresses must be included in the `tb` parameter, not the `bc` parameter.\r\n+ bitcoin:?bc=tb1qghfhmd4zh7ncpmxl3qzhmq566jk8ckq4gafnmg\r\n+\r\n ==== Proof of Payment ====\r\n```",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#issuecomment-2749731761",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1555"
    },
    {
      "event": "unlabeled",
      "id": 16982220429,
      "node_id": "UNLE_lADOAN28mc6A-XLTzwAAAAP0OB6N",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16982220429",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-25T21:34:00Z",
      "label": {
        "name": "PR Author action required",
        "color": "e99695"
      }
    },
    {
      "event": "review_requested",
      "id": 16982222699,
      "node_id": "RRE_lADOAN28mc6A-XLTzwAAAAP0OCdr",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16982222699",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-25T21:34:14Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_dismissed",
      "id": 16982302398,
      "node_id": "RDE_lADOAN28mc6A-XLTzwAAAAP0OV6-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/16982302398",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-25T21:41:05Z",
      "dismissed_review": {
        "state": "CHANGES_REQUESTED",
        "review_id": 2071479102,
        "dismissal_message": "Outdated",
        "dismissal_commit_id": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKDhjNjRmNzI5YWFmYWM0Y2JjNThlM2E2NzE2ZDYyNWE2MTUzY2E0YTU",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "tree": {
        "sha": "daf32a0f86a898723cc1d08fe0a05bcdc3834f1c",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/daf32a0f86a898723cc1d08fe0a05bcdc3834f1c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94",
          "sha": "61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94",
          "html_url": "https://github.com/bitcoin/bips/commit/61fd5e5bb6c767a2b27851d5f6bfe1b1c22e1a94"
        }
      ],
      "message": "Mark BIP 21 as super sceded by BIP 321",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2025-03-26T13:07:27Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2025-03-26T13:07:27Z"
      },
      "sha": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5"
    },
    {
      "event": "reviewed",
      "id": 2719184846,
      "node_id": "PRR_kwDOAN28mc6iE3fO",
      "url": null,
      "actor": null,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "MaxFangX",
        "id": 7884003,
        "node_id": "MDQ6VXNlcjc4ODQwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7884003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxFangX",
        "html_url": "https://github.com/MaxFangX",
        "followers_url": "https://api.github.com/users/MaxFangX/followers",
        "following_url": "https://api.github.com/users/MaxFangX/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxFangX/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxFangX/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxFangX/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxFangX/orgs",
        "repos_url": "https://api.github.com/users/MaxFangX/repos",
        "events_url": "https://api.github.com/users/MaxFangX/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxFangX/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1555#pullrequestreview-2719184846",
      "submitted_at": "2025-03-27T02:04:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1589973268",
      "pull_request_review_id": 2039339965,
      "id": 1589973268,
      "node_id": "PRRC_kwDOAN28mc5exREU",
      "diff_hunk": "@@ -39,7 +39,7 @@ Elements of the query component may contain characters outside the valid range.\n \n (See also [[#Simpler syntax|a simpler representation of syntax]])\n \n- bitcoinurn     = \"bitcoin:\" bitcoinaddress [ \"?\" bitcoinparams ]\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]",
      "path": "bip-0021.mediawiki",
      "position": null,
      "original_position": 5,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "in_reply_to_id": null,
      "user": {
        "login": "katesalazar",
        "id": 52637275,
        "node_id": "MDQ6VXNlcjUyNjM3Mjc1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52637275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/katesalazar",
        "html_url": "https://github.com/katesalazar",
        "followers_url": "https://api.github.com/users/katesalazar/followers",
        "following_url": "https://api.github.com/users/katesalazar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/katesalazar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/katesalazar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/katesalazar/subscriptions",
        "organizations_url": "https://api.github.com/users/katesalazar/orgs",
        "repos_url": "https://api.github.com/users/katesalazar/repos",
        "events_url": "https://api.github.com/users/katesalazar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/katesalazar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have not been following, but did you consider rejecting empty string after colon, and removing unnecessary interrogation character?\r\n\r\n```suggestion\r\n bitcoinurn     = \"bitcoin:\" ( bitcoinaddress [ \"?\" bitcoinparams ] | bitcoinparams )\r\n```\r\n",
      "created_at": "2024-05-04T11:58:14Z",
      "updated_at": "2024-05-04T11:58:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1589973268",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1589973268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610119143",
      "pull_request_review_id": 2071479102,
      "id": 1610119143,
      "node_id": "PRRC_kwDOAN28mc5f-Hfn",
      "diff_hunk": "@@ -51,14 +51,27 @@ Elements of the query component may contain characters outside the valid range.\n \n Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n \n-The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The rest of the URI is case-sensitive, including the query parameter keys.\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base64 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new addres types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.",
      "path": "bip-0021.mediawiki",
      "position": null,
      "original_position": 18,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nThe bitcoinaddress body MUST be either a Base58Check P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\r\n```",
      "created_at": "2024-05-22T14:37:06Z",
      "updated_at": "2024-05-22T14:54:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1610119143",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610119143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610123462",
      "pull_request_review_id": 2071479102,
      "id": 1610123462,
      "node_id": "PRRC_kwDOAN28mc5f-IjG",
      "diff_hunk": "@@ -51,14 +51,27 @@ Elements of the query component may contain characters outside the valid range.\n \n Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n \n-The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The rest of the URI is case-sensitive, including the query parameter keys.\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base64 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new addres types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n \n === Query Keys ===\n \n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n *label: Label for that address (e.g. name of receiver)\n *address: bitcoin address\n *message: message that describes the transaction to the user ([[#Examples|see examples below]])\n-*(others): optional, for future extensions\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 encodings SHOULD reuse their address format's Human Readable Part as the parameter key.",
      "path": "bip-0021.mediawiki",
      "position": null,
      "original_position": 35,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nNew payment instructions using bech32m as address encoding SHOULD reuse their address format's Human Readable Part as the parameter key.\r\n```",
      "created_at": "2024-05-22T14:39:41Z",
      "updated_at": "2024-05-22T14:54:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1610123462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610123462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610126540",
      "pull_request_review_id": 2071479102,
      "id": 1610126540,
      "node_id": "PRRC_kwDOAN28mc5f-JTM",
      "diff_hunk": "@@ -72,8 +85,8 @@ For example, so long as the majority of users work in BTC units, values should a\n == Rationale ==\n \n ===Payment identifiers, not person identifiers===\n-Current best practices are that a unique address should be used for every transaction.\n-Therefore, a URI scheme should not represent an exchange of personal information, but a one-time payment.\n+Current best practices are that a unique address should be used for every transaction on-chain.",
      "path": "bip-0021.mediawiki",
      "position": null,
      "original_position": 45,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nBest practices are that a unique address should be used for every transaction on-chain.\r\n```",
      "created_at": "2024-05-22T14:41:28Z",
      "updated_at": "2024-05-22T14:54:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1610126540",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610126540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610129107",
      "pull_request_review_id": 2071479102,
      "id": 1610129107,
      "node_id": "PRRC_kwDOAN28mc5f-J7T",
      "diff_hunk": "@@ -72,8 +85,8 @@ For example, so long as the majority of users work in BTC units, values should a\n == Rationale ==\n \n ===Payment identifiers, not person identifiers===\n-Current best practices are that a unique address should be used for every transaction.\n-Therefore, a URI scheme should not represent an exchange of personal information, but a one-time payment.\n+Current best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains on-chain payment data MUST NOT represent an exchange of personal information, but a one-time payment. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.",
      "path": "bip-0021.mediawiki",
      "position": null,
      "original_position": 46,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nTherefore, a URI which contains on-chain payment data MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\r\n```",
      "created_at": "2024-05-22T14:42:59Z",
      "updated_at": "2024-05-22T14:54:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1610129107",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610129107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610134128",
      "pull_request_review_id": 2071479102,
      "id": 1610134128,
      "node_id": "PRRC_kwDOAN28mc5f-LJw",
      "diff_hunk": "@@ -84,8 +97,7 @@ Also, very likely, what he will find are mostly technical specifications - not t\n ==Forward compatibility==\n Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n \n-==Backward compatibility==",
      "path": "bip-0021.mediawiki",
      "position": null,
      "original_position": 54,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems to me that this update should have its own Backward Compatibility section. Also, generally addressing Backward Compatibility is required in a BIP, so removing this section makes the document violates the formatting rules.",
      "created_at": "2024-05-22T14:45:50Z",
      "updated_at": "2024-05-22T15:04:06Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1610134128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1610134128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1621462049",
      "pull_request_review_id": 2089426466,
      "id": 1621462049,
      "node_id": "PRRC_kwDOAN28mc5gpYwh",
      "diff_hunk": "@@ -51,14 +51,27 @@ Elements of the query component may contain characters outside the valid range.\n \n Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n \n-The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The rest of the URI is case-sensitive, including the query parameter keys.\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base64 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new addres types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n \n === Query Keys ===\n \n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n *label: Label for that address (e.g. name of receiver)\n *address: bitcoin address\n *message: message that describes the transaction to the user ([[#Examples|see examples below]])\n-*(others): optional, for future extensions\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 encodings SHOULD reuse their address format's Human Readable Part as the parameter key.",
      "path": "bip-0021.mediawiki",
      "position": null,
      "original_position": 35,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "039f1e7a07edd69fe3bf942c91a1fd31f24d413f",
      "in_reply_to_id": 1610123462,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "They aren't always addresses.",
      "created_at": "2024-05-30T21:48:18Z",
      "updated_at": "2024-05-30T21:48:18Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1621462049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1621462049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679806274",
      "pull_request_review_id": 2180896476,
      "id": 1679806274,
      "node_id": "PRRC_kwDOAN28mc5kH89C",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 11,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Missing License header, and should probably have a Replaces header:\r\n\r\n```suggestion\r\nLicense: ?\r\nReplaces: 21\r\n</pre>\r\n```",
      "created_at": "2024-07-16T17:37:14Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679806274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679806274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679819659",
      "pull_request_review_id": 2180896476,
      "id": 1679819659,
      "node_id": "PRRC_kwDOAN28mc5kIAOL",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+Bitcoin clients MAY display the amount in any format that is not intended to deceive the user.\n+They SHOULD choose a format that is foremost least confusing, and only after that most reasonable given the amount requested.\n+For example, so long as the majority of users work in BTC units, values should always be displayed in BTC by default, even if mBTC or TBC would otherwise be a more logical interpretation of the amount.\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+===Accessibility (URI scheme name)===\n+Should someone from the outside happen to see such a URI, the URI scheme name already gives a description.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 91,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This sentence is confusing. Who is someone from the outside? What is \"such a URI\"?",
      "created_at": "2024-07-16T17:48:57Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679819659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679819659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679820222",
      "pull_request_review_id": 2180896476,
      "id": 1679820222,
      "node_id": "PRRC_kwDOAN28mc5kIAW-",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+Bitcoin clients MAY display the amount in any format that is not intended to deceive the user.\n+They SHOULD choose a format that is foremost least confusing, and only after that most reasonable given the amount requested.\n+For example, so long as the majority of users work in BTC units, values should always be displayed in BTC by default, even if mBTC or TBC would otherwise be a more logical interpretation of the amount.\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+===Accessibility (URI scheme name)===\n+Should someone from the outside happen to see such a URI, the URI scheme name already gives a description.\n+A quick search should then do the rest to help them find the resources needed to make their payment.\n+Other proposed names sound much more cryptic; the chance that someone googles that out of curiosity are much slimmer.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 93,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What is this referring to?",
      "created_at": "2024-07-16T17:49:23Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679820222",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679820222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679824564",
      "pull_request_review_id": 2180896476,
      "id": 1679824564,
      "node_id": "PRRC_kwDOAN28mc5kIBa0",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 8,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Given that this is a fresh proposal, this should probably be Draft:\r\n\r\n```suggestion\r\n  Status: Draft\r\n```",
      "created_at": "2024-07-16T17:53:29Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679824564",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679824564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679825665",
      "pull_request_review_id": 2180896476,
      "id": 1679825665,
      "node_id": "PRRC_kwDOAN28mc5kIBsB",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"making payments\"?\r\n\r\n```suggestion\r\nThis BIP proposes a URI scheme to serve Bitcoin payment requests.\r\n```",
      "created_at": "2024-07-16T17:54:30Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679825665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679825665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679826451",
      "pull_request_review_id": 2180896476,
      "id": 1679826451,
      "node_id": "PRRC_kwDOAN28mc5kIB4T",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 13,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems to me that some of this would fit better in the Motivation, while other parts should probably be in the Abstract.",
      "created_at": "2024-07-16T17:55:14Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679826451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679826451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679833025",
      "pull_request_review_id": 2180896476,
      "id": 1679833025,
      "node_id": "PRRC_kwDOAN28mc5kIDfB",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+Bitcoin clients MAY display the amount in any format that is not intended to deceive the user.\n+They SHOULD choose a format that is foremost least confusing, and only after that most reasonable given the amount requested.\n+For example, so long as the majority of users work in BTC units, values should always be displayed in BTC by default, even if mBTC or TBC would otherwise be a more logical interpretation of the amount.\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+===Accessibility (URI scheme name)===\n+Should someone from the outside happen to see such a URI, the URI scheme name already gives a description.\n+A quick search should then do the rest to help them find the resources needed to make their payment.\n+Other proposed names sound much more cryptic; the chance that someone googles that out of curiosity are much slimmer.\n+Also, very likely, what he will find are mostly technical specifications - not the best introduction to bitcoin.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs can seamlessly support many payment instructions while senders only support legacy instructions. This allows for senders to be able to pay newer recipients while still allowing the use of more modern payment instruction formats.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 99,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This paragraph feels a bit repetitive.\r\n\r\n```suggestion\r\nAs future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs seamlessly support various payment instructions while senders only need to support legacy instructions. This allows for senders to be able to pay newer recipients while still allowing recipients to additionally offer modern payment instruction formats.\r\n```",
      "created_at": "2024-07-16T18:01:19Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679833025",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679833025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679838123",
      "pull_request_review_id": 2180896476,
      "id": 1679838123,
      "node_id": "PRRC_kwDOAN28mc5kIEur",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+Bitcoin clients MAY display the amount in any format that is not intended to deceive the user.\n+They SHOULD choose a format that is foremost least confusing, and only after that most reasonable given the amount requested.\n+For example, so long as the majority of users work in BTC units, values should always be displayed in BTC by default, even if mBTC or TBC would otherwise be a more logical interpretation of the amount.\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+===Accessibility (URI scheme name)===\n+Should someone from the outside happen to see such a URI, the URI scheme name already gives a description.\n+A quick search should then do the rest to help them find the resources needed to make their payment.\n+Other proposed names sound much more cryptic; the chance that someone googles that out of curiosity are much slimmer.\n+Also, very likely, what he will find are mostly technical specifications - not the best introduction to bitcoin.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs can seamlessly support many payment instructions while senders only support legacy instructions. This allows for senders to be able to pay newer recipients while still allowing the use of more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allow for future URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 104,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure why \"future\". Wouldnâ€™t it be allowed by any software implementing this BIP?\r\n\r\n```suggestion\r\nCompared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allows URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\r\n```",
      "created_at": "2024-07-16T18:06:16Z",
      "updated_at": "2024-07-16T18:18:42Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679838123",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679838123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679838727",
      "pull_request_review_id": 2180896476,
      "id": 1679838727,
      "node_id": "PRRC_kwDOAN28mc5kIE4H",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+Bitcoin clients MAY display the amount in any format that is not intended to deceive the user.\n+They SHOULD choose a format that is foremost least confusing, and only after that most reasonable given the amount requested.\n+For example, so long as the majority of users work in BTC units, values should always be displayed in BTC by default, even if mBTC or TBC would otherwise be a more logical interpretation of the amount.\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+===Accessibility (URI scheme name)===\n+Should someone from the outside happen to see such a URI, the URI scheme name already gives a description.\n+A quick search should then do the rest to help them find the resources needed to make their payment.\n+Other proposed names sound much more cryptic; the chance that someone googles that out of curiosity are much slimmer.\n+Also, very likely, what he will find are mostly technical specifications - not the best introduction to bitcoin.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs can seamlessly support many payment instructions while senders only support legacy instructions. This allows for senders to be able to pay newer recipients while still allowing the use of more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allow for future URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\n+\n+Any existing BIP 21 implementation should automatically be fully compliant with this BIP, as the changes only describe existing practice or impact future address format inclusion.\n+\n+== Appendix ==\n+\n+=== Simpler syntax ===\n+\n+This section is non-normative and does not cover all possible syntax.\n+Please see the BNF grammar above for the normative syntax.\n+\n+[foo] means optional, &lt;bar&gt; are placeholders\n+\n+ <nowiki>bitcoin:<address>[?amount=<amount>][?label=<label>][?message=<message>]</nowiki>\n+\n+=== Examples ===\n+\n+Just the address:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W\n+\n+Address with name:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?label=Luke-Jr\n+\n+Request 20.30 BTC to \"Luke-Jr\":\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?amount=20.3&label=Luke-Jr\n+\n+Request 50 BTC with message:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?amount=50&label=Luke-Jr&message=Donation%20for%20project%20xyz\n+\n+Request funds to be paid over lightning to a BOLT 11 invoice with a fallback to on-chain payments:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?lightning=lnbc420bogusinvoice\n+\n+Request funds to be paid over lightning to a BOLT 11 invoice with no fallback:\n+ bitcoin:?lightning=lnbc420bogusinvoice\n+\n+Request funds to be paid over lightning to a BOLT 12 offer with no fallback:\n+ bitcoin:?lno=lno1bogusoffer\n+\n+Request funds to be paid over lightning to a BOLT 12 offer or silent payments address with no fallback:\n+ bitcoin:?lno=lno1bogusoffer&sp=sp1qsilentpayment\n+\n+Request funds to be paid to a silent payments address with no fallback:\n+ bitcoin:?sp=sp1qsilentpayment\n+\n+Request funds to be paid to a silent payments address with a fallback:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?sp=sp1qsilentpayment\n+\n+Some future version that has variables which are (currently) not understood and required and thus invalid:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?req-somethingyoudontunderstand=50&req-somethingelseyoudontget=999\n+\n+Some future version that has variables which are (currently) not understood but not required and thus valid:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?somethingyoudontunderstand=50&somethingelseyoudontget=999\n+\n+Characters must be URI encoded properly.\n+\n+== Reference Implementations ==\n+=== Bitcoin clients ===\n+* Bitcoin-Qt supports the old version of Bitcoin URIs (ie without the req- prefix), with Windows and KDE integration as of commit 70f55355e29c8e45b607e782c5d76609d23cc858.\n+\n+=== Libraries ===\n+* Javascript - https://github.com/bitcoinjs/bip21\n+* Java - https://github.com/SandroMachado/BitcoinPaymentURI\n+* Swift - https://github.com/SandroMachado/BitcoinPaymentURISwift",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 166,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This section seems outdated",
      "created_at": "2024-07-16T18:06:54Z",
      "updated_at": "2024-07-16T18:18:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679838727",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679838727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": 161,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 166,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679839332",
      "pull_request_review_id": 2180896476,
      "id": 1679839332,
      "node_id": "PRRC_kwDOAN28mc5kIFBk",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Did you want to use the exact same title?",
      "created_at": "2024-07-16T18:07:35Z",
      "updated_at": "2024-07-16T18:18:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679839332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679839332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679841811",
      "pull_request_review_id": 2180896476,
      "id": 1679841811,
      "node_id": "PRRC_kwDOAN28mc5kIFoT",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> [â€¦] or for recipients wishing to avoid a standard on-chain fallback [â€¦]\r\n\r\nSome of this last sentence repeats prior specification parts and the rest could probably be in Rationale",
      "created_at": "2024-07-16T18:10:02Z",
      "updated_at": "2024-07-16T18:18:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679841811",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679841811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679844137",
      "pull_request_review_id": 2180896476,
      "id": 1679844137,
      "node_id": "PRRC_kwDOAN28mc5kIGMp",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+Bitcoin clients MAY display the amount in any format that is not intended to deceive the user.\n+They SHOULD choose a format that is foremost least confusing, and only after that most reasonable given the amount requested.\n+For example, so long as the majority of users work in BTC units, values should always be displayed in BTC by default, even if mBTC or TBC would otherwise be a more logical interpretation of the amount.\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+===Accessibility (URI scheme name)===\n+Should someone from the outside happen to see such a URI, the URI scheme name already gives a description.\n+A quick search should then do the rest to help them find the resources needed to make their payment.\n+Other proposed names sound much more cryptic; the chance that someone googles that out of curiosity are much slimmer.\n+Also, very likely, what he will find are mostly technical specifications - not the best introduction to bitcoin.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs can seamlessly support many payment instructions while senders only support legacy instructions. This allows for senders to be able to pay newer recipients while still allowing the use of more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allow for future URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\n+\n+Any existing BIP 21 implementation should automatically be fully compliant with this BIP, as the changes only describe existing practice or impact future address format inclusion.\n+\n+== Appendix ==\n+\n+=== Simpler syntax ===\n+\n+This section is non-normative and does not cover all possible syntax.\n+Please see the BNF grammar above for the normative syntax.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 113,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The section above is \"ABNF grammar\"\r\n\r\n```suggestion\r\nPlease see the ABNF grammar above for the normative syntax.\r\n```",
      "created_at": "2024-07-16T18:12:06Z",
      "updated_at": "2024-07-16T18:18:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679844137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679844137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679846745",
      "pull_request_review_id": 2180896476,
      "id": 1679846745,
      "node_id": "PRRC_kwDOAN28mc5kIG1Z",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 19,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You could perhaps expand a bit more here on how the current usage of BIPâ€¯21 differs from its specification",
      "created_at": "2024-07-16T18:14:39Z",
      "updated_at": "2024-07-16T18:18:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1679846745",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1679846745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792502611",
      "pull_request_review_id": 2355526669,
      "id": 1792502611,
      "node_id": "PRRC_kwDOAN28mc5q12tT",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 11,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679806274,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I cannot assign this document a license given a substantial portion was written by @luke-jr. I'm happy to assign my contributions whatever license he wants for his.",
      "created_at": "2024-10-08T20:59:34Z",
      "updated_at": "2024-10-08T20:59:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1792502611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792502611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792511611",
      "pull_request_review_id": 2355541068,
      "id": 1792511611,
      "node_id": "PRRC_kwDOAN28mc5q1457",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 11,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679806274,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah apologies, BIP 20 is licensed.",
      "created_at": "2024-10-08T21:08:49Z",
      "updated_at": "2024-10-08T21:08:49Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1792511611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792511611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792531416",
      "pull_request_review_id": 2355571904,
      "id": 1792531416,
      "node_id": "PRRC_kwDOAN28mc5q19vY",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+Bitcoin clients MAY display the amount in any format that is not intended to deceive the user.\n+They SHOULD choose a format that is foremost least confusing, and only after that most reasonable given the amount requested.\n+For example, so long as the majority of users work in BTC units, values should always be displayed in BTC by default, even if mBTC or TBC would otherwise be a more logical interpretation of the amount.\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+===Accessibility (URI scheme name)===\n+Should someone from the outside happen to see such a URI, the URI scheme name already gives a description.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 91,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679819659,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I just removed this section. I don't think we need to justify the use of the bitcoin: prefix these days lol.",
      "created_at": "2024-10-08T21:27:31Z",
      "updated_at": "2024-10-08T21:27:31Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1792531416",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792531416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792542686",
      "pull_request_review_id": 2355591952,
      "id": 1792542686,
      "node_id": "PRRC_kwDOAN28mc5q2Afe",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679825665,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Went with This BIP proposes a URI scheme for describing Bitcoin payment receipt information.",
      "created_at": "2024-10-08T21:38:47Z",
      "updated_at": "2024-10-08T21:38:47Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1792542686",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792542686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792702802",
      "pull_request_review_id": 2355828081,
      "id": 1792702802,
      "node_id": "PRRC_kwDOAN28mc5q2nlS",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679839332,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yea, I don't see why we'd change it.",
      "created_at": "2024-10-09T02:25:13Z",
      "updated_at": "2024-10-09T02:25:13Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1792702802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792702802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792703864",
      "pull_request_review_id": 2355831040,
      "id": 1792703864,
      "node_id": "PRRC_kwDOAN28mc5q2n14",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679841811,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This section describes normative behavior so we can't move it (otherwise its not clear you can set the address part empty), not sure which parts are redundant with elsewhere, aside from the ABNF grammar, but I prefer to have it in text as well.",
      "created_at": "2024-10-09T02:26:56Z",
      "updated_at": "2024-10-09T02:26:57Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1792703864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1792703864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1805831866",
      "pull_request_review_id": 2376955340,
      "id": 1805831866,
      "node_id": "PRRC_kwDOAN28mc5ros66",
      "diff_hunk": "@@ -0,0 +1,173 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter who's value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 84,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "37404d4adaf5ab9108af0cfa04f9b1e9c5dd39ad",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\nThe URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\r\n```",
      "created_at": "2024-10-18T04:24:45Z",
      "updated_at": "2024-10-18T04:35:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1805831866",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1805831866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1805835999",
      "pull_request_review_id": 2376955340,
      "id": 1805835999,
      "node_id": "PRRC_kwDOAN28mc5rot7f",
      "diff_hunk": "@@ -0,0 +1,173 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter who's value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once then append the Payment Information to the resulting URI and open it with the default system handler for the given URI.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 86,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "37404d4adaf5ab9108af0cfa04f9b1e9c5dd39ad",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why did you choose to directly append instead of providing the `pop` as a query param? It feels easier to parse to me if the wallet adds the pop as one or multiple query params added to the provided URI, for example:\r\n\r\n- for on-chain payments: `txid=<tx_id>&tx=<hex_encoded_tx>`\r\n- for bolt 11 payments: `preimage=<hex_encoded_payment_preimage>`\r\n- for bolt 12 payments: `preimage=<hex_encoded_payment_preimage>&invoice=lni...`",
      "created_at": "2024-10-18T04:32:19Z",
      "updated_at": "2024-10-18T04:35:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1805835999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1805835999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1805837655",
      "pull_request_review_id": 2376955340,
      "id": 1805837655,
      "node_id": "PRRC_kwDOAN28mc5rouVX",
      "diff_hunk": "@@ -0,0 +1,173 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter who's value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once then append the Payment Information to the resulting URI and open it with the default system handler for the given URI.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.\n+\n+If a wallet will not open the pop scheme (either because it does not support returning payment information for the selected payment method or because it uses a URI scheme which should not be opened) and the parameter was passed as a \"req-pop\" parameter, the wallet MUST NOT initiate payment.\n+\n+For payments made using an on-chain transaction, the Payment Information shall be the full (including witness data) Bitcoin transaction as it was broadcasted to the Bitcoin network, encoded in hex.\n+\n+For payments made using a BOLT 11 invoice (communicated via the `lightning` parameter), the Payment Information shall be the hex-encoded payment preimage.\n+\n+Other payment schemes will define their own Payment Information format. This BIP may be updated from time to time with Payment Information formats for other payment schemes.\n+\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs seamlessly support various payment instructions while senders only need to support legacy instructions. This allows old senders to pay newer recipients which offer more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allows for URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\n+\n+Additionally, this BIP describes the \"pop\" query parameter, which was unused and will be ignored by BIP 21 implementations.\n+\n+Any existing BIP 21 implementation should automatically be fully compliant with this BIP, as the changes only describe existing practice or impact future address format inclusion.\n+\n+== Proof of Payment ==\n+\n+On many mobile operating systems (especially, or any operating system more generally), applications may \"open\" a bitcoin: URI in order to initiate a payment with the user's default wallet application. These payment-initiating applications may wish to learn about the completed payment.\n+\n+For payments completed on-chain, this is largely addressed by having the payment-initiating application monitor the blockchain for payment completion, however for other payment schemes (e.g. lightning), no such global ledger of transactions exists. In that case, proof of payment must be provided via some other mechanism.\n+\n+== Appendix ==\n+\n+=== Simpler syntax ===\n+\n+This section is non-normative and does not cover all possible syntax.\n+Please see the ABNF grammar above for the normative syntax.\n+\n+[foo] means optional, &lt;bar&gt; are placeholders\n+\n+ <nowiki>bitcoin:<address>[?amount=<amount>][?label=<label>][?message=<message>]</nowiki>\n+\n+=== Examples ===",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 135,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "37404d4adaf5ab9108af0cfa04f9b1e9c5dd39ad",
      "in_reply_to_id": null,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A few pop examples would be useful here!",
      "created_at": "2024-10-18T04:35:34Z",
      "updated_at": "2024-10-18T04:35:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1805837655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1805837655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1806997159",
      "pull_request_review_id": 2378934267,
      "id": 1806997159,
      "node_id": "PRRC_kwDOAN28mc5rtJan",
      "diff_hunk": "@@ -0,0 +1,173 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter who's value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once then append the Payment Information to the resulting URI and open it with the default system handler for the given URI.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 86,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "37404d4adaf5ab9108af0cfa04f9b1e9c5dd39ad",
      "in_reply_to_id": 1805835999,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Why did you choose to directly append instead of providing the pop as a query param?\r\n\r\nI originally had it this way, but decide its more generic to have the initiating wallet specify the URI how they want, as they can always specify a URI that ends in `?pop=` and go from there.\r\n\r\n> multiple query params\r\n\r\nMmm, good point, I was thinking looking at something else that, duh, we need a way to expose which payment parameter was used...How about just doing `payment arg=pop` (with a special `onchain` arg if the address was in the uri body). So like it'd be `onchain=hexencodedtx` or `lightning=preimage` or `lno=preimage_and_invoice` (or whatever format we use for standardized bolt 12 pops)? That way its still clear what the PoP came from, it reuses the keys from the original bitcoin URI so its well known where they're gonna be (and we don't have to worry about defining them going forward and making sure things dont conflict) and the initiator can even pass `&pop=` at the end cause `pop=lightning=preimage` is a perfectly valid parameter!",
      "created_at": "2024-10-18T20:40:16Z",
      "updated_at": "2024-10-18T20:40:17Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1806997159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1806997159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1807353667",
      "pull_request_review_id": 2379491430,
      "id": 1807353667,
      "node_id": "PRRC_kwDOAN28mc5rugdD",
      "diff_hunk": "@@ -0,0 +1,202 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 74,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "869b99a4562233553b877e252e442eab62bb6a15",
      "in_reply_to_id": null,
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should we mention [BIP-351](https://github.com/bitcoin/bips/blob/master/bip-0351.mediawiki) Private Payments here, which use the form `pay1qqqqqqqq`?",
      "created_at": "2024-10-19T14:08:14Z",
      "updated_at": "2024-10-19T14:08:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1807353667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1807353667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1808033083",
      "pull_request_review_id": 2380793220,
      "id": 1808033083,
      "node_id": "PRRC_kwDOAN28mc5rxGU7",
      "diff_hunk": "@@ -0,0 +1,173 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*sp: Silent Payment addresses\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter who's value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once then append the Payment Information to the resulting URI and open it with the default system handler for the given URI.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 86,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "37404d4adaf5ab9108af0cfa04f9b1e9c5dd39ad",
      "in_reply_to_id": 1805835999,
      "user": {
        "login": "t-bast",
        "id": 31281497,
        "node_id": "MDQ6VXNlcjMxMjgxNDk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/31281497?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/t-bast",
        "html_url": "https://github.com/t-bast",
        "followers_url": "https://api.github.com/users/t-bast/followers",
        "following_url": "https://api.github.com/users/t-bast/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/t-bast/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/t-bast/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/t-bast/subscriptions",
        "organizations_url": "https://api.github.com/users/t-bast/orgs",
        "repos_url": "https://api.github.com/users/t-bast/repos",
        "events_url": "https://api.github.com/users/t-bast/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/t-bast/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea, that sounds good to me!",
      "created_at": "2024-10-21T02:41:43Z",
      "updated_at": "2024-10-21T02:41:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1808033083",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1808033083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1808793379",
      "pull_request_review_id": 2382059689,
      "id": 1808793379,
      "node_id": "PRRC_kwDOAN28mc5rz_8j",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I want to get feedback on this line. My thinking here is that there may be some link to a bitcoin: URI in, eg, a social media site or some other context where the user might click it, pay, but then doesn't want the callback to open a random website that then will reveal the sender's IP. However, it does limit the utility somewhat. Specifically web apps will be unable to get callbacks directly without registering a URI handler.\r\n\r\nI'm curious if/on what platforms registering a URI handler for a web app is annoying to deal with, and if the tradeoff here makes sense. I strongly dont want to introduce an IP leak because of this, but also there may be some platforms where we really have to.",
      "created_at": "2024-10-21T13:10:55Z",
      "updated_at": "2024-10-21T13:10:55Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1808793379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1808793379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1841336498",
      "pull_request_review_id": 2434704418,
      "id": 1841336498,
      "node_id": "PRRC_kwDOAN28mc5twJCy",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 11,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679806274,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If this `Replaces: 21` then BIP21 could also be updated to `Status: Replaced`.",
      "created_at": "2024-11-13T23:53:34Z",
      "updated_at": "2024-11-13T23:53:35Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1841336498",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1841336498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1841711651",
      "pull_request_review_id": 2435273220,
      "id": 1841711651,
      "node_id": "PRRC_kwDOAN28mc5txkoj",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1808793379,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If IP address leak is the only concern, \"http\" and \"https\" could be allowed with .onion and .i2p hostnames as exception.",
      "created_at": "2024-11-14T07:46:54Z",
      "updated_at": "2024-11-14T07:46:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1841711651",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1841711651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1842803110",
      "pull_request_review_id": 2437057383,
      "id": 1842803110,
      "node_id": "PRRC_kwDOAN28mc5t1vGm",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1808793379,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure, some wallets could implement that, but in general if wallets are going to implement by opening with the system-default handler its pretty unlikely that a onion or .i2p is gonna work, so not sure its even worth calling out.",
      "created_at": "2024-11-14T19:45:39Z",
      "updated_at": "2024-11-14T19:45:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1842803110",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1842803110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1842981014",
      "pull_request_review_id": 2437349704,
      "id": 1842981014,
      "node_id": "PRRC_kwDOAN28mc5t2aiW",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1808793379,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, system default handler then does not make much sense, but a lot of wallets already implement Tor and some also I2P and could handle http(s) themselves.",
      "created_at": "2024-11-14T22:49:04Z",
      "updated_at": "2024-11-14T22:49:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1842981014",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1842981014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1843916677",
      "pull_request_review_id": 2438773298,
      "id": 1843916677,
      "node_id": "PRRC_kwDOAN28mc5t5--F",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1808793379,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yea, I guess I just see no need for a remote call for these callbacks - the whole point of the callbacks is to keep things local, if you're going remote anyway the thing initiating the payment can just ask the recipient if they got it using HTTP...",
      "created_at": "2024-11-15T14:31:07Z",
      "updated_at": "2024-11-15T14:31:07Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1843916677",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1843916677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844169002",
      "pull_request_review_id": 2439041839,
      "id": 1844169002,
      "node_id": "PRRC_kwDOAN28mc5t68kq",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 15,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"Invoice information\" would make sense to me here, or \"payment instructions\", but _receipt_ doesnâ€™t make sense to me here.",
      "created_at": "2024-11-15T16:50:32Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844169002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844169002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844390853",
      "pull_request_review_id": 2439041839,
      "id": 1844390853,
      "node_id": "PRRC_kwDOAN28mc5t7yvF",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 16,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Th Copyright section is missing. Judging from the header:\r\n\r\n```suggestion\r\n\r\n==Copyright==\r\nThis BIP is licensed under the BSD 2-clause license.\r\n\r\n```",
      "created_at": "2024-11-15T19:58:45Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844390853",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844390853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844408078",
      "pull_request_review_id": 2439041839,
      "id": 1844408078,
      "node_id": "PRRC_kwDOAN28mc5t728O",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 53,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Itâ€™s a good change, but please mention the **case-insensitivity** of query parameter keys in the Backwards Compatibility section, since [BIPâ€¯21 specified query parameter keys to be **case-sensitive**](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki#abnf-grammar).",
      "created_at": "2024-11-15T20:08:44Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844408078",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844408078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844416598",
      "pull_request_review_id": 2439041839,
      "id": 1844416598,
      "node_id": "PRRC_kwDOAN28mc5t75BW",
      "diff_hunk": "@@ -0,0 +1,166 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2024-07-13\n+</pre>\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs as well as provide forward-looking guidance on how to incorporate new payment instructions. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Abstract==\n+This BIP proposes a URI scheme for making Bitcoin payments.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+(See also [[#Simpler syntax|a simpler representation of syntax]])\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 57,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "836ef064e433721238f0cddbf95da4b8c0ebe2b9",
      "in_reply_to_id": 1679841811,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Iâ€™m not sure what I exactly meant back then. Either way, itâ€™s not clear to me why this mentions \"After new address types are near-universally supported\". If the receiver wants to only offer specific optional payment methods even while they are not broadly supported, thatâ€™s up to the receiver.\r\n\r\n```suggestion\r\nThe bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. The bitcoinaddress part of the URI MAY be left empty, if there is at least one optional payment instruction provided and the recipient does not want to provide a static on-chain payment method.\r\n```",
      "created_at": "2024-11-15T20:17:57Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844416598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844416598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844436360",
      "pull_request_review_id": 2439041839,
      "id": 1844436360,
      "node_id": "PRRC_kwDOAN28mc5t792I",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 64,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What is the \"address\" query key used for, if all base58, bech32, and bech32m addresses are permitted in the body, and new payment instructions using bech32[m] should use the HRP? Is the intent to provide a fall-back address from the set of addresses permitted in the body, in case the address in the body is not supported by the senderâ€™s client?\r\n\r\nAlternatively, should the body contain the type that is most likely to be supported by the client? Is there a way for the receiver to express which address type theyâ€™d prefer if multiple were provided?\r\n\r\nIf I wanted to express a preference for P2TR, have a P2WPKH fallback, and for people from the last decade also provide a P2PKH address, how would I do that?\r\n\r\n  `bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?address=bc1qp2wpkhaddress?bc=bc1ppaytotaprootaddress`\r\n \r\n  `bitcoin:bc1ppaytotaprootaddress?address=175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W?bc=bc1qp2wpkhaddress`",
      "created_at": "2024-11-15T20:35:29Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844436360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844436360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844481008",
      "pull_request_review_id": 2439041839,
      "id": 1844481008,
      "node_id": "PRRC_kwDOAN28mc5t8Ivw",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 75,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In the discussion on this PR, some reviewers were suggesting using `bc1q` and `bc1p` as parameter keys for native segwit payment instructions. In case that was meant to be proposed here, I wanted to point out that the _human-readable part_ for all native segwit versions is `bc`.\r\n\r\nIf you meant to propose that `bc1q`, `bc1p`, `bc1z`, to be used, this could be described as:\r\n\r\n```suggestion\r\nNew payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's _human-readable part (HRP)_ as the parameter key. As all native segwit outputs share the same HRP,  Bech32m addresses for future native segwit output types SHOULD use the four-character prefix of the address as the parameter key, e.g. `bc1p`, `bc1z`, `bc1r`, etc.\r\n```",
      "created_at": "2024-11-15T20:57:20Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844481008",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844481008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844485383",
      "pull_request_review_id": 2439041839,
      "id": 1844485383,
      "node_id": "PRRC_kwDOAN28mc5t8J0H",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.\n+\n+If a wallet will not open the pop scheme (either because it does not support returning payment information for the selected payment method or because it uses a URI scheme which should not be opened) and the parameter was passed as a \"req-pop\" parameter, the wallet MUST NOT initiate payment.\n+\n+For payments made using an on-chain transaction, the Payment Information shall be the full (including witness data) Bitcoin transaction as it was broadcasted to the Bitcoin network, encoded in hex.\n+\n+For payments made using a BOLT 11 invoice (communicated via the `lightning` parameter), the Payment Information shall be the hex-encoded payment preimage.\n+\n+Other payment schemes will define their own Payment Information format. This BIP may be updated from time to time with Payment Information formats for other payment schemes.\n+\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 106,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Did you mean \"query parameters\" instead of variables here?",
      "created_at": "2024-11-15T21:03:13Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844485383",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844485383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844486773",
      "pull_request_review_id": 2439041839,
      "id": 1844486773,
      "node_id": "PRRC_kwDOAN28mc5t8KJ1",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.\n+\n+If a wallet will not open the pop scheme (either because it does not support returning payment information for the selected payment method or because it uses a URI scheme which should not be opened) and the parameter was passed as a \"req-pop\" parameter, the wallet MUST NOT initiate payment.\n+\n+For payments made using an on-chain transaction, the Payment Information shall be the full (including witness data) Bitcoin transaction as it was broadcasted to the Bitcoin network, encoded in hex.\n+\n+For payments made using a BOLT 11 invoice (communicated via the `lightning` parameter), the Payment Information shall be the hex-encoded payment preimage.\n+\n+Other payment schemes will define their own Payment Information format. This BIP may be updated from time to time with Payment Information formats for other payment schemes.\n+\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs seamlessly support various payment instructions while senders only need to support legacy instructions. This allows old senders to pay newer recipients which offer more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allows for URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 113,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nCompared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m addresses in the `bitcoinaddress` field, and allows for URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\r\n```",
      "created_at": "2024-11-15T21:04:52Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844486773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844486773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844488493",
      "pull_request_review_id": 2439041839,
      "id": 1844488493,
      "node_id": "PRRC_kwDOAN28mc5t8Kkt",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.\n+\n+If a wallet will not open the pop scheme (either because it does not support returning payment information for the selected payment method or because it uses a URI scheme which should not be opened) and the parameter was passed as a \"req-pop\" parameter, the wallet MUST NOT initiate payment.\n+\n+For payments made using an on-chain transaction, the Payment Information shall be the full (including witness data) Bitcoin transaction as it was broadcasted to the Bitcoin network, encoded in hex.\n+\n+For payments made using a BOLT 11 invoice (communicated via the `lightning` parameter), the Payment Information shall be the hex-encoded payment preimage.\n+\n+Other payment schemes will define their own Payment Information format. This BIP may be updated from time to time with Payment Information formats for other payment schemes.\n+\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs seamlessly support various payment instructions while senders only need to support legacy instructions. This allows old senders to pay newer recipients which offer more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allows for URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\n+\n+Additionally, this BIP describes the \"pop\" query parameter, which was unused and will be ignored by BIP 21 implementations.\n+\n+Any existing BIP 21 implementation should automatically be fully compliant with this BIP, as the changes only describe existing practice or impact future address format inclusion.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 117,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As mentioned above, BIP 21 [required](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki#abnf-grammar) query parameters to be case-sensitive\r\n\r\n> The rest of the URI is case-sensitive, including the query parameter keys. \r\n\r\nwhile this proposal allows them to be any case. This should be mentioned in the Backward Compatibility section.",
      "created_at": "2024-11-15T21:07:11Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844488493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844488493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844493692",
      "pull_request_review_id": 2439041839,
      "id": 1844493692,
      "node_id": "PRRC_kwDOAN28mc5t8L18",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.\n+\n+If a wallet will not open the pop scheme (either because it does not support returning payment information for the selected payment method or because it uses a URI scheme which should not be opened) and the parameter was passed as a \"req-pop\" parameter, the wallet MUST NOT initiate payment.\n+\n+For payments made using an on-chain transaction, the Payment Information shall be the full (including witness data) Bitcoin transaction as it was broadcasted to the Bitcoin network, encoded in hex.\n+\n+For payments made using a BOLT 11 invoice (communicated via the `lightning` parameter), the Payment Information shall be the hex-encoded payment preimage.\n+\n+Other payment schemes will define their own Payment Information format. This BIP may be updated from time to time with Payment Information formats for other payment schemes.\n+\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs seamlessly support various payment instructions while senders only need to support legacy instructions. This allows old senders to pay newer recipients which offer more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allows for URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\n+\n+Additionally, this BIP describes the \"pop\" query parameter, which was unused and will be ignored by BIP 21 implementations.\n+\n+Any existing BIP 21 implementation should automatically be fully compliant with this BIP, as the changes only describe existing practice or impact future address format inclusion.\n+\n+== Proof of Payment ==\n+\n+On many mobile operating systems (especially, or any operating system more generally), applications may \"open\" a bitcoin: URI in order to initiate a payment with the user's default wallet application. These payment-initiating applications may wish to learn about the completed payment.\n+\n+For payments completed on-chain, this is largely addressed by having the payment-initiating application monitor the blockchain for payment completion, however for other payment schemes (e.g. lightning), no such global ledger of transactions exists. In that case, proof of payment must be provided via some other mechanism.\n+\n+== Appendix ==\n+\n+=== Simpler syntax ===\n+\n+This section is non-normative and does not cover all possible syntax.\n+Please see the ABNF grammar above for the normative syntax.\n+\n+[foo] means optional, &lt;bar&gt; are placeholders\n+\n+ <nowiki>bitcoin:<address>[?amount=<amount>][?label=<label>][?message=<message>]</nowiki>",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 134,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This section confuses me. It feels like Iâ€™m missing some context. Is this supposed to provide a simplified syntax for some part of the implementers? Who is supposed to use the simplified syntax? Under what circumstances should this syntax be used? What are the trade-offs?",
      "created_at": "2024-11-15T21:10:41Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844493692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844493692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844496680",
      "pull_request_review_id": 2439041839,
      "id": 1844496680,
      "node_id": "PRRC_kwDOAN28mc5t8Mko",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.\n+\n+If a wallet will not open the pop scheme (either because it does not support returning payment information for the selected payment method or because it uses a URI scheme which should not be opened) and the parameter was passed as a \"req-pop\" parameter, the wallet MUST NOT initiate payment.\n+\n+For payments made using an on-chain transaction, the Payment Information shall be the full (including witness data) Bitcoin transaction as it was broadcasted to the Bitcoin network, encoded in hex.\n+\n+For payments made using a BOLT 11 invoice (communicated via the `lightning` parameter), the Payment Information shall be the hex-encoded payment preimage.\n+\n+Other payment schemes will define their own Payment Information format. This BIP may be updated from time to time with Payment Information formats for other payment schemes.\n+\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs seamlessly support various payment instructions while senders only need to support legacy instructions. This allows old senders to pay newer recipients which offer more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allows for URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\n+\n+Additionally, this BIP describes the \"pop\" query parameter, which was unused and will be ignored by BIP 21 implementations.\n+\n+Any existing BIP 21 implementation should automatically be fully compliant with this BIP, as the changes only describe existing practice or impact future address format inclusion.\n+\n+== Proof of Payment ==\n+\n+On many mobile operating systems (especially, or any operating system more generally), applications may \"open\" a bitcoin: URI in order to initiate a payment with the user's default wallet application. These payment-initiating applications may wish to learn about the completed payment.\n+\n+For payments completed on-chain, this is largely addressed by having the payment-initiating application monitor the blockchain for payment completion, however for other payment schemes (e.g. lightning), no such global ledger of transactions exists. In that case, proof of payment must be provided via some other mechanism.\n+\n+== Appendix ==\n+\n+=== Simpler syntax ===\n+\n+This section is non-normative and does not cover all possible syntax.\n+Please see the ABNF grammar above for the normative syntax.\n+\n+[foo] means optional, &lt;bar&gt; are placeholders\n+\n+ <nowiki>bitcoin:<address>[?amount=<amount>][?label=<label>][?message=<message>]</nowiki>\n+\n+=== Examples ===\n+\n+==== URIs ====\n+\n+Just the address:\n+ bitcoin:175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W\n+\n+Address with name:",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 143,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nAddress with recipientâ€™s name as label:\r\n```",
      "created_at": "2024-11-15T21:11:25Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844496680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844496680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844501782",
      "pull_request_review_id": 2439041839,
      "id": 1844501782,
      "node_id": "PRRC_kwDOAN28mc5t8N0W",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 20,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nThis BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based on an earlier document by Nils Schneider.\r\n```",
      "created_at": "2024-11-15T21:15:43Z",
      "updated_at": "2024-11-15T21:23:56Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844501782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844501782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844520348",
      "pull_request_review_id": 2439041839,
      "id": 1844520348,
      "node_id": "PRRC_kwDOAN28mc5t8SWc",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.\n+\n+==== Transfer amount ====\n+\n+If an amount is provided, it MUST be specified in decimal BTC.\n+All amounts MUST contain no commas and use a period (.) as the separating character to separate whole numbers and decimal fractions.\n+I.e. amount=50.00 or amount=50 is treated as 50 BTC, and amount=50,000.00 is invalid.\n+\n+=== Proof of Payment ===\n+\n+The URI MAY include a \"pop\" (or \"req-pop\") parameter whose value can be used to build a URI which the wallet application can, after payment completes, \"open\" to provide proof the payment was completed or other information about the payment.\n+\n+The value of a \"pop\" (or \"req-pop\") parameter shall be a percent-encoded (per RFC 3986 section 2.1) URI prefix. The wallet application, if it supports providing payment information SHOULD percent-decode the provided URI once, append the query parameter key from which the payment instructions used were read, append a single =, and finally append the Payment Information to the resulting URI and open it with the default system handler for the URI. For payment instructions read from the body of the URI, \"onchain\" SHALL be used in place of the key.\n+\n+A wallet MUST validate that the provided URI's scheme is not (case-insensitive) \"http\", \"https\", \"file\", \"javascript\", \"mailto\" or any other scheme which will open in a web browser prior to opening it.\n+\n+If a wallet will not open the pop scheme (either because it does not support returning payment information for the selected payment method or because it uses a URI scheme which should not be opened) and the parameter was passed as a \"req-pop\" parameter, the wallet MUST NOT initiate payment.\n+\n+For payments made using an on-chain transaction, the Payment Information shall be the full (including witness data) Bitcoin transaction as it was broadcasted to the Bitcoin network, encoded in hex.\n+\n+For payments made using a BOLT 11 invoice (communicated via the `lightning` parameter), the Payment Information shall be the hex-encoded payment preimage.\n+\n+Other payment schemes will define their own Payment Information format. This BIP may be updated from time to time with Payment Information formats for other payment schemes.\n+\n+== Rationale ==\n+\n+===Payment identifiers, not person identifiers===\n+Best practices are that a unique address should be used for every transaction on-chain.\n+Therefore, a URI which contains an on-chain payment address MUST NOT represent an exchange of personal information, but a one-time payment instruction. URIs which represent only reusable non-address-reusing payment instructions (like Lightning BOLT12 offers or Silent Payments) MAY be reused as a wallet sees fit.\n+\n+==Forward compatibility==\n+Variables which are prefixed with a req- are considered required.  If a client does not implement any variables which are prefixed with req-, it MUST consider the entire URI invalid.  Any other variables which are not implemented, but which are not prefixed with a req-, can be safely ignored.\n+\n+As future new address types should be added using query parameters rather than the `bitcoinaddress` field, URIs seamlessly support various payment instructions while senders only need to support legacy instructions. This allows old senders to pay newer recipients which offer more modern payment instruction formats.\n+\n+==Backward compatibility==\n+As this BIP is written, several clients already implement a bitcoin: URI scheme similar to this one, however usually without the additional \"req-\" prefix requirement.  Thus, it is recommended that additional variables prefixed with req- not be used in a mission-critical way until a grace period of 6 months from the finalization of this BIP has passed in order to allow client developers to release new versions, and users of old clients to upgrade.\n+\n+Compared to BIP 21, this document describes standard query parameters containing payment instructions, allows bech32 and bech32m `bitcoinaddress` fields, and allows for URIs with an empty `bitcoinaddress` field. Use of bech32 and bech32m `bitcoinaddress` fields were long-since common practice in 2024, and the `lightning` query parameter storing BOLT 11 payment instructions became common practice in the year or three leading up to 2024. Inclusion of standard query parameters was added to provide guidance on query parameter usage going forward.\n+\n+Additionally, this BIP describes the \"pop\" query parameter, which was unused and will be ignored by BIP 21 implementations.\n+\n+Any existing BIP 21 implementation should automatically be fully compliant with this BIP, as the changes only describe existing practice or impact future address format inclusion.\n+\n+== Proof of Payment ==\n+\n+On many mobile operating systems (especially, or any operating system more generally), applications may \"open\" a bitcoin: URI in order to initiate a payment with the user's default wallet application. These payment-initiating applications may wish to learn about the completed payment.\n+\n+For payments completed on-chain, this is largely addressed by having the payment-initiating application monitor the blockchain for payment completion, however for other payment schemes (e.g. lightning), no such global ledger of transactions exists. In that case, proof of payment must be provided via some other mechanism.\n+\n+== Appendix ==\n+\n+=== Simpler syntax ===\n+\n+This section is non-normative and does not cover all possible syntax.\n+Please see the ABNF grammar above for the normative syntax.\n+\n+[foo] means optional, &lt;bar&gt; are placeholders\n+\n+ <nowiki>bitcoin:<address>[?amount=<amount>][?label=<label>][?message=<message>]</nowiki>\n+\n+=== Examples ===\n+\n+==== URIs ====",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 138,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Perhaps it would be good to provide a couple more invalid examples. E.g. a common issue might be the reuse of a query parameter.\r\n\r\nWhat is supposed to happen when e.g. two amounts are provided, or two addresses for the same key? Should that fail, use the first, or use the last value for the same query parameter key?",
      "created_at": "2024-11-15T21:22:50Z",
      "updated_at": "2024-11-15T21:41:09Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1844520348",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844520348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1994363896",
      "pull_request_review_id": 2683465670,
      "id": 1994363896,
      "node_id": "PRRC_kwDOAN28mc5235P4",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 64,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1844436360,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have no idea, it was never defined in BIP 21, so I've just removed it. I've never seen it used.",
      "created_at": "2025-03-13T22:08:43Z",
      "updated_at": "2025-03-13T22:08:43Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1994363896",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1994363896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1994365002",
      "pull_request_review_id": 2683467595,
      "id": 1994365002,
      "node_id": "PRRC_kwDOAN28mc5235hK",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 75,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1844481008,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see nothing wrong with segwit payment instructions (which generally belong in the body anyway) being dont in `bc` (you can have multiple redundant payment instructions as the same query key).",
      "created_at": "2025-03-13T22:10:00Z",
      "updated_at": "2025-03-13T22:10:00Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1994365002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1994365002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1994389385",
      "pull_request_review_id": 2683508040,
      "id": 1994389385,
      "node_id": "PRRC_kwDOAN28mc523_eJ",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 75,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1844481008,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The \"being dont\" throws me off. If you mean that duplicate query keys are fine, I would like to suggest that this is explicitly mentioned, as otherwise some implementers likely would assume that such keys are unique. I would also recommend that some test vector with the duplicate query keys are added to ensure that implementers correctly implement that behavior.",
      "created_at": "2025-03-13T22:41:54Z",
      "updated_at": "2025-03-13T22:41:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1994389385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1994389385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1996211540",
      "pull_request_review_id": 2686706588,
      "id": 1996211540,
      "node_id": "PRRC_kwDOAN28mc52-8VU",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+<pre>\n+  BIP: XXXX",
      "path": "bip-0321.mediawiki",
      "position": null,
      "original_position": 2,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "dd5093eeb9443572c5d537e37a13b54123d730c0",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n  BIP: 321\r\n```",
      "created_at": "2025-03-14T20:06:43Z",
      "updated_at": "2025-03-14T20:25:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1996211540",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1996211540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1996212134",
      "pull_request_review_id": 2686706588,
      "id": 1996212134,
      "node_id": "PRRC_kwDOAN28mc52-8em",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX",
      "path": "bip-0321.mediawiki",
      "position": null,
      "original_position": 7,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "dd5093eeb9443572c5d537e37a13b54123d730c0",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-0321\r\n```",
      "created_at": "2025-03-14T20:06:58Z",
      "updated_at": "2025-03-14T20:25:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1996212134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1996212134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1996224392",
      "pull_request_review_id": 2686706588,
      "id": 1996224392,
      "node_id": "PRRC_kwDOAN28mc52-_eI",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13",
      "path": "bip-0321.mediawiki",
      "position": null,
      "original_position": 10,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "dd5093eeb9443572c5d537e37a13b54123d730c0",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The created date refers to the number assignment. (Perhaps we should also change that in BIP 3, while we are at it.)\r\n\r\n```suggestion\r\n  Created: 2024-11-15\r\n```",
      "created_at": "2025-03-14T20:18:07Z",
      "updated_at": "2025-03-14T20:25:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1996224392",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1996224392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1997695324",
      "pull_request_review_id": 2688782003,
      "id": 1997695324,
      "node_id": "PRRC_kwDOAN28mc53Emlc",
      "diff_hunk": "@@ -0,0 +1,203 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: URI Scheme\n+  Author: Matt Corallo <bip21@bluematt.me>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-07-13\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Abstract==\n+This BIP proposes a URI scheme for describing Bitcoin payment receipt information.\n+\n+==Motivation==\n+The purpose of this URI scheme is to enable users to easily make payments by simply clicking links on webpages or scanning QR Codes.\n+\n+This BIP is a modification of [[bip-0021.mediawiki|BIP 0021]] to add information about the modern usage of bitcoin: URIs (including standard query parameters and modern address types) as well as provide forward-looking guidance on how to incorporate new payment instructions. It further adds an optional extension to provide the payment initiator with proof of payment. BIP 21 was based on BIP 20, which was, in turn based off an earlier document by Nils Schneider.\n+\n+==Specification==\n+\n+=== General rules for handling (important!) ===\n+\n+Bitcoin clients MUST NOT act on URIs without getting the user's authorization.\n+They SHOULD require the user to manually approve each payment individually, though in some cases they MAY allow the user to automatically make this decision.\n+\n+=== Operating system integration ===\n+Graphical bitcoin clients SHOULD register themselves as the handler for the \"bitcoin:\" URI scheme by default, if no other handler is already registered. If there is already a registered handler, they MAY prompt the user to change it once when they first run the client.\n+\n+=== General Format ===\n+\n+Bitcoin URIs follow the general format for URIs as set forth in RFC 3986. The path component consists of a bitcoin address, and the query component provides additional payment options.\n+\n+Elements of the query component may contain characters outside the valid range. These must first be encoded according to UTF-8, and then each octet of the corresponding UTF-8 sequence must be percent-encoded as described in RFC 3986.\n+\n+=== ABNF grammar ===\n+\n+ bitcoinurn     = \"bitcoin:\" [ bitcoinaddress ] [ \"?\" bitcoinparams ]\n+ bitcoinaddress = *base58 / *bech32 / *bech32m\n+ bitcoinparams  = bitcoinparam [ \"&\" bitcoinparams ]\n+ bitcoinparam   = [ amountparam / labelparam / messageparam / responseparam / otherparam / reqparam ]\n+ amountparam    = \"amount=\" *digit [ \".\" *digit ]\n+ labelparam     = \"label=\" *qchar\n+ messageparam   = \"message=\" *qchar\n+ responseparam  = [ \"req-\" ] \"pop=\" *qchar\n+ otherparam     = qchar *qchar [ \"=\" *qchar ]\n+ reqparam       = \"req-\" qchar *qchar [ \"=\" *qchar ]\n+\n+Here, \"qchar\" corresponds to valid characters of an RFC 3986 URI query component, excluding the \"=\" and \"&\" characters, which this BIP takes as separators.\n+\n+The scheme component (\"bitcoin:\") is case-insensitive, and implementations must accept any combination of uppercase and lowercase letters. The query parameter keys are also case-insensitive. Query parameter values and bitcoin address fields may be case-sensitive depending on their content.\n+\n+=== Bitcoin Address ===\n+\n+The bitcoinaddress body MUST be either a base58 P2SH or P2PKH address, bech32 Segwit version 0 address, bech32m Segwit address, or empty. Future address formats SHOULD instead be placed in query keys as optional payment instructions to provide backwards compatibility during upgrade cycles. After new address types are near-universally supported, or for recipients wishing to avoid a standard on-chain fallback, the bitcoinaddress part of the URI MAY be left empty.\n+\n+=== Query Keys ===\n+\n+The following keys are defined generally and apply to any URI regardless of payment instructions:\n+\n+*label: Label for that address (e.g. name of receiver)\n+*address: bitcoin address\n+*message: message that describes the transaction to the user ([[#Examples|see examples below]])\n+*pop: a URI which the Bitcoin Wallet may return to in order to provide the application which initiated the payment with proof that a payment was completed.\n+\n+The following keys are currently defined for payment instructions of various forms:\n+\n+*lightning: Lightning BOLT 11 invoices\n+*lno: Lightning BOLT12 offers\n+*pay: [[bip-0351.mediawiki|BIP 351 Private Payment addresses]]\n+*sp: [[bip-0352.mediawiki|BIP 352 Silent Payment addresses]]\n+\n+New payment instructions using bech32 or bech32m encodings SHOULD reuse their address format's Human Readable Part as the parameter key.",
      "path": "bip-XXXX.mediawiki",
      "position": null,
      "original_position": 75,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "d7c021a10278391580de33f847d443d5fcc1be53",
      "in_reply_to_id": 1844481008,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ha, indeed, I already added examples and explicitly included text on duplicate parameters in the last push because it was obviously underspecified :)",
      "created_at": "2025-03-16T19:58:52Z",
      "updated_at": "2025-03-16T19:58:52Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r1997695324",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1997695324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2015385178",
      "pull_request_review_id": 2719184846,
      "id": 2015385178,
      "node_id": "PRRC_kwDOAN28mc54IFZa",
      "diff_hunk": "@@ -11,6 +11,12 @@\n   Created: 2012-01-29\n </pre>\n \n+=Supersceded by BIP 321=\n+\n+This BIP has been supersceded and replaced with BIP 321. Please see [[bip-0321.mediawiki|BIP 321]] instead.",
      "path": "bip-0021.mediawiki",
      "position": 6,
      "original_position": 6,
      "commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "original_commit_id": "8c64f729aafac4cbc58e3a6716d625a6153ca4a5",
      "in_reply_to_id": null,
      "user": {
        "login": "MaxFangX",
        "id": 7884003,
        "node_id": "MDQ6VXNlcjc4ODQwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7884003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MaxFangX",
        "html_url": "https://github.com/MaxFangX",
        "followers_url": "https://api.github.com/users/MaxFangX/followers",
        "following_url": "https://api.github.com/users/MaxFangX/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MaxFangX/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MaxFangX/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MaxFangX/subscriptions",
        "organizations_url": "https://api.github.com/users/MaxFangX/orgs",
        "repos_url": "https://api.github.com/users/MaxFangX/repos",
        "events_url": "https://api.github.com/users/MaxFangX/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MaxFangX/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "spelling nit for this line and the header: Should be \"superseded\", not \"supersceded\".",
      "created_at": "2025-03-27T02:04:15Z",
      "updated_at": "2025-03-27T02:04:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1555#discussion_r2015385178",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/2015385178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1555"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    }
  ]
}