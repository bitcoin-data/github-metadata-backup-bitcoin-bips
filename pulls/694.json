{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/694",
    "id": 197904105,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3OTA0MTA1",
    "html_url": "https://github.com/bitcoin/bips/pull/694",
    "diff_url": "https://github.com/bitcoin/bips/pull/694.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/694.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/694/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/694/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/694/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
    "number": 694,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Revisions to BIP 174",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Describes the changes to BIP 174 as discussed on the [bitcoin-dev mailing list](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016150.html). There are new tests, updated formatting, and clarifications.",
    "labels": [],
    "created_at": "2018-06-28T02:55:04Z",
    "updated_at": "2019-06-20T18:29:12Z",
    "closed_at": "2018-07-06T08:24:56Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-07-06T08:24:56Z",
    "merge_commit_sha": "507383c9a92dad284907dce9d4889438abfe6063",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "achow101:bip174-rev",
      "ref": "bip174-rev",
      "sha": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45007004,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNzAwNA==",
        "name": "bips",
        "full_name": "achow101/bips",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bips",
        "archive_url": "https://api.github.com/repos/achow101/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bips/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bips/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bips/downloads",
        "events_url": "https://api.github.com/repos/achow101/bips/events",
        "forks_url": "https://api.github.com/repos/achow101/bips/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bips.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bips/languages",
        "merges_url": "https://api.github.com/repos/achow101/bips/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bips.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bips/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bips/tags",
        "teams_url": "https://api.github.com/repos/achow101/bips/teams",
        "trees_url": "https://api.github.com/repos/achow101/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bips.git",
        "hooks_url": "https://api.github.com/repos/achow101/bips/hooks",
        "svn_url": "https://github.com/achow101/bips",
        "homepage": "bitcoin.org",
        "language": "Python",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 13761,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-29T20:30:38Z",
        "created_at": "2015-10-27T00:37:26Z",
        "updated_at": "2022-01-19T00:36:27Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "13d083660e571e27aac1b15f09bbe36fb641a39e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5535,
        "stargazers_count": 8220,
        "watchers_count": 8220,
        "size": 13787,
        "default_branch": "master",
        "open_issues_count": 112,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T12:09:15Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-08-01T09:08:43Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 315,
    "deletions": 266,
    "changed_files": 1,
    "commits": 5,
    "review_comments": 30,
    "comments": 7
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-28T03:04:17Z",
      "updated_at": "2018-06-28T03:04:17Z",
      "source": {
        "issue": {
          "id": 336456382,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3OTA1MTMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13557",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13557/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13557/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13557/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13557",
          "number": 13557,
          "state": "closed",
          "state_reason": null,
          "title": "BIP 174 PSBT Serializations and RPCs",
          "body": "This Pull Request fully implements the [updated](https://github.com/bitcoin/bips/pull/694) BIP 174 specification. It is based upon #13425 which implements the majority of the signing logic.\r\n\r\nBIP 174 specifies a binary transaction format which contains the information necessary for a signer to produce signatures for the transaction and holds the signatures for an input while the input does not have a complete set of signatures.\r\n\r\nThis PR contains structs for PSBT, serialization, and deserialzation code. Some changes to `SignatureData` have been made to support detection of UTXO type and storing public keys.\r\n\r\n***\r\n\r\nMany RPCs have been added to handle PSBTs.\r\n\r\n`walletprocesspsbt` takes a PSBT format transaction, updates the PSBT with any inputs related to this wallet, signs, and finalizes the transaction. There is also an option to not sign and just update.\r\n\r\n`walletcreatefundedpsbt` creates a PSBT from user provided data in the same form as createrawtransaction. It also funds the transaction and takes an options argument in the same form as `fundrawtransaction`. The resulting PSBT is blank with no input or output data filled in. It is analogous to a combination of `createrawtransaction` and `fundrawtransaction`\r\n\r\n`decodepsbt` takes a PSBT and decodes it to JSON. It is analogous to `decoderawtransaction`\r\n\r\n`combinepsbt` takes multiple PSBTs for the same tx and combines them. It is analogous to `combinerawtransaction`\r\n\r\n`finalizepsbt` takes a PSBT and finalizes the inputs. If all inputs are final, it extracts the network serialized transaction and returns that instead of a PSBT unless instructed otherwise.\r\n\r\n`createpsbt` is like `createrawtransaction` but for PSBTs instead of raw transactions.\r\n\r\n`convertpsbt` takes a network serialized transaction and converts it into a psbt. The resulting psbt will lose all signature data and an explicit flag must be set to allow transactions with signature data to be converted.\r\n\r\n***\r\n\r\nThis supersedes #12136",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13557",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13557",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13557.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13557.patch"
          },
          "closed_at": "2018-07-18T18:26:50Z",
          "created_at": "2018-06-28T03:04:17Z",
          "updated_at": "2022-08-16T17:06:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 132684500,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMyNjg0NTAw",
      "url": null,
      "actor": null,
      "commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#pullrequestreview-132684500",
      "submitted_at": "2018-06-28T04:57:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/694"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1707033620,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwNzAzMzYyMA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1707033620",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-28T18:31:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1707041142,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwNzA0MTE0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1707041142",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-28T18:34:32Z"
    },
    {
      "event": "reviewed",
      "id": 133075446,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzMDc1NDQ2",
      "url": null,
      "actor": null,
      "commit_id": "1874991d8bca0bde841c3d4b6ccb4c8ea595c08e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#pullrequestreview-133075446",
      "submitted_at": "2018-06-29T01:41:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/694"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1707679498,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwNzY3OTQ5OA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1707679498",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-29T01:47:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1707682472,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwNzY4MjQ3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1707682472",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-29T01:50:28Z"
    },
    {
      "event": "reviewed",
      "id": 133317029,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzMzE3MDI5",
      "url": null,
      "actor": null,
      "commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#pullrequestreview-133317029",
      "submitted_at": "2018-06-29T17:41:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/694"
    },
    {
      "event": "reviewed",
      "id": 133318403,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzMzE4NDAz",
      "url": null,
      "actor": null,
      "commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#pullrequestreview-133318403",
      "submitted_at": "2018-06-29T17:46:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/694"
    },
    {
      "event": "reviewed",
      "id": 133321657,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzMzIxNjU3",
      "url": null,
      "actor": null,
      "commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#pullrequestreview-133321657",
      "submitted_at": "2018-06-29T17:55:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/694"
    },
    {
      "event": "commented",
      "id": 401431513,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQzMTUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/401431513",
      "actor": {
        "login": "nvk",
        "id": 797193,
        "node_id": "MDQ6VXNlcjc5NzE5Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797193?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nvk",
        "html_url": "https://github.com/nvk",
        "followers_url": "https://api.github.com/users/nvk/followers",
        "following_url": "https://api.github.com/users/nvk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nvk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nvk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nvk/subscriptions",
        "organizations_url": "https://api.github.com/users/nvk/orgs",
        "repos_url": "https://api.github.com/users/nvk/repos",
        "events_url": "https://api.github.com/users/nvk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nvk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-29T18:08:22Z",
      "updated_at": "2018-06-29T18:08:22Z",
      "author_association": "NONE",
      "body": "We will start implementing as soon as this gets merged.\r\nThanks for sorting it out so fast 👍 ",
      "user": {
        "login": "nvk",
        "id": 797193,
        "node_id": "MDQ6VXNlcjc5NzE5Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797193?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nvk",
        "html_url": "https://github.com/nvk",
        "followers_url": "https://api.github.com/users/nvk/followers",
        "following_url": "https://api.github.com/users/nvk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nvk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nvk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nvk/subscriptions",
        "organizations_url": "https://api.github.com/users/nvk/orgs",
        "repos_url": "https://api.github.com/users/nvk/repos",
        "events_url": "https://api.github.com/users/nvk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nvk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#issuecomment-401431513",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1709227596,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwOTIyNzU5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1709227596",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-29T18:11:35Z"
    },
    {
      "event": "reviewed",
      "id": 133407257,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMzNDA3MjU3",
      "url": null,
      "actor": null,
      "commit_id": "63da954bf884957b16d349ca6e9ca30eef3a8a02",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#pullrequestreview-133407257",
      "submitted_at": "2018-06-30T00:20:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/694"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1709739291,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwOTczOTI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1709739291",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-30T00:29:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1716883572,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcxNjg4MzU3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1716883572",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-04T20:23:50Z"
    },
    {
      "event": "commented",
      "id": 402554196,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU1NDE5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/402554196",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-04T20:24:44Z",
      "updated_at": "2018-07-04T20:24:44Z",
      "author_association": "MEMBER",
      "body": "Clarified that keys must match the format. Clarified that combiners may check for inconsistencies in known types.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#issuecomment-402554196",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694"
    },
    {
      "event": "commented",
      "id": 402606853,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjYwNjg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/402606853",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T05:01:30Z",
      "updated_at": "2018-07-05T05:01:30Z",
      "author_association": "MEMBER",
      "body": "@achow101 Ready to merge then?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#issuecomment-402606853",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694"
    },
    {
      "event": "mentioned",
      "id": 1717206910,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTcxNzIwNjkxMA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1717206910",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T05:01:30Z"
    },
    {
      "event": "subscribed",
      "id": 1717206911,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MTcyMDY5MTE=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1717206911",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T05:01:30Z"
    },
    {
      "event": "commented",
      "id": 402812041,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjgxMjA0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/402812041",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:26:12Z",
      "updated_at": "2018-07-05T18:39:45Z",
      "author_association": "NONE",
      "body": "@achow101 I'm having trouble with my deserializer, as far as I can tell, there is no way to tell when the array of input kv maps stops and the array of kv output maps starts?\r\n\r\nwith this psbt I got from the revised bip:\r\n\r\n```\r\n70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f0000008000000080010000800001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f00000080000000800200008000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000\r\n```\r\nmy parser spits out:\r\n```\r\nGLOBAL_UNSIGNED_TX (0)                                                                                 \r\n\t020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000\r\nIN_NON_WITNESS_UTXO (0)\r\n\t0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f618765000000\r\nIN_REDEEM_SCRIPT (4)\r\n\t5221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae\r\nIN_BIP32_DERIVATION (6)\r\n\t029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f: d90c6a4f000000800000008000000080\r\nIN_BIP32_DERIVATION (6)\r\n\t02dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d7: d90c6a4f000000800000008001000080\r\nOUT_WITNESS_SCRIPT (1)\r\n\t00c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e887\r\nUNKNOWN_OUTPUT_TYPE (4)\r\n\t00208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903\r\nUNKNOWN_OUTPUT_TYPE (5)\r\n\t522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae\r\nUNKNOWN_OUTPUT_TYPE (6)\r\n\t023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e73: d90c6a4f000000800000008003000080\r\nUNKNOWN_OUTPUT_TYPE (6)\r\n\t03089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc: d90c6a4f000000800000008002000080\r\n```\r\n\r\nit looks like it see's a zero byte after \r\n\r\n```\r\nIN_BIP32_DERIVATION (6)\r\n\t02dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d7: d90c6a4f000000800000008001000080\r\n```\r\n\r\nat this point my parser assumes the input kv-map has ended, and starts interpreting the new kv-map as the output map. but perhaps this is wrong, since we could be in the second input kv-map in the input kv-map array. given this, as far as I can tell, there's no way to tell when we have switched to the output key value map array? am I missing something?",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#issuecomment-402812041",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694"
    },
    {
      "event": "mentioned",
      "id": 1718730301,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTcxODczMDMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718730301",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:26:12Z"
    },
    {
      "event": "subscribed",
      "id": 1718730302,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MTg3MzAzMDI=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718730302",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:26:12Z"
    },
    {
      "event": "commented",
      "id": 402815965,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjgxNTk2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/402815965",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:40:39Z",
      "updated_at": "2018-07-05T18:40:39Z",
      "author_association": "MEMBER",
      "body": "@jb55 The number of inputs and outputs are specified by the unsigned tx itself. You will need to partially deserialize it to know how many inputs and outputs.\r\n\r\n@luke-jr I'm not sure. There's still discussion on the mailing list about this.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#issuecomment-402815965",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694"
    },
    {
      "event": "mentioned",
      "id": 1718758284,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTcxODc1ODI4NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718758284",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:40:39Z"
    },
    {
      "event": "subscribed",
      "id": 1718758285,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MTg3NTgyODU=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718758285",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:40:39Z"
    },
    {
      "event": "mentioned",
      "id": 1718758287,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTcxODc1ODI4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718758287",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:40:39Z"
    },
    {
      "event": "subscribed",
      "id": 1718758289,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MTg3NTgyODk=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718758289",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:40:39Z"
    },
    {
      "event": "commented",
      "id": 402816107,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjgxNjEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/402816107",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:41:11Z",
      "updated_at": "2018-07-05T18:41:11Z",
      "author_association": "NONE",
      "body": "@achow101 ah right. that makes sense, that was next on my todo. thanks!",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#issuecomment-402816107",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694"
    },
    {
      "event": "mentioned",
      "id": 1718759181,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTcxODc1OTE4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718759181",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:41:11Z"
    },
    {
      "event": "subscribed",
      "id": 1718759183,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MTg3NTkxODM=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1718759183",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T18:41:11Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6YmZhZTE3OTlkM2FjOGU4YzExOGYwZDlmZjc2MmRkNmZlZmM5MWZlMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bfae1799d3ac8e8c118f0d9ff762dd6fefc91fe2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/bfae1799d3ac8e8c118f0d9ff762dd6fefc91fe2",
      "tree": {
        "sha": "239ccd3a0014e32ed70cf33465d6b633da199864",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/239ccd3a0014e32ed70cf33465d6b633da199864"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/71586487532d832ae4a3b0deae797d86ddebe3fc",
          "sha": "71586487532d832ae4a3b0deae797d86ddebe3fc",
          "html_url": "https://github.com/bitcoin/bips/commit/71586487532d832ae4a3b0deae797d86ddebe3fc"
        }
      ],
      "message": "Move global data to per-input and per-output data\n\nChange from a global map with input data to a global k/v pair with input and output data.\n\nAdd new types for finalized scriptSigs and scriptWitnesses.\n\nRedefined types to support new model\n\nUpdated the formatting of the listing",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-07-05T22:27:41Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-06-27T01:07:27Z"
      },
      "sha": "bfae1799d3ac8e8c118f0d9ff762dd6fefc91fe2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NDVkZjQyNDc1OTRkYjM5MWI3MmU3YjJkY2JiNTBhMDliOTBiZTg3Yg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/45df4247594db391b72e7b2dcbb50a09b90be87b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/45df4247594db391b72e7b2dcbb50a09b90be87b",
      "tree": {
        "sha": "c14bf4873596d84d8bf149dca2a756df0492b488",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/c14bf4873596d84d8bf149dca2a756df0492b488"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bfae1799d3ac8e8c118f0d9ff762dd6fefc91fe2",
          "sha": "bfae1799d3ac8e8c118f0d9ff762dd6fefc91fe2",
          "html_url": "https://github.com/bitcoin/bips/commit/bfae1799d3ac8e8c118f0d9ff762dd6fefc91fe2"
        }
      ],
      "message": "Clarify handling of duplicated keys",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-07-05T22:27:41Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-06-27T01:08:10Z"
      },
      "sha": "45df4247594db391b72e7b2dcbb50a09b90be87b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ZjUxNWRhMDU1MjY2YzI1OWU0ZTc3ZmNkNDJhNzFjNjg3ODNmZjk1ZQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f515da055266c259e4e77fcd42a71c68783ff95e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/f515da055266c259e4e77fcd42a71c68783ff95e",
      "tree": {
        "sha": "a6f96afdcd0f477a9ebe346c256e11cd959172a1",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/a6f96afdcd0f477a9ebe346c256e11cd959172a1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/45df4247594db391b72e7b2dcbb50a09b90be87b",
          "sha": "45df4247594db391b72e7b2dcbb50a09b90be87b",
          "html_url": "https://github.com/bitcoin/bips/commit/45df4247594db391b72e7b2dcbb50a09b90be87b"
        }
      ],
      "message": "Add new responsibilities, update responsibility, update extensibility descriptions\n\nAdd updater, transaction finalizer, and transaction extractor roles.\n\nUpdate the description of other roles to clarify\n\nUpdate extensibility section",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-07-05T22:27:41Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-06-22T19:06:33Z"
      },
      "sha": "f515da055266c259e4e77fcd42a71c68783ff95e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ODFjMjBhNjM1ZTBhZjZhNTY5NzdlNzNjZTk0ZmQ1NmI2MzRjYWI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/81c20a635e0af6a56977e73ce94fd56b634cab74",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/81c20a635e0af6a56977e73ce94fd56b634cab74",
      "tree": {
        "sha": "6a92867e57009b0eab05b84ee16469c2db0a0cec",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/6a92867e57009b0eab05b84ee16469c2db0a0cec"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/f515da055266c259e4e77fcd42a71c68783ff95e",
          "sha": "f515da055266c259e4e77fcd42a71c68783ff95e",
          "html_url": "https://github.com/bitcoin/bips/commit/f515da055266c259e4e77fcd42a71c68783ff95e"
        }
      ],
      "message": "Add sections for encoding, file extension, and mime-type",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-07-05T22:27:41Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-06-22T19:07:11Z"
      },
      "sha": "81c20a635e0af6a56977e73ce94fd56b634cab74"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NGZjZDhiZjAwODNiOTYwY2QzMGQ5Mjg5MGNmNzA1YTUzOTRjMGEwZQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "tree": {
        "sha": "2e76ed966ef27431460eea4cfeebb83b706cb1cd",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/2e76ed966ef27431460eea4cfeebb83b706cb1cd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/81c20a635e0af6a56977e73ce94fd56b634cab74",
          "sha": "81c20a635e0af6a56977e73ce94fd56b634cab74",
          "html_url": "https://github.com/bitcoin/bips/commit/81c20a635e0af6a56977e73ce94fd56b634cab74"
        }
      ],
      "message": "Update tests for new serialization",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-07-05T22:27:41Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-06-27T01:08:56Z"
      },
      "sha": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1719143105,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcxOTE0MzEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1719143105",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T22:27:50Z"
    },
    {
      "event": "commented",
      "id": 402871802,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjg3MTgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/402871802",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T22:32:38Z",
      "updated_at": "2018-07-05T22:32:38Z",
      "author_association": "MEMBER",
      "body": "I have added a few changes that clarify that signers must check input txids for non-witness utxos and that a map must be provided for every input and output.\r\n\r\n@luke-jr I think this is ready to be merged.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/694#issuecomment-402871802",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/694"
    },
    {
      "event": "mentioned",
      "id": 1719149175,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTcxOTE0OTE3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1719149175",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T22:32:38Z"
    },
    {
      "event": "subscribed",
      "id": 1719149176,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MTkxNDkxNzY=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1719149176",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-05T22:32:38Z"
    },
    {
      "event": "merged",
      "id": 1719746254,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTcxOTc0NjI1NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1719746254",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "507383c9a92dad284907dce9d4889438abfe6063",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/507383c9a92dad284907dce9d4889438abfe6063",
      "created_at": "2018-07-06T08:24:56Z"
    },
    {
      "event": "closed",
      "id": 1719746257,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTcxOTc0NjI1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1719746257",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-06T08:24:56Z"
    },
    {
      "event": "referenced",
      "id": 1740831932,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE3NDA4MzE5MzI=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1740831932",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b6547234616fd4950034b7f53fb33be637cc43e0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6547234616fd4950034b7f53fb33be637cc43e0",
      "created_at": "2018-07-18T18:26:57Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-11T18:29:02Z",
      "updated_at": "2018-09-11T18:29:02Z",
      "source": {
        "issue": {
          "id": 359166781,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0NzI0MzIz",
          "url": "https://api.github.com/repos/chaincoin/chaincoin/issues/543",
          "repository_url": "https://api.github.com/repos/chaincoin/chaincoin",
          "labels_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/543/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/543/comments",
          "events_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/543/events",
          "html_url": "https://github.com/chaincoin/chaincoin/pull/543",
          "number": 543,
          "state": "closed",
          "state_reason": null,
          "title": "BIP 174 PSCT Serializations and RPCs",
          "body": "This Pull Request fully implements the [updated](https://github.com/bitcoin/bips/pull/694) BIP 174 specification. It is based upon #13425 which implements the majority of the signing logic.\r\n\r\nBIP 174 specifies a binary transaction format which contains the information necessary for a signer to produce signatures for the transaction and holds the signatures for an input while the input does not have a complete set of signatures.\r\n\r\nThis PR contains structs for PSCT, serialization, and deserialzation code. Some changes to `SignatureData` have been made to support detection of UTXO type and storing public keys.\r\n\r\n***\r\n\r\nMany RPCs have been added to handle PSCTs.\r\n\r\n`walletprocesspsct` takes a PSBT format transaction, updates the PSBT with any inputs related to this wallet, signs, and finalizes the transaction. There is also an option to not sign and just update.\r\n\r\n`walletcreatefundedpsct` creates a PSCT from user provided data in the same form as createrawtransaction. It also funds the transaction and takes an options argument in the same form as `fundrawtransaction`. The resulting PSCT is blank with no input or output data filled in. It is analogous to a combination of `createrawtransaction` and `fundrawtransaction`\r\n\r\n`decodepsct` takes a PSCT and decodes it to JSON. It is analogous to `decoderawtransaction`\r\n\r\n`combinepsct` takes multiple PSCTs for the same tx and combines them. It is analogous to `combinerawtransaction`\r\n\r\n`finalizepsct` takes a PSCT and finalizes the inputs. If all inputs are final, it extracts the network serialized transaction and returns that instead of a PSCT unless instructed otherwise.\r\n\r\n`createpsct` is like `createrawtransaction` but for PSCTs instead of raw transactions.\r\n\r\n`convertpsct` takes a network serialized transaction and converts it into a psct. The resulting psct will lose all signature data and an explicit flag must be set to allow transactions with signature data to be converted.\r\n\r\n***\r\n\r\nThis supersedes #12136\r\n",
          "user": {
            "login": "HashUnlimited",
            "id": 26601261,
            "node_id": "MDQ6VXNlcjI2NjAxMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashUnlimited",
            "html_url": "https://github.com/HashUnlimited",
            "followers_url": "https://api.github.com/users/HashUnlimited/followers",
            "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
            "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
            "repos_url": "https://api.github.com/users/HashUnlimited/repos",
            "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/chaincoin/chaincoin/pulls/543",
            "html_url": "https://github.com/chaincoin/chaincoin/pull/543",
            "diff_url": "https://github.com/chaincoin/chaincoin/pull/543.diff",
            "patch_url": "https://github.com/chaincoin/chaincoin/pull/543.patch"
          },
          "closed_at": "2018-09-11T18:29:15Z",
          "created_at": "2018-09-11T18:29:02Z",
          "updated_at": "2018-09-11T18:29:15Z"
        },
        "type": "issue"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198705756",
      "pull_request_review_id": 132684500,
      "id": 198705756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNTc1Ng==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 45,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: contains",
      "created_at": "2018-06-28T04:39:22Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198705756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198705756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198705822",
      "pull_request_review_id": 132684500,
      "id": 198705822,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNTgyMg==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 47,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Specify that it can pick arbitrarily in case of conflicts.",
      "created_at": "2018-06-28T04:39:56Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198705822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198705822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 304,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198705910",
      "pull_request_review_id": 132684500,
      "id": 198705910,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNTkxMA==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.\n \n-===Finalizer===\n+The Combiner does not need to know how to interpret scripts in order to combine PSBTs. It can do so without understanding scripts or the network serialization format.\n \n-The Finalizer must only accept a PSBT.\n-The Finalizer transforms a PSBT into a network serialized transaction.\n+===Input Finalizer===\n \n-For any inputs which are not complete, the Finalizer will emplace an empty scriptSig in the network serialized transaction.\n-For any input which has a complete set of signatures, the Finalizer must attempt to build the complete scriptSig and encode it into the network serialized transaction.\n+The Input Finalizer must only accept a PSBT.\n+For each input, the Input Finalizer determines if the input has enough data to pass validation. If it does, it must construct the scriptSig and scriptWitness and place them into the input key-value map.\n+All other data except the UTXO in the input key-value map should be cleared from the PSBT. The UTXO should be kept to allow Transaction Extractors to verify the final network serialized transaction.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 61,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Specify that it should leave unknown fields untouched (these may serve a similar purpose to UTXOs in extensions).",
      "created_at": "2018-06-28T04:40:55Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198705910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198705910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 313,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198706081",
      "pull_request_review_id": 132684500,
      "id": 198706081,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNjA4MQ==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.\n \n-===Finalizer===\n+The Combiner does not need to know how to interpret scripts in order to combine PSBTs. It can do so without understanding scripts or the network serialization format.\n \n-The Finalizer must only accept a PSBT.\n-The Finalizer transforms a PSBT into a network serialized transaction.\n+===Input Finalizer===\n \n-For any inputs which are not complete, the Finalizer will emplace an empty scriptSig in the network serialized transaction.\n-For any input which has a complete set of signatures, the Finalizer must attempt to build the complete scriptSig and encode it into the network serialized transaction.\n+The Input Finalizer must only accept a PSBT.\n+For each input, the Input Finalizer determines if the input has enough data to pass validation. If it does, it must construct the scriptSig and scriptWitness and place them into the input key-value map.\n+All other data except the UTXO in the input key-value map should be cleared from the PSBT. The UTXO should be kept to allow Transaction Extractors to verify the final network serialized transaction.\n+\n+===Transaction Extractor===\n+\n+The Transaction Extractor must only accept a PSBT.\n+It checks whether all inputs have complete scriptSigs and scriptWitnesses by checking for the presence of <tt>0x05</tt> Finalized scriptSig and <tt>0x06</tt> Finalized scriptWitness typed records. If they do, the Transaction Extractor should construct complete scriptSigs and scriptWitnesses and encode them into network serialized transactions. Otherwise the Extractor must not modify the PSBT.\n+The Extractor should produce a fully valid, network serialized transaction if all inputs are complete.\n+\n+The Transaction Extractor does not need to know how to interpret scripts in order to extract the network serialized transaction. However it may be able to in order to validate the network serialized transaction at the same time.\n+\n+A single entity is likely to be both a Transaction Extractor and an Input Finalizer.\n \n ==Extensibility==\n \n The Partially Signed Transaction format can be extended in the future by adding\n new types for key-value pairs. Backwards compatibilty will still be maintained as those new\n types will be ignored and passed-through by signers which do not know about them.",
      "path": "bip-0174.mediawiki",
      "position": 401,
      "original_position": 77,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps mention that if ever the number of field types may run out, new extensions could start defining multi-byte type identifiers.",
      "created_at": "2018-06-28T04:42:48Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198706081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198706081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 343,
      "original_line": 343,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198706714",
      "pull_request_review_id": 132684500,
      "id": 198706714,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNjcxNA==",
      "diff_hunk": "@@ -322,6 +322,13 @@ The Transaction Extractor does not need to know how to interpret scripts in orde\n \n A single entity is likely to be both a Transaction Extractor and an Input Finalizer.\n \n+==Encoding==\n+\n+A PSBT can be represented in two ways: in binary (as a file) or as a Base64 string using the encoding described in [https://tools.ietf.org/html/rfc4648#section-4 RFC4648].\n+\n+Binary PSBT files should use the <tt>.psbt</tt> file extension.\n+The MIME type <tt>application/psbt</tt> can be used.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 9,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "7276fd15a3f792b768862a4f558f9f646b222e50",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think you can just start using a mime type without registration.\r\n\r\nPractices around mime types are defined in https://tools.ietf.org/html/rfc6838, but I think it may be too early to go through the registration processes. I'm not sure what to do here, but perhaps just write \"A mime type name will be added to this document after blabla\"?",
      "created_at": "2018-06-28T04:48:44Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198706714",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198706714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198706917",
      "pull_request_review_id": 132684500,
      "id": 198706917,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNjkxNw==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 114,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If all witnesses are empty, BIP144 does not permit using extended serialization.",
      "created_at": "2018-06-28T04:50:30Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198706917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198706917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707117",
      "pull_request_review_id": 132684500,
      "id": 198707117,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNzExNw==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 200,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add a note that it may only be present for inputs which spend non-segwit outputs.",
      "created_at": "2018-06-28T04:51:56Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198707117",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707221",
      "pull_request_review_id": 132684500,
      "id": 198707221,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNzIyMQ==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.\n+*** <tt>{transaction}</tt>\n+\n+* Type: Witness UTXO <tt>PSBT_IN_WITNESS_UTXO = 0x01</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x01}</tt>\n+** Value: The entire transaction output in network serialization which the current input spends from.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 206,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add a note that it may only be present for inputs which spend segwit outputs (including P2SH embedded ones).",
      "created_at": "2018-06-28T04:52:48Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198707221",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707378",
      "pull_request_review_id": 132684500,
      "id": 198707378,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNzM3OA==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.\n+*** <tt>{transaction}</tt>\n+\n+* Type: Witness UTXO <tt>PSBT_IN_WITNESS_UTXO = 0x01</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x01}</tt>\n+** Value: The entire transaction output in network serialization which the current input spends from.\n+*** <tt>{serialized transaction output({output value}|<scriptPubKey>)}</tt>\n+\n+* Type: Partial Signature <tt>PSBT_IN_PARTIAL_SIG = 0x02</tt>\n+** Key: The public key which corresponds to this signature.\n+*** <tt>{0x02}|{public key}</tt>\n+** Value: The signature as would be pushed to the stack from a scriptSig or witness.\n+*** <tt>{signature}</tt>\n+\n+* Type: Sighash Type <tt>PSBT_IN_SIGHASH_TYPE = 0x03</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x03}</tt>\n+** Value: The 32-bit unsigned integer specifying the sighash type to be used for this input. Signatures for this input must use the sighash type, finalizers must fail to finalize inputs which have signatures that do not use the sighash type. Signers who cannot produce signatures with the sighash type must not provide a signature.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 218,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"that do not use\" is confusing here. Perhaps \"If present, finalizers must fail to finalize inputs which have signatures that don't match the specified sighash type\" ?",
      "created_at": "2018-06-28T04:54:01Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198707378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707469",
      "pull_request_review_id": 132684500,
      "id": 198707469,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcwNzQ2OQ==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.\n+*** <tt>{transaction}</tt>\n+\n+* Type: Witness UTXO <tt>PSBT_IN_WITNESS_UTXO = 0x01</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x01}</tt>\n+** Value: The entire transaction output in network serialization which the current input spends from.\n+*** <tt>{serialized transaction output({output value}|<scriptPubKey>)}</tt>\n+\n+* Type: Partial Signature <tt>PSBT_IN_PARTIAL_SIG = 0x02</tt>\n+** Key: The public key which corresponds to this signature.\n+*** <tt>{0x02}|{public key}</tt>\n+** Value: The signature as would be pushed to the stack from a scriptSig or witness.\n+*** <tt>{signature}</tt>\n+\n+* Type: Sighash Type <tt>PSBT_IN_SIGHASH_TYPE = 0x03</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x03}</tt>\n+** Value: The 32-bit unsigned integer specifying the sighash type to be used for this input. Signatures for this input must use the sighash type, finalizers must fail to finalize inputs which have signatures that do not use the sighash type. Signers who cannot produce signatures with the sighash type must not provide a signature.\n+*** <tt>{sighash type}</tt>\n+\n+* Type: Redeem Script <tt>PSBT_IN_REDEEM_SCRIPT = 0x04</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x04}</tt>\n+** Value: The redeemScript for this input if it has one.\n+*** <tt>{redeemScript}</tt>\n+\n+* Type: Witness Script <tt>PSBT_IN_WITNESS_SCRIPT = 0x05</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x05}</tt>\n+** Value: The witnessScript for this input if it has one.\n+*** <tt>{witnessScript}</tt>\n+\n+* Type:  BIP 32 Derivation Path <tt>PSBT_IN_BIP32_DERIVATION = 0x06</tt>\n+** Key: The public key\n+*** <tt>{0x06}|{public key}</tt>\n+** Value: The master key fingerprint concatenated with the derivation path of the public key. The derivation path is represented as 32 bit unsigned integer indexes concatenated with each other. This must omit the index of the master key. Public keys are those that will be needed to sign this input.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 236,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe explain that the term 'fingerprint' is used here as defined by BIP32.\r\n\r\nI don't understand \"This must omit the index of the master key\".",
      "created_at": "2018-06-28T04:55:02Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198707469",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198707469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942246",
      "pull_request_review_id": 132966864,
      "id": 198942246,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjI0Ng==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 45,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": 198705756,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-06-28T18:31:09Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942268",
      "pull_request_review_id": 132966898,
      "id": 198942268,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjI2OA==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 47,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": 198705822,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-06-28T18:31:14Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942268",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 304,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942325",
      "pull_request_review_id": 132966965,
      "id": 198942325,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjMyNQ==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.\n \n-===Finalizer===\n+The Combiner does not need to know how to interpret scripts in order to combine PSBTs. It can do so without understanding scripts or the network serialization format.\n \n-The Finalizer must only accept a PSBT.\n-The Finalizer transforms a PSBT into a network serialized transaction.\n+===Input Finalizer===\n \n-For any inputs which are not complete, the Finalizer will emplace an empty scriptSig in the network serialized transaction.\n-For any input which has a complete set of signatures, the Finalizer must attempt to build the complete scriptSig and encode it into the network serialized transaction.\n+The Input Finalizer must only accept a PSBT.\n+For each input, the Input Finalizer determines if the input has enough data to pass validation. If it does, it must construct the scriptSig and scriptWitness and place them into the input key-value map.\n+All other data except the UTXO in the input key-value map should be cleared from the PSBT. The UTXO should be kept to allow Transaction Extractors to verify the final network serialized transaction.\n+\n+===Transaction Extractor===\n+\n+The Transaction Extractor must only accept a PSBT.\n+It checks whether all inputs have complete scriptSigs and scriptWitnesses by checking for the presence of <tt>0x05</tt> Finalized scriptSig and <tt>0x06</tt> Finalized scriptWitness typed records. If they do, the Transaction Extractor should construct complete scriptSigs and scriptWitnesses and encode them into network serialized transactions. Otherwise the Extractor must not modify the PSBT.\n+The Extractor should produce a fully valid, network serialized transaction if all inputs are complete.\n+\n+The Transaction Extractor does not need to know how to interpret scripts in order to extract the network serialized transaction. However it may be able to in order to validate the network serialized transaction at the same time.\n+\n+A single entity is likely to be both a Transaction Extractor and an Input Finalizer.\n \n ==Extensibility==\n \n The Partially Signed Transaction format can be extended in the future by adding\n new types for key-value pairs. Backwards compatibilty will still be maintained as those new\n types will be ignored and passed-through by signers which do not know about them.",
      "path": "bip-0174.mediawiki",
      "position": 401,
      "original_position": 77,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": 198706081,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-28T18:31:25Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942325",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 343,
      "original_line": 343,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942359",
      "pull_request_review_id": 132967000,
      "id": 198942359,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjM1OQ==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 114,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": 198706917,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-06-28T18:31:31Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942390",
      "pull_request_review_id": 132967038,
      "id": 198942390,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjM5MA==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 200,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": 198707117,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-06-28T18:31:36Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942390",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942416",
      "pull_request_review_id": 132967066,
      "id": 198942416,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjQxNg==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.\n+*** <tt>{transaction}</tt>\n+\n+* Type: Witness UTXO <tt>PSBT_IN_WITNESS_UTXO = 0x01</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x01}</tt>\n+** Value: The entire transaction output in network serialization which the current input spends from.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 206,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": 198707221,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-28T18:31:41Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942444",
      "pull_request_review_id": 132967097,
      "id": 198942444,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjQ0NA==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.\n+*** <tt>{transaction}</tt>\n+\n+* Type: Witness UTXO <tt>PSBT_IN_WITNESS_UTXO = 0x01</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x01}</tt>\n+** Value: The entire transaction output in network serialization which the current input spends from.\n+*** <tt>{serialized transaction output({output value}|<scriptPubKey>)}</tt>\n+\n+* Type: Partial Signature <tt>PSBT_IN_PARTIAL_SIG = 0x02</tt>\n+** Key: The public key which corresponds to this signature.\n+*** <tt>{0x02}|{public key}</tt>\n+** Value: The signature as would be pushed to the stack from a scriptSig or witness.\n+*** <tt>{signature}</tt>\n+\n+* Type: Sighash Type <tt>PSBT_IN_SIGHASH_TYPE = 0x03</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x03}</tt>\n+** Value: The 32-bit unsigned integer specifying the sighash type to be used for this input. Signatures for this input must use the sighash type, finalizers must fail to finalize inputs which have signatures that do not use the sighash type. Signers who cannot produce signatures with the sighash type must not provide a signature.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 218,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": 198707378,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-06-28T18:31:45Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942467",
      "pull_request_review_id": 132967130,
      "id": 198942467,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MjQ2Nw==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the witness serialization format as defined in BIP 144. A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from.\n+*** <tt>{transaction}</tt>\n+\n+* Type: Witness UTXO <tt>PSBT_IN_WITNESS_UTXO = 0x01</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x01}</tt>\n+** Value: The entire transaction output in network serialization which the current input spends from.\n+*** <tt>{serialized transaction output({output value}|<scriptPubKey>)}</tt>\n+\n+* Type: Partial Signature <tt>PSBT_IN_PARTIAL_SIG = 0x02</tt>\n+** Key: The public key which corresponds to this signature.\n+*** <tt>{0x02}|{public key}</tt>\n+** Value: The signature as would be pushed to the stack from a scriptSig or witness.\n+*** <tt>{signature}</tt>\n+\n+* Type: Sighash Type <tt>PSBT_IN_SIGHASH_TYPE = 0x03</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x03}</tt>\n+** Value: The 32-bit unsigned integer specifying the sighash type to be used for this input. Signatures for this input must use the sighash type, finalizers must fail to finalize inputs which have signatures that do not use the sighash type. Signers who cannot produce signatures with the sighash type must not provide a signature.\n+*** <tt>{sighash type}</tt>\n+\n+* Type: Redeem Script <tt>PSBT_IN_REDEEM_SCRIPT = 0x04</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x04}</tt>\n+** Value: The redeemScript for this input if it has one.\n+*** <tt>{redeemScript}</tt>\n+\n+* Type: Witness Script <tt>PSBT_IN_WITNESS_SCRIPT = 0x05</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x05}</tt>\n+** Value: The witnessScript for this input if it has one.\n+*** <tt>{witnessScript}</tt>\n+\n+* Type:  BIP 32 Derivation Path <tt>PSBT_IN_BIP32_DERIVATION = 0x06</tt>\n+** Key: The public key\n+*** <tt>{0x06}|{public key}</tt>\n+** Value: The master key fingerprint concatenated with the derivation path of the public key. The derivation path is represented as 32 bit unsigned integer indexes concatenated with each other. This must omit the index of the master key. Public keys are those that will be needed to sign this input.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 236,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "f086dffa3a248133de3fd512583ec4c56d47a6d7",
      "in_reply_to_id": 198707469,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-28T18:31:50Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198942467",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198942467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198943249",
      "pull_request_review_id": 132968106,
      "id": 198943249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MzI0OQ==",
      "diff_hunk": "@@ -322,6 +322,13 @@ The Transaction Extractor does not need to know how to interpret scripts in orde\n \n A single entity is likely to be both a Transaction Extractor and an Input Finalizer.\n \n+==Encoding==\n+\n+A PSBT can be represented in two ways: in binary (as a file) or as a Base64 string using the encoding described in [https://tools.ietf.org/html/rfc4648#section-4 RFC4648].\n+\n+Binary PSBT files should use the <tt>.psbt</tt> file extension.\n+The MIME type <tt>application/psbt</tt> can be used.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 9,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "7276fd15a3f792b768862a4f558f9f646b222e50",
      "in_reply_to_id": 198706714,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-28T18:34:32Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198943249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198943249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198943308",
      "pull_request_review_id": 132968165,
      "id": 198943308,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0MzMwOA==",
      "diff_hunk": "@@ -266,50 +266,68 @@ whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.\n \n-===Finalizer===\n+The Combiner does not need to know how to interpret scripts in order to combine PSBTs. It can do so without understanding scripts or the network serialization format.\n \n-The Finalizer must only accept a PSBT.\n-The Finalizer transforms a PSBT into a network serialized transaction.\n+===Input Finalizer===\n \n-For any inputs which are not complete, the Finalizer will emplace an empty scriptSig in the network serialized transaction.\n-For any input which has a complete set of signatures, the Finalizer must attempt to build the complete scriptSig and encode it into the network serialized transaction.\n+The Input Finalizer must only accept a PSBT.\n+For each input, the Input Finalizer determines if the input has enough data to pass validation. If it does, it must construct the scriptSig and scriptWitness and place them into the input key-value map.\n+All other data except the UTXO in the input key-value map should be cleared from the PSBT. The UTXO should be kept to allow Transaction Extractors to verify the final network serialized transaction.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 61,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "bbfe04cbe85c079bfc5f79bc0b9d02768290d8e3",
      "in_reply_to_id": 198705910,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-28T18:34:41Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r198943308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/198943308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 313,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199033587",
      "pull_request_review_id": 133075446,
      "id": 199033587,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTAzMzU4Nw==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the old serialization format (without witnesses). A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from. This should only be present for inputs which spend non-segwit outputs.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 200,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "1874991d8bca0bde841c3d4b6ccb4c8ea595c08e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "After discussing this more, perhaps it should be legal to include a non-witness UTXO even for witness inputs. The entity that adds the UTXO may not know it's a witness one (especially when it's P2SH embedded). But the entity that does know can always convert a `PSBT_IN_NON_WITNESS_UTXO` into a `PSBT_IN_WITNESS_UTXO` by extracting the right output.",
      "created_at": "2018-06-29T01:41:16Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199033587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199033587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199034474",
      "pull_request_review_id": 133076467,
      "id": 199034474,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTAzNDQ3NA==",
      "diff_hunk": "@@ -106,186 +106,101 @@ The format of each key-value map is as follows:\n | Must be <tt>0x00</tt>.\n |}\n \n-The first byte of each key specifies the type of the key-value pair. Some types are\n-for global fields and other fields are for each input. The only required type in a\n-PSBT is the transaction type, as defined below. All global types that can pertain to both\n-inputs and outputs of a transaction can include data for both inputs and outputs of\n-the transaction. The currently defined global types are as follows:\n+The first byte of each key specifies the type of the key-value pair. There are global types,\n+per-input types, and per-output types.\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Transaction\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization. The scriptSigs and\n-witnesses for each input must be empty unless the input is complete. The transaction\n-must be in the witness serialization format as defined in BIP 144. A PSBT must have\n-a transaction, otherwise it is invalid.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Redeem Script<ref>'''Why are redeem scripts and witness scripts global''' Redeem\n-  scripts and witness scripts are global data to avoid duplication. Instead of specifying\n-  a redeems script and witness script multiple times in inputs that need those scripts,\n-  they are specified once in the global data.</ref>\n-| The hash160 of the redeem script\n-| A redeem script that will be needed to sign a Pay-To-Script-Hash input or is spent\n-to by an output.<ref>'''Why are outputs' redeem scripts and witness scripts included?'''\n-Redeem scripts and witness scripts spent to by an output in this transaction are included\n-so that the user can verify that the transaction they are signing is creating the correct\n-outputs that have the correct redeem and witness scripts. This is best used when the \n-PSBT creator is not trusted by the signers.</ref>\n-| Key: \n-<pre>\n-{0x01}|{hash160}\n-</pre>\n-Value:\n-<pre>\n-{redeem script}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Witness Script\n-| The sha256 hash of the witness script\n-| A witness script that will be needed to sign a Pay-To-Witness-Script-Hash input or is spent\n-to by an output.\n-| Key: \n-<pre>\n-{0x02}|{sha256}\n-</pre>\n-Value:\n-<pre>\n-{witness script}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| BIP 32 Derivation path, public key, and Master Key fingerprint\n-| The public key\n-| The master key fingerprint concatenated with the derivation path of the public key. The\n-derivation path is represented as 32 bit unsigned integer indexes concatenated\n-with each other. This must omit the index of the master key. Public keys can be those that\n-will be needed to sign any type of key hash input or is spent to by an output.\n-| Key: \n-<pre>\n-{0x03}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{master key fingerprint}|{32-bit int}|...|{32-bit int}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Number of inputs provided in the PSBT\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the number of inputs that this PSBT has\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{number of inputs}\n-</pre>\n-|}\n+The currently defined global types are as follows:\n+\n+* Type: Unsigned Transaction <tt>PSBT_GLOBAL_UNSIGNED_TX = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+*** <tt>{0x00}</tt>\n+** Value: The transaction in network serialization. The scriptSigs and witnesses for each input must be empty. The transaction must be in the old serialization format (without witnesses). A PSBT must have a transaction, otherwise it is invalid.\n+*** <tt>{transaction}</tt>\n+** Note: Every PSBT must have a field with this type.\n \n The currently defined per-input types are defined as follows:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller;\n-table-layout: fixed;\"\n-!Number\n-!Name\n-!Key Data\n-!Value Data\n-!Format Example\n-|-\n-| <tt>0x00</tt>\n-| Non-Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The transaction in network serialization format the current input spends from.\n-| Key: \n-<pre>\n-{0x00}\n-</pre>\n-Value:\n-<pre>\n-{transaction}\n-</pre>\n-|-\n-| <tt>0x01</tt>\n-| Witness UTXO\n-| None. The key must only contain the 1 byte type.\n-| The entire transaction output in network serialization which the current input spends from.\n-| Key: \n-<pre>\n-{0x01}\n-</pre>\n-Value:\n-<pre>\n-{serialized transaction output({output value}|<scriptPubKey>)}\n-</pre>\n-|-\n-| <tt>0x02</tt>\n-| Partial Signature\n-| The public key which corresponds to this signature.\n-| The signature as would be pushed to the stack from a scriptSig or witness.\n-| Key: \n-<pre>\n-{0x02}|{public key}\n-</pre>\n-Value:\n-<pre>\n-{signature}\n-</pre>\n-|-\n-| <tt>0x03</tt>\n-| Sighash Type\n-| None. The key must only contain the 1 byte type.\n-| The 32-bit unsigned integer recommending a sighash type to be used for this input.\n-The sighash type is only a recommendation and the signer does not need to use\n-the sighash type specified.\n-| Key: \n-<pre>\n-{0x03}\n-</pre>\n-Value:\n-<pre>\n-{sighash type}\n-</pre>\n-|-\n-| <tt>0x04</tt>\n-| Input index\n-| None. The key must only contain the 1 byte type.\n-| A compact size unsigned integer representing the 0-based index of this input. This field\n-is optional to allow for completed inputs to be skipped without needing a separator byte.\n-If one input has this type, then all inputs must have it.\n-| Key: \n-<pre>\n-{0x04}\n-</pre>\n-Value:\n-<pre>\n-{input index}\n-</pre>\n-|}\n+* Type: Non-Witness UTXO <tt>PSBT_IN_NON_WITNESS_UTXO = 0x00</tt>\n+** Key: None. The key must only contain the 1 byte type.\n+***<tt>{0x00}</tt>\n+** Value: The transaction in network serialization format the current input spends from. This should only be present for inputs which spend non-segwit outputs.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 200,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "1874991d8bca0bde841c3d4b6ccb4c8ea595c08e",
      "in_reply_to_id": 199033587,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-29T01:50:28Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199034474",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199034474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199232318",
      "pull_request_review_id": 133317029,
      "id": 199232318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTIzMjMxOA==",
      "diff_hunk": "@@ -339,56 +260,82 @@ pass those key-value pairs through when re-serializing the transaction.\n \n ===Handling Duplicated Keys===\n \n-Keys within each scope should never be duplicated; all keys in the format are unique. However implementors\n-will still need to handle events where keys are duplicated, either duplicated in the transaction\n-itself or when combining transactions with duplicated fields. If duplicated keys are\n-encountered, the software may choose to use any of the values corresponding to that key.\n+Keys within each scope should never be duplicated; all keys in the format are unique. PSBTs containing duplicate keys are invalid. However implementors\n+will still need to handle events where keys are duplicated when combining transactions with duplicated fields. In this event, the software may choose\n+whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n-The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The resulting PSBT must contain all of the key-value pairs from each of the PSBTs.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification. It can pick arbitrarily when conflicts occur.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.",
      "path": "bip-0174.mediawiki",
      "position": 364,
      "original_position": 356,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps add that a Combiner is allowed to detect inconsistencies in known fields when combining, but cannot do this for unknown fields.",
      "created_at": "2018-06-29T17:41:59Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199232318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199232318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199233392",
      "pull_request_review_id": 133318403,
      "id": 199233392,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTIzMzM5Mg==",
      "diff_hunk": "@@ -339,56 +260,82 @@ pass those key-value pairs through when re-serializing the transaction.\n \n ===Handling Duplicated Keys===\n \n-Keys within each scope should never be duplicated; all keys in the format are unique. However implementors\n-will still need to handle events where keys are duplicated, either duplicated in the transaction\n-itself or when combining transactions with duplicated fields. If duplicated keys are\n-encountered, the software may choose to use any of the values corresponding to that key.\n+Keys within each scope should never be duplicated; all keys in the format are unique. PSBTs containing duplicate keys are invalid. However implementors\n+will still need to handle events where keys are duplicated when combining transactions with duplicated fields. In this event, the software may choose\n+whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n-The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The resulting PSBT must contain all of the key-value pairs from each of the PSBTs.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification. It can pick arbitrarily when conflicts occur.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.\n+\n+The Combiner does not need to know how to interpret scripts in order to combine PSBTs. It can do so without understanding scripts or the network serialization format.\n+\n+===Input Finalizer===\n+\n+The Input Finalizer must only accept a PSBT.\n+For each input, the Input Finalizer determines if the input has enough data to pass validation. If it does, it must construct the scriptSig and scriptWitness and place them into the input key-value map.\n+All other data except the UTXO and unknown fields in the input key-value map should be cleared from the PSBT. The UTXO should be kept to allow Transaction Extractors to verify the final network serialized transaction.\n+\n+===Transaction Extractor===\n+\n+The Transaction Extractor must only accept a PSBT.\n+It checks whether all inputs have complete scriptSigs and scriptWitnesses by checking for the presence of <tt>0x05</tt> Finalized scriptSig and <tt>0x06</tt> Finalized scriptWitness typed records. If they do, the Transaction Extractor should construct complete scriptSigs and scriptWitnesses and encode them into network serialized transactions. Otherwise the Extractor must not modify the PSBT.\n+The Extractor should produce a fully valid, network serialized transaction if all inputs are complete.\n+\n+The Transaction Extractor does not need to know how to interpret scripts in order to extract the network serialized transaction. However it may be able to in order to validate the network serialized transaction at the same time.\n \n-===Finalizer===\n+A single entity is likely to be both a Transaction Extractor and an Input Finalizer.\n \n-The Finalizer must only accept a PSBT.\n-The Finalizer transforms a PSBT into a network serialized transaction.\n+==Encoding==\n \n-For any inputs which are not complete, the Finalizer will emplace an empty scriptSig in the network serialized transaction.\n-For any input which has a complete set of signatures, the Finalizer must attempt to build the complete scriptSig and encode it into the network serialized transaction.\n+A PSBT can be represented in two ways: in binary (as a file) or as a Base64 string using the encoding described in [https://tools.ietf.org/html/rfc4648#section-4 RFC4648].\n+\n+Binary PSBT files should use the <tt>.psbt</tt> file extension.\n+A MIME type name will be added to this document once one hs been registered.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 386,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: hs",
      "created_at": "2018-06-29T17:46:04Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199233392",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199233392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199235957",
      "pull_request_review_id": 133321657,
      "id": 199235957,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTIzNTk1Nw==",
      "diff_hunk": "@@ -522,10 +506,14 @@ Any data types, their associated scope and BIP number must be defined here\n !BIP Number\n |-\n | Global\n-| 0,1,2,3,4\n+| 0",
      "path": "bip-0174.mediawiki",
      "position": 620,
      "original_position": 607,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could this be written as a table that includes the name or one-line description of the field? I expect that needing looking things up across BIPs may end up being a pain.",
      "created_at": "2018-06-29T17:55:48Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199235957",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199235957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 517,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199240334",
      "pull_request_review_id": 133327203,
      "id": 199240334,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI0MDMzNA==",
      "diff_hunk": "@@ -339,56 +260,82 @@ pass those key-value pairs through when re-serializing the transaction.\n \n ===Handling Duplicated Keys===\n \n-Keys within each scope should never be duplicated; all keys in the format are unique. However implementors\n-will still need to handle events where keys are duplicated, either duplicated in the transaction\n-itself or when combining transactions with duplicated fields. If duplicated keys are\n-encountered, the software may choose to use any of the values corresponding to that key.\n+Keys within each scope should never be duplicated; all keys in the format are unique. PSBTs containing duplicate keys are invalid. However implementors\n+will still need to handle events where keys are duplicated when combining transactions with duplicated fields. In this event, the software may choose\n+whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n-The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The resulting PSBT must contain all of the key-value pairs from each of the PSBTs.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification. It can pick arbitrarily when conflicts occur.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.",
      "path": "bip-0174.mediawiki",
      "position": 364,
      "original_position": 356,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "in_reply_to_id": 199232318,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-29T18:12:17Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199240334",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199240334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 311,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199240358",
      "pull_request_review_id": 133327232,
      "id": 199240358,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI0MDM1OA==",
      "diff_hunk": "@@ -339,56 +260,82 @@ pass those key-value pairs through when re-serializing the transaction.\n \n ===Handling Duplicated Keys===\n \n-Keys within each scope should never be duplicated; all keys in the format are unique. However implementors\n-will still need to handle events where keys are duplicated, either duplicated in the transaction\n-itself or when combining transactions with duplicated fields. If duplicated keys are\n-encountered, the software may choose to use any of the values corresponding to that key.\n+Keys within each scope should never be duplicated; all keys in the format are unique. PSBTs containing duplicate keys are invalid. However implementors\n+will still need to handle events where keys are duplicated when combining transactions with duplicated fields. In this event, the software may choose\n+whichever value it wishes.\n \n ==Responsibilities==\n \n-Using the transaction format involves many different responsibilities. These responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n+Using the transaction format involves many different responsibilities. Multiple responsibilities can be handled by a single entity, but each responsibility is specialized in what it should be capable of doing.\n \n ===Creator===\n \n-The Creator must be capable of accepting either a network serialized transaction, or a PSBT.\n-The Creator can either produce a new PSBT, or update the provided PSBT.\n-For any scriptSigs which are non-final, the Creator will provide an empty scriptSig and input fields with information from the scriptSig, if any.\n-If possible,  the Creator should also look for any required redeemScripts and witnesScripts and add those to the global data section of the PSBT.\n-The Creator should also provide any related UTXOs that it knows about.\n+The Creator creates a new PSBT. It must create an unsigned transaction and place it in the PSBT.\n+The Creator must create empty input fields.\n+\n+===Updater===\n+\n+The Updater must only accept a PSBT.\n+The Updater adds information to the PSBT that it has access to. If it has the UTXO for an input, it should add it to the PSBT.\n+The Updater should also add redeemScripts, witnessScripts, and BIP 32 derivation paths to the input and output data if it knows them.\n+\n+A single entity is likely to be both a Creator and Updater.\n \n ===Signer===\n \n The Signer must only accept a PSBT.\n The Signer must only use the UTXOs provided in the PSBT to produce signatures for inputs.\n-The Signer should not need require any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer should not need any additional data sources, as all necessary information is provided in the PSBT format.\n+The Signer must only add data to a PSBT.\n Any signatures created by the Signer must be added as a \"Partial Signature\" key-value pair for the respective input it relates to.\n+If a Signer cannot sign a transaction, it must not add a Partial Signature.\n \n The Signer can additionally compute the addresses and values being sent, and the transaction fee,  optionally showing this data to the user as a confirmation of intent and the consequences of signing the PSBT.\n \n+Signers do not need to sign for all possible input types. For example, a signer may choose to only sign only Segwit inputs.\n+\n+A single entity is likely to be both a Signer and an Updater as it can update a PSBT with necessary information prior to signing it.\n+\n ===Combiner===\n \n The Combiner can accept 1 or many PSBTs.\n The Combiner must merge them into one PSBT (if possible), or fail.\n-The resulting PSBT must contains all of the key-value pairs from each of the PSBTs.\n-The Combined must remove any duplicate key-value pairs, in accordance with the specification.\n+The resulting PSBT must contain all of the key-value pairs from each of the PSBTs.\n+The Combiner must remove any duplicate key-value pairs, in accordance with the specification. It can pick arbitrarily when conflicts occur.\n+A Combiner must not combine two different PSBTs. PSBTs can be uniquely identified by <tt>0x00</tt> global transaction typed key-value pair.\n+\n+The Combiner does not need to know how to interpret scripts in order to combine PSBTs. It can do so without understanding scripts or the network serialization format.\n+\n+===Input Finalizer===\n+\n+The Input Finalizer must only accept a PSBT.\n+For each input, the Input Finalizer determines if the input has enough data to pass validation. If it does, it must construct the scriptSig and scriptWitness and place them into the input key-value map.\n+All other data except the UTXO and unknown fields in the input key-value map should be cleared from the PSBT. The UTXO should be kept to allow Transaction Extractors to verify the final network serialized transaction.\n+\n+===Transaction Extractor===\n+\n+The Transaction Extractor must only accept a PSBT.\n+It checks whether all inputs have complete scriptSigs and scriptWitnesses by checking for the presence of <tt>0x05</tt> Finalized scriptSig and <tt>0x06</tt> Finalized scriptWitness typed records. If they do, the Transaction Extractor should construct complete scriptSigs and scriptWitnesses and encode them into network serialized transactions. Otherwise the Extractor must not modify the PSBT.\n+The Extractor should produce a fully valid, network serialized transaction if all inputs are complete.\n+\n+The Transaction Extractor does not need to know how to interpret scripts in order to extract the network serialized transaction. However it may be able to in order to validate the network serialized transaction at the same time.\n \n-===Finalizer===\n+A single entity is likely to be both a Transaction Extractor and an Input Finalizer.\n \n-The Finalizer must only accept a PSBT.\n-The Finalizer transforms a PSBT into a network serialized transaction.\n+==Encoding==\n \n-For any inputs which are not complete, the Finalizer will emplace an empty scriptSig in the network serialized transaction.\n-For any input which has a complete set of signatures, the Finalizer must attempt to build the complete scriptSig and encode it into the network serialized transaction.\n+A PSBT can be represented in two ways: in binary (as a file) or as a Base64 string using the encoding described in [https://tools.ietf.org/html/rfc4648#section-4 RFC4648].\n+\n+Binary PSBT files should use the <tt>.psbt</tt> file extension.\n+A MIME type name will be added to this document once one hs been registered.",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 386,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "in_reply_to_id": 199233392,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2018-06-29T18:12:22Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199240358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199240358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 330,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199240393",
      "pull_request_review_id": 133327270,
      "id": 199240393,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI0MDM5Mw==",
      "diff_hunk": "@@ -522,10 +506,14 @@ Any data types, their associated scope and BIP number must be defined here\n !BIP Number\n |-\n | Global\n-| 0,1,2,3,4\n+| 0",
      "path": "bip-0174.mediawiki",
      "position": 620,
      "original_position": 607,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "414193c9000e0c616548c14d45c7d00571bcd2f4",
      "in_reply_to_id": 199235957,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-29T18:12:29Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199240393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199240393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 517,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199305712",
      "pull_request_review_id": 133407257,
      "id": 199305712,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMwNTcxMg==",
      "diff_hunk": "@@ -408,93 +356,130 @@ able to be unserialized by an unserializer for the PSBT format.\n \n ==Test Vectors==\n \n-The following test vectors are done with keys derived from the following master private key. Keypaths and individual private keys will be specified when necessary\n+The following are invalid PSBTs:\n \n-<pre>\n-tprv8ZgxMBicQKsPdHrvvmuEXXZ7f5EheFqshqVmtPjeLLMjqwrWbSeuGDcgJU1icTHtLjYiGewa5zcMScbGSRR8AqB8A5wvB3XRdNYBDMhXpBS\n-</pre>\n+* Case: Network transaction, not PSBT format\n+** Bytes in Hex: <pre>0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300</pre>\n+** Base64 String: <pre>AgAAAAEmgXE3Ht/yhek3re6ks3t4AAwFZsuzrWRkFxPKQhcb9gAAAABqRzBEAiBwsiRRI+a/R01gxbUMBD1MaRpdJDXwmjSnZiqdwlF5CgIgATKcqdrPKAvfMHQOwDkEIkIsgctFg5RXrrdvwS7dlbMBIQJlfRGNM1e44PTCzUbbezn22cONmnCry5st5dyNv+TOMf7///8C09/1BQAAAAAZdqkU0MWZA8W6woaHYOkP1SGkZlqnZSCIrADh9QUAAAAAF6kUNUXm4zuDLEcFDyTT7rk8nAOUi8eHsy4TAA==</pre>\n \n-The following are invalid PSBTs:\n+* Case: PSBT missing outputs\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAA==</pre>\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller; table-layout: fixed;\"\n-!Test Case\n-!Explanation\n-|-\n-| <pre>0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300</pre>\n-| Network transaction, not PSBT format\n-|-\n-| <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab300000000</pre>\n-| PSBT missing null terminator\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb823080001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc7870104010200</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed, finalized, and skipped. Input index is specified but total input count is not given.\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308010401010001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc78700</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed, finalized, and skipped. Total input count is given but second input does not have its index.\n-|}\n+* Case: PSBT where one input has a filled scriptSig in the unsigned tx\n+** Bytes in Hex: <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac00000000000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787010416001485d13537f2e265405a34dbafa9e3dda01fb82308000000</pre>\n+** Base64 String: <pre>cHNidP8BAP0KAQIAAAACqwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QAAAAAakcwRAIgR1lmF5fAGwNrJZKJSGhiGDR9iYZLcZ4ff89X0eURZYcCIFMJ6r9Wqk2Ikf/REf3xM286KdqGbX+EhtdVRs7tr5MZASEDXNxh/HupccC1AaZGoqg7ECy0OIEhfKaC3Ibi1z+ogpL+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAABASAA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHhwEEFgAUhdE1N/LiZUBaNNuvqePdoB+4IwgAAAA=</pre>\n+\n+* Case: PSBT where inputs and outputs are provided but without an unsigned tx\n+** Bytes in Hex: <pre>70736274ff000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000000</pre>\n+** Base64 String: <pre>cHNidP8AAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAA==</pre>\n+\n+* Case: PSBT with duplicate keys in an input\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000001003f0200000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffff010000000000000000036a010000000000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAQA/AgAAAAH//////////////////////////////////////////wAAAAAA/////wEAAAAAAAAAAANqAQAAAAAAAAAA</pre>\n \n The following are valid PSBTs:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller; table-layout: fixed;\"\n-!Test Case\n-!Explanation\n-|-\n-| <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000000</pre>\n-| PSBT with one P2PKH input which has a non-final scriptSig.\n-|-\n-| <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab3000000000103040100000000</pre>\n-| PSBT with one P2PKH input which has a non-final scriptSig and has a sighash type specified.\n-|-\n-| <pre>70736274ff0100a00200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40000000000feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308000100df0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e13000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc78700</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input both with non-final scriptSigs. P2SH-P2WPKH input's redeemScript is available.\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc78700</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed and finalized.\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308010401010001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc7870104010100</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed, finalized, and skipped. Input indexes are used.\n-|-\n-| <pre>70736274ff0100550200000001279a2323a5dfb51fc45f220fa58b0fc13e1e3342792a85d7e36cd6333b5cbc390000000000ffffffff01a05aea0b000000001976a914ffe9c0061097cc3b636f2cb0460fa4fc427d2b4588ac0000000015016345200f68d189e1adc0df1c4d16ea8f14c0dbeb220020771fd18ad459666dd49f3d564e3dbc42f4c84774e360ada16816a8ed488d56812102771fd18ad459666dd49f3d564e3dbc42f4c84774e360ada16816a8ed488d568147522103b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd462103de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd52ae220303b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4610b4a6ba67000000800000008004000080220303de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd10b4a6ba67000000800000008005000080000100fd51010200000002f1d8d4b1acab9217bcbd0a09e37876efd79cf753baa2b2362e7d429c0deafbf5000000006a47304402202f29ddfff387626cf43fcae483456fb9d12d7f50fb10b39c245bab238d960d6502200f32fa3197dc6aa1fc870e33d8c590378862ce0b9bf6be865d5aac0a7390ae3a012102ead596687ca806043edc3de116cdf29d5e9257c196cd055cf698c8d02bf24e99fefffffff1d8d4b1acab9217bcbd0a09e37876efd79cf753baa2b2362e7d429c0deafbf5010000006b483045022100dc3bc94086fd7d48102a8290c737e27841bc1ce587fd4d9efe96a37d88c03a6502206dea717b8225b4ae9e1624bfc02927edac222ee094bf009996d9d0305d7645f501210394f62be9df19952c5587768aeb7698061ad2c4a25c894f47d8c162b4d7213d05feffffff01955eea0b0000000017a9146345200f68d189e1adc0df1c4d16ea8f14c0dbeb87fb2e1300220203b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4646304302200424b58effaaa694e1559ea5c93bbfd4a89064224055cdf070b6771469442d07021f5c8eb0fea6516d60b8acb33ad64ede60e8785bfb3aa94b99bdf86151db9a9a0100</pre>\n-| PSBT with one P2SH-P2WSH input of a 2-of-2 multisig, redeemScript, witnessScript, and keypaths are available. Contains one signature.\n-|}\n+* Case: PSBT with one P2PKH input. Outputs are empty\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab300000000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAAAA</pre>\n+\n+* Case: PSBT with one P2PKH input and one P2SH-P2WPKH input. First input is signed and finalized. Outputs are empty\n+** Bytes in Hex: <pre>70736274ff0100a00200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40000000000feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac000000000001076a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa882920001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787010416001485d13537f2e265405a34dbafa9e3dda01fb82308000000</pre>\n+** Base64 String: <pre>cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEHakcwRAIgR1lmF5fAGwNrJZKJSGhiGDR9iYZLcZ4ff89X0eURZYcCIFMJ6r9Wqk2Ikf/REf3xM286KdqGbX+EhtdVRs7tr5MZASEDXNxh/HupccC1AaZGoqg7ECy0OIEhfKaC3Ibi1z+ogpIAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIAAAA</pre>\n+\n+* Case: PSBT with one P2PKH input which has a non-final scriptSig and has a sighash type specified. Outputs are empty\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000001030401000000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAQMEAQAAAAAAAA==</pre>\n+\n+* Case: PSBT with one P2PKH input and one P2SH-P2WPKH input both with non-final scriptSigs. P2SH-P2WPKH input's redeemScript is available. Outputs filled.\n+** Bytes in Hex: <pre>70736274ff0100a00200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40000000000feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac00000000000100df0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e13000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787010416001485d13537f2e265405a34dbafa9e3dda01fb8230800220202ead596687ca806043edc3de116cdf29d5e9257c196cd055cf698c8d02bf24e9910b4a6ba670000008000000080020000800022020394f62be9df19952c5587768aeb7698061ad2c4a25c894f47d8c162b4d7213d0510b4a6ba6700000080010000800200008000</pre>\n+** Base64 String: <pre>cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEA3wIAAAABJoFxNx7f8oXpN63upLN7eAAMBWbLs61kZBcTykIXG/YAAAAAakcwRAIgcLIkUSPmv0dNYMW1DAQ9TGkaXSQ18Jo0p2YqncJReQoCIAEynKnazygL3zB0DsA5BCJCLIHLRYOUV663b8Eu3ZWzASECZX0RjTNXuOD0ws1G23s59tnDjZpwq8ubLeXcjb/kzjH+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIACICAurVlmh8qAYEPtw94RbN8p1eklfBls0FXPaYyNAr8k6ZELSmumcAAACAAAAAgAIAAIAAIgIDlPYr6d8ZlSxVh3aK63aYBhrSxKJciU9H2MFitNchPQUQtKa6ZwAAAIABAACAAgAAgAA=</pre>\n+\n+* Case: PSBT with one P2SH-P2WSH input of a 2-of-2 multisig, redeemScript, witnessScript, and keypaths are available. Contains one signature.\n+** Bytes in Hex: <pre>70736274ff0100550200000001279a2323a5dfb51fc45f220fa58b0fc13e1e3342792a85d7e36cd6333b5cbc390000000000ffffffff01a05aea0b000000001976a914ffe9c0061097cc3b636f2cb0460fa4fc427d2b4588ac0000000000010120955eea0b0000000017a9146345200f68d189e1adc0df1c4d16ea8f14c0dbeb87220203b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4646304302200424b58effaaa694e1559ea5c93bbfd4a89064224055cdf070b6771469442d07021f5c8eb0fea6516d60b8acb33ad64ede60e8785bfb3aa94b99bdf86151db9a9a010104220020771fd18ad459666dd49f3d564e3dbc42f4c84774e360ada16816a8ed488d5681010547522103b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd462103de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd52ae220603b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4610b4a6ba67000000800000008004000080220603de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd10b4a6ba670000008000000080050000800000</pre>\n+** Base64 String: <pre>cHNidP8BAFUCAAAAASeaIyOl37UfxF8iD6WLD8E+HjNCeSqF1+Ns1jM7XLw5AAAAAAD/////AaBa6gsAAAAAGXapFP/pwAYQl8w7Y28ssEYPpPxCfStFiKwAAAAAAAEBIJVe6gsAAAAAF6kUY0UgD2jRieGtwN8cTRbqjxTA2+uHIgIDsTQcy6doO2r08SOM1ul+cWfVafrEfx5I1HVBhENVvUZGMEMCIAQktY7/qqaU4VWepck7v9SokGQiQFXN8HC2dxRpRC0HAh9cjrD+plFtYLisszrWTt5g6Hhb+zqpS5m9+GFR25qaAQEEIgAgdx/RitRZZm3Unz1WTj28QvTIR3TjYK2haBao7UiNVoEBBUdSIQOxNBzLp2g7avTxI4zW6X5xZ9Vp+sR/HkjUdUGEQ1W9RiED3lXR4drIBeP4pYwfv5uUwC89uq/hJ/78pJlfJvggg71SriIGA7E0HMunaDtq9PEjjNbpfnFn1Wn6xH8eSNR1QYRDVb1GELSmumcAAACAAAAAgAQAAIAiBgPeVdHh2sgF4/iljB+/m5TALz26r+En/vykmV8m+CCDvRC0prpnAAAAgAAAAIAFAACAAAA=</pre>\n+\n+* Case: PSBT with unknown types in the inputs.\n+** Bytes in Hex: <pre>70736274ff01003f0200000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffff010000000000000000036a010000000000000a0f0102030405060708090f0102030405060708090a0b0c0d0e0f0000</pre>\n+** Base64 String: <pre>cHNidP8BAD8CAAAAAf//////////////////////////////////////////AAAAAAD/////AQAAAAAAAAAAA2oBAAAAAAAACg8BAgMEBQYHCAkPAQIDBAUGBwgJCgsMDQ4PAAA=</pre>\n+\n+The private keys in the tests below are derived from the following master private key:\n+\n+* Extended Private Key: <pre>tprv8ZgxMBicQKsPd9TeAdPADNnSyH9SSUUbTVeFszDE23Ki6TBB5nCefAdHkK8Fm3qMQR6sHwA56zqRmKmxnHk37JkiFzvncDqoKmPWubu7hDF</pre>\n+** Seed: <pre>cUkG8i1RFfWGWy5ziR11zJ5V4U4W3viSFCfyJmZnvQaUsd1xuF3T</pre>\n+\n+A creator creating a PSBT for a transaction which creates the following outputs:\n \n-A creator with only the following:\n+* scriptPubKey: <tt>0014d85c2b71d0060b09c9886aeb815e50991dda124d</tt>, Amount: <tt>1.49990000</tt>\n+* scriptPubKey: <tt>001400aea9a2e5f0f876a588df5546e8742d1d87008f</tt>, Amount: <tt>1.00000000</tt>\n+\n+and spends the following inputs:\n+\n+* TXID: <tt>75ddabb27b8845f5247975c8a5ba7c6f336c4570708ebe230caf6db5217ae858</tt>, Index: <tt>0</tt>\n+* TXID: <tt>1dea7cd05979072a3578cab271c02244ea8a090bbb46aa680a65ecd027048d83</tt>, Index: <tt>1</tt>\n+\n+must create this PSBT:\n+* Bytes in Hex: <pre>70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f000000000000000000</pre>\n+* Base64 String: <pre>cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAAAAAA=</pre>\n+\n+Given the above PSBT, an updater with only the following:\n \n * Redeem Scripts:\n-** <tt>522103c8727ce35f1c93eb0be21406ee9a923c89219fe9c9e8504c8314a6a22d1295c02103c74dc710c407d7db6e041ee212d985cd2826d93f806ed44912b9a1da691c977352ae</tt>\n-** <tt>0020a8f44467bf171d51499153e01c0bd6291109fc38bd21b3c3224c9dc6b57590df</tt>\n+** <tt>5221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae</tt>\n+** <tt>00208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903</tt>\n * Witness Scripts:\n-** <tt>522102e80dec31d167865c1685e9d7a9291e66a4ea22c65cfee324289a1667ccda3b87210258cbbc3cb295a8bebac233aadc7773978804993798be5390ab444f6dd4c5327e52ae</tt>\n-* UTXOs\n-** TXID: <tt>0a4381c05136c0cb44886a5df7c26f1930bcc2c12e00ec60e027c4378d7d8c2e</tt>, Index: <tt>1</tt>\n-*** scriptPubKey: <tt>a914203736c3c06053896d7041ce8f5bae3df76cc49187</tt>\n-*** value: 0.50000000\n-** TXID: <tt>2c4df245d00b491bdf24965adbbccdaa7f62ccac933d3e9377f336c60c4ea096</tt>, Index: <tt>0</tt>\n-*** scriptPubKey: <tt>a914f3ba8a120d960ae07d1dbe6f0c37fb4c926d76d587</tt>\n-*** value: 2.00000000\n-\n-given this unsigned transaction:\n-<pre>02000000022e8c7d8d37c427e060ec002ec1c2bc30196fc2f75d6a8844cbc03651c081430a0100000000ffffffff96a04e0cc636f377933e3d93accc627faacdbcdb5a9624df1b490bd045f24d2c0000000000ffffffff01e02be50e0000000017a914b53bb0dc1db8c8d803e3e39f784d42e4737ffa0d8700000000</pre>\n+** <tt>522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae</tt>\n+* Previous Transactions:\n+** <pre>0200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd7501000000171600145f275f436b09a8cc9a2eb2a2f528485c68a56323feffffff02d8231f1b0100000017a914aed962d6654f9a2b36608eb9d64d2b260db4f1118700c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88702483045022100a22edcc6e5bc511af4cc4ae0de0fcd75c7e04d8c1c3a8aa9d820ed4b967384ec02200642963597b9b1bc22c75e9f3e117284a962188bf5e8a74c895089046a20ad770121035509a48eb623e10aace8bfd0212fdb8a8e5af3c94b0b133b95e114cab89e4f7965000000</pre>\n+** <pre>0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f618765000000</pre>\n+* Public Keys\n+** Key: <tt>029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f</tt>, Derivation Path: <tt>m/0'/0'/0'</tt>\n+** Key: <tt>02dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d7</tt>, Derivation Path: <tt>m/0'/0'/1'</tt>\n+** Key: <tt>03089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc</tt>, Derivation Path: <tt>m/0'/0'/2'</tt>\n+** Key: <tt>023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e73</tt>, Derivation Path: <tt>m/0'/0'/3'</tt>\n+** Key: <tt>03a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca58771</tt>, Derivation Path: <tt>m/0'/0'/4'</tt>\n+** Key: <tt>027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b50051096</tt>, Derivation Path: <tt>m/0'/0'/5'</tt>\n+\n+Must create this PSBT:\n+\n+* Bytes in Hex: <pre>70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f0000008000000080010000800001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f00000080000000800200008000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000</pre>\n+* Base64 String: <pre>cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHAQQiACCMI1MXN0O1ld+0oHtyuo5C43l9p06H/n2ddJfjsgKJAwEFR1IhAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcIQI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc1KuIgYCOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnMQ2QxqTwAAAIAAAACAAwAAgCIGAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcENkMak8AAACAAAAAgAIAAIAAIgIDqaTDf1mW06ol26xrVwrwZQOUSSlCRgs1R1Ptnuylh3EQ2QxqTwAAAIAAAACABAAAgAAiAgJ/Y5l1fS7/VaE2rQLGhLGDi2VW5fG2s0KCqUtrUAUQlhDZDGpPAAAAgAAAAIAFAACAAA==</pre>\n+\n+An updater which adds SIGHASH_ALL to the above PSBT must create this PSBT:\n+\n+* Bytes in Hex: <pre>70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f000000800000008001000080010304010000000001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f0000008000000080020000800103040100000000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000</pre>\n+* Base64 String: <pre>cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAQMEAQAAAAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohwEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAAQMEAQAAAAAiAgOppMN/WZbTqiXbrGtXCvBlA5RJKUJGCzVHU+2e7KWHcRDZDGpPAAAAgAAAAIAEAACAACICAn9jmXV9Lv9VoTatAsaEsYOLZVbl8bazQoKpS2tQBRCWENkMak8AAACAAAAAgAUAAIAA</pre>\n+\n+Given the above updated PSBT, a signer with the following keys:",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 558,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "63da954bf884957b16d349ca6e9ca30eef3a8a02",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Specify that this is only the case for signers which support SIGHASH_ALL signing for both P2PKH and P2WPKH spends, and use RFC6979 nonce generation.",
      "created_at": "2018-06-30T00:20:51Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199305712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199305712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199306241",
      "pull_request_review_id": 133407833,
      "id": 199306241,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMwNjI0MQ==",
      "diff_hunk": "@@ -408,93 +356,130 @@ able to be unserialized by an unserializer for the PSBT format.\n \n ==Test Vectors==\n \n-The following test vectors are done with keys derived from the following master private key. Keypaths and individual private keys will be specified when necessary\n+The following are invalid PSBTs:\n \n-<pre>\n-tprv8ZgxMBicQKsPdHrvvmuEXXZ7f5EheFqshqVmtPjeLLMjqwrWbSeuGDcgJU1icTHtLjYiGewa5zcMScbGSRR8AqB8A5wvB3XRdNYBDMhXpBS\n-</pre>\n+* Case: Network transaction, not PSBT format\n+** Bytes in Hex: <pre>0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300</pre>\n+** Base64 String: <pre>AgAAAAEmgXE3Ht/yhek3re6ks3t4AAwFZsuzrWRkFxPKQhcb9gAAAABqRzBEAiBwsiRRI+a/R01gxbUMBD1MaRpdJDXwmjSnZiqdwlF5CgIgATKcqdrPKAvfMHQOwDkEIkIsgctFg5RXrrdvwS7dlbMBIQJlfRGNM1e44PTCzUbbezn22cONmnCry5st5dyNv+TOMf7///8C09/1BQAAAAAZdqkU0MWZA8W6woaHYOkP1SGkZlqnZSCIrADh9QUAAAAAF6kUNUXm4zuDLEcFDyTT7rk8nAOUi8eHsy4TAA==</pre>\n \n-The following are invalid PSBTs:\n+* Case: PSBT missing outputs\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAA==</pre>\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller; table-layout: fixed;\"\n-!Test Case\n-!Explanation\n-|-\n-| <pre>0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300</pre>\n-| Network transaction, not PSBT format\n-|-\n-| <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab300000000</pre>\n-| PSBT missing null terminator\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb823080001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc7870104010200</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed, finalized, and skipped. Input index is specified but total input count is not given.\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308010401010001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc78700</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed, finalized, and skipped. Total input count is given but second input does not have its index.\n-|}\n+* Case: PSBT where one input has a filled scriptSig in the unsigned tx\n+** Bytes in Hex: <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac00000000000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787010416001485d13537f2e265405a34dbafa9e3dda01fb82308000000</pre>\n+** Base64 String: <pre>cHNidP8BAP0KAQIAAAACqwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QAAAAAakcwRAIgR1lmF5fAGwNrJZKJSGhiGDR9iYZLcZ4ff89X0eURZYcCIFMJ6r9Wqk2Ikf/REf3xM286KdqGbX+EhtdVRs7tr5MZASEDXNxh/HupccC1AaZGoqg7ECy0OIEhfKaC3Ibi1z+ogpL+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAABASAA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHhwEEFgAUhdE1N/LiZUBaNNuvqePdoB+4IwgAAAA=</pre>\n+\n+* Case: PSBT where inputs and outputs are provided but without an unsigned tx\n+** Bytes in Hex: <pre>70736274ff000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000000</pre>\n+** Base64 String: <pre>cHNidP8AAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAA==</pre>\n+\n+* Case: PSBT with duplicate keys in an input\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000001003f0200000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffff010000000000000000036a010000000000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAQA/AgAAAAH//////////////////////////////////////////wAAAAAA/////wEAAAAAAAAAAANqAQAAAAAAAAAA</pre>\n \n The following are valid PSBTs:\n \n-{| class=\"wikitable\" style=\"width: auto; text-align: center; font-size: smaller; table-layout: fixed;\"\n-!Test Case\n-!Explanation\n-|-\n-| <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000000</pre>\n-| PSBT with one P2PKH input which has a non-final scriptSig.\n-|-\n-| <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab3000000000103040100000000</pre>\n-| PSBT with one P2PKH input which has a non-final scriptSig and has a sighash type specified.\n-|-\n-| <pre>70736274ff0100a00200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40000000000feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308000100df0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e13000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc78700</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input both with non-final scriptSigs. P2SH-P2WPKH input's redeemScript is available.\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc78700</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed and finalized.\n-|-\n-| <pre>70736274ff0100fd0a010200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be4000000006a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa88292feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac0000000015013545e6e33b832c47050f24d3eeb93c9c03948bc716001485d13537f2e265405a34dbafa9e3dda01fb82308010401010001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc7870104010100</pre>\n-| PSBT with one P2PKH input and one P2SH-P2WPKH input with only the first input signed, finalized, and skipped. Input indexes are used.\n-|-\n-| <pre>70736274ff0100550200000001279a2323a5dfb51fc45f220fa58b0fc13e1e3342792a85d7e36cd6333b5cbc390000000000ffffffff01a05aea0b000000001976a914ffe9c0061097cc3b636f2cb0460fa4fc427d2b4588ac0000000015016345200f68d189e1adc0df1c4d16ea8f14c0dbeb220020771fd18ad459666dd49f3d564e3dbc42f4c84774e360ada16816a8ed488d56812102771fd18ad459666dd49f3d564e3dbc42f4c84774e360ada16816a8ed488d568147522103b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd462103de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd52ae220303b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4610b4a6ba67000000800000008004000080220303de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd10b4a6ba67000000800000008005000080000100fd51010200000002f1d8d4b1acab9217bcbd0a09e37876efd79cf753baa2b2362e7d429c0deafbf5000000006a47304402202f29ddfff387626cf43fcae483456fb9d12d7f50fb10b39c245bab238d960d6502200f32fa3197dc6aa1fc870e33d8c590378862ce0b9bf6be865d5aac0a7390ae3a012102ead596687ca806043edc3de116cdf29d5e9257c196cd055cf698c8d02bf24e99fefffffff1d8d4b1acab9217bcbd0a09e37876efd79cf753baa2b2362e7d429c0deafbf5010000006b483045022100dc3bc94086fd7d48102a8290c737e27841bc1ce587fd4d9efe96a37d88c03a6502206dea717b8225b4ae9e1624bfc02927edac222ee094bf009996d9d0305d7645f501210394f62be9df19952c5587768aeb7698061ad2c4a25c894f47d8c162b4d7213d05feffffff01955eea0b0000000017a9146345200f68d189e1adc0df1c4d16ea8f14c0dbeb87fb2e1300220203b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4646304302200424b58effaaa694e1559ea5c93bbfd4a89064224055cdf070b6771469442d07021f5c8eb0fea6516d60b8acb33ad64ede60e8785bfb3aa94b99bdf86151db9a9a0100</pre>\n-| PSBT with one P2SH-P2WSH input of a 2-of-2 multisig, redeemScript, witnessScript, and keypaths are available. Contains one signature.\n-|}\n+* Case: PSBT with one P2PKH input. Outputs are empty\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab300000000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAAAA</pre>\n+\n+* Case: PSBT with one P2PKH input and one P2SH-P2WPKH input. First input is signed and finalized. Outputs are empty\n+** Bytes in Hex: <pre>70736274ff0100a00200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40000000000feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac000000000001076a47304402204759661797c01b036b25928948686218347d89864b719e1f7fcf57d1e511658702205309eabf56aa4d8891ffd111fdf1336f3a29da866d7f8486d75546ceedaf93190121035cdc61fc7ba971c0b501a646a2a83b102cb43881217ca682dc86e2d73fa882920001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787010416001485d13537f2e265405a34dbafa9e3dda01fb82308000000</pre>\n+** Base64 String: <pre>cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEHakcwRAIgR1lmF5fAGwNrJZKJSGhiGDR9iYZLcZ4ff89X0eURZYcCIFMJ6r9Wqk2Ikf/REf3xM286KdqGbX+EhtdVRs7tr5MZASEDXNxh/HupccC1AaZGoqg7ECy0OIEhfKaC3Ibi1z+ogpIAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIAAAA</pre>\n+\n+* Case: PSBT with one P2PKH input which has a non-final scriptSig and has a sighash type specified. Outputs are empty\n+** Bytes in Hex: <pre>70736274ff0100750200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf60000000000feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e1300000100fda5010100000000010289a3c71eab4d20e0371bbba4cc698fa295c9463afa2e397f8533ccb62f9567e50100000017160014be18d152a9b012039daf3da7de4f53349eecb985ffffffff86f8aa43a71dff1448893a530a7237ef6b4608bbb2dd2d0171e63aec6a4890b40100000017160014fe3e9ef1a745e974d902c4355943abcb34bd5353ffffffff0200c2eb0b000000001976a91485cff1097fd9e008bb34af709c62197b38978a4888ac72fef84e2c00000017a914339725ba21efd62ac753a9bcd067d6c7a6a39d05870247304402202712be22e0270f394f568311dc7ca9a68970b8025fdd3b240229f07f8a5f3a240220018b38d7dcd314e734c9276bd6fb40f673325bc4baa144c800d2f2f02db2765c012103d2e15674941bad4a996372cb87e1856d3652606d98562fe39c5e9e7e413f210502483045022100d12b852d85dcd961d2f5f4ab660654df6eedcc794c0c33ce5cc309ffb5fce58d022067338a8e0e1725c197fb1a88af59f51e44e4255b20167c8684031c05d1f2592a01210223b72beef0965d10be0778efecd61fcac6f79a4ea169393380734464f84f2ab30000000001030401000000000000</pre>\n+** Base64 String: <pre>cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAQMEAQAAAAAAAA==</pre>\n+\n+* Case: PSBT with one P2PKH input and one P2SH-P2WPKH input both with non-final scriptSigs. P2SH-P2WPKH input's redeemScript is available. Outputs filled.\n+** Bytes in Hex: <pre>70736274ff0100a00200000002ab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40000000000feffffffab0949a08c5af7c49b8212f417e2f15ab3f5c33dcf153821a8139f877a5b7be40100000000feffffff02603bea0b000000001976a914768a40bbd740cbe81d988e71de2a4d5c71396b1d88ac8e240000000000001976a9146f4620b553fa095e721b9ee0efe9fa039cca459788ac00000000000100df0200000001268171371edff285e937adeea4b37b78000c0566cbb3ad64641713ca42171bf6000000006a473044022070b2245123e6bf474d60c5b50c043d4c691a5d2435f09a34a7662a9dc251790a022001329ca9dacf280bdf30740ec0390422422c81cb45839457aeb76fc12edd95b3012102657d118d3357b8e0f4c2cd46db7b39f6d9c38d9a70abcb9b2de5dc8dbfe4ce31feffffff02d3dff505000000001976a914d0c59903c5bac2868760e90fd521a4665aa7652088ac00e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787b32e13000001012000e1f5050000000017a9143545e6e33b832c47050f24d3eeb93c9c03948bc787010416001485d13537f2e265405a34dbafa9e3dda01fb8230800220202ead596687ca806043edc3de116cdf29d5e9257c196cd055cf698c8d02bf24e9910b4a6ba670000008000000080020000800022020394f62be9df19952c5587768aeb7698061ad2c4a25c894f47d8c162b4d7213d0510b4a6ba6700000080010000800200008000</pre>\n+** Base64 String: <pre>cHNidP8BAKACAAAAAqsJSaCMWvfEm4IS9Bfi8Vqz9cM9zxU4IagTn4d6W3vkAAAAAAD+////qwlJoIxa98SbghL0F+LxWrP1wz3PFTghqBOfh3pbe+QBAAAAAP7///8CYDvqCwAAAAAZdqkUdopAu9dAy+gdmI5x3ipNXHE5ax2IrI4kAAAAAAAAGXapFG9GILVT+glechue4O/p+gOcykWXiKwAAAAAAAEA3wIAAAABJoFxNx7f8oXpN63upLN7eAAMBWbLs61kZBcTykIXG/YAAAAAakcwRAIgcLIkUSPmv0dNYMW1DAQ9TGkaXSQ18Jo0p2YqncJReQoCIAEynKnazygL3zB0DsA5BCJCLIHLRYOUV663b8Eu3ZWzASECZX0RjTNXuOD0ws1G23s59tnDjZpwq8ubLeXcjb/kzjH+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQEgAOH1BQAAAAAXqRQ1RebjO4MsRwUPJNPuuTycA5SLx4cBBBYAFIXRNTfy4mVAWjTbr6nj3aAfuCMIACICAurVlmh8qAYEPtw94RbN8p1eklfBls0FXPaYyNAr8k6ZELSmumcAAACAAAAAgAIAAIAAIgIDlPYr6d8ZlSxVh3aK63aYBhrSxKJciU9H2MFitNchPQUQtKa6ZwAAAIABAACAAgAAgAA=</pre>\n+\n+* Case: PSBT with one P2SH-P2WSH input of a 2-of-2 multisig, redeemScript, witnessScript, and keypaths are available. Contains one signature.\n+** Bytes in Hex: <pre>70736274ff0100550200000001279a2323a5dfb51fc45f220fa58b0fc13e1e3342792a85d7e36cd6333b5cbc390000000000ffffffff01a05aea0b000000001976a914ffe9c0061097cc3b636f2cb0460fa4fc427d2b4588ac0000000000010120955eea0b0000000017a9146345200f68d189e1adc0df1c4d16ea8f14c0dbeb87220203b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4646304302200424b58effaaa694e1559ea5c93bbfd4a89064224055cdf070b6771469442d07021f5c8eb0fea6516d60b8acb33ad64ede60e8785bfb3aa94b99bdf86151db9a9a010104220020771fd18ad459666dd49f3d564e3dbc42f4c84774e360ada16816a8ed488d5681010547522103b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd462103de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd52ae220603b1341ccba7683b6af4f1238cd6e97e7167d569fac47f1e48d47541844355bd4610b4a6ba67000000800000008004000080220603de55d1e1dac805e3f8a58c1fbf9b94c02f3dbaafe127fefca4995f26f82083bd10b4a6ba670000008000000080050000800000</pre>\n+** Base64 String: <pre>cHNidP8BAFUCAAAAASeaIyOl37UfxF8iD6WLD8E+HjNCeSqF1+Ns1jM7XLw5AAAAAAD/////AaBa6gsAAAAAGXapFP/pwAYQl8w7Y28ssEYPpPxCfStFiKwAAAAAAAEBIJVe6gsAAAAAF6kUY0UgD2jRieGtwN8cTRbqjxTA2+uHIgIDsTQcy6doO2r08SOM1ul+cWfVafrEfx5I1HVBhENVvUZGMEMCIAQktY7/qqaU4VWepck7v9SokGQiQFXN8HC2dxRpRC0HAh9cjrD+plFtYLisszrWTt5g6Hhb+zqpS5m9+GFR25qaAQEEIgAgdx/RitRZZm3Unz1WTj28QvTIR3TjYK2haBao7UiNVoEBBUdSIQOxNBzLp2g7avTxI4zW6X5xZ9Vp+sR/HkjUdUGEQ1W9RiED3lXR4drIBeP4pYwfv5uUwC89uq/hJ/78pJlfJvggg71SriIGA7E0HMunaDtq9PEjjNbpfnFn1Wn6xH8eSNR1QYRDVb1GELSmumcAAACAAAAAgAQAAIAiBgPeVdHh2sgF4/iljB+/m5TALz26r+En/vykmV8m+CCDvRC0prpnAAAAgAAAAIAFAACAAAA=</pre>\n+\n+* Case: PSBT with unknown types in the inputs.\n+** Bytes in Hex: <pre>70736274ff01003f0200000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffff010000000000000000036a010000000000000a0f0102030405060708090f0102030405060708090a0b0c0d0e0f0000</pre>\n+** Base64 String: <pre>cHNidP8BAD8CAAAAAf//////////////////////////////////////////AAAAAAD/////AQAAAAAAAAAAA2oBAAAAAAAACg8BAgMEBQYHCAkPAQIDBAUGBwgJCgsMDQ4PAAA=</pre>\n+\n+The private keys in the tests below are derived from the following master private key:\n+\n+* Extended Private Key: <pre>tprv8ZgxMBicQKsPd9TeAdPADNnSyH9SSUUbTVeFszDE23Ki6TBB5nCefAdHkK8Fm3qMQR6sHwA56zqRmKmxnHk37JkiFzvncDqoKmPWubu7hDF</pre>\n+** Seed: <pre>cUkG8i1RFfWGWy5ziR11zJ5V4U4W3viSFCfyJmZnvQaUsd1xuF3T</pre>\n+\n+A creator creating a PSBT for a transaction which creates the following outputs:\n \n-A creator with only the following:\n+* scriptPubKey: <tt>0014d85c2b71d0060b09c9886aeb815e50991dda124d</tt>, Amount: <tt>1.49990000</tt>\n+* scriptPubKey: <tt>001400aea9a2e5f0f876a588df5546e8742d1d87008f</tt>, Amount: <tt>1.00000000</tt>\n+\n+and spends the following inputs:\n+\n+* TXID: <tt>75ddabb27b8845f5247975c8a5ba7c6f336c4570708ebe230caf6db5217ae858</tt>, Index: <tt>0</tt>\n+* TXID: <tt>1dea7cd05979072a3578cab271c02244ea8a090bbb46aa680a65ecd027048d83</tt>, Index: <tt>1</tt>\n+\n+must create this PSBT:\n+* Bytes in Hex: <pre>70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f000000000000000000</pre>\n+* Base64 String: <pre>cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAAAAAA=</pre>\n+\n+Given the above PSBT, an updater with only the following:\n \n * Redeem Scripts:\n-** <tt>522103c8727ce35f1c93eb0be21406ee9a923c89219fe9c9e8504c8314a6a22d1295c02103c74dc710c407d7db6e041ee212d985cd2826d93f806ed44912b9a1da691c977352ae</tt>\n-** <tt>0020a8f44467bf171d51499153e01c0bd6291109fc38bd21b3c3224c9dc6b57590df</tt>\n+** <tt>5221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae</tt>\n+** <tt>00208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903</tt>\n * Witness Scripts:\n-** <tt>522102e80dec31d167865c1685e9d7a9291e66a4ea22c65cfee324289a1667ccda3b87210258cbbc3cb295a8bebac233aadc7773978804993798be5390ab444f6dd4c5327e52ae</tt>\n-* UTXOs\n-** TXID: <tt>0a4381c05136c0cb44886a5df7c26f1930bcc2c12e00ec60e027c4378d7d8c2e</tt>, Index: <tt>1</tt>\n-*** scriptPubKey: <tt>a914203736c3c06053896d7041ce8f5bae3df76cc49187</tt>\n-*** value: 0.50000000\n-** TXID: <tt>2c4df245d00b491bdf24965adbbccdaa7f62ccac933d3e9377f336c60c4ea096</tt>, Index: <tt>0</tt>\n-*** scriptPubKey: <tt>a914f3ba8a120d960ae07d1dbe6f0c37fb4c926d76d587</tt>\n-*** value: 2.00000000\n-\n-given this unsigned transaction:\n-<pre>02000000022e8c7d8d37c427e060ec002ec1c2bc30196fc2f75d6a8844cbc03651c081430a0100000000ffffffff96a04e0cc636f377933e3d93accc627faacdbcdb5a9624df1b490bd045f24d2c0000000000ffffffff01e02be50e0000000017a914b53bb0dc1db8c8d803e3e39f784d42e4737ffa0d8700000000</pre>\n+** <tt>522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae</tt>\n+* Previous Transactions:\n+** <pre>0200000000010158e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd7501000000171600145f275f436b09a8cc9a2eb2a2f528485c68a56323feffffff02d8231f1b0100000017a914aed962d6654f9a2b36608eb9d64d2b260db4f1118700c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88702483045022100a22edcc6e5bc511af4cc4ae0de0fcd75c7e04d8c1c3a8aa9d820ed4b967384ec02200642963597b9b1bc22c75e9f3e117284a962188bf5e8a74c895089046a20ad770121035509a48eb623e10aace8bfd0212fdb8a8e5af3c94b0b133b95e114cab89e4f7965000000</pre>\n+** <pre>0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f618765000000</pre>\n+* Public Keys\n+** Key: <tt>029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f</tt>, Derivation Path: <tt>m/0'/0'/0'</tt>\n+** Key: <tt>02dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d7</tt>, Derivation Path: <tt>m/0'/0'/1'</tt>\n+** Key: <tt>03089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc</tt>, Derivation Path: <tt>m/0'/0'/2'</tt>\n+** Key: <tt>023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e73</tt>, Derivation Path: <tt>m/0'/0'/3'</tt>\n+** Key: <tt>03a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca58771</tt>, Derivation Path: <tt>m/0'/0'/4'</tt>\n+** Key: <tt>027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b50051096</tt>, Derivation Path: <tt>m/0'/0'/5'</tt>\n+\n+Must create this PSBT:\n+\n+* Bytes in Hex: <pre>70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f0000008000000080010000800001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f00000080000000800200008000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000</pre>\n+* Base64 String: <pre>cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAAEBIADC6wsAAAAAF6kUt/X69A49QKWkWbHbNTXyty+pIeiHAQQiACCMI1MXN0O1ld+0oHtyuo5C43l9p06H/n2ddJfjsgKJAwEFR1IhAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcIQI63ZBPPW3PWd25BrDe4jUpt/+57VDl6GFRkmhgIh8Oc1KuIgYCOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnMQ2QxqTwAAAIAAAACAAwAAgCIGAwidwQx6xttU+RMpr2FzM9s4jOrQwjH3IzedG5kDCwLcENkMak8AAACAAAAAgAIAAIAAIgIDqaTDf1mW06ol26xrVwrwZQOUSSlCRgs1R1Ptnuylh3EQ2QxqTwAAAIAAAACABAAAgAAiAgJ/Y5l1fS7/VaE2rQLGhLGDi2VW5fG2s0KCqUtrUAUQlhDZDGpPAAAAgAAAAIAFAACAAA==</pre>\n+\n+An updater which adds SIGHASH_ALL to the above PSBT must create this PSBT:\n+\n+* Bytes in Hex: <pre>70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f000000800000008001000080010304010000000001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f0000008000000080020000800103040100000000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000</pre>\n+* Base64 String: <pre>cHNidP8BAJoCAAAAAljoeiG1ba8MI76OcHBFbDNvfLqlyHV5JPVFiHuyq911AAAAAAD/////g40EJ9DsZQpoqka7CwmK6kQiwHGyyng1Kgd5WdB86h0BAAAAAP////8CcKrwCAAAAAAWABTYXCtx0AYLCcmIauuBXlCZHdoSTQDh9QUAAAAAFgAUAK6pouXw+HaliN9VRuh0LR2HAI8AAAAAAAEAuwIAAAABqtc5MQGL0l+ErkALaISL4J23BurCrBgpi6vucatlb4sAAAAASEcwRAIgWPb8fGoz4bMVSNSByCbAFb0wE1qtQs1neQ2rZtKtJDsCIEoc7SYExnNbY5PltBaR3XiwDwxZQvufdRhW+qk4FX26Af7///8CgPD6AgAAAAAXqRQPuUY0IWlrgsgzryQceMF9295JNIfQ8gonAQAAABepFCnKdPigj4GZlCgYXJe12FLkBj9hh2UAAAABBEdSIQKVg785rgpgl0etGZrd1jT6YQhVnWxc05tMIYPxq5bgfyEC2rYf9JoU22p9ArDNH7t4/EsYMStbTlTa5Nui+/71NtdSriIGApWDvzmuCmCXR60Zmt3WNPphCFWdbFzTm0whg/GrluB/ENkMak8AAACAAAAAgAAAAIAiBgLath/0mhTban0CsM0fu3j8SxgxK1tOVNrk26L7/vU21xDZDGpPAAAAgAAAAIABAACAAQMEAQAAAAABASAAwusLAAAAABepFLf1+vQOPUClpFmx2zU18rcvqSHohwEEIgAgjCNTFzdDtZXftKB7crqOQuN5fadOh/59nXSX47ICiQMBBUdSIQMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3CECOt2QTz1tz1nduQaw3uI1Kbf/ue1Q5ehhUZJoYCIfDnNSriIGAjrdkE89bc9Z3bkGsN7iNSm3/7ntUOXoYVGSaGAiHw5zENkMak8AAACAAAAAgAMAAIAiBgMIncEMesbbVPkTKa9hczPbOIzq0MIx9yM3nRuZAwsC3BDZDGpPAAAAgAAAAIACAACAAQMEAQAAAAAiAgOppMN/WZbTqiXbrGtXCvBlA5RJKUJGCzVHU+2e7KWHcRDZDGpPAAAAgAAAAIAEAACAACICAn9jmXV9Lv9VoTatAsaEsYOLZVbl8bazQoKpS2tQBRCWENkMak8AAACAAAAAgAUAAIAA</pre>\n+\n+Given the above updated PSBT, a signer with the following keys:",
      "path": "bip-0174.mediawiki",
      "position": null,
      "original_position": 558,
      "commit_id": "4fcd8bf0083b960cd30d92890cf705a5394c0a0e",
      "original_commit_id": "63da954bf884957b16d349ca6e9ca30eef3a8a02",
      "in_reply_to_id": 199305712,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-06-30T00:29:35Z",
      "updated_at": "2018-07-05T22:27:50Z",
      "html_url": "https://github.com/bitcoin/bips/pull/694#discussion_r199306241",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/199306241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/694"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    }
  ]
}