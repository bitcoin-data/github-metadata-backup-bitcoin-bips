{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/1687",
    "id": 2130099671,
    "node_id": "PR_kwDOAN28mc5-9r3X",
    "html_url": "https://github.com/bitcoin/bips/pull/1687",
    "diff_url": "https://github.com/bitcoin/bips/pull/1687.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/1687.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1687",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/1687/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/e2adb50e77562b513d98b730a36168f32ce3ec3e",
    "number": 1687,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Bip Draft: Sending Silent Payments in PSBTs",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This BIP adds support for sending silent payments using PSBTs.\r\n\r\nIf there are multiple entities handling the PSBT that do not have access to some input private keys, a DLEQ proof by the signer may be added for other entities to verify the corresponding ECDH shares used to derive the output scripts were generated correctly. This will be specified in a following BIP. For the common case of a single entity that has access to all private keys, the DLEQ proof generation is unnecessary.\r\n\r\nSpending support is trivial and can be done with a modification to BIP370 to add a new input field for the tweak data.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-10-17T12:39:57Z",
    "updated_at": "2024-11-15T20:58:26Z",
    "mergeable": true,
    "mergeable_state": "clean",
    "merge_commit_sha": "acdba196e2d0da83f62b6c7b522fa159877f847d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "andrewtoth:silent-payments-psbt",
      "ref": "silent-payments-psbt",
      "sha": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 224773098,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjQ3NzMwOTg=",
        "name": "bips",
        "full_name": "andrewtoth/bips",
        "owner": {
          "login": "andrewtoth",
          "id": 237213,
          "node_id": "MDQ6VXNlcjIzNzIxMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewtoth",
          "html_url": "https://github.com/andrewtoth",
          "followers_url": "https://api.github.com/users/andrewtoth/followers",
          "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
          "repos_url": "https://api.github.com/users/andrewtoth/repos",
          "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/andrewtoth/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/andrewtoth/bips",
        "archive_url": "https://api.github.com/repos/andrewtoth/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/andrewtoth/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/andrewtoth/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/andrewtoth/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/andrewtoth/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/andrewtoth/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/andrewtoth/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/andrewtoth/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/andrewtoth/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/andrewtoth/bips/contributors",
        "deployments_url": "https://api.github.com/repos/andrewtoth/bips/deployments",
        "downloads_url": "https://api.github.com/repos/andrewtoth/bips/downloads",
        "events_url": "https://api.github.com/repos/andrewtoth/bips/events",
        "forks_url": "https://api.github.com/repos/andrewtoth/bips/forks",
        "git_commits_url": "https://api.github.com/repos/andrewtoth/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/andrewtoth/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/andrewtoth/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/andrewtoth/bips.git",
        "issue_comment_url": "https://api.github.com/repos/andrewtoth/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/andrewtoth/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/andrewtoth/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/andrewtoth/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/andrewtoth/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/andrewtoth/bips/languages",
        "merges_url": "https://api.github.com/repos/andrewtoth/bips/merges",
        "milestones_url": "https://api.github.com/repos/andrewtoth/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/andrewtoth/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/andrewtoth/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/andrewtoth/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:andrewtoth/bips.git",
        "stargazers_url": "https://api.github.com/repos/andrewtoth/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/andrewtoth/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/andrewtoth/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/andrewtoth/bips/subscription",
        "tags_url": "https://api.github.com/repos/andrewtoth/bips/tags",
        "teams_url": "https://api.github.com/repos/andrewtoth/bips/teams",
        "trees_url": "https://api.github.com/repos/andrewtoth/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/andrewtoth/bips.git",
        "hooks_url": "https://api.github.com/repos/andrewtoth/bips/hooks",
        "svn_url": "https://github.com/andrewtoth/bips",
        "homepage": "bitcoin.org",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 15659,
        "default_branch": "bip-schnorr",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-03T03:24:02Z",
        "created_at": "2019-11-29T03:52:22Z",
        "updated_at": "2019-11-29T03:52:24Z",
        "allow_forking": true
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "385ac876d3e5040437f1c7a7a19c45283325137e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5377,
        "stargazers_count": 9403,
        "watchers_count": 9403,
        "size": 15657,
        "default_branch": "master",
        "open_issues_count": 41,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-14T02:24:11Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2024-11-15T15:23:15Z",
        "allow_forking": true
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 187,
    "deletions": 0,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 19,
    "comments": 1
  },
  "events": [
    {
      "event": "unsubscribed",
      "id": 14699383550,
      "node_id": "UE_lADOAN28mc6apsiAzwAAAANsJsr-",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14699383550",
      "actor": {
        "login": "Karthik0521",
        "id": 159101140,
        "node_id": "U_kgDOCXuw1A",
        "avatar_url": "https://avatars.githubusercontent.com/u/159101140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Karthik0521",
        "html_url": "https://github.com/Karthik0521",
        "followers_url": "https://api.github.com/users/Karthik0521/followers",
        "following_url": "https://api.github.com/users/Karthik0521/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Karthik0521/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Karthik0521/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Karthik0521/subscriptions",
        "organizations_url": "https://api.github.com/users/Karthik0521/orgs",
        "repos_url": "https://api.github.com/users/Karthik0521/repos",
        "events_url": "https://api.github.com/users/Karthik0521/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Karthik0521/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-17T13:23:24Z"
    },
    {
      "event": "subscribed",
      "id": 14699385213,
      "node_id": "SE_lADOAN28mc6apsiAzwAAAANsJtF9",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14699385213",
      "actor": {
        "login": "Karthik0521",
        "id": 159101140,
        "node_id": "U_kgDOCXuw1A",
        "avatar_url": "https://avatars.githubusercontent.com/u/159101140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Karthik0521",
        "html_url": "https://github.com/Karthik0521",
        "followers_url": "https://api.github.com/users/Karthik0521/followers",
        "following_url": "https://api.github.com/users/Karthik0521/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Karthik0521/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Karthik0521/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Karthik0521/subscriptions",
        "organizations_url": "https://api.github.com/users/Karthik0521/orgs",
        "repos_url": "https://api.github.com/users/Karthik0521/repos",
        "events_url": "https://api.github.com/users/Karthik0521/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Karthik0521/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-17T13:23:30Z"
    },
    {
      "event": "labeled",
      "id": 14699724610,
      "node_id": "LE_lADOAN28mc6apsiAzwAAAANsK_9C",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14699724610",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-17T13:44:07Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 2423182905,
      "node_id": "IC_kwDOAN28mc6QbtY5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/2423182905",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-18T20:26:23Z",
      "updated_at": "2024-10-18T20:26:23Z",
      "author_association": "MEMBER",
      "body": "Mailing list post on Oct 17 at https://groups.google.com/g/bitcoindev/c/5G5wzqUXyk4.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#issuecomment-2423182905",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/1687"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14735699089,
      "node_id": "HRFPE_lADOAN28mc6apsiAzwAAAANuUOyR",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14735699089",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T15:06:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14736066646,
      "node_id": "HRFPE_lADOAN28mc6apsiAzwAAAANuVohW",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14736066646",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T15:28:46Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOAN28mdoAKGUyYWRiNTBlNzc1NjJiNTEzZDk4YjczMGEzNjE2OGYzMmNlM2VjM2U",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "tree": {
        "sha": "6b0844d9c5f4d5016331473f385ba82daec919c5",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/6b0844d9c5f4d5016331473f385ba82daec919c5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6b0844d9c5f4d5016331473f385ba82daec919c5\nparent 5284427971f17e306b9518614cc5a8da5963ce4c\nauthor Andrew Toth <andrewstoth@gmail.com> 1729351719 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1729517024 -0400\n\nBip Draft: Sending Silent Payments in PSBTs\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmcWVeIACgkQYAB6/Ik4\nsBiAww/9EUVA5jWsBSB56VTYS5MWxblAn/LQ5lBlaYz6yKCScNCSiaMKMwlgqoLK\na5C4HBR4AWXQZeKWYQ/jBehGiGirhodbXqL/e+oD7KloFePWznAZffKANQ/w6mjQ\nbYRiWf2nK3MNqkZHrggpZmN1i78pWCuut0cLjoKdr22sJMklRbHt3XBMs8QDbF6N\nI6NcNRqO1/DxVoMr+QFogmwLixoAanqGoqAXTBF0ZBrau364S5JQET7ZRJeHvZI5\nQyeBt/SWnSI4jujdiJPHow5s0G/kA4t2U5vDl8GA8JImq+mMOfjD7CiOm1+DDIV2\nEr/ENzxPULdqTzLNmEXlLULjbMGulXCsq18v8HFSoeBtRpUNde//GRfjz1amO2BL\nRCz20zKBicXk2mpKXVrCPuDqC89CmHKTY97pTgXwGpf4r2spG5VjBTLOoqsZqRaP\n5Wdb+C7O8TUl6wuC1ttLUTQBlq7KKSYwFQmSavYxpdVm7F0V4SKhco4I6wLJLcGD\nZaCUA4WGo12ZcqMLV9l1k5bBWzzavVmreq6l0Zp3XKP4vgtl3wDo3kb/bGRqpzTo\nWCNjpjP23tCI41/KWfmrsNaVOCoWRpz36suwoHQTgwKNokzZc2Pln+SoOCDB8b6L\niflKCLOby9EXna7cQNCEsNNmNPRCnbTK0fi1OFR90Rb4IhK7BUQ=\n=kGYL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5284427971f17e306b9518614cc5a8da5963ce4c",
          "sha": "5284427971f17e306b9518614cc5a8da5963ce4c",
          "html_url": "https://github.com/bitcoin/bips/commit/5284427971f17e306b9518614cc5a8da5963ce4c"
        }
      ],
      "message": "Bip Draft: Sending Silent Payments in PSBTs",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-10-21T13:23:44Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-10-19T15:28:39Z"
      },
      "sha": "e2adb50e77562b513d98b730a36168f32ce3ec3e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14764819328,
      "node_id": "HRFPE_lADOAN28mc6apsiAzwAAAANwDUOA",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/14764819328",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T13:23:51Z"
    },
    {
      "event": "reviewed",
      "id": 2393818183,
      "node_id": "PRR_kwDOAN28mc6OrsRH",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2393818183",
      "submitted_at": "2024-10-24T22:25:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    },
    {
      "event": "reviewed",
      "id": 2399834343,
      "node_id": "PRR_kwDOAN28mc6PCpDn",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2399834343",
      "submitted_at": "2024-10-28T18:07:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    },
    {
      "event": "reviewed",
      "id": 2430540807,
      "node_id": "PRR_kwDOAN28mc6Q3xwH",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I did a light review and left a few questions mostly. Your idea makes sense, the content is coming along nicely, and I have found no issues regarding the formatting.\r\n\r\nPerhaps some of the answers to my questions could be recorded as footnotes in the Rationale, where they seem likely to be of interest to future readers.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2430540807",
      "submitted_at": "2024-11-12T20:43:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    },
    {
      "event": "reviewed",
      "id": 2439395304,
      "node_id": "PRR_kwDOAN28mc6RZjfo",
      "url": null,
      "actor": null,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "As specified, computing the sum of ECDH requires some additional validation to ensure the computed script outputs are spendable.\r\n\r\nThis makes some intermediate states of a PSBT that are currently allowed either unsafe (potentially creating unspendable outputs) or with validation introduces potential for failure, because a signer is technically allowed to add ECDH shares for two non-disjoint input sets with a non-empty symmetric difference.\r\n\r\nInstead of introducing this additional validation I think it would be simpler to specify one ECDH share per input, as a per input field, this is actually more compact without DLEQ proofs, as Murch notes, better for privacy, and IMO seems easier to implement, but at the very least I think this needs clarification on how to compute the sum safely.",
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bips/pull/1687#pullrequestreview-2439395304",
      "submitted_at": "2024-11-15T20:58:26Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815770840",
      "pull_request_review_id": 2393818183,
      "id": 1815770840,
      "node_id": "PRRC_kwDOAN28mc5sOnbY",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 63,
      "original_position": 63,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Suggest defining \"Discrete Log Equality Proofs (DLEQ)\" above this / on first use, and discuss overlap with #1689 (if any) or linkage to be made between the two.",
      "created_at": "2024-10-24T22:25:14Z",
      "updated_at": "2024-10-24T22:25:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1815770840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1815770840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1819522208",
      "pull_request_review_id": 2399834343,
      "id": 1819522208,
      "node_id": "PRRC_kwDOAN28mc5sc7Sg",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 58,
      "original_position": 58,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as already noted in the DLEQ gist, this should have a size of 33 bytes instead, as it represents a point on the curve (https://gist.github.com/andrewtoth/df97c3260cc8d12f09d3855ee61322ea?permalink_comment_id=5250407#gistcomment-5250407), and representing it as x-only very likely only increases complexity for the DLEQ proof.",
      "created_at": "2024-10-28T18:07:45Z",
      "updated_at": "2024-10-28T18:07:46Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1819522208",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1819522208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 57,
      "original_start_line": 57,
      "start_side": "RIGHT",
      "line": 58,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838674868",
      "pull_request_review_id": 2430540807,
      "id": 1838674868,
      "node_id": "PRRC_kwDOAN28mc5tl_O0",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 21,
      "original_position": 21,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Consistency nit: \"BIP 370\", but \"BIP352\"",
      "created_at": "2024-11-12T19:49:06Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838674868",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838674868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 20,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838690816",
      "pull_request_review_id": 2430540807,
      "id": 1838690816,
      "node_id": "PRRC_kwDOAN28mc5tmDIA",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 30,
      "original_position": 30,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What creates the requirement to sign with `SIGHASH_ALL`? A quick check suggests that BIP 352 only recommends it, but doesn’t require it, and BIP 370 doesn’t seem to impose such a requirement. I might have missed something of course.",
      "created_at": "2024-11-12T19:55:24Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838690816",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838690816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838693715",
      "pull_request_review_id": 2430540807,
      "id": 1838693715,
      "node_id": "PRRC_kwDOAN28mc5tmD1T",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 31,
      "original_position": 31,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If there is a single signer, why would others need to be able to verify? If there are multiple signers, wouldn’t all signers need to collaborate by putting forth shares rather than \"computing silent payment outputs\"?",
      "created_at": "2024-11-12T19:56:49Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838693715",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838693715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838700325",
      "pull_request_review_id": 2430540807,
      "id": 1838700325,
      "node_id": "PRRC_kwDOAN28mc5tmFcl",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 38,
      "original_position": 38,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Does it make sense to require the presence of either `PSBT_OUT_SCRIPT` or `PSBT_OUT_SP_V0_INFO`? What if there is another future extension of BIP 370 that provides a third option?\r\n\r\nWould it perhaps be sufficient to declare an output that has both the fields `PSBT_OUT_SCRIPT` and `PSBT_OUT_SP_V0_INFO` to make the PSBT invalid (i.e. at most one of these two can be present)?\r\n\r\nPerhaps the interplay of these two fields could be elaborated.",
      "created_at": "2024-11-12T20:01:58Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838700325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838700325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838709641",
      "pull_request_review_id": 2430540807,
      "id": 1838709641,
      "node_id": "PRRC_kwDOAN28mc5tmHuJ",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 100,
      "original_position": 100,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I found this sentence confusing. Does this also hold if both `PSBT_OUT_SP_V0_INFO` and `PSBT_OUT_SCRIPT` are specified on an output?",
      "created_at": "2024-11-12T20:09:32Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838709641",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838709641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 100,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838710334",
      "pull_request_review_id": 2430540807,
      "id": 1838710334,
      "node_id": "PRRC_kwDOAN28mc5tmH4-",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 109,
      "original_position": 109,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I only understood here that both of these fields can be set at the same time. Perhaps that could be explained above where `PSBT_OUT_SP_V0_INFO` is first introduced.",
      "created_at": "2024-11-12T20:10:13Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838710334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838710334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838719699",
      "pull_request_review_id": 2430540807,
      "id": 1838719699,
      "node_id": "PRRC_kwDOAN28mc5tmKLT",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 114,
      "original_position": 114,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This might be a bit out of scope for your PR, but I was just wondering:\r\nSilent Payment transactions disallow inputs spending native segwit outputs with version > 1, but should it perhaps also exclude native segwit outputs with version 1 that are not P2TR inputs? Most of version 1 is yet unencumbered, are Silent Payments robust in regard to Pay to Anchor?",
      "created_at": "2024-11-12T20:18:22Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838719699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838719699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 113,
      "original_start_line": 113,
      "start_side": "RIGHT",
      "line": 114,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838722213",
      "pull_request_review_id": 2430540807,
      "id": 1838722213,
      "node_id": "PRRC_kwDOAN28mc5tmKyl",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 133,
      "original_position": 133,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As mentioned above, this seems to be stricter than BIP 352 itself. Is this intentional?",
      "created_at": "2024-11-12T20:20:37Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838722213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838722213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838729742",
      "pull_request_review_id": 2430540807,
      "id": 1838729742,
      "node_id": "PRRC_kwDOAN28mc5tmMoO",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 148,
      "original_position": 148,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was surprised that we provide a single share and a single DLEQ proof per participant rather than one per input. In case there are multiple participants, this leaks to all other participants which inputs were provided in bulk by one party. I was wondering if there might be better privacy properties if participants provide a separate share for each input, that way all subsequent participants do not know how previous inputs group if the PSBT is passed in a circle rather than shared with all participants after each step. Maybe I’m overthinking this, though.",
      "created_at": "2024-11-12T20:27:11Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838729742",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838729742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838737778",
      "pull_request_review_id": 2430540807,
      "id": 1838737778,
      "node_id": "PRRC_kwDOAN28mc5tmOly",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.\n+\n+Set the value for the key of PSBT_GLOBAL_SP_ECDH_SHARE to ''C''.\n+\n+Compute the DLEQ proof for ''C'' using ''a<sub>n</sub>'' and ''B<sub>scan</sub>''.\n+Set the value for the key of PSBT_GLOBAL_SP_DLEQ to the proof.\n+\n+====Verifying the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer should verify the ECDH shares for all eligible inputs it does not have the private key for using the proofs provided by other Signers.\n+\n+====Computing the Output Scripts====\n+\n+Compute the PSBT_OUT_SCRIPT using the procedure in [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#user-content-Creating_outputs BIP352] but substituting ''a·B<sub>scan</sub>'' with the sum of all PSBT_GLOBAL_SP_ECDH_SHAREs for that scan key.\n+If there are multiple silent payment codes with the same scan key, sort the codes lexicographically in ascending order to determine the ordering of the ''k'' value.\n+If there are multiple silent payment codes with both the same scan and spend keys, sort the subgroup by output index in ascending order.\n+\n+====Change Detection====\n+\n+Updaters may add two PSBT_OUT_BIP32_DERIVATION key-value-pairs with the corresponding derivation path of both the scan and spend keys. The Signer can then use these fields to verify that the silent payment code is change.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 167,
      "original_position": 167,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should the \"Updater\" role perhaps appear before the \"Signer\"? Adding change would probably happen at the same time participants add inputs, so surely before signing?\r\n\r\n",
      "created_at": "2024-11-12T20:34:43Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838737778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838737778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 167,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838743978",
      "pull_request_review_id": 2430540807,
      "id": 1838743978,
      "node_id": "PRRC_kwDOAN28mc5tmQGq",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 13,
      "original_position": 13,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n  License: BSD-2-Clause\r\n  Post-History: https://groups.google.com/g/bitcoindev/c/5G5wzqUXyk4\r\n  Requires: 352, 370\r\n```",
      "created_at": "2024-11-12T20:40:38Z",
      "updated_at": "2024-11-12T20:43:27Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1838743978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1838743978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844322136",
      "pull_request_review_id": 2439395304,
      "id": 1844322136,
      "node_id": "PRRC_kwDOAN28mc5t7h9Y",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 30,
      "original_position": 30,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": 1838690816,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had the same question. The rationale in BIP 352 seems to imply that just forbidding ANYONECANPAY, i.e. that all signatures must fully commit to the input set, which seems sufficient even the PSBT setting?",
      "created_at": "2024-11-15T18:53:55Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844322136",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844322136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844333056",
      "pull_request_review_id": 2439395304,
      "id": 1844333056,
      "node_id": "PRRC_kwDOAN28mc5t7koA",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 125,
      "original_position": 125,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n* Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\r\n* Verify the DLEQ proofs for all inputs it does not have the private keys for.\r\n* If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\r\n```",
      "created_at": "2024-11-15T19:03:17Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844333056",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844333056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 123,
      "original_start_line": 123,
      "start_side": "RIGHT",
      "line": 125,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844379984",
      "pull_request_review_id": 2439395304,
      "id": 1844379984,
      "node_id": "PRRC_kwDOAN28mc5t7wFQ",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 55,
      "original_position": 55,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This seems to imply any subset of the inputs can be specified, presumably for grouping by owner.\r\n\r\nThe main advantage over allowing only one outpoint per ECDH share seems to be a reduction in proving complexity for signers who choose to provide DLEQ proofs, since the 36 byte outpoint outweighs a `a * B_scan` if it were provided in a per input field with an output index or even B_scan as the keydata.\r\n\r\nSome disadvantages:\r\n\r\n1. Mostly theoretical privacy concern: the DLEQ proof is publicly verifiable, and so much stronger heuristic for common ownership than the traditional common input ownership heuristic. Other parties or observers of the PSBT might store or leak such values, which hurts Signers' deniability.\r\n2. If the outpoint lists are not disjoint, then the correct sum might not be computable even if all inputs are accounted for by some share. If every ECDH_SHARE corresponded to only a single outpoint, as long as each signer contributes a value for each input, in any order, the sum can always be computed. If users modify a PSBT over multiple devices with partly overlapping access to private keys, single input shares ensure all intermediate states can lead to a fully signed state, regardless of the order in which the user proceeded.",
      "created_at": "2024-11-15T19:47:35Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844379984",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844379984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844390045",
      "pull_request_review_id": 2439395304,
      "id": 1844390045,
      "node_id": "PRRC_kwDOAN28mc5t7yid",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 68,
      "original_position": 68,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For a given set of outpoints, there are multiple relevant `B_scan` generators all of which share share the same `a` witness in their respective proofs. This could be one batch proof per SP output set, instead of per individual B_scan. Although only a single 64 byte proof per input set is required, the prover and verifier complexity is the same as n proofs, where n is the number of SP outputs.",
      "created_at": "2024-11-15T19:57:51Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844390045",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844390045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 66,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844433999",
      "pull_request_review_id": 2439395304,
      "id": 1844433999,
      "node_id": "PRRC_kwDOAN28mc5t79RP",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 129,
      "original_position": 129,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "IIUC, if it were not for this, blinding the SP_V0_INFO field would be technically be possible.\r\n\r\nSince that would necessarily add another round of communication between the various entities, as only only updaters with access to the blinding keys could set the output.\r\n\r\nA global flag to indicate whether the additional round is required might make sense?\r\n\r\nThis flag might have 3 values, indicating if blinding is not used (allowing signers to update outputs), optional (precluding that), or required in which case all outputs must have SP_V0_INFO, with dummy values used for non-SP outputs. \"required\" or \"mandatory\" blinding is a bit misleading, it's providing deniability as to which outputs use SP, not requiring SP and blinding actually be used.",
      "created_at": "2024-11-15T20:34:42Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844433999",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844433999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": 127,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": 129,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844465220",
      "pull_request_review_id": 2439395304,
      "id": 1844465220,
      "node_id": "PRRC_kwDOAN28mc5t8E5E",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: ?\n+  Layer: Applications\n+  Title: Sending Silent Payments with PSBTs\n+  Author: Andrew Toth <andrewstoth@gmail.com>\n+          Ava Chow <me@achow101.com>\n+          josibake <josibake@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: TBD\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2024-05-14\n+  License: BSD-2-Clause\n+</pre>\n+\n+==Introduction==\n+\n+===Abstract===\n+\n+This document proposes additional fields and updated role responsibilities for BIP 370 PSBTv2\n+which adds support for sending to silent payments as described in BIP352.\n+\n+===Copyright===\n+\n+This BIP is licensed under the 2-clause BSD license.\n+\n+===Motivation===\n+\n+Partially Signed Bitcoin Transaction Version 2 as described in BIP 370 is not compatible with sending to silent payments as described in BIP352. In particular, the output script of a silent payment cannot be computed until after all transaction inputs have been added.\n+Also, any inputs that the Signer has the private keys for must be signed with SIGHASH_ALL and all inputs must not have any scriptPubKeys with Segwit version > 1.\n+Additionally, the silent payment outputs computed by a signer must be verifiable to other entities.\n+Therefore, new fields and role responsibilities must be added to carry, compute, and verify the silent payment data.\n+\n+==Specification==\n+\n+This document specifies new fields and new field inclusion/exclusion requirements.\n+\n+<tt>PSBT_OUT_SCRIPT</tt> is modified to be optional for outputs in silent payments capable PSBTs. If this field is not included in the output, then the field PSBT_OUT_SP_V0_INFO must be included.\n+\n+The new global types are defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Global ECDH Share\n+| <tt>PSBT_GLOBAL_SP_ECDH_SHARE = 0x07</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this ECDH share is for. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><32 byte share></tt>\n+| An ECDH share for a scan key, followed by a list of outpoints. The ECDH shared is computed with ''a * B_scan'', where ''a'' is the sum of all private keys of the inputs matching the list of outpoints, and ''B_scan'' is the scan key of a recipient.\n+|\n+| 0\n+| 2\n+|-\n+| Silent Payment Global DLEQ Proof\n+| <tt>PSBT_GLOBAL_SP_DLEQ = 0x08</tt>\n+| <tt><33 byte scan key> <36 byte outpoint>*</tt>\n+| The scan key and a list of outpoints corresponding to the prevouts of the inputs that this proof covers. The outpoints are composed of a 32 byte txid followed by a 32-bit little endian uint.\n+| <tt><64-byte proof></tt>\n+| A DLEQ proof computed for the matching ECDH share.\n+|\n+| 0\n+| 2\n+|}\n+\n+One new per-output type is defined as follows:\n+\n+{|\n+! Name\n+! <tt><keytype></tt>\n+! <tt><keydata></tt>\n+! <tt><keydata></tt> Description\n+! <tt><valuedata></tt>\n+! <tt><valuedata></tt> Description\n+! Versions Requiring Inclusion\n+! Versions Requiring Exclusion\n+! Versions Allowing Inclusion\n+|-\n+| Silent Payment Data\n+| <tt>PSBT_OUT_SP_V0_INFO = 0x08</tt>\n+| None\n+| No key data\n+| <tt><33 byte scan key> <33 byte spend key></tt>\n+| The scan and spend public keys from the silent payments address.\n+|\n+| 0\n+| 2\n+|}\n+\n+===Unique Identification===\n+\n+Silent payment capable PSBTs can be uniquely identified the same way as PSBTv2s, except when including silent payment outputs. For silent payment capable PSBTs, all silent payment outputs must use the PSBT_OUT_SP_V0_INFO instead of PSBT_OUT_SCRIPT as the output script when creating the unsigned transaction used for unique identification.\n+\n+==Roles==\n+\n+This document modifies some existing roles.\n+\n+===Constructor===\n+\n+All rules must be followed from PSBTv2 for this role, with the following exception:\n+When an output is added, it must have either PSBT_OUT_SCRIPT or PSBT_OUT_SP_V0_INFO, or both, set.\n+\n+Additionally to PSBTv2, the Constructor must also follow additional rules:\n+\n+Inputs spending an output with script using Segwit version > 1 may only be added if there are no outputs with PSBT_OUT_SP_V0_INFO set.\n+Outputs with PSBT_OUT_SP_V0_INFO set may only be added if there are no inputs spending an output script using Segwit version > 1.\n+\n+===Signer===\n+\n+All rules must be followed from PSBTv2 for this role. If there are any outputs with PSBT_OUT_SP_V0_INFO set, then the following additional rules must also be adhered to:\n+\n+If any input is spending an output with script using Segwit version > 1, the Signer must fail.\n+\n+For all outputs with PSBT_OUT_SP_V0_INFO set, the Signer should:\n+ - Compute and set an ECDH share and DLEQ proof using all inputs it has the private key for.\n+ - Verify the DLEQ proofs for all inputs it does not have the private keys for.\n+ - If all eligible inputs have an ECDH share, compute and set the PSBT_OUT_SCRIPT.\n+\n+If the Signer sets any missing PSBT_OUT_SCRIPTs, it must set the Inputs Modifiable flag to False.\n+\n+If any output does not have PSBT_OUT_SCRIPT set, the Signer must not yet add a signature.\n+\n+The Signer should additionally compute the silent payment addresses, optionally showing this data to the user instead of the computed segwit v1 addresses.\n+\n+If a sighash type is provided and there are silent payment outputs present, the signer must fail if the sighash type is not SIGHASH_ALL.\n+If a sighash type is not provided and there are silent payment outputs present, the signer must sign using SIGHASH_ALL.\n+\n+====Computing the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer may generate a proof for other entities to generate the output scripts and verify that the output scripts were generated correctly.\n+\n+Generate a global ECDH share for each scan key ''B<sub>scan</sub>'' and all eligible inputs the Signer has private keys for as follows:\n+\n+Using the notation from [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#specification BIP352]\n+\n+* Let ''A<sub>n</sub>'' be the sum of the public keys ''A'' of all eligible inputs\n+* Let ''a<sub>n</sub>'' be the sum of the private keys ''a'' of all eligible inputs\n+* Let ''C =  a<sub>n</sub>·B<sub>scan</sub>''\n+\n+Use a key ''B<sub>scan</sub>'' followed by a list of the outpoints of all eligible inputs.\n+\n+Set the value for the key of PSBT_GLOBAL_SP_ECDH_SHARE to ''C''.\n+\n+Compute the DLEQ proof for ''C'' using ''a<sub>n</sub>'' and ''B<sub>scan</sub>''.\n+Set the value for the key of PSBT_GLOBAL_SP_DLEQ to the proof.\n+\n+====Verifying the DLEQ Proof====\n+\n+For each output with PSBT_OUT_SP_V0_INFO set, the Signer should verify the ECDH shares for all eligible inputs it does not have the private key for using the proofs provided by other Signers.\n+\n+====Computing the Output Scripts====\n+\n+Compute the PSBT_OUT_SCRIPT using the procedure in [https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#user-content-Creating_outputs BIP352] but substituting ''a·B<sub>scan</sub>'' with the sum of all PSBT_GLOBAL_SP_ECDH_SHAREs for that scan key.",
      "path": "bip-PSBT-SP.mediawiki",
      "position": 161,
      "original_position": 161,
      "commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "original_commit_id": "e2adb50e77562b513d98b730a36168f32ce3ec3e",
      "in_reply_to_id": null,
      "user": {
        "login": "nothingmuch",
        "id": 14242,
        "node_id": "MDQ6VXNlcjE0MjQy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nothingmuch",
        "html_url": "https://github.com/nothingmuch",
        "followers_url": "https://api.github.com/users/nothingmuch/followers",
        "following_url": "https://api.github.com/users/nothingmuch/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nothingmuch/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nothingmuch/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nothingmuch/subscriptions",
        "organizations_url": "https://api.github.com/users/nothingmuch/orgs",
        "repos_url": "https://api.github.com/users/nothingmuch/repos",
        "events_url": "https://api.github.com/users/nothingmuch/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nothingmuch/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Assuming my suggestion to make shares be one per input is rejected, this needs to verify that the sets of outpoints in all ECDH_SHARE fields for a given scan key form a valid partition of the [BIP 352 input set](https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#inputs-for-shared-secret-derivation) (no duplicates, no missing outpoints) before computing the sum of the values, or this sum might differ from `b_scan·A` where `A` is also is computed as in [BIP 352 scanning](https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki#scanning).",
      "created_at": "2024-11-15T20:44:02Z",
      "updated_at": "2024-11-15T20:58:26Z",
      "html_url": "https://github.com/bitcoin/bips/pull/1687#discussion_r1844465220",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/1844465220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/1687"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 161,
      "original_line": 161,
      "side": "RIGHT"
    }
  ]
}