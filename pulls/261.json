{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/261",
    "id": 53417938,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTM0MTc5Mzg=",
    "html_url": "https://github.com/bitcoin/bips/pull/261",
    "diff_url": "https://github.com/bitcoin/bips/pull/261.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/261.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/261",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/261/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/261/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/261/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/b57eea446cbd99088da1a9badc2fb85396982b9f",
    "number": 261,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP 125: Opt-in Full Replace-by-Fee Signaling",
    "user": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@petertodd and I present the following proposed BIP describing opt-in full-RBF signaling, as requested in the [2015-12-03 bitcoin-dev IRC meeting](http://www.erisian.com.au/meetbot/bitcoin-dev/2015/bitcoin-dev.2015-12-03-18.59.html).\n\nOpt-in full-RBF has previously been [discussed on the mailing list](http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011783.html) and support for it has been [added to Bitcoin Core](https://github.com/bitcoin/bitcoin/pull/6871), so I humbly request the assignment of a BIP number from the BIP editor, @gmaxwell.\n\nUpon receipt of the number assignment and fixing any initial issues found with this proposed text, I will post a copy of this BIP to the mailing list for interested developers to read.\n",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2015-12-11T17:04:07Z",
    "updated_at": "2016-01-08T17:50:46Z",
    "closed_at": "2016-01-08T17:50:46Z",
    "mergeable_state": "unknown",
    "merged_at": "2016-01-08T17:50:46Z",
    "merge_commit_sha": "0733a1d78689b6e157646975c5c1dec0dfa4b9be",
    "assignee": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "harding:opt-in-full-rbf",
      "ref": "opt-in-full-rbf",
      "sha": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 18313951,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODMxMzk1MQ==",
        "name": "bips",
        "full_name": "harding/bips",
        "owner": {
          "login": "harding",
          "id": 61096,
          "node_id": "MDQ6VXNlcjYxMDk2",
          "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/harding",
          "html_url": "https://github.com/harding",
          "followers_url": "https://api.github.com/users/harding/followers",
          "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
          "organizations_url": "https://api.github.com/users/harding/orgs",
          "repos_url": "https://api.github.com/users/harding/repos",
          "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/harding/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/harding/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/harding/bips",
        "archive_url": "https://api.github.com/repos/harding/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/harding/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/harding/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/harding/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/harding/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/harding/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/harding/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/harding/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/harding/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/harding/bips/contributors",
        "deployments_url": "https://api.github.com/repos/harding/bips/deployments",
        "downloads_url": "https://api.github.com/repos/harding/bips/downloads",
        "events_url": "https://api.github.com/repos/harding/bips/events",
        "forks_url": "https://api.github.com/repos/harding/bips/forks",
        "git_commits_url": "https://api.github.com/repos/harding/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/harding/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/harding/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/harding/bips.git",
        "issue_comment_url": "https://api.github.com/repos/harding/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/harding/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/harding/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/harding/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/harding/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/harding/bips/languages",
        "merges_url": "https://api.github.com/repos/harding/bips/merges",
        "milestones_url": "https://api.github.com/repos/harding/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/harding/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/harding/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/harding/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:harding/bips.git",
        "stargazers_url": "https://api.github.com/repos/harding/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/harding/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/harding/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/harding/bips/subscription",
        "tags_url": "https://api.github.com/repos/harding/bips/tags",
        "teams_url": "https://api.github.com/repos/harding/bips/teams",
        "trees_url": "https://api.github.com/repos/harding/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/harding/bips.git",
        "hooks_url": "https://api.github.com/repos/harding/bips/hooks",
        "svn_url": "https://github.com/harding/bips",
        "homepage": "bitcoin.org",
        "language": "Protocol Buffer",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 5550,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-08-20T12:31:04Z",
        "created_at": "2014-04-01T01:28:49Z",
        "updated_at": "2016-01-11T09:56:16Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6bfc0151a7c8fcf4726ec35a0a8bb19ce1f6b2d1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5535,
        "stargazers_count": 8220,
        "watchers_count": 8220,
        "size": 13787,
        "default_branch": "master",
        "open_issues_count": 112,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T12:09:15Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-08-01T09:08:43Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 193,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 22,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6YjU3ZWVhNDQ2Y2JkOTkwODhkYTFhOWJhZGMyZmI4NTM5Njk4MmI5Zg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/b57eea446cbd99088da1a9badc2fb85396982b9f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/b57eea446cbd99088da1a9badc2fb85396982b9f",
      "tree": {
        "sha": "37f255beaf83358fc96b648d159828ac858a2841",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/37f255beaf83358fc96b648d159828ac858a2841"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 37f255beaf83358fc96b648d159828ac858a2841\nparent 6bfc0151a7c8fcf4726ec35a0a8bb19ce1f6b2d1\nauthor David A. Harding <dave@dtrt.org> 1449278673 -0500\ncommitter David A. Harding <dave@dtrt.org> 1449852359 -0500\n\nAdd opt-in full-RBF signaling BIP\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJWav3WAAoJEEspww/ynsS3tbcIAINea+z2PFNtHIgtA2F2P47H\nKWKBcbZFJ7v0tJZjKfRko8guYyyYpk6HU+X7mSdXpc6rrpSJQO71hG8yF5tzexIp\nS50ukkdLAqZ7fx7A5JPwibuuUlzwbef44TE8Rp9L31B1xThKG7Gprr2WLSAuXzpG\nHdYXtkMoU/0yEJWzpLvX4rUZqr3A0L/VE180OtOMu4qbah7/fsbhbVOayo6pT4pa\niloVQYSxAxQHgSo5oDx4Oi5sKciAz2Khpv403bTyLDZPiH/psUWP6VScFl+kIiAY\nJXL2zbzl1NAV0nSewVbaoAcXnlfQaax7tbS+TFO/NSNhBcMXC1NL1qiCTK/a378=\n=HRIv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6bfc0151a7c8fcf4726ec35a0a8bb19ce1f6b2d1",
          "sha": "6bfc0151a7c8fcf4726ec35a0a8bb19ce1f6b2d1",
          "html_url": "https://github.com/bitcoin/bips/commit/6bfc0151a7c8fcf4726ec35a0a8bb19ce1f6b2d1"
        }
      ],
      "message": "Add opt-in full-RBF signaling BIP",
      "committer": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2015-12-11T16:45:59Z"
      },
      "author": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2015-12-05T01:24:33Z"
      },
      "sha": "b57eea446cbd99088da1a9badc2fb85396982b9f"
    },
    {
      "event": "mentioned",
      "id": 489559969,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDg5NTU5OTY5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/489559969",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-11T17:04:07Z"
    },
    {
      "event": "subscribed",
      "id": 489559970,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4OTU1OTk3MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/489559970",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-11T17:04:07Z"
    },
    {
      "event": "mentioned",
      "id": 489559971,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDg5NTU5OTcx",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/489559971",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-11T17:04:07Z"
    },
    {
      "event": "subscribed",
      "id": 489559972,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4OTU1OTk3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/489559972",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-11T17:04:07Z"
    },
    {
      "event": "commented",
      "id": 163995533,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mzk5NTUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/163995533",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-11T17:19:36Z",
      "updated_at": "2015-12-11T17:19:36Z",
      "author_association": "MEMBER",
      "body": "Thanks for writing this up!  This looks good to me.\n\n@petertodd How should wallet authors be checking if a new transaction has an ancestor that has signaled RBF?  That seems like something we ought to expose more easily via RPC somehow, perhaps?\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/261#issuecomment-163995533",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/261"
    },
    {
      "event": "mentioned",
      "id": 489575177,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDg5NTc1MTc3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/489575177",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-11T17:19:36Z"
    },
    {
      "event": "subscribed",
      "id": 489575178,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ4OTU3NTE3OA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/489575178",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-11T17:19:36Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTE5MjY6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTE5Mjc6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTE5Mjg6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTE5MzA6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTE5MzM6djI=",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "labeled",
      "id": 490021573,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5MDAyMTU3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490021573",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T07:04:37Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 490021606,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ5MDAyMTYwNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490021606",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T07:04:53Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "assigned",
      "id": 490021609,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQ0OTAwMjE2MDk=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490021609",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T07:04:55Z",
      "assignee": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "mentioned",
      "id": 490094777,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDkwMDk0Nzc3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490094777",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T13:42:38Z"
    },
    {
      "event": "subscribed",
      "id": 490094778,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5MDA5NDc3OA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490094778",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T13:42:38Z"
    },
    {
      "event": "mentioned",
      "id": 490167058,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDkwMTY3MDU4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490167058",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T19:06:02Z"
    },
    {
      "event": "subscribed",
      "id": 490167059,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5MDE2NzA1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490167059",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T19:06:02Z"
    },
    {
      "event": "mentioned",
      "id": 490187934,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDkwMTg3OTM0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490187934",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T20:19:19Z"
    },
    {
      "event": "subscribed",
      "id": 490187935,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5MDE4NzkzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490187935",
      "actor": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T20:19:19Z"
    },
    {
      "event": "mentioned",
      "id": 490187936,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDkwMTg3OTM2",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490187936",
      "actor": {
        "login": "voisine",
        "id": 316879,
        "node_id": "MDQ6VXNlcjMxNjg3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/316879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/voisine",
        "html_url": "https://github.com/voisine",
        "followers_url": "https://api.github.com/users/voisine/followers",
        "following_url": "https://api.github.com/users/voisine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/voisine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/voisine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/voisine/subscriptions",
        "organizations_url": "https://api.github.com/users/voisine/orgs",
        "repos_url": "https://api.github.com/users/voisine/repos",
        "events_url": "https://api.github.com/users/voisine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/voisine/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T20:19:19Z"
    },
    {
      "event": "subscribed",
      "id": 490187937,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5MDE4NzkzNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490187937",
      "actor": {
        "login": "voisine",
        "id": 316879,
        "node_id": "MDQ6VXNlcjMxNjg3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/316879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/voisine",
        "html_url": "https://github.com/voisine",
        "followers_url": "https://api.github.com/users/voisine/followers",
        "following_url": "https://api.github.com/users/voisine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/voisine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/voisine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/voisine/subscriptions",
        "organizations_url": "https://api.github.com/users/voisine/orgs",
        "repos_url": "https://api.github.com/users/voisine/repos",
        "events_url": "https://api.github.com/users/voisine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/voisine/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T20:19:19Z"
    },
    {
      "event": "mentioned",
      "id": 490197840,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDkwMTk3ODQw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490197840",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T21:03:19Z"
    },
    {
      "event": "subscribed",
      "id": 490197841,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5MDE5Nzg0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/490197841",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-12T21:03:19Z"
    },
    {
      "event": "mentioned",
      "id": 494773334,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk0NzczMzM0",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/494773334",
      "actor": {
        "login": "dabura667",
        "id": 6586275,
        "node_id": "MDQ6VXNlcjY1ODYyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6586275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabura667",
        "html_url": "https://github.com/dabura667",
        "followers_url": "https://api.github.com/users/dabura667/followers",
        "following_url": "https://api.github.com/users/dabura667/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dabura667/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dabura667/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dabura667/subscriptions",
        "organizations_url": "https://api.github.com/users/dabura667/orgs",
        "repos_url": "https://api.github.com/users/dabura667/repos",
        "events_url": "https://api.github.com/users/dabura667/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dabura667/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-17T15:03:51Z"
    },
    {
      "event": "subscribed",
      "id": 494773336,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5NDc3MzMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/494773336",
      "actor": {
        "login": "dabura667",
        "id": 6586275,
        "node_id": "MDQ6VXNlcjY1ODYyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6586275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabura667",
        "html_url": "https://github.com/dabura667",
        "followers_url": "https://api.github.com/users/dabura667/followers",
        "following_url": "https://api.github.com/users/dabura667/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dabura667/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dabura667/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dabura667/subscriptions",
        "organizations_url": "https://api.github.com/users/dabura667/orgs",
        "repos_url": "https://api.github.com/users/dabura667/repos",
        "events_url": "https://api.github.com/users/dabura667/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dabura667/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-17T15:03:51Z"
    },
    {
      "event": "mentioned",
      "id": 495781687,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDk1NzgxNjg3",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/495781687",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-18T12:31:25Z"
    },
    {
      "event": "subscribed",
      "id": 495781689,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ5NTc4MTY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/495781689",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2015-12-18T12:31:25Z"
    },
    {
      "event": "unassigned",
      "id": 509635986,
      "node_id": "MDE1OlVuYXNzaWduZWRFdmVudDUwOTYzNTk4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509635986",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:11:14Z",
      "assignee": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "assigned",
      "id": 509635987,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQ1MDk2MzU5ODc=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509635987",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:11:14Z",
      "assignee": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "renamed",
      "id": 509661449,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NTA5NjYxNDQ5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509661449",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:33:35Z",
      "rename": {
        "from": "Add opt-in full-RBF signaling BIP",
        "to": "BIP 125: Opt-in Full Replace-by-Fee Signaling"
      }
    },
    {
      "event": "unlabeled",
      "id": 509661560,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NTA5NjYxNTYw",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509661560",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:33:41Z",
      "label": {
        "name": "Needs number assignment",
        "color": "eb6420"
      }
    },
    {
      "event": "merged",
      "id": 509680178,
      "node_id": "MDExOk1lcmdlZEV2ZW50NTA5NjgwMTc4",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509680178",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/b57eea446cbd99088da1a9badc2fb85396982b9f",
      "created_at": "2016-01-08T17:50:46Z"
    },
    {
      "event": "closed",
      "id": 509680179,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTA5NjgwMTc5",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/509680179",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-01-08T17:50:46Z"
    },
    {
      "event": "referenced",
      "id": 1433567984,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MzM1Njc5ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1433567984",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c93cd75d880c82fb2ff7173a99d9f49abf75f8bf",
      "commit_url": "https://api.github.com/repos/luke-jr/bips/commits/c93cd75d880c82fb2ff7173a99d9f49abf75f8bf",
      "created_at": "2018-01-20T04:21:29Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47383659",
      "pull_request_review_id": null,
      "id": 47383659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgzNjU5",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.\n+\n+Because descendant transactions may also be replaceable under this\n+policy through inherited signaling, any method used to process opt-in\n+full-RBF transactions should be inherited by any descendant transactions\n+for as long as any ancestor opt-in full-RBF transactions remain\n+unconfirmed.\n+\n+===Spending wallet policy===\n+\n+Wallets that don't want to signal replaceability should use either a max\n+sequence number (0xffffffff) or a sequence number of (0xffffffff-1) when\n+then also want to use locktime; all known wallets currently do this.\n+They should also take care not to spend any unconfirmed transaction that\n+signals replaceability explicitly or through inherited signaling; most wallets also\n+currently do this by not spending any unconfirmed transactions except\n+for those they created themselves.\n+\n+Wallets that do want to make replacements should use explicit signaling\n+and meet the criteria described above in the Implementation Details\n+section. A\n+[https://en.bitcoin.it/wiki/Transaction_replacement Bitcoin Wiki page]\n+has been created to help wallet authors track deployed mempool policies\n+relating to transaction replacement.\n+\n+The initial implementation makes use of P2P protocol reject messages for\n+rejected replacements, allowing P2P clients to determine whether their\n+replacements were initially accepted by their peers. Standard P2P\n+lightweight client practice of sending to some peers while listening for\n+relays from other peers should allow clients to determine whether the\n+replacement has propagated.\n+\n+==Motivation==\n+\n+Satoshi Nakamoto's original Bitcoin implementation provided the\n+nSequence number field in each input to\n+[https://github.com/trottier/original-bitcoin/blob/master/src/main.cpp#L434 allow replacement]\n+of transactions containing that input within the\n+mempool. When receiving replacements, nodes were supposed to replace\n+transactions whose inputs had lower sequence numbers with transactions\n+that had higher sequence numbers.\n+\n+In that implementation, replacement transactions did not have to pay\n+additional fees, so there was no direct incentive for miners to\n+include the replacement and no built-in rate limiting that prevented\n+overuse of relay node bandwidth. Nakamoto\n+[https://github.com/bitcoin/bitcoin/commit/05454818dc7ed92f577a1a1ef6798049f17a52e7#diff-118fcbaaba162ba17933c7893247df3aR522 removed replacement]\n+from Bitcoin version 0.3.12, leaving only the\n+comment, \"Disable replacement feature for now\".\n+\n+Replacing transactions with higher-fee transactions provided a way for\n+spenders to align their desires with miners, but by the time a\n+Replace-by-Fee (RBF) patch was available to re-enable replacement, some\n+receivers had begun to expect that the first version of a transaction\n+they saw was highly likely to be the version of the transaction to be\n+confirmed, and so some users advocated that replacement should be\n+disallowed.\n+\n+To address those concerns, a variation on RBF was created that\n+required that the replacement transaction pay all of same outputs as\n+the original transaction in equal or greater amount.  This was called\n+RBF First Seen Safe (RBF-FSS), and the original RBF became known as\n+full-RBF.  Although agreeable to recipients who relied on the\n+first-seen version of a transaction, each use of RBF-FSS required\n+adding an extra input to a transaction, resulting in wallets being\n+unable to use it if they had no spare inputs, a loss of privacy when\n+inputs from different origins get used in the same transaction, and a\n+wasteful increase in transaction byte size.\n+\n+Opt-in full-RBF uses Nakamoto's original semantics (with a slight\n+tweak to allow locktime users to opt-out) to signal that replacement\n+is possible, providing first-seen users with the ability to ignore\n+those transactions while also allowing for the efficiency benefits\n+of full-RBF.\n+\n+There are no known problematic interactions between opt-in full-RBF and\n+other uses of nSequence. Specifically, opt-in full-RBF is compatible\n+with consensus-enforced locktime as provided in the Bitcoin 0.1\n+implementation, draft BIP68 (Relative lock-time using consensus-enforced\n+sequence numbers), and draft BIP112 (CHECKSEQUENCEVERIFY).",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 150,
      "original_position": 150,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "amacneil",
        "id": 637671,
        "node_id": "MDQ6VXNlcjYzNzY3MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/637671?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amacneil",
        "html_url": "https://github.com/amacneil",
        "followers_url": "https://api.github.com/users/amacneil/followers",
        "following_url": "https://api.github.com/users/amacneil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amacneil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amacneil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amacneil/subscriptions",
        "organizations_url": "https://api.github.com/users/amacneil/orgs",
        "repos_url": "https://api.github.com/users/amacneil/repos",
        "events_url": "https://api.github.com/users/amacneil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amacneil/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps add a clarification that all BIP68/BIP112 transactions will by definition now be opting into RBF?\n",
      "created_at": "2015-12-11T17:55:17Z",
      "updated_at": "2015-12-11T17:55:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47383659",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47383659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428447",
      "pull_request_review_id": null,
      "id": 47428447,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4NDQ3",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This erroneously implies non-signalling transactions are significantly safer.\n",
      "created_at": "2015-12-12T06:56:54Z",
      "updated_at": "2015-12-12T06:56:54Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47428447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428454",
      "pull_request_review_id": null,
      "id": 47428454,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4NDU0",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 28,
      "original_position": 28,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They may also opt not to.\n",
      "created_at": "2015-12-12T06:57:52Z",
      "updated_at": "2015-12-12T06:57:52Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47428454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428473",
      "pull_request_review_id": null,
      "id": 47428473,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4NDcz",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 71,
      "original_position": 71,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IMO wallets should not treat these any differently.\n",
      "created_at": "2015-12-12T06:59:59Z",
      "updated_at": "2015-12-12T06:59:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47428473",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428531",
      "pull_request_review_id": null,
      "id": 47428531,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4NTMx",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.\n+\n+Because descendant transactions may also be replaceable under this\n+policy through inherited signaling, any method used to process opt-in\n+full-RBF transactions should be inherited by any descendant transactions\n+for as long as any ancestor opt-in full-RBF transactions remain\n+unconfirmed.\n+\n+===Spending wallet policy===\n+\n+Wallets that don't want to signal replaceability should use either a max\n+sequence number (0xffffffff) or a sequence number of (0xffffffff-1) when\n+then also want to use locktime; all known wallets currently do this.\n+They should also take care not to spend any unconfirmed transaction that\n+signals replaceability explicitly or through inherited signaling; most wallets also\n+currently do this by not spending any unconfirmed transactions except\n+for those they created themselves.\n+\n+Wallets that do want to make replacements should use explicit signaling\n+and meet the criteria described above in the Implementation Details\n+section. A\n+[https://en.bitcoin.it/wiki/Transaction_replacement Bitcoin Wiki page]\n+has been created to help wallet authors track deployed mempool policies\n+relating to transaction replacement.\n+\n+The initial implementation makes use of P2P protocol reject messages for\n+rejected replacements, allowing P2P clients to determine whether their\n+replacements were initially accepted by their peers. Standard P2P\n+lightweight client practice of sending to some peers while listening for\n+relays from other peers should allow clients to determine whether the\n+replacement has propagated.\n+\n+==Motivation==\n+\n+Satoshi Nakamoto's original Bitcoin implementation provided the\n+nSequence number field in each input to\n+[https://github.com/trottier/original-bitcoin/blob/master/src/main.cpp#L434 allow replacement]\n+of transactions containing that input within the\n+mempool. When receiving replacements, nodes were supposed to replace\n+transactions whose inputs had lower sequence numbers with transactions\n+that had higher sequence numbers.\n+\n+In that implementation, replacement transactions did not have to pay\n+additional fees, so there was no direct incentive for miners to\n+include the replacement and no built-in rate limiting that prevented\n+overuse of relay node bandwidth. Nakamoto\n+[https://github.com/bitcoin/bitcoin/commit/05454818dc7ed92f577a1a1ef6798049f17a52e7#diff-118fcbaaba162ba17933c7893247df3aR522 removed replacement]\n+from Bitcoin version 0.3.12, leaving only the\n+comment, \"Disable replacement feature for now\".\n+\n+Replacing transactions with higher-fee transactions provided a way for\n+spenders to align their desires with miners, but by the time a\n+Replace-by-Fee (RBF) patch was available to re-enable replacement, some\n+receivers had begun to expect that the first version of a transaction\n+they saw was highly likely to be the version of the transaction to be\n+confirmed, and so some users advocated that replacement should be\n+disallowed.\n+\n+To address those concerns, a variation on RBF was created that\n+required that the replacement transaction pay all of same outputs as\n+the original transaction in equal or greater amount.  This was called\n+RBF First Seen Safe (RBF-FSS), and the original RBF became known as\n+full-RBF.  Although agreeable to recipients who relied on the\n+first-seen version of a transaction, each use of RBF-FSS required\n+adding an extra input to a transaction, resulting in wallets being\n+unable to use it if they had no spare inputs, a loss of privacy when\n+inputs from different origins get used in the same transaction, and a\n+wasteful increase in transaction byte size.\n+\n+Opt-in full-RBF uses Nakamoto's original semantics (with a slight\n+tweak to allow locktime users to opt-out) to signal that replacement\n+is possible, providing first-seen users with the ability to ignore\n+those transactions while also allowing for the efficiency benefits\n+of full-RBF.\n+\n+There are no known problematic interactions between opt-in full-RBF and\n+other uses of nSequence. Specifically, opt-in full-RBF is compatible\n+with consensus-enforced locktime as provided in the Bitcoin 0.1\n+implementation, draft BIP68 (Relative lock-time using consensus-enforced\n+sequence numbers), and draft BIP112 (CHECKSEQUENCEVERIFY).\n+\n+==Deployment==\n+\n+Now, and since Bitcoin's first release, 100% of the network hash rate\n+mines transactions using opt-in full-RBF semantics (sequence less than\n+(0xffffffff - 1)).\n+\n+Opt-in full-RBF as a default mempool replacement policy among nodes",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 158,
      "original_position": 158,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps this ought to mention how nodes can disable the signalling (either to never-RBF or always-RBF)?\n",
      "created_at": "2015-12-12T07:04:20Z",
      "updated_at": "2015-12-12T07:04:20Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47428531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47428531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 158,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47431701",
      "pull_request_review_id": null,
      "id": 47431701,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNzAx",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@luke-jr I don't think it implies that, but I agree that it doesn't stop people from making that inference.  And why should it?  There seem to be plenty of people who do think non-replaceable transactions are safer than replaceable transactions, and the purpose of this document isn't to challenge their preconceptions but rather to inform them about a new policy which will make creating transaction replacements easier.\n",
      "created_at": "2015-12-12T13:42:38Z",
      "updated_at": "2015-12-12T13:42:38Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47431701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47431701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47431713",
      "pull_request_review_id": null,
      "id": 47431713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNzEz",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 28,
      "original_position": 28,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed; I think that's implied by the word \"may\" on line 26.  Is there a specific text change you're advocating for here?\n",
      "created_at": "2015-12-12T13:43:23Z",
      "updated_at": "2015-12-12T13:43:23Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47431713",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47431713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47431975",
      "pull_request_review_id": null,
      "id": 47431975,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxOTc1",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 71,
      "original_position": 71,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "harding",
        "id": 61096,
        "node_id": "MDQ6VXNlcjYxMDk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harding",
        "html_url": "https://github.com/harding",
        "followers_url": "https://api.github.com/users/harding/followers",
        "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
        "organizations_url": "https://api.github.com/users/harding/orgs",
        "repos_url": "https://api.github.com/users/harding/repos",
        "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/harding/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the UX is really hard here.  Unconfirmed transactions of any kind are insecure compared to even 1-conf transactions, however because most users mostly deal with reliable partners, they will only rarely ever have a transaction fail to confirm---so they are lulled into a false belief that unconfirmed transactions are fundamentally reliable.\n\nAlthough I don't think opt-in full-RBF doesn't significantly changes the dynamics for serious double spenders, it does make it possible for people with less technical knowledge and fewer resources to execute successful double spends.  That's a change from the current status quo, and I think it should be communicated to users.\n\nHowever, I agree that we don't want to imply that wallets must do anything differently.  If there's a phrasing change you have in mind, perhaps changing \"should consider\" to \"may want to consider\", I'd be happy to hear it.\n",
      "created_at": "2015-12-12T14:08:15Z",
      "updated_at": "2015-12-12T14:08:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47431975",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47431975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47435389",
      "pull_request_review_id": null,
      "id": 47435389,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1Mzg5",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 71,
      "original_position": 71,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "voisine",
        "id": 316879,
        "node_id": "MDQ6VXNlcjMxNjg3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/316879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/voisine",
        "html_url": "https://github.com/voisine",
        "followers_url": "https://api.github.com/users/voisine/followers",
        "following_url": "https://api.github.com/users/voisine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/voisine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/voisine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/voisine/subscriptions",
        "organizations_url": "https://api.github.com/users/voisine/orgs",
        "repos_url": "https://api.github.com/users/voisine/repos",
        "events_url": "https://api.github.com/users/voisine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/voisine/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@luke-jr Double-spending a non-RBF transaction (lets say with all inputs confirmed) does require more resources and is less likely to succeed than with RBF, wouldn't you agree? And if miners and pools in future were to communicate which transactions they have accepted into their block templates, and/or broadcast partial block solutions proving they've expended hashing power attempting to mine them, that would raise the cost and difficulty of a successful 0-conf double-spend even further.\n\nI think we can solve the problem of 0-conf security well enough to make it practical for the majority of typical use cases.\n",
      "created_at": "2015-12-12T19:06:02Z",
      "updated_at": "2015-12-12T19:06:59Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47435389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47435389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47436239",
      "pull_request_review_id": null,
      "id": 47436239,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2MjM5",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 71,
      "original_position": 71,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@harding That still sounds too much like a recommendation.\n\n@voisine It doesn't require more resources, and isn't _much_ less likely to succeed if you do it right.\n",
      "created_at": "2015-12-12T20:19:19Z",
      "updated_at": "2015-12-12T20:19:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47436239",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47436239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47436789",
      "pull_request_review_id": null,
      "id": 47436789,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2Nzg5",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 71,
      "original_position": 71,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "voisine",
        "id": 316879,
        "node_id": "MDQ6VXNlcjMxNjg3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/316879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/voisine",
        "html_url": "https://github.com/voisine",
        "followers_url": "https://api.github.com/users/voisine/followers",
        "following_url": "https://api.github.com/users/voisine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/voisine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/voisine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/voisine/subscriptions",
        "organizations_url": "https://api.github.com/users/voisine/orgs",
        "repos_url": "https://api.github.com/users/voisine/repos",
        "events_url": "https://api.github.com/users/voisine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/voisine/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@luke-jr to double spend a 0-conf with a high rate of success, you would need to broadcast your double spend directly to a large portion of hashing power while simultaneously getting the legitimate tx to the victim. If we assume the victim is listening to random nodes on the network, then this does seem to have a not-insignificantly lower chance of success than with RBF. Please disabuse me of this notion if I'm missing something. We want to accurately communicate the risks while keeping the user experience competitive with other payment methods to the greatest extent possible.\n",
      "created_at": "2015-12-12T21:03:19Z",
      "updated_at": "2015-12-12T21:03:19Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47436789",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47436789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47437121",
      "pull_request_review_id": null,
      "id": 47437121,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTIx",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 71,
      "original_position": 71,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If we assume the victim is listening to random nodes on the network, \n\nThis assumption does not usually hold. Furthermore, the legitimate tx could be tiny and quick to propagate the non-mining nodes, while the miners could receive large transactions that are slow to move beyond them.\n\nAdditionally, you are assuming a naive case of legitimate-vs-fraud competition. If an attacker simply spends the same coins with N merchants at once, all N transactions are legitimate and N-1 are guaranteed to lose out.\n",
      "created_at": "2015-12-12T21:35:16Z",
      "updated_at": "2015-12-12T21:35:16Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47437121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47437121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47439667",
      "pull_request_review_id": null,
      "id": 47439667,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM5NjY3",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.\n+\n+Because descendant transactions may also be replaceable under this\n+policy through inherited signaling, any method used to process opt-in\n+full-RBF transactions should be inherited by any descendant transactions\n+for as long as any ancestor opt-in full-RBF transactions remain\n+unconfirmed.\n+\n+===Spending wallet policy===\n+\n+Wallets that don't want to signal replaceability should use either a max\n+sequence number (0xffffffff) or a sequence number of (0xffffffff-1) when\n+then also want to use locktime; all known wallets currently do this.\n+They should also take care not to spend any unconfirmed transaction that\n+signals replaceability explicitly or through inherited signaling; most wallets also\n+currently do this by not spending any unconfirmed transactions except\n+for those they created themselves.\n+\n+Wallets that do want to make replacements should use explicit signaling\n+and meet the criteria described above in the Implementation Details\n+section. A\n+[https://en.bitcoin.it/wiki/Transaction_replacement Bitcoin Wiki page]\n+has been created to help wallet authors track deployed mempool policies\n+relating to transaction replacement.\n+\n+The initial implementation makes use of P2P protocol reject messages for\n+rejected replacements, allowing P2P clients to determine whether their\n+replacements were initially accepted by their peers. Standard P2P\n+lightweight client practice of sending to some peers while listening for\n+relays from other peers should allow clients to determine whether the\n+replacement has propagated.\n+\n+==Motivation==\n+\n+Satoshi Nakamoto's original Bitcoin implementation provided the\n+nSequence number field in each input to\n+[https://github.com/trottier/original-bitcoin/blob/master/src/main.cpp#L434 allow replacement]\n+of transactions containing that input within the\n+mempool. When receiving replacements, nodes were supposed to replace\n+transactions whose inputs had lower sequence numbers with transactions\n+that had higher sequence numbers.\n+\n+In that implementation, replacement transactions did not have to pay\n+additional fees, so there was no direct incentive for miners to\n+include the replacement and no built-in rate limiting that prevented\n+overuse of relay node bandwidth. Nakamoto\n+[https://github.com/bitcoin/bitcoin/commit/05454818dc7ed92f577a1a1ef6798049f17a52e7#diff-118fcbaaba162ba17933c7893247df3aR522 removed replacement]\n+from Bitcoin version 0.3.12, leaving only the\n+comment, \"Disable replacement feature for now\".\n+\n+Replacing transactions with higher-fee transactions provided a way for\n+spenders to align their desires with miners, but by the time a\n+Replace-by-Fee (RBF) patch was available to re-enable replacement, some\n+receivers had begun to expect that the first version of a transaction\n+they saw was highly likely to be the version of the transaction to be\n+confirmed, and so some users advocated that replacement should be\n+disallowed.\n+\n+To address those concerns, a variation on RBF was created that\n+required that the replacement transaction pay all of same outputs as\n+the original transaction in equal or greater amount.  This was called\n+RBF First Seen Safe (RBF-FSS), and the original RBF became known as\n+full-RBF.  Although agreeable to recipients who relied on the\n+first-seen version of a transaction, each use of RBF-FSS required\n+adding an extra input to a transaction, resulting in wallets being\n+unable to use it if they had no spare inputs, a loss of privacy when\n+inputs from different origins get used in the same transaction, and a\n+wasteful increase in transaction byte size.\n+\n+Opt-in full-RBF uses Nakamoto's original semantics (with a slight\n+tweak to allow locktime users to opt-out) to signal that replacement\n+is possible, providing first-seen users with the ability to ignore\n+those transactions while also allowing for the efficiency benefits\n+of full-RBF.\n+\n+There are no known problematic interactions between opt-in full-RBF and\n+other uses of nSequence. Specifically, opt-in full-RBF is compatible\n+with consensus-enforced locktime as provided in the Bitcoin 0.1\n+implementation, draft BIP68 (Relative lock-time using consensus-enforced\n+sequence numbers), and draft BIP112 (CHECKSEQUENCEVERIFY).",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 150,
      "original_position": 150,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "dabura667",
        "id": 6586275,
        "node_id": "MDQ6VXNlcjY1ODYyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6586275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabura667",
        "html_url": "https://github.com/dabura667",
        "followers_url": "https://api.github.com/users/dabura667/followers",
        "following_url": "https://api.github.com/users/dabura667/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dabura667/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dabura667/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dabura667/subscriptions",
        "organizations_url": "https://api.github.com/users/dabura667/orgs",
        "repos_url": "https://api.github.com/users/dabura667/repos",
        "events_url": "https://api.github.com/users/dabura667/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dabura667/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nSequence of 0xfffffffe will not opt-in to RBF but will still be valid for BIP68/BIP112 (as it is not 0xffffffff)\n",
      "created_at": "2015-12-13T03:08:44Z",
      "updated_at": "2015-12-13T03:08:44Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47439667",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47439667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47915060",
      "pull_request_review_id": null,
      "id": 47915060,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE1MDYw",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.\n+\n+Because descendant transactions may also be replaceable under this\n+policy through inherited signaling, any method used to process opt-in\n+full-RBF transactions should be inherited by any descendant transactions\n+for as long as any ancestor opt-in full-RBF transactions remain\n+unconfirmed.\n+\n+===Spending wallet policy===\n+\n+Wallets that don't want to signal replaceability should use either a max\n+sequence number (0xffffffff) or a sequence number of (0xffffffff-1) when\n+then also want to use locktime; all known wallets currently do this.\n+They should also take care not to spend any unconfirmed transaction that\n+signals replaceability explicitly or through inherited signaling; most wallets also\n+currently do this by not spending any unconfirmed transactions except\n+for those they created themselves.\n+\n+Wallets that do want to make replacements should use explicit signaling\n+and meet the criteria described above in the Implementation Details\n+section. A\n+[https://en.bitcoin.it/wiki/Transaction_replacement Bitcoin Wiki page]\n+has been created to help wallet authors track deployed mempool policies\n+relating to transaction replacement.\n+\n+The initial implementation makes use of P2P protocol reject messages for\n+rejected replacements, allowing P2P clients to determine whether their\n+replacements were initially accepted by their peers. Standard P2P\n+lightweight client practice of sending to some peers while listening for\n+relays from other peers should allow clients to determine whether the\n+replacement has propagated.\n+\n+==Motivation==\n+\n+Satoshi Nakamoto's original Bitcoin implementation provided the\n+nSequence number field in each input to\n+[https://github.com/trottier/original-bitcoin/blob/master/src/main.cpp#L434 allow replacement]\n+of transactions containing that input within the\n+mempool. When receiving replacements, nodes were supposed to replace\n+transactions whose inputs had lower sequence numbers with transactions\n+that had higher sequence numbers.\n+\n+In that implementation, replacement transactions did not have to pay\n+additional fees, so there was no direct incentive for miners to\n+include the replacement and no built-in rate limiting that prevented\n+overuse of relay node bandwidth. Nakamoto\n+[https://github.com/bitcoin/bitcoin/commit/05454818dc7ed92f577a1a1ef6798049f17a52e7#diff-118fcbaaba162ba17933c7893247df3aR522 removed replacement]\n+from Bitcoin version 0.3.12, leaving only the\n+comment, \"Disable replacement feature for now\".\n+\n+Replacing transactions with higher-fee transactions provided a way for\n+spenders to align their desires with miners, but by the time a\n+Replace-by-Fee (RBF) patch was available to re-enable replacement, some\n+receivers had begun to expect that the first version of a transaction\n+they saw was highly likely to be the version of the transaction to be\n+confirmed, and so some users advocated that replacement should be\n+disallowed.\n+\n+To address those concerns, a variation on RBF was created that\n+required that the replacement transaction pay all of same outputs as\n+the original transaction in equal or greater amount.  This was called\n+RBF First Seen Safe (RBF-FSS), and the original RBF became known as\n+full-RBF.  Although agreeable to recipients who relied on the\n+first-seen version of a transaction, each use of RBF-FSS required\n+adding an extra input to a transaction, resulting in wallets being\n+unable to use it if they had no spare inputs, a loss of privacy when\n+inputs from different origins get used in the same transaction, and a\n+wasteful increase in transaction byte size.\n+\n+Opt-in full-RBF uses Nakamoto's original semantics (with a slight\n+tweak to allow locktime users to opt-out) to signal that replacement\n+is possible, providing first-seen users with the ability to ignore\n+those transactions while also allowing for the efficiency benefits\n+of full-RBF.\n+\n+There are no known problematic interactions between opt-in full-RBF and\n+other uses of nSequence. Specifically, opt-in full-RBF is compatible\n+with consensus-enforced locktime as provided in the Bitcoin 0.1\n+implementation, draft BIP68 (Relative lock-time using consensus-enforced\n+sequence numbers), and draft BIP112 (CHECKSEQUENCEVERIFY).",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 150,
      "original_position": 150,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@dabura667 If the leading bit is set, then that disables BIP68 semantics for nSequence.  So anything that is using BIP68 necessarily has a 0 in the leading bit and therefore will also be opting-in to RBF.\n",
      "created_at": "2015-12-17T15:03:51Z",
      "updated_at": "2015-12-17T15:03:51Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r47915060",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/47915060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48020658",
      "pull_request_review_id": null,
      "id": 48020658,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNjU4",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.\n+\n+Because descendant transactions may also be replaceable under this\n+policy through inherited signaling, any method used to process opt-in\n+full-RBF transactions should be inherited by any descendant transactions\n+for as long as any ancestor opt-in full-RBF transactions remain\n+unconfirmed.\n+\n+===Spending wallet policy===\n+\n+Wallets that don't want to signal replaceability should use either a max\n+sequence number (0xffffffff) or a sequence number of (0xffffffff-1) when\n+then also want to use locktime; all known wallets currently do this.\n+They should also take care not to spend any unconfirmed transaction that\n+signals replaceability explicitly or through inherited signaling; most wallets also\n+currently do this by not spending any unconfirmed transactions except\n+for those they created themselves.\n+\n+Wallets that do want to make replacements should use explicit signaling\n+and meet the criteria described above in the Implementation Details\n+section. A\n+[https://en.bitcoin.it/wiki/Transaction_replacement Bitcoin Wiki page]\n+has been created to help wallet authors track deployed mempool policies\n+relating to transaction replacement.\n+\n+The initial implementation makes use of P2P protocol reject messages for\n+rejected replacements, allowing P2P clients to determine whether their\n+replacements were initially accepted by their peers. Standard P2P\n+lightweight client practice of sending to some peers while listening for\n+relays from other peers should allow clients to determine whether the\n+replacement has propagated.\n+\n+==Motivation==\n+\n+Satoshi Nakamoto's original Bitcoin implementation provided the\n+nSequence number field in each input to\n+[https://github.com/trottier/original-bitcoin/blob/master/src/main.cpp#L434 allow replacement]\n+of transactions containing that input within the\n+mempool. When receiving replacements, nodes were supposed to replace\n+transactions whose inputs had lower sequence numbers with transactions\n+that had higher sequence numbers.\n+\n+In that implementation, replacement transactions did not have to pay\n+additional fees, so there was no direct incentive for miners to\n+include the replacement and no built-in rate limiting that prevented\n+overuse of relay node bandwidth. Nakamoto\n+[https://github.com/bitcoin/bitcoin/commit/05454818dc7ed92f577a1a1ef6798049f17a52e7#diff-118fcbaaba162ba17933c7893247df3aR522 removed replacement]\n+from Bitcoin version 0.3.12, leaving only the\n+comment, \"Disable replacement feature for now\".\n+\n+Replacing transactions with higher-fee transactions provided a way for\n+spenders to align their desires with miners, but by the time a\n+Replace-by-Fee (RBF) patch was available to re-enable replacement, some\n+receivers had begun to expect that the first version of a transaction\n+they saw was highly likely to be the version of the transaction to be\n+confirmed, and so some users advocated that replacement should be\n+disallowed.\n+\n+To address those concerns, a variation on RBF was created that\n+required that the replacement transaction pay all of same outputs as\n+the original transaction in equal or greater amount.  This was called\n+RBF First Seen Safe (RBF-FSS), and the original RBF became known as\n+full-RBF.  Although agreeable to recipients who relied on the\n+first-seen version of a transaction, each use of RBF-FSS required\n+adding an extra input to a transaction, resulting in wallets being\n+unable to use it if they had no spare inputs, a loss of privacy when\n+inputs from different origins get used in the same transaction, and a\n+wasteful increase in transaction byte size.\n+\n+Opt-in full-RBF uses Nakamoto's original semantics (with a slight\n+tweak to allow locktime users to opt-out) to signal that replacement\n+is possible, providing first-seen users with the ability to ignore\n+those transactions while also allowing for the efficiency benefits\n+of full-RBF.\n+\n+There are no known problematic interactions between opt-in full-RBF and\n+other uses of nSequence. Specifically, opt-in full-RBF is compatible\n+with consensus-enforced locktime as provided in the Bitcoin 0.1\n+implementation, draft BIP68 (Relative lock-time using consensus-enforced\n+sequence numbers), and draft BIP112 (CHECKSEQUENCEVERIFY).",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 150,
      "original_position": 150,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sdaftuar BIP68 doesn't exist yet... As part of the soft-fork, the opt-in conditions for RBF can be modified if there's demand to do so.\n",
      "created_at": "2015-12-18T12:31:25Z",
      "updated_at": "2015-12-18T12:31:25Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48020658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48020658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48020724",
      "pull_request_review_id": null,
      "id": 48020724,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwNzI0",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed - it's not acceptable to give the impression that non-signalling txs are any safer.\n\nIn fact, I think it'd be good if we make it clear that opt-in RBF was created for political reasons, not technical.\n",
      "created_at": "2015-12-18T12:32:40Z",
      "updated_at": "2015-12-18T12:32:40Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48020724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48020724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48023770",
      "pull_request_review_id": null,
      "id": 48023770,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzNzcw",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.\n+\n+Nodes and recipients may continue to treat transactions without the\n+signal the same way they treated them before, preserving the existing\n+status quo.\n+\n+==Summary==\n+\n+This policy specifies two ways a transaction can signal that it is\n+replaceable.\n+\n+* '''Explicit signaling:''' A transaction is considered to have opted in to allowing replacement of itself if any of its inputs have an nSequence number less than (0xffffffff - 1).\n+\n+* '''Inherited signaling:''' Transactions that don't explicitly signal replaceability are replaceable under this policy for as long as any one of their ancestors signals replaceability and remains unconfirmed.\n+\n+===Implementation Details===\n+\n+The initial implementation expected in Bitcoin Core 0.12.0 uses the following rules:\n+\n+One or more transactions currently in the mempool (original\n+transactions) will be replaced by a new transaction (replacement\n+transaction) that spends one or more of the same inputs if,\n+\n+# The original transactions signal replaceability explicitly or through inheritance as described in the above Summary section.\n+\n+# The replacement transaction pays an absolute higher fee than the sum paid by the original transactions.\n+\n+# The replacement transaction does not contain any new unconfirmed inputs that did not previously appear in the mempool. (Unconfirmed inputs are inputs spending outputs from currently unconfirmed transactions.)\n+\n+# The replacement transaction must pay for its own bandwidth in addition to the amount paid by the original transactions at or above the rate set by the node's minimum relay fee setting.  For example, if the minimum relay fee is 1 satoshi/byte and the replacement transaction is 500 bytes total, then the replacement must pay a fee at least 500 satoshis higher than the sum of the originals.\n+\n+# The number of original transactions to be replaced and their descendant transactions which will be evicted from the mempool must not exceed a total of 100 transactions.\n+\n+The initial implementation may be seen in\n+[https://github.com/bitcoin/bitcoin/pull/6871 Bitcoin Core PR#6871]\n+and specifically the master branch commits from\n+5891f870d68d90408aa5ce5b597fb574f2d2cbca to\n+16a2f93629f75d182871f288f0396afe6cdc8504 (inclusive).\n+\n+===Receiving wallet policy===\n+\n+Wallets that display unconfirmed transactions to users or that provide\n+data about unconfirmed transactions to automated systems should consider\n+doing one of the following:\n+\n+# Conveying additional suspicion about opt-in full-RBF transactions to the user or data consumer.\n+\n+# Ignoring the opt-in transaction until it has been confirmed.\n+\n+Because descendant transactions may also be replaceable under this\n+policy through inherited signaling, any method used to process opt-in\n+full-RBF transactions should be inherited by any descendant transactions\n+for as long as any ancestor opt-in full-RBF transactions remain\n+unconfirmed.\n+\n+===Spending wallet policy===\n+\n+Wallets that don't want to signal replaceability should use either a max\n+sequence number (0xffffffff) or a sequence number of (0xffffffff-1) when\n+then also want to use locktime; all known wallets currently do this.\n+They should also take care not to spend any unconfirmed transaction that\n+signals replaceability explicitly or through inherited signaling; most wallets also\n+currently do this by not spending any unconfirmed transactions except\n+for those they created themselves.\n+\n+Wallets that do want to make replacements should use explicit signaling\n+and meet the criteria described above in the Implementation Details\n+section. A\n+[https://en.bitcoin.it/wiki/Transaction_replacement Bitcoin Wiki page]\n+has been created to help wallet authors track deployed mempool policies\n+relating to transaction replacement.\n+\n+The initial implementation makes use of P2P protocol reject messages for\n+rejected replacements, allowing P2P clients to determine whether their\n+replacements were initially accepted by their peers. Standard P2P\n+lightweight client practice of sending to some peers while listening for\n+relays from other peers should allow clients to determine whether the\n+replacement has propagated.\n+\n+==Motivation==\n+\n+Satoshi Nakamoto's original Bitcoin implementation provided the\n+nSequence number field in each input to\n+[https://github.com/trottier/original-bitcoin/blob/master/src/main.cpp#L434 allow replacement]\n+of transactions containing that input within the\n+mempool. When receiving replacements, nodes were supposed to replace\n+transactions whose inputs had lower sequence numbers with transactions\n+that had higher sequence numbers.\n+\n+In that implementation, replacement transactions did not have to pay\n+additional fees, so there was no direct incentive for miners to\n+include the replacement and no built-in rate limiting that prevented\n+overuse of relay node bandwidth. Nakamoto\n+[https://github.com/bitcoin/bitcoin/commit/05454818dc7ed92f577a1a1ef6798049f17a52e7#diff-118fcbaaba162ba17933c7893247df3aR522 removed replacement]\n+from Bitcoin version 0.3.12, leaving only the\n+comment, \"Disable replacement feature for now\".\n+\n+Replacing transactions with higher-fee transactions provided a way for\n+spenders to align their desires with miners, but by the time a\n+Replace-by-Fee (RBF) patch was available to re-enable replacement, some\n+receivers had begun to expect that the first version of a transaction\n+they saw was highly likely to be the version of the transaction to be\n+confirmed, and so some users advocated that replacement should be\n+disallowed.\n+\n+To address those concerns, a variation on RBF was created that\n+required that the replacement transaction pay all of same outputs as\n+the original transaction in equal or greater amount.  This was called\n+RBF First Seen Safe (RBF-FSS), and the original RBF became known as\n+full-RBF.  Although agreeable to recipients who relied on the\n+first-seen version of a transaction, each use of RBF-FSS required\n+adding an extra input to a transaction, resulting in wallets being\n+unable to use it if they had no spare inputs, a loss of privacy when\n+inputs from different origins get used in the same transaction, and a\n+wasteful increase in transaction byte size.\n+\n+Opt-in full-RBF uses Nakamoto's original semantics (with a slight\n+tweak to allow locktime users to opt-out) to signal that replacement\n+is possible, providing first-seen users with the ability to ignore\n+those transactions while also allowing for the efficiency benefits\n+of full-RBF.\n+\n+There are no known problematic interactions between opt-in full-RBF and\n+other uses of nSequence. Specifically, opt-in full-RBF is compatible\n+with consensus-enforced locktime as provided in the Bitcoin 0.1\n+implementation, draft BIP68 (Relative lock-time using consensus-enforced\n+sequence numbers), and draft BIP112 (CHECKSEQUENCEVERIFY).",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 150,
      "original_position": 150,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fwiw I wasn't trying to imply any need to change; the behavior seems reasonable to me as-is (including taking into account the draft BIPs).\n",
      "created_at": "2015-12-18T13:20:07Z",
      "updated_at": "2015-12-18T13:20:07Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48023770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48023770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48085512",
      "pull_request_review_id": null,
      "id": 48085512,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg1NTEy",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "voisine",
        "id": 316879,
        "node_id": "MDQ6VXNlcjMxNjg3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/316879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/voisine",
        "html_url": "https://github.com/voisine",
        "followers_url": "https://api.github.com/users/voisine/followers",
        "following_url": "https://api.github.com/users/voisine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/voisine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/voisine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/voisine/subscriptions",
        "organizations_url": "https://api.github.com/users/voisine/orgs",
        "repos_url": "https://api.github.com/users/voisine/repos",
        "events_url": "https://api.github.com/users/voisine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/voisine/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Non-signalling txs can potentially be safer. With non-signaling tx you potentially only need to trust miners not to reverse them if you can get miners to report that they've accepted them. With RBF, you must trust the signer not to reverse them while they remain unconfirmed. That's a technical difference.\n",
      "created_at": "2015-12-19T01:01:14Z",
      "updated_at": "2015-12-19T01:01:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48085512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48085512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48094966",
      "pull_request_review_id": null,
      "id": 48094966,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0OTY2",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Miners are not in a position where they can provide those kinds of guarantees in a decentralized environment, and we should not be encouraging it.\n",
      "created_at": "2015-12-19T17:45:15Z",
      "updated_at": "2015-12-19T17:45:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48094966",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48094966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48095057",
      "pull_request_review_id": null,
      "id": 48095057,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1MDU3",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "voisine",
        "id": 316879,
        "node_id": "MDQ6VXNlcjMxNjg3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/316879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/voisine",
        "html_url": "https://github.com/voisine",
        "followers_url": "https://api.github.com/users/voisine/followers",
        "following_url": "https://api.github.com/users/voisine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/voisine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/voisine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/voisine/subscriptions",
        "organizations_url": "https://api.github.com/users/voisine/orgs",
        "repos_url": "https://api.github.com/users/voisine/repos",
        "events_url": "https://api.github.com/users/voisine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/voisine/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about by broadcasting partial block solutions? This is a decentralized way to indicate how much hashing power is being expended attempting to mine any given transaction.\n",
      "created_at": "2015-12-19T17:54:15Z",
      "updated_at": "2015-12-19T17:54:15Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48095057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48095057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48095190",
      "pull_request_review_id": null,
      "id": 48095190,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk1MTkw",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There aren't any incentive compatible partial block proposals yet; not relevant to the current ecosystem.\n\nOn 19 December 2015 09:54:25 GMT-08:00, Aaron Voisine notifications@github.com wrote:\n\n> > +\n> > +==Abstract==\n> > +\n> > +Many nodes today will not replace any transaction in their mempool\n> > with\n> > +another transaction that spends the same inputs, making it difficult\n> > for\n> > +spenders to adjust their previously-sent transactions to deal with\n> > +unexpected confirmation delays or to perform other useful\n> > replacements.\n> > +\n> > +The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n> > +described here allows spenders to add a signal to a transaction\n> > indicating\n> > +that they want to be able to replace that transaction in the future.\n> > +In response to this signal,\n> > +\n> > +\\* Nodes may allow transactions containing this signal to be replaced\n> > in their mempools.\n> > +\n> > +\\* The recipient or recipients of a transaction containing this\n> > signal may choose not to treat it as payment until it has been\n> > confirmed, eliminating the risk that the spender will use allowed\n> > replacements to defraud them.\n> \n> What about by broadcasting partial block solutions? This is a\n> decentralized way to indicate how much hashing power is being expended\n> attempting to mine any given transaction.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bips/pull/261/files#r48095057\n",
      "created_at": "2015-12-19T18:06:53Z",
      "updated_at": "2015-12-19T18:06:53Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48095190",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48095190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48098758",
      "pull_request_review_id": null,
      "id": 48098758,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4NzU4",
      "diff_hunk": "@@ -0,0 +1,187 @@\n+<pre>\n+  BIP: bip-harding-opt-in-replace-by-fee\n+  Title: Opt-in Full Replace-by-Fee Signaling\n+  Author: David A. Harding <dave@dtrt.org>, Peter Todd <pete@petertodd.org>\n+  Status: Draft\n+  Type: Standards Track\n+  Created: 2015-12-04\n+</pre>\n+\n+==Abstract==\n+\n+Many nodes today will not replace any transaction in their mempool with\n+another transaction that spends the same inputs, making it difficult for\n+spenders to adjust their previously-sent transactions to deal with\n+unexpected confirmation delays or to perform other useful replacements.\n+\n+The opt-in full Replace-by-Fee (opt-in full-RBF) signaling policy\n+described here allows spenders to add a signal to a transaction indicating\n+that they want to be able to replace that transaction in the future.\n+In response to this signal,\n+\n+* Nodes may allow transactions containing this signal to be replaced in their mempools.\n+\n+* The recipient or recipients of a transaction containing this signal may choose not to treat it as payment until it has been confirmed, eliminating the risk that the spender will use allowed replacements to defraud them.",
      "path": "bip-opt-in-rbf.mediawiki",
      "position": 24,
      "original_position": 24,
      "commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "original_commit_id": "b57eea446cbd99088da1a9badc2fb85396982b9f",
      "in_reply_to_id": null,
      "user": {
        "login": "voisine",
        "id": 316879,
        "node_id": "MDQ6VXNlcjMxNjg3OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/316879?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/voisine",
        "html_url": "https://github.com/voisine",
        "followers_url": "https://api.github.com/users/voisine/followers",
        "following_url": "https://api.github.com/users/voisine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/voisine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/voisine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/voisine/subscriptions",
        "organizations_url": "https://api.github.com/users/voisine/orgs",
        "repos_url": "https://api.github.com/users/voisine/repos",
        "events_url": "https://api.github.com/users/voisine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/voisine/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The cost is close to zero. If it's built into bitcoin-core and other mining software, then we have an incentive compatible solution since it would take additional effort to disable it. It's relevant to the RBF discussion, since RBF transactions preclude any future improvements to 0-conf safety that would make them practical in more situations.\n",
      "created_at": "2015-12-20T01:53:13Z",
      "updated_at": "2015-12-20T01:54:31Z",
      "html_url": "https://github.com/bitcoin/bips/pull/261#discussion_r48098758",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/48098758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/261"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}