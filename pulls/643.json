{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/643",
    "id": 166991784,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY2OTkxNzg0",
    "html_url": "https://github.com/bitcoin/bips/pull/643",
    "diff_url": "https://github.com/bitcoin/bips/pull/643.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/643.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/643/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/643/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/643/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/542c66e6ddc3d9f703114f7e645f19d572c8274e",
    "number": 643,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP 301: Blind Merged Mining (Consensus layer)",
    "user": {
      "login": "psztorc",
      "id": 3165891,
      "node_id": "MDQ6VXNlcjMxNjU4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psztorc",
      "html_url": "https://github.com/psztorc",
      "followers_url": "https://api.github.com/users/psztorc/followers",
      "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
      "organizations_url": "https://api.github.com/users/psztorc/orgs",
      "repos_url": "https://api.github.com/users/psztorc/repos",
      "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/psztorc/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a draft of a bip for blind merged mining, the second of two drivechain bips.",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2018-02-04T02:44:01Z",
    "updated_at": "2019-07-26T12:42:55Z",
    "closed_at": "2019-07-26T12:42:55Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-07-26T12:42:54Z",
    "merge_commit_sha": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "psztorc:aux",
      "ref": "aux",
      "sha": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ec54908e7014cec56009e3ec25a86037307214f4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5535,
        "stargazers_count": 8220,
        "watchers_count": 8220,
        "size": 13787,
        "default_branch": "master",
        "open_issues_count": 112,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T12:09:15Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-08-01T09:08:43Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 234,
    "deletions": 0,
    "changed_files": 5,
    "commits": 32,
    "review_comments": 36,
    "comments": 9
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MGExZDM1ODc3YTk5M2I0NjBjMTQzNTgzMjRjZjU0NWE1M2Q4NTJmZg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0a1d35877a993b460c14358324cf545a53d852ff",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/0a1d35877a993b460c14358324cf545a53d852ff",
      "tree": {
        "sha": "6ebe7a0cf5920d8579ba3439a43d7ec012c85490",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/6ebe7a0cf5920d8579ba3439a43d7ec012c85490"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6ebe7a0cf5920d8579ba3439a43d7ec012c85490\nparent ec54908e7014cec56009e3ec25a86037307214f4\nauthor Paul Sztorc <psztorc01@gmail.com> 1517711410 -0500\ncommitter GitHub <noreply@github.com> 1517711410 -0500\n\nCreate images.txt",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadnAyCRBK7hj4Ov3rIwAAdHIIAAi5DLhIH12T4Wdb2CmVIw0h\nW6U7r+fz7EOrmom2K/I0h+hYDDKyV5ZcYLoXc0I0lDFzudo2KliNQe+BFQwbxxGA\nJsksZd68FxRjOil7JhnmaNyYAQ0A6GTYcZc0RLbzjTnOziv7re+CXmJNQBx8sNzG\nSIa6lve736P+Pg3OilR5Vd+aty79o8hoOM9y3DUz7AuYMk2L3PDdYvNnQx0FnFMt\nXXbk2upGito3YnK+6QNsv01B0iRWiHwSlnfXQi1oloh9n69xZ4kS3tuPZuFNvCgR\nkAEwiaYp4UbOXXa8df8nV5zLdWTYrp/s9NELatz3F/vkRg8jMpav/iQGsvqVBAk=\n=avI8\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/ec54908e7014cec56009e3ec25a86037307214f4",
          "sha": "ec54908e7014cec56009e3ec25a86037307214f4",
          "html_url": "https://github.com/bitcoin/bips/commit/ec54908e7014cec56009e3ec25a86037307214f4"
        }
      ],
      "message": "Create images.txt",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-04T02:30:10Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:30:10Z"
      },
      "sha": "0a1d35877a993b460c14358324cf545a53d852ff"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ZGI4NmI4OTBmOTIwMTViYTUwZDZiMWI0OWJhNzQyYTRiMjg2NjNmYw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/db86b890f92015ba50d6b1b49ba742a4b28663fc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/db86b890f92015ba50d6b1b49ba742a4b28663fc",
      "tree": {
        "sha": "839b0f5930ec2159047374c860755c7562ff466c",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/839b0f5930ec2159047374c860755c7562ff466c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 839b0f5930ec2159047374c860755c7562ff466c\nparent 0a1d35877a993b460c14358324cf545a53d852ff\nauthor Paul Sztorc <psztorc01@gmail.com> 1517711422 -0500\ncommitter GitHub <noreply@github.com> 1517711422 -0500\n\nAdd files via upload",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadnA+CRBK7hj4Ov3rIwAAdHIIAA6P0T8XZJ0AIH4Rlq3wSZq3\n8D9UIXO36kZNesDCsIVS0W00oP4aocltpVvTxxLcikD/wHFVtOaPpFFYAOk7jGV4\nGplO0psUMna5DGt2+euyWd6vv52tZ1PCML3E3RPLjhoPehlnKSYL6nr3txJ11oyx\nqo+J0HiGC5VvXNo+sz9fVqYeyU3R0h8F27CfQHHd4DA+Z1RfXYyNv3m/YE2Lnhi4\nTzLoBCg6AbqrJtHY9jYt2xELl5VbhmJp/UKXQWIozwnqdwU4Alzy/0d09w147p74\n/5/HVhIHxjmlke4YvxHNjUClTKJ1HeJa5JPqPMguIhCQpY/YpECNGy1AckP/hnA=\n=/bLW\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/0a1d35877a993b460c14358324cf545a53d852ff",
          "sha": "0a1d35877a993b460c14358324cf545a53d852ff",
          "html_url": "https://github.com/bitcoin/bips/commit/0a1d35877a993b460c14358324cf545a53d852ff"
        }
      ],
      "message": "Add files via upload",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-04T02:30:22Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:30:22Z"
      },
      "sha": "db86b890f92015ba50d6b1b49ba742a4b28663fc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MjU4MGQ2NTIyODMxYmQ4ZDM5Njc1MTViZWU0NDI5ZmQ2YTYzNTFhNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2580d6522831bd8d3967515bee4429fd6a6351a6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2580d6522831bd8d3967515bee4429fd6a6351a6",
      "tree": {
        "sha": "5bcbe425a2c208d91a3e5da76f39db6256677ce6",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/5bcbe425a2c208d91a3e5da76f39db6256677ce6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5bcbe425a2c208d91a3e5da76f39db6256677ce6\nparent db86b890f92015ba50d6b1b49ba742a4b28663fc\nauthor Paul Sztorc <psztorc01@gmail.com> 1517711568 -0500\ncommitter GitHub <noreply@github.com> 1517711568 -0500\n\nAdd files via upload",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadnDPCRBK7hj4Ov3rIwAAdHIIABlMPrFQYGtHCPrnv6l3MvEi\nysRNldw36qSGNosK7JB8eov5CFUXHROX+OBFYB4hclW80m95QOFfN1KSolqspYk7\nQlx/LeveEyPs3ydmLtBOMrUHnm/MfJeHQfzoK0CKXABCjSyZL3PKlHpeINjTNm7h\nQBWuIHEMMxsQiVkCzYATZLf5gainDt3K0OdRz308eiGzOdQETmmXjjEgUljYBYjK\nIVbhh0AS+rHZDGNUuUob9TtLesv/UEW6H61k0RkMgEcGHkVaGtcuuyOoTDZEhJG7\ndutaN3XHtC7fFuMVedmnuo9zOWOskgXA1tFtS9S13gjV6gUc89YQcM3BN1hHqA8=\n=PBau\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/db86b890f92015ba50d6b1b49ba742a4b28663fc",
          "sha": "db86b890f92015ba50d6b1b49ba742a4b28663fc",
          "html_url": "https://github.com/bitcoin/bips/commit/db86b890f92015ba50d6b1b49ba742a4b28663fc"
        }
      ],
      "message": "Add files via upload",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-04T02:32:48Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:32:48Z"
      },
      "sha": "2580d6522831bd8d3967515bee4429fd6a6351a6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ZGEyZTU3NDVmM2RjZjgwMWU5YWI1MDkzOTc5MWQ2Y2VjZjQzNGMxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/da2e5745f3dcf801e9ab50939791d6cecf434c11",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/da2e5745f3dcf801e9ab50939791d6cecf434c11",
      "tree": {
        "sha": "840356099dfe4b4f81dbacd76504516a81dba9be",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/840356099dfe4b4f81dbacd76504516a81dba9be"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 840356099dfe4b4f81dbacd76504516a81dba9be\nparent 2580d6522831bd8d3967515bee4429fd6a6351a6\nauthor Paul Sztorc <psztorc01@gmail.com> 1517711800 -0500\ncommitter GitHub <noreply@github.com> 1517711800 -0500\n\nAdd files via upload",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadnG4CRBK7hj4Ov3rIwAAdHIIALEkTKPyQ5tlNeGLdpz/58Vx\nb8RtoE4Wkv74K2bPv6jQ165nA7a43YlqWkCSO8l3/Z/ZLKmSEJh0zKj9MZSnu12+\nBKJDcH+wYwgGiI98pCP7QbcuD/B2SCmRyWLUtnkVT5f/yxpCApqqGGYxOuHP63wY\nKaenWiCqmv1VGdjBsYJ7vzwH/yIMu5a+PhppcBH5Vwm+/Cqlw0ZdeHQf2b2kM2sZ\nC47nyAYnYrmB49geRkelmQmkW0fl7fv8plZno6SDdGyXfGmk7On34sTxp6ydUk+F\n78qvVO+a2igw0N2O9ZQGmI5MUvr7s8aMU4MJhmOL4KhfOCwGhHRr8QVMSS0lUfk=\n=vRWp\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2580d6522831bd8d3967515bee4429fd6a6351a6",
          "sha": "2580d6522831bd8d3967515bee4429fd6a6351a6",
          "html_url": "https://github.com/bitcoin/bips/commit/2580d6522831bd8d3967515bee4429fd6a6351a6"
        }
      ],
      "message": "Add files via upload",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-04T02:36:40Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:36:40Z"
      },
      "sha": "da2e5745f3dcf801e9ab50939791d6cecf434c11"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MWFmNTQ3Y2Y3MjhkMjcwNzBiM2M5MGNlMDJjM2E3NzMxYmI1ZGNkNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1af547cf728d27070b3c90ce02c3a7731bb5dcd6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/1af547cf728d27070b3c90ce02c3a7731bb5dcd6",
      "tree": {
        "sha": "ba6afb4ec481be5c8a5a90a5d079337791b0cb5b",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/ba6afb4ec481be5c8a5a90a5d079337791b0cb5b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ba6afb4ec481be5c8a5a90a5d079337791b0cb5b\nparent da2e5745f3dcf801e9ab50939791d6cecf434c11\nauthor Paul Sztorc <psztorc01@gmail.com> 1517711903 -0500\ncommitter GitHub <noreply@github.com> 1517711903 -0500\n\nDelete bip-hashrate-escrows.md",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadnIfCRBK7hj4Ov3rIwAAdHIIABtuTBTL8HT9j7Qm/E4Krrc2\nCOjlKgOTg1ZY29M+gn2INXdGbvU6vcmqUhwL985MmtYRdcb/dwurC3jIEvt4Yj7i\na0yKN/UfNM6fRXy5N2wPchsZZtYe4ZekZY6j0d50PpFaajWDbmlWsGNxeO0UTLU2\nmlPMD625eXxylC+8IZEHPY4pefMunvOumIamT6O9Bd9+RmlWqAzfF2gDuLSwrgtQ\n99ARu6SkDUK9zjQdEvXSlBCW9hDAGtbfJcVPlNmMhXjMNp/Tv+iNqp27vxetcONS\nuC0rfR73jTdF7ju+brK8AWxopyMuG1RzlMFuMxad2txXFs/SxiJK2s77uRr8zRU=\n=Cysc\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/da2e5745f3dcf801e9ab50939791d6cecf434c11",
          "sha": "da2e5745f3dcf801e9ab50939791d6cecf434c11",
          "html_url": "https://github.com/bitcoin/bips/commit/da2e5745f3dcf801e9ab50939791d6cecf434c11"
        }
      ],
      "message": "Delete bip-hashrate-escrows.md",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-04T02:38:23Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:38:23Z"
      },
      "sha": "1af547cf728d27070b3c90ce02c3a7731bb5dcd6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NGJlYTJlZjJiNjdhOTk2YzA0MGQwMjZkZjYxY2RhZjQ3MGM5ZGU1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4bea2ef2b67a996c040d026df61cdaf470c9de53",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/4bea2ef2b67a996c040d026df61cdaf470c9de53",
      "tree": {
        "sha": "cd711f0be7be1b33c40ef64c7ee7bcf1b9673794",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/cd711f0be7be1b33c40ef64c7ee7bcf1b9673794"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/da2e5745f3dcf801e9ab50939791d6cecf434c11",
          "sha": "da2e5745f3dcf801e9ab50939791d6cecf434c11",
          "html_url": "https://github.com/bitcoin/bips/commit/da2e5745f3dcf801e9ab50939791d6cecf434c11"
        }
      ],
      "message": "one bip at a time",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:40:43Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:40:43Z"
      },
      "sha": "4bea2ef2b67a996c040d026df61cdaf470c9de53"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MzlhOGJlYzZiN2I3Y2E3ZTdmYTQwNWU3ZjQzNzAzNjg0ZjVmYTFlOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/39a8bec6b7b7ca7e7fa405e7f43703684f5fa1e8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/39a8bec6b7b7ca7e7fa405e7f43703684f5fa1e8",
      "tree": {
        "sha": "81a4089806243f7d859c69e9a254ea737b6f5163",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/81a4089806243f7d859c69e9a254ea737b6f5163"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 81a4089806243f7d859c69e9a254ea737b6f5163\nparent 1af547cf728d27070b3c90ce02c3a7731bb5dcd6\nauthor Paul Sztorc <psztorc01@gmail.com> 1517712165 -0500\ncommitter GitHub <noreply@github.com> 1517712165 -0500\n\nDelete images.txt",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadnMlCRBK7hj4Ov3rIwAAdHIIABJ/2gm3fmeHeXanGsCFjrLz\n3MGxF5CnJ6rO3Js5uoWo0lriWoOXiIP8nwGemE0apzxsu1nzPG5i4IwuQQ7SQVmL\nbIvEgkgQYCQ2ESqZHrP3ASedtLNMi1KDCBzdNLMiP/bJEfkyRbq+CxMkY7pl5X/E\nIawROXORpSMwUduZjSRQdCaF58ZRNRnIyn+XcZaf7xhQsAirCg77TK8J19Pwqvqq\nKQNHvRX6uwiImUHGM4Flvvx2RejU817EgyBZJtQ5KN5I9+2LcgKdlUnD4nNPDyjC\n4gaBEWIcAN+SnoUhea/bRICa1wY0VdjDnkRbBDkvlXlefMiNyEiI+X09j71hk8I=\n=j9EG\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1af547cf728d27070b3c90ce02c3a7731bb5dcd6",
          "sha": "1af547cf728d27070b3c90ce02c3a7731bb5dcd6",
          "html_url": "https://github.com/bitcoin/bips/commit/1af547cf728d27070b3c90ce02c3a7731bb5dcd6"
        }
      ],
      "message": "Delete images.txt",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-04T02:42:45Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:42:45Z"
      },
      "sha": "39a8bec6b7b7ca7e7fa405e7f43703684f5fa1e8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MzI0NjA5NjE3NDAyMGJkY2ZjZGY0NjRjNDNiMGVjOTk3NDEwZjU4MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3246096174020bdcfcdf464c43b0ec997410f580",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/3246096174020bdcfcdf464c43b0ec997410f580",
      "tree": {
        "sha": "cd711f0be7be1b33c40ef64c7ee7bcf1b9673794",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/cd711f0be7be1b33c40ef64c7ee7bcf1b9673794"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cd711f0be7be1b33c40ef64c7ee7bcf1b9673794\nparent 39a8bec6b7b7ca7e7fa405e7f43703684f5fa1e8\nauthor Paul Sztorc <psztorc01@gmail.com> 1517712172 -0500\ncommitter GitHub <noreply@github.com> 1517712172 -0500\n\nDelete two-groups.png",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJadnMsCRBK7hj4Ov3rIwAAdHIIAAtYE5VBLOvkiKoy8EB5n5qU\n4yCyf/GJzYzgU3FsZ/8cgGFlTewbKCh1lNWwELRpJ2CDuaCLehkyWZ+CbH+42yxU\nI+FZFBmN1VRCOIVsmN9M+Qg0IWIILz2MrIQyfvuIvjoDSu+nOWbJifIpIuVMCK34\nVDtOkgk8adv2rOtW8p5YUO83eO8NNP4Amejghdy4g+S6GJHgdWYb20ku3gsghvVQ\n599d6ZdcyggqIta4EQkwIqn3h1M+GQp1wxqWOpmWtsn1FqEvoSOhulu3QEq0RBJy\nlJtgZ/mbf+CrnnVlUXnxcL4XiIH8CbsHbe8YZ3wwlBs3bghZHKpKDqeSMaRRqEU=\n=lXoG\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/39a8bec6b7b7ca7e7fa405e7f43703684f5fa1e8",
          "sha": "39a8bec6b7b7ca7e7fa405e7f43703684f5fa1e8",
          "html_url": "https://github.com/bitcoin/bips/commit/39a8bec6b7b7ca7e7fa405e7f43703684f5fa1e8"
        }
      ],
      "message": "Delete two-groups.png",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-04T02:42:52Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-04T02:42:52Z"
      },
      "sha": "3246096174020bdcfcdf464c43b0ec997410f580"
    },
    {
      "event": "commented",
      "id": 362876024,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mjg3NjAyNA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/362876024",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-04T02:51:43Z",
      "updated_at": "2018-02-04T02:51:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Seems reasonable to just merge with a \"received only limited feedback, which was largely left unaddressed\" header tag.\n\nOn February 4, 2018 2:44:03 AM UTC, Paul Sztorc <notifications@github.com> wrote:\n>This is a draft of a bip for blind merged mining, the second of two\n>drivechain bips.\n>You can view, comment on, or merge this pull request online at:\n>\n>  https://github.com/bitcoin/bips/pull/643\n>\n>-- Commit Summary --\n>\n>  * Create images.txt\n>  * Add files via upload\n>  * Add files via upload\n>  * Add files via upload\n>  * Delete bip-hashrate-escrows.md\n>  * Delete images.txt\n>  * Delete two-groups.png\n>\n>-- File Changes --\n>\n>    A bip-blind-merged-mining.md (329)\n>    A bip-blind-merged-mining/bmm-dots-examples.png (0)\n>    A bip-blind-merged-mining/images.txt (1)\n>    A bip-blind-merged-mining/witness-vs-critical.png (0)\n>\n>-- Patch Links --\n>\n>https://github.com/bitcoin/bips/pull/643.patch\n>https://github.com/bitcoin/bips/pull/643.diff\n>\n>-- \n>You are receiving this because you are subscribed to this thread.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bips/pull/643\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-362876024",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "labeled",
      "id": 1457195759,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE0NTcxOTU3NTk=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1457195759",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-05T04:30:52Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 94207940,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTQyMDc5NDA=",
      "url": null,
      "actor": null,
      "commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "BIPs are Mediawiki format, not Markdown.\r\n\r\nThis fails to address backward compatibility.\r\n\r\nFurthermore, the spec itself seems strictly inferior to the older merge mining protocol as used by Namecoin etc. The alleged shortcomings this BIP claims the older protocol has, are not in fact true.\r\n\r\nSome actual shortcomings in this BIP:\r\n\r\n* Requires changes to the Bitcoin protocol.\r\n* Limited to merely 256 sidechains.\r\n* Requires conveying the prevblock for no apparent reason.\r\n* Requires softforks for sidechains.\r\n* Includes information on sequence of sidechains in the mainchain for no apparent reason. (Skip count is especially redundant since the prev is already explicit)\r\n* No merkle tree for sidechain data!\r\n* Requires full nodes maintain a new database.\r\n* Requires finding a Bitcoin block for any merged chains.\r\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#pullrequestreview-94207940",
      "submitted_at": "2018-02-06T04:34:48Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/643"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6OGE4YzYyNTNiZWYxNzBiNTdjOTFjOGUxMjlkOTc3YWUyN2UzZjUzMA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/8a8c6253bef170b57c91c8e129d977ae27e3f530",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/8a8c6253bef170b57c91c8e129d977ae27e3f530",
      "tree": {
        "sha": "5a3516a981acb4d26d70c97ba757cf5a100367da",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/5a3516a981acb4d26d70c97ba757cf5a100367da"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4bea2ef2b67a996c040d026df61cdaf470c9de53",
          "sha": "4bea2ef2b67a996c040d026df61cdaf470c9de53",
          "html_url": "https://github.com/bitcoin/bips/commit/4bea2ef2b67a996c040d026df61cdaf470c9de53"
        }
      ],
      "message": "re-reverse the bips\n\nthis is what I originally intended, but I forked this branch at the wrong time",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T19:01:25Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T19:01:25Z"
      },
      "sha": "8a8c6253bef170b57c91c8e129d977ae27e3f530"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6OTlmNTUzMDI1ZmRmM2JiM2ZkM2Y1ZWY5YmQ4ODg0NmJmYWQxYThmYQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/99f553025fdf3bb3fd3f5ef9bd88846bfad1a8fa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/99f553025fdf3bb3fd3f5ef9bd88846bfad1a8fa",
      "tree": {
        "sha": "36a6b642c68b15914a1c91607b2fb54047108130",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/36a6b642c68b15914a1c91607b2fb54047108130"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/8a8c6253bef170b57c91c8e129d977ae27e3f530",
          "sha": "8a8c6253bef170b57c91c8e129d977ae27e3f530",
          "html_url": "https://github.com/bitcoin/bips/commit/8a8c6253bef170b57c91c8e129d977ae27e3f530"
        }
      ],
      "message": "mediawiki format",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T21:30:07Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T21:30:07Z"
      },
      "sha": "99f553025fdf3bb3fd3f5ef9bd88846bfad1a8fa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6OTIwN2RmN2QwNTRjMjFjYjI3NmI2ODczZjAwOWJlMGZkYTk5MmQ5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9207df7d054c21cb276b6873f009be0fda992d93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/9207df7d054c21cb276b6873f009be0fda992d93",
      "tree": {
        "sha": "11f88a01075141874b2862fdf08b3a16514b6fa6",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/11f88a01075141874b2862fdf08b3a16514b6fa6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/99f553025fdf3bb3fd3f5ef9bd88846bfad1a8fa",
          "sha": "99f553025fdf3bb3fd3f5ef9bd88846bfad1a8fa",
          "html_url": "https://github.com/bitcoin/bips/commit/99f553025fdf3bb3fd3f5ef9bd88846bfad1a8fa"
        }
      ],
      "message": "fix mediawiki formatting",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:00:23Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:00:23Z"
      },
      "sha": "9207df7d054c21cb276b6873f009be0fda992d93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NDg2NTA1YjhmYWQ2MmNiM2MyZjAxYjFhMGViNzliMTkxMjE5NmZkYQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/486505b8fad62cb3c2f01b1a0eb79b1912196fda",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/486505b8fad62cb3c2f01b1a0eb79b1912196fda",
      "tree": {
        "sha": "6db3e1d0a6850cac5798b79d4570b55390223d00",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/6db3e1d0a6850cac5798b79d4570b55390223d00"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/9207df7d054c21cb276b6873f009be0fda992d93",
          "sha": "9207df7d054c21cb276b6873f009be0fda992d93",
          "html_url": "https://github.com/bitcoin/bips/commit/9207df7d054c21cb276b6873f009be0fda992d93"
        }
      ],
      "message": "typos",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:02:33Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:02:33Z"
      },
      "sha": "486505b8fad62cb3c2f01b1a0eb79b1912196fda"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6Njg5MThhZDI0YTU2OGEzMDJiZjZlNTQ5MzJhMzhkM2I3M2VjM2Q2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/68918ad24a568a302bf6e54932a38d3b73ec3d65",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/68918ad24a568a302bf6e54932a38d3b73ec3d65",
      "tree": {
        "sha": "aab9125007d227c0414ac331027e5b4e6e6d8336",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/aab9125007d227c0414ac331027e5b4e6e6d8336"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/486505b8fad62cb3c2f01b1a0eb79b1912196fda",
          "sha": "486505b8fad62cb3c2f01b1a0eb79b1912196fda",
          "html_url": "https://github.com/bitcoin/bips/commit/486505b8fad62cb3c2f01b1a0eb79b1912196fda"
        }
      ],
      "message": "resync",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:15:21Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:15:21Z"
      },
      "sha": "68918ad24a568a302bf6e54932a38d3b73ec3d65"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NzBmMGVkNmMzOWJlYzhkNTBhZTI5YTJiMmI1NjJiNDRkODRkZjViNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/70f0ed6c39bec8d50ae29a2b2b562b44d84df5b7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/70f0ed6c39bec8d50ae29a2b2b562b44d84df5b7",
      "tree": {
        "sha": "b1dd025eb5ae1f7024e94f08b1ebfe0cfb69bb4f",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b1dd025eb5ae1f7024e94f08b1ebfe0cfb69bb4f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/68918ad24a568a302bf6e54932a38d3b73ec3d65",
          "sha": "68918ad24a568a302bf6e54932a38d3b73ec3d65",
          "html_url": "https://github.com/bitcoin/bips/commit/68918ad24a568a302bf6e54932a38d3b73ec3d65"
        }
      ],
      "message": "switch to mediawiki format",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:23:31Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:23:31Z"
      },
      "sha": "70f0ed6c39bec8d50ae29a2b2b562b44d84df5b7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NTQxODUxNjA2NTY0NmQzNWU4MWVlOTU2YTk0MjQ0ZGJmODFhYjFjMQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5418516065646d35e81ee956a94244dbf81ab1c1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/5418516065646d35e81ee956a94244dbf81ab1c1",
      "tree": {
        "sha": "acbd5a50f4d918783946c2e7660a7926bac25d97",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/acbd5a50f4d918783946c2e7660a7926bac25d97"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/70f0ed6c39bec8d50ae29a2b2b562b44d84df5b7",
          "sha": "70f0ed6c39bec8d50ae29a2b2b562b44d84df5b7",
          "html_url": "https://github.com/bitcoin/bips/commit/70f0ed6c39bec8d50ae29a2b2b562b44d84df5b7"
        }
      ],
      "message": "typos",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:31:01Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:31:01Z"
      },
      "sha": "5418516065646d35e81ee956a94244dbf81ab1c1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MTdkYjg3MjI0ZDVlNThhYTI5NzQxY2MwMDc3ZjgyZmYwN2FiMzgwMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/17db87224d5e58aa29741cc0077f82ff07ab3803",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/17db87224d5e58aa29741cc0077f82ff07ab3803",
      "tree": {
        "sha": "f156c298a4533d89b63b4959c6a3a2a749967e89",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f156c298a4533d89b63b4959c6a3a2a749967e89"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5418516065646d35e81ee956a94244dbf81ab1c1",
          "sha": "5418516065646d35e81ee956a94244dbf81ab1c1",
          "html_url": "https://github.com/bitcoin/bips/commit/5418516065646d35e81ee956a94244dbf81ab1c1"
        }
      ],
      "message": "move Chris\n\nCS indicated via tweet that he felt he did not contribute enough to be a co-author",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:31:54Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:31:54Z"
      },
      "sha": "17db87224d5e58aa29741cc0077f82ff07ab3803"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6Y2ViZTA2YjE0OTI4M2QyNmNlYTNiNTc0OTBhZjViYjc1NGE4MWZhYg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/cebe06b149283d26cea3b57490af5bb754a81fab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/cebe06b149283d26cea3b57490af5bb754a81fab",
      "tree": {
        "sha": "f156c298a4533d89b63b4959c6a3a2a749967e89",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/f156c298a4533d89b63b4959c6a3a2a749967e89"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f156c298a4533d89b63b4959c6a3a2a749967e89\nparent 3246096174020bdcfcdf464c43b0ec997410f580\nparent 17db87224d5e58aa29741cc0077f82ff07ab3803\nauthor Paul Sztorc <psztorc01@gmail.com> 1518302061 -0500\ncommitter GitHub <noreply@github.com> 1518302061 -0500\n\nMerge pull request #1 from psztorc/blind-merged-mining\n\nupdates",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaf3NtCRBK7hj4Ov3rIwAAdHIIAAggu7HCnzfOyCqROxEHYK/B\nJJ7ETYmi4X+D/OzSsmF7FzBbB+nc5j0+/RA+KMQk4PTFZksb9h52tfV1YOsrSp5V\nRjoebBsTssLopWgITVabewDWoelKcsOrgSSHC0EhaNlqUze4n0SbHFAGlG2nzxUb\nH00DgoDaiJAqrlH68G+TpM4tBvLcZI+kULnAYmw5xYp/OAvV/BQQASaNnO6aoYLQ\neYIdNchSPrTMazEc+HT4BmKxHvENKEvUV2C8452w+dVjiaYaK42hrz8XgxQcDj4x\n/PbtAdkRjCzGfPWlosyIEhQQGD2QKRA4rgZbwJZL9waUbOTeEiyVkqD1liMdKdU=\n=tD+9\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/3246096174020bdcfcdf464c43b0ec997410f580",
          "sha": "3246096174020bdcfcdf464c43b0ec997410f580",
          "html_url": "https://github.com/bitcoin/bips/commit/3246096174020bdcfcdf464c43b0ec997410f580"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/17db87224d5e58aa29741cc0077f82ff07ab3803",
          "sha": "17db87224d5e58aa29741cc0077f82ff07ab3803",
          "html_url": "https://github.com/bitcoin/bips/commit/17db87224d5e58aa29741cc0077f82ff07ab3803"
        }
      ],
      "message": "Merge pull request #1 from psztorc/blind-merged-mining\n\nupdates",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-10T22:34:21Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T22:34:21Z"
      },
      "sha": "cebe06b149283d26cea3b57490af5bb754a81fab"
    },
    {
      "event": "commented",
      "id": 364703682,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDcwMzY4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/364703682",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-10T23:12:18Z",
      "updated_at": "2018-02-10T23:12:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Furthermore, the spec itself seems strictly inferior to the older merge mining protocol as used by Namecoin etc. The alleged shortcomings this BIP claims the older protocol has, are not in fact true.\r\n\r\nThese shortcomings are not even issues that I feel strongly about. But they *are* issues which are constantly raised by Matt Corallo and Peter Todd specifically. They are in Section 4.3 of [Blockstream's sidechains whitepaper](https://blockstream.com/sidechains.pdf) as well as [in this podcast](https://www.reddit.com/r/Bitcoin/comments/2424x1/peter_todd_explainins_why_sidechains_are_insecure/).\r\n\r\nI feel that pool operators will just run all of these nodes from a safe place, and then send as little data as possible to the hashers (the physical ASICs). Perhaps you agree with me, but other people don't agree with us!!\r\n\r\n> Some actual shortcomings in this BIP:\r\n> \r\n> Requires changes to the Bitcoin protocol.\r\n\r\nYes\r\n\r\n> Limited to merely 256 sidechains.\r\n\r\nOf course, we can have sidechains *of* sidechains, so the real number is unlimited. And we could simply soft fork BMM into the mainchain a second time (for example to add 256 more).\r\n\r\nI really do not think there will be more than 256, but I suppose we can't know for sure.\r\n\r\n> Requires conveying the prevblock for no apparent reason.\r\n> Includes information on sequence of sidechains in the mainchain for no apparent reason. (Skip count is especially redundant since the prev is already explicit)\r\n\r\nYou may have misunderstood the intent here. It is all about creating the conditions for M8, which is the way that sidechain nodes \"buy\" space in the main:coinbase_txn . To do this, the M8 payment must trigger on something. In fact, we have two possible versions of M8. One triggers on prev, the other on skip count. The ideal M8 payment is M8_v2 a lightning network payment that triggers on prev. But when we need to resort to an on-chain txn then we must use M8_v1. M8_v1, however, unlike the LN payment, can trigger using the index. It actually saves 30 bytes (although the LN txn is better because it uses zero on-chain bytes).\r\n\r\n>Requires softforks for sidechains.\r\n\r\nThere are a few reasons why this is a good idea. One is that, if miners do not support a sidechain, it is in danger of having its funds lost, trapped, or stolen. Another is that is not a big deal, because we expect profit-seeking miners to want to add sidechains, as these increase the value of mined BTC as well as miner's total tx-fee revenues.\r\n\r\nMore important reasons are here: http://www.drivechain.info/faq/#categorical-control\r\n\r\n> No merkle tree for sidechain data!\r\n\r\nAll of the data here is mandatory, so a merkle tree would only accomplish two things (as I see it): first, it would waste 32 bytes of space, to accommodate the (pointless) root hash ; and second, it would be a SegWit-like \"evil fork\" increasing the blocksize limit arbitrarily (or, I suppose, by 32*256 = 8192 bytes).\r\n\r\n>Requires full nodes maintain a new database.\r\n\r\nThis is a disadvantage of this proposal, yes. But the database is pretty small, if you ask me.\r\n\r\n>Requires finding a Bitcoin block for any merged chains.\r\n\r\nI feel that the asymmetric model is by far the most practical way to develop sidechains tech. We get half of the problem solved for free, and we can leverage this solved half to make dealing with the unsolved half much easier. For these asymmetric sidechains, nothing is lost by this requirement.",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-364703682",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MmE5ODEzNjZlN2U4MWQ2ZWZiNzgyZWE2NzViN2RiZmE2MzhjZDI0ZQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2a981366e7e81d6efb782ea675b7dbfa638cd24e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2a981366e7e81d6efb782ea675b7dbfa638cd24e",
      "tree": {
        "sha": "d38babeb0fabb6cec737da2972fd394ec4b52e1f",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/d38babeb0fabb6cec737da2972fd394ec4b52e1f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/17db87224d5e58aa29741cc0077f82ff07ab3803",
          "sha": "17db87224d5e58aa29741cc0077f82ff07ab3803",
          "html_url": "https://github.com/bitcoin/bips/commit/17db87224d5e58aa29741cc0077f82ff07ab3803"
        }
      ],
      "message": "clarifications + backward compatibility",
      "committer": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T23:26:52Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T23:26:52Z"
      },
      "sha": "2a981366e7e81d6efb782ea675b7dbfa638cd24e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NTM1M2Y5ZWEyM2JiNzgxNjcyZDkwZGNjYjBiMTFmZGVmY2RlODIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5353f9ea23bb781672d90dccb0b11fdefcde8237",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/5353f9ea23bb781672d90dccb0b11fdefcde8237",
      "tree": {
        "sha": "d38babeb0fabb6cec737da2972fd394ec4b52e1f",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/d38babeb0fabb6cec737da2972fd394ec4b52e1f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d38babeb0fabb6cec737da2972fd394ec4b52e1f\nparent cebe06b149283d26cea3b57490af5bb754a81fab\nparent 2a981366e7e81d6efb782ea675b7dbfa638cd24e\nauthor Paul Sztorc <psztorc01@gmail.com> 1518305288 -0500\ncommitter GitHub <noreply@github.com> 1518305288 -0500\n\nMerge pull request #2 from psztorc/blind-merged-mining\n\nclarifications + backward compatibility",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaf4AICRBK7hj4Ov3rIwAAdHIIAHKfGcD4hnK5FrGXVInNUfZ1\nAqhMtPG9Oi3VpA1/F1yTDwr94X98hQ5l11GVWUeqBxDxeHJaqyXVBp13jElBy2M2\nmYFkBsGbhPV3WxtcHB+7Iiv+JzZdWcer4XieFH+maOoOQ6RFv4YUGpqkXrmfhk3g\n+gdPEq/WFw+6JeTtMwiyAgPSd3iWx4+qwTFynBTuAUvN/ykdnp26btufjMaLDVET\nOCzQvApCP3nf0Q0ez6qtTfy2vPkh0/HmIbC3lTctIvAcp1uIFvh6Tj10PqdVsCYz\nc8q+oqfmp0z+curQqH5rX7TMrPghnV2LvRJve1QsOojehYAqtaxL37Lgpwm/TzA=\n=BGZL\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/cebe06b149283d26cea3b57490af5bb754a81fab",
          "sha": "cebe06b149283d26cea3b57490af5bb754a81fab",
          "html_url": "https://github.com/bitcoin/bips/commit/cebe06b149283d26cea3b57490af5bb754a81fab"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2a981366e7e81d6efb782ea675b7dbfa638cd24e",
          "sha": "2a981366e7e81d6efb782ea675b7dbfa638cd24e",
          "html_url": "https://github.com/bitcoin/bips/commit/2a981366e7e81d6efb782ea675b7dbfa638cd24e"
        }
      ],
      "message": "Merge pull request #2 from psztorc/blind-merged-mining\n\nclarifications + backward compatibility",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-02-10T23:28:08Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-02-10T23:28:08Z"
      },
      "sha": "5353f9ea23bb781672d90dccb0b11fdefcde8237"
    },
    {
      "event": "commented",
      "id": 364704647,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDcwNDY0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/364704647",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-10T23:28:47Z",
      "updated_at": "2018-02-10T23:28:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think I am now up to date on Luke's requested changes and clarifications.",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-364704647",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NDg1YjEzMThiZDRhNmYyZTEzNzhhZGQ3MTRjZTdhZjJjZmZlZTg3Yg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "tree": {
        "sha": "84d34c5b546a0c35d8cf19a9a5031819398a8caf",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/84d34c5b546a0c35d8cf19a9a5031819398a8caf"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 84d34c5b546a0c35d8cf19a9a5031819398a8caf\nparent 5353f9ea23bb781672d90dccb0b11fdefcde8237\nauthor Paul Sztorc <psztorc01@gmail.com> 1524531011 -0400\ncommitter GitHub <noreply@github.com> 1524531011 -0400\n\nm7 op return update\n\nThis has been right in the code, but I kept forgetting to update the BIP.",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa3n9DCRBK7hj4Ov3rIwAAdHIIACTdmQbBuaz34+KM7uNpo6Qx\n35dKrMy5dL8qyc7vfaQ1nlJUwUkSyDFMm9goi87Zzx79IU/pllhkphmtfxvSEI9b\nDUUK5hmbEYxIJ+t5otwn/R9+szL0IdArUqsUikUReHGuZyKKx6uHQYZArypAABO0\nP3HMtS438EiQnPzu9gFPY2UBIMPIy531N41zur0qpwX2eWhF15nKpjv+EbWKMtGK\n9IMNYIkJhkymQEg+z5feqI8oMnBbX6D1u7SXvNfm7FMKAKnDQt3zgiFjRP9yaZ8X\nPLuyvosy7whKzGBJHgbZvPJtOmTH+VUb79E5igOS4+fEcc6QFxcBzryVmNo4RfI=\n=/8+v\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/5353f9ea23bb781672d90dccb0b11fdefcde8237",
          "sha": "5353f9ea23bb781672d90dccb0b11fdefcde8237",
          "html_url": "https://github.com/bitcoin/bips/commit/5353f9ea23bb781672d90dccb0b11fdefcde8237"
        }
      ],
      "message": "m7 op return update\n\nThis has been right in the code, but I kept forgetting to update the BIP.",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-04-24T00:50:11Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2018-04-24T00:50:11Z"
      },
      "sha": "485b1318bd4a6f2e1378add714ce7af2cffee87b"
    },
    {
      "event": "reviewed",
      "id": 124411445,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTI0NDExNDQ1",
      "url": null,
      "actor": null,
      "commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#pullrequestreview-124411445",
      "submitted_at": "2018-05-30T13:59:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/643"
    },
    {
      "event": "renamed",
      "id": 1653633896,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTY1MzYzMzg5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/1653633896",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-30T14:01:01Z",
      "rename": {
        "from": "new bip - blind merged mining",
        "to": "BIP 301: Blind Merged Mining (Consensus layer)"
      }
    },
    {
      "event": "commented",
      "id": 477884155,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzg4NDE1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/477884155",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-29T06:27:25Z",
      "updated_at": "2019-03-29T06:27:25Z",
      "author_association": "MEMBER",
      "body": "Can we get this renamed and merged?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-477884155",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "reviewed",
      "id": 222268373,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIyMjY4Mzcz",
      "url": null,
      "actor": null,
      "commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#pullrequestreview-222268373",
      "submitted_at": "2019-04-03T15:03:26Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/643"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6YzkwMDg4ZWQ4MTVlYTI0M2RiNzQ1NGI5MjE0NjFlYTk3MTEzZjAwNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c90088ed815ea243db7454b921461ea97113f006",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/c90088ed815ea243db7454b921461ea97113f006",
      "tree": {
        "sha": "b8e2a08ef737bdaf85b2db0206906436e516861d",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b8e2a08ef737bdaf85b2db0206906436e516861d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b8e2a08ef737bdaf85b2db0206906436e516861d\nparent 485b1318bd4a6f2e1378add714ce7af2cffee87b\nauthor Paul Sztorc <psztorc01@gmail.com> 1554420129 -0700\ncommitter GitHub <noreply@github.com> 1554420129 -0700\n\nimproved image, with examples",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcppGhCRBK7hj4Ov3rIwAAdHIIAHzlzaNpdMztiyGv5nKdKfB4\n8H5anHjUruv9lkrfRXYxzGczMOJv5HexC2gzcrpcZtg7qAluP+mf0kVkEU3U9C0w\nQuSfsdr76716CqqZf+QtmbdqEl7kLsARsXTgeTptYFWoKD/7yDf+/yD0VnEG5+OT\nz1ZkQVBZgPDpEUVssObDeRNulsagLmOejup9iB2O757W/mNjC6+JxjGzacsLuReL\nn8I4P/iWK5khoDDoj6MN4V7+WKcJE6T0JmRYctF+WLNZCC9ccdfT6pSzbKTyZujQ\njtb0g1QmLSeJ2gZ7O6UUpMQbX7AWgIaDXBwTYpDuKUSMSM7AbwwJUt3Kr42XMfU=\n=KaFq\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/485b1318bd4a6f2e1378add714ce7af2cffee87b",
          "sha": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
          "html_url": "https://github.com/bitcoin/bips/commit/485b1318bd4a6f2e1378add714ce7af2cffee87b"
        }
      ],
      "message": "improved image, with examples",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-04-04T23:22:09Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-04-04T23:22:09Z"
      },
      "sha": "c90088ed815ea243db7454b921461ea97113f006"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6YmJjYWIwMjllYTBjNGU2MjM3MDg3ZTc2MTAyZTYyZGY1ZTFkNTMwZA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bbcab029ea0c4e6237087e76102e62df5e1d530d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/bbcab029ea0c4e6237087e76102e62df5e1d530d",
      "tree": {
        "sha": "8e617c614044fdd76dbde0f30baa18afaa78dc35",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/8e617c614044fdd76dbde0f30baa18afaa78dc35"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8e617c614044fdd76dbde0f30baa18afaa78dc35\nparent c90088ed815ea243db7454b921461ea97113f006\nauthor Paul Sztorc <psztorc01@gmail.com> 1554420379 -0700\ncommitter GitHub <noreply@github.com> 1554420379 -0700\n\nnumber, shorten, clarify, link to working code",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcppKbCRBK7hj4Ov3rIwAAdHIIAK8ArPyXTgRytmyfJAYOcjEx\n+WScKGtsHTZu8k8adSvozGpZh9hl2z5jKq6d4mRwDq4CR7CzDZQUz7Z2EKySXJak\nrfzrQN+gPEFsJh9IfGTh9KQXPWLmj8jTFWTGmOIMfkcMl4Gebrdp6P4mhezE1hvV\nAiOKuWtN/M5TFi6d1AmiLVJn3OoMRRztP9xd2RG0ay9y9zztpZIEqWUgcZkO+Ohx\nMCw7w6GaOOZgQOawHNdA/kJDsH2EpzQIJ9CWmjTXG3DbjJbBTKTouFDyt+zzU19n\n6NY0vAmPUexZnHoLNiHNje4eiMvzqMRIDYxnJAPry/WrG7AdrSCzGHsyY09/ObM=\n=wCil\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/c90088ed815ea243db7454b921461ea97113f006",
          "sha": "c90088ed815ea243db7454b921461ea97113f006",
          "html_url": "https://github.com/bitcoin/bips/commit/c90088ed815ea243db7454b921461ea97113f006"
        }
      ],
      "message": "number, shorten, clarify, link to working code",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-04-04T23:26:19Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-04-04T23:26:19Z"
      },
      "sha": "bbcab029ea0c4e6237087e76102e62df5e1d530d"
    },
    {
      "event": "reviewed",
      "id": 223094461,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIzMDk0NDYx",
      "url": null,
      "actor": null,
      "commit_id": "bbcab029ea0c4e6237087e76102e62df5e1d530d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#pullrequestreview-223094461",
      "submitted_at": "2019-04-05T04:32:57Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/643"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MmQ3MDkzYmE3NjgyZDY4MzRjZGExZThiZjc5ZGI4Y2UxNzk0YmYzNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2d7093ba7682d6834cda1e8bf79db8ce1794bf37",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/2d7093ba7682d6834cda1e8bf79db8ce1794bf37",
      "tree": {
        "sha": "c9005113fe732ab81235d1518ed23ba71d733df0",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/c9005113fe732ab81235d1518ed23ba71d733df0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c9005113fe732ab81235d1518ed23ba71d733df0\nparent bbcab029ea0c4e6237087e76102e62df5e1d530d\nauthor Paul Sztorc <psztorc01@gmail.com> 1554483744 -0700\ncommitter GitHub <noreply@github.com> 1554483744 -0700\n\nspellcheck",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcp4ogCRBK7hj4Ov3rIwAAdHIIABwSHPbY/VsZShGChjk+Urs/\nD2Qp1QREwO5DHWHJVPVWjoytG2rvdZK/gCTz+RgDcE/J5EI3U2hjH2Z1rYtrc+Qx\nQ0n/nX/x9bPB/9urLs85mT7QTsYuZ5B8XGhAU4/oJGrOv4apN9C0yC4lXrhggE5D\nSGMENc8G7kbby1KsxHuFA0aSF8BS6GjLFrnl4LUZ5OvZv/i0Jlxvj2pnDJpAaZC6\nPllA/WiRO+6dtSpye4tOSWTFMbOsDVYE5zqOJgNhxT4TBxz+r9rmf2OVVOUA7fRN\ncCRtl9nXEFIcxLxRdNGVDHCDDAfDEnJSVY6khgNgryDzbKagwdYUM/m5MazvdVw=\n=xd7j\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/bbcab029ea0c4e6237087e76102e62df5e1d530d",
          "sha": "bbcab029ea0c4e6237087e76102e62df5e1d530d",
          "html_url": "https://github.com/bitcoin/bips/commit/bbcab029ea0c4e6237087e76102e62df5e1d530d"
        }
      ],
      "message": "spellcheck",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-04-05T17:02:24Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-04-05T17:02:24Z"
      },
      "sha": "2d7093ba7682d6834cda1e8bf79db8ce1794bf37"
    },
    {
      "event": "reviewed",
      "id": 223415291,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjIzNDE1Mjkx",
      "url": null,
      "actor": null,
      "commit_id": "2d7093ba7682d6834cda1e8bf79db8ce1794bf37",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#pullrequestreview-223415291",
      "submitted_at": "2019-04-05T18:20:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/643"
    },
    {
      "event": "commented",
      "id": 480473888,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MDQ3Mzg4OA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/480473888",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-06T04:44:35Z",
      "updated_at": "2019-04-06T04:44:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr is it still ready to merge?",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-480473888",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "mentioned",
      "id": 2257281787,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjI1NzI4MTc4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2257281787",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-06T04:44:35Z"
    },
    {
      "event": "subscribed",
      "id": 2257281788,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIyNTcyODE3ODg=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2257281788",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-06T04:44:35Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ZDY5ZTM2OGNlM2VmNDAyZTU3ZjM0ZWQ0MGJmNjE1MDgzNTVmZmE5ZA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d69e368ce3ef402e57f34ed40bf61508355ffa9d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/d69e368ce3ef402e57f34ed40bf61508355ffa9d",
      "tree": {
        "sha": "8199f90aac3e7d1fa969dd525bfa6ca97cd2a725",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/8199f90aac3e7d1fa969dd525bfa6ca97cd2a725"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/2d7093ba7682d6834cda1e8bf79db8ce1794bf37",
          "sha": "2d7093ba7682d6834cda1e8bf79db8ce1794bf37",
          "html_url": "https://github.com/bitcoin/bips/commit/2d7093ba7682d6834cda1e8bf79db8ce1794bf37"
        }
      ],
      "message": "typo\n\nthe critical txn should start with \"03\", as it has version number 3",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-04-17T23:59:40Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-04-17T23:59:40Z"
      },
      "sha": "d69e368ce3ef402e57f34ed40bf61508355ffa9d"
    },
    {
      "event": "commented",
      "id": 509056590,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTA1NjU5MA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/509056590",
      "actor": {
        "login": "joshuajbouw",
        "id": 9986166,
        "node_id": "MDQ6VXNlcjk5ODYxNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9986166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joshuajbouw",
        "html_url": "https://github.com/joshuajbouw",
        "followers_url": "https://api.github.com/users/joshuajbouw/followers",
        "following_url": "https://api.github.com/users/joshuajbouw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joshuajbouw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joshuajbouw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joshuajbouw/subscriptions",
        "organizations_url": "https://api.github.com/users/joshuajbouw/orgs",
        "repos_url": "https://api.github.com/users/joshuajbouw/repos",
        "events_url": "https://api.github.com/users/joshuajbouw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joshuajbouw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-08T02:24:52Z",
      "updated_at": "2019-07-08T02:24:52Z",
      "author_association": "NONE",
      "body": "Hey all, would love to see more progress on this, when merge?",
      "user": {
        "login": "joshuajbouw",
        "id": 9986166,
        "node_id": "MDQ6VXNlcjk5ODYxNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9986166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joshuajbouw",
        "html_url": "https://github.com/joshuajbouw",
        "followers_url": "https://api.github.com/users/joshuajbouw/followers",
        "following_url": "https://api.github.com/users/joshuajbouw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joshuajbouw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joshuajbouw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joshuajbouw/subscriptions",
        "organizations_url": "https://api.github.com/users/joshuajbouw/orgs",
        "repos_url": "https://api.github.com/users/joshuajbouw/repos",
        "events_url": "https://api.github.com/users/joshuajbouw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joshuajbouw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-509056590",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "commented",
      "id": 514240746,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDI0MDc0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/514240746",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-23T14:42:28Z",
      "updated_at": "2019-07-23T14:42:28Z",
      "author_association": "MEMBER",
      "body": "@psztorc The file needs to be named bip-0301.mediawiki (and README updated)",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-514240746",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "mentioned",
      "id": 2503327441,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjUwMzMyNzQ0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2503327441",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-23T14:42:28Z"
    },
    {
      "event": "subscribed",
      "id": 2503327444,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1MDMzMjc0NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2503327444",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-23T14:42:28Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MzI5ZGYwYjgzNjhlMDRjOTI3ODBjYjAzOWYxYzVmYjlmMGNkMzg2Yw==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/329df0b8368e04c92780cb039f1c5fb9f0cd386c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/329df0b8368e04c92780cb039f1c5fb9f0cd386c",
      "tree": {
        "sha": "10a500724e770389cd67aeb2a1fe03ffa7706925",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/10a500724e770389cd67aeb2a1fe03ffa7706925"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 10a500724e770389cd67aeb2a1fe03ffa7706925\nparent d69e368ce3ef402e57f34ed40bf61508355ffa9d\nauthor Paul Sztorc <psztorc01@gmail.com> 1563898473 -0700\ncommitter GitHub <noreply@github.com> 1563898473 -0700\n\nUpdate dates/links to merge",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNzJpCRBK7hj4Ov3rIwAAdHIIAEWmY56AXPtEO1Iz3vRnQ8Wb\nmTW4BoJMldNURyGg8ehL+/EJKWHYW1HVdT68xNL20lkyOd5LsEt25LXBoeM0RjCS\njmWN6ACoHrBNjSOEjfw3R5HdVGk97vqLAMmKtcm48qQHximn4TvQtKx1GYtAVsLM\n0DU5zAzrr9DFSvGc5eamc2cgxImX7qBfET1EQzRnIB4a4g88PHnPdCNGU7AQ86WC\nEd5axN3Bt9F15Ropaxka2v/RKCp7109DPpdjNMUEIEI8PT5xkF4dK/I2KIz3XlYW\nG1XLVgwUAS35aQhB9G6Q9HTQClDD+ekiAVbbyJB45NTnllX389eMh2Wpa0J9O8c=\n=229p\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/d69e368ce3ef402e57f34ed40bf61508355ffa9d",
          "sha": "d69e368ce3ef402e57f34ed40bf61508355ffa9d",
          "html_url": "https://github.com/bitcoin/bips/commit/d69e368ce3ef402e57f34ed40bf61508355ffa9d"
        }
      ],
      "message": "Update dates/links to merge",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-23T16:14:33Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-23T16:14:33Z"
      },
      "sha": "329df0b8368e04c92780cb039f1c5fb9f0cd386c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NmNhMzNkYzYzNTEyYTQ3ZjgwMzIxZTJhZTAyMjJkNTUzMjU3MWQ3ZQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6ca33dc63512a47f80321e2ae0222d5532571d7e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/6ca33dc63512a47f80321e2ae0222d5532571d7e",
      "tree": {
        "sha": "c956b96e88fa7e0902c66d20e033a2e99cdf1cec",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/c956b96e88fa7e0902c66d20e033a2e99cdf1cec"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c956b96e88fa7e0902c66d20e033a2e99cdf1cec\nparent 329df0b8368e04c92780cb039f1c5fb9f0cd386c\nauthor Paul Sztorc <psztorc01@gmail.com> 1563898698 -0700\ncommitter GitHub <noreply@github.com> 1563898698 -0700\n\nRename bip-blind-merged-mining.mediawiki to bip-0301.mediawiki",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNzNKCRBK7hj4Ov3rIwAAdHIIAEVxOP46S+HCQzbs3jvxyl9C\n1d8gys9cSubrNxCa/WaAmESfE6HrWpIuzXzDGeYFyLcGHHALJPUJgojkXHa+EFM3\nZ41BhzGEeUAj5HgZV8bJaEkAnFb0WQ+k0F+zw30Y5NsfS8AFgGE8gLHJFIbyrRCw\nFNM7RR9ZtvC00RMmJqaFY1DTM7WXxcE7HvT+QWBsLDV0r/T+gfTQEdZieVl83tZU\n27kx94Gdqhd7WWrQ1gKF/w5QmtyXDUrUjNNBOTvSWZqnO8gFHh25wtMbc7MNLfxe\nB8Q5kX48jIC3ahqZlnt+V8iN71oE8He6hAHCrejpJ5n87EreICavisEi0a6C/hQ=\n=l5+4\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/329df0b8368e04c92780cb039f1c5fb9f0cd386c",
          "sha": "329df0b8368e04c92780cb039f1c5fb9f0cd386c",
          "html_url": "https://github.com/bitcoin/bips/commit/329df0b8368e04c92780cb039f1c5fb9f0cd386c"
        }
      ],
      "message": "Rename bip-blind-merged-mining.mediawiki to bip-0301.mediawiki",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-23T16:18:18Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-23T16:18:18Z"
      },
      "sha": "6ca33dc63512a47f80321e2ae0222d5532571d7e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6MWZmNWQ1ZDgyNTMxOTFiZWFkOWZmYzM5MjRjNjY4MjkyNzQ3Nzc3Yg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1ff5d5d8253191bead9ffc3924c668292747777b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/1ff5d5d8253191bead9ffc3924c668292747777b",
      "tree": {
        "sha": "accaa327827d445c05924a6c6d477df43012fa33",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/accaa327827d445c05924a6c6d477df43012fa33"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree accaa327827d445c05924a6c6d477df43012fa33\nparent 6ca33dc63512a47f80321e2ae0222d5532571d7e\nauthor Paul Sztorc <psztorc01@gmail.com> 1563898844 -0700\ncommitter GitHub <noreply@github.com> 1563898844 -0700\n\nrename folder",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNzPcCRBK7hj4Ov3rIwAAdHIIAJPBZGXFdgj5c34m2YB/8Yb+\n58DADMKXWOdlKfehPDq7xChVVlyGrUQOWFP8ds4EMv1YQ0JO85VjgXC9iMwbZM3D\n7uFNnvXAtaCoC+AYe6CYhjD2GwYKgj8YWcBS4aYt+tm86MlPycRxrG70FXyxsigq\nEpPzTSr51E4qrx95FvSwf8PhAmvQqZaihoh8vsAy0/4Y0VfOWFMY7AX5HZaXHlNT\ndRceDZIDSfoqrY2eiRmDuGkvMugf/YInbKKP9Jdpu20uFwatIEXt6zKxpOMrpPj2\naHryXY8oJvpXYhIOrtRaOJXSqEw+JTkj/bCawI4r3EN1qb4vSKSJv7u1sYMRtFo=\n=xFcV\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/6ca33dc63512a47f80321e2ae0222d5532571d7e",
          "sha": "6ca33dc63512a47f80321e2ae0222d5532571d7e",
          "html_url": "https://github.com/bitcoin/bips/commit/6ca33dc63512a47f80321e2ae0222d5532571d7e"
        }
      ],
      "message": "rename folder",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-23T16:20:44Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-23T16:20:44Z"
      },
      "sha": "1ff5d5d8253191bead9ffc3924c668292747777b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NDJlOTY4NThkNWUxMzc5M2FiYmY5ODIwZWQzODcyMGQ2NDc4M2NkYQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/42e96858d5e13793abbf9820ed38720d64783cda",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/42e96858d5e13793abbf9820ed38720d64783cda",
      "tree": {
        "sha": "83f368625fca49ab7959ac013c3df58ae6cf8228",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/83f368625fca49ab7959ac013c3df58ae6cf8228"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 83f368625fca49ab7959ac013c3df58ae6cf8228\nparent 1ff5d5d8253191bead9ffc3924c668292747777b\nauthor Paul Sztorc <psztorc01@gmail.com> 1563899175 -0700\ncommitter GitHub <noreply@github.com> 1563899175 -0700\n\nmove images",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNzUnCRBK7hj4Ov3rIwAAdHIIAAzKwRxzG/O69EDi9U+eYRlf\n9nJ9FGP5zF5wXGESDBB6uqLX/IctHaLNpkKgNVACroGRmcyptehJUfp7gOwrI3PC\noLM6PqSEzlpz0ozkcYdc6njQ4fH9f/mcSLxpZ11z8xJqBFdiH6lJZB3xz3ZOuNbc\nyj8gzP9gLO8q86J0+nuz71wq6XgO4ar1LE9KbcdGGA5hQyoirtkHqfiASkEGwVG9\nqaVbzQv+8mFcGNdXLdqj4V7omzPNDRxDxu1hp4Yx+UKjoaaexzey7jzExQR/ywWM\n6d4qLfTjZ7Fd6aAKkV2L4K02mEI3NRfqpmLZ1AZ0fUONdnjxjo3B9ykXVJ8Uxt4=\n=gek8\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/1ff5d5d8253191bead9ffc3924c668292747777b",
          "sha": "1ff5d5d8253191bead9ffc3924c668292747777b",
          "html_url": "https://github.com/bitcoin/bips/commit/1ff5d5d8253191bead9ffc3924c668292747777b"
        }
      ],
      "message": "move images",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-23T16:26:15Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-23T16:26:15Z"
      },
      "sha": "42e96858d5e13793abbf9820ed38720d64783cda"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6Njk2NzBjOWRhMjBhYzY5NmFkNjk2YmEwN2U1ODA5Mzc5NmE4YzViYg==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/69670c9da20ac696ad696ba07e58093796a8c5bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/69670c9da20ac696ad696ba07e58093796a8c5bb",
      "tree": {
        "sha": "819e65ec2baef3014c3a8af80cd60452c50e4d2f",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/819e65ec2baef3014c3a8af80cd60452c50e4d2f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 819e65ec2baef3014c3a8af80cd60452c50e4d2f\nparent 42e96858d5e13793abbf9820ed38720d64783cda\nauthor Paul Sztorc <psztorc01@gmail.com> 1563899205 -0700\ncommitter GitHub <noreply@github.com> 1563899205 -0700\n\ncleanup 1",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNzVFCRBK7hj4Ov3rIwAAdHIIADDf9peC3emhTMLN/JcaU+YK\nMYsHkRhVtyhokq/A0AYc83oeVAqXMKPwvonUHG7Y0Ex1qP0DWRJUUmBBmC83FpbT\nxevRznal4LXb+j2rJ3li/+gYaR0GvAYr8IoUFvva12G879hwdiFbOw7osQHR/Ckc\nXr6oPSzAANlK5U7mLDaQstzyOD1XWP/Vhm8KRm8AppoGUxk0wIx9Ee56C/ObvAZ2\nMgMWWQWnLR2TJ6Q/OtYRqaYGaj77zNBVR+5z32++Qg1Q4KkTKJ9/qlWxGUvd0eyg\nR9zD8H+OHt6E+urwA+vGnnAG0Z2nsmmZFDdpGc56zRX0VMBp1HTyqYi5z5zq1fE=\n=WNoD\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/42e96858d5e13793abbf9820ed38720d64783cda",
          "sha": "42e96858d5e13793abbf9820ed38720d64783cda",
          "html_url": "https://github.com/bitcoin/bips/commit/42e96858d5e13793abbf9820ed38720d64783cda"
        }
      ],
      "message": "cleanup 1",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-23T16:26:45Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-23T16:26:45Z"
      },
      "sha": "69670c9da20ac696ad696ba07e58093796a8c5bb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NGNkNGU1Mzc1MjQ5NmUxNTUyNDM2OTNmZmZiZjc5YzdlZDJkYWE5ZA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4cd4e53752496e155243693fffbf79c7ed2daa9d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/4cd4e53752496e155243693fffbf79c7ed2daa9d",
      "tree": {
        "sha": "b3270b5a9a8c3049d6a20837bdb9bb775aa8b6b5",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/b3270b5a9a8c3049d6a20837bdb9bb775aa8b6b5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b3270b5a9a8c3049d6a20837bdb9bb775aa8b6b5\nparent 69670c9da20ac696ad696ba07e58093796a8c5bb\nauthor Paul Sztorc <psztorc01@gmail.com> 1563899214 -0700\ncommitter GitHub <noreply@github.com> 1563899214 -0700\n\ncleanup 2",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdNzVOCRBK7hj4Ov3rIwAAdHIIACCn5LqxyFGsB7o6jUQYvyHg\nzLeJIBWGUxh2bBS4O0K9PrmECwSRfmmj+4Nn5a0WkFXBrxee3LZAOMi3pp7NCp9q\nNXFluplhlccvgYlfCYqynithdy23i6QDKnN4PgVCqAeRl/PrxsEbdyQcND1E8Jmt\nyNj+JX8RC89FXEPOuq2khRVrhMzeK2KkkQGCwutXBxECfTRKnoY2VZfS6URx1cnG\neNHUKHacjNtfYGuVXveP3aWyLQRdf7l8vhSDoXLUzoGJI4L3rjLKChn1XWBIgnlN\nHC/D19FQxn1WBS7ANxCBJ2CuSenz86v+fLPtTxPYRDp1i7BeVQjE59VanijG1cU=\n=yi8T\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/69670c9da20ac696ad696ba07e58093796a8c5bb",
          "sha": "69670c9da20ac696ad696ba07e58093796a8c5bb",
          "html_url": "https://github.com/bitcoin/bips/commit/69670c9da20ac696ad696ba07e58093796a8c5bb"
        }
      ],
      "message": "cleanup 2",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-23T16:26:54Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-23T16:26:54Z"
      },
      "sha": "4cd4e53752496e155243693fffbf79c7ed2daa9d"
    },
    {
      "event": "commented",
      "id": 514285745,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDI4NTc0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/514285745",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-23T16:30:26Z",
      "updated_at": "2019-07-23T16:30:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ok it's been renamed @luke-jr ",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-514285745",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "mentioned",
      "id": 2503689034,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjUwMzY4OTAzNA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2503689034",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-23T16:30:26Z"
    },
    {
      "event": "subscribed",
      "id": 2503689036,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI1MDM2ODkwMzY=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2503689036",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-23T16:30:26Z"
    },
    {
      "event": "reviewed",
      "id": 266374645,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjY2Mzc0NjQ1",
      "url": null,
      "actor": null,
      "commit_id": "4cd4e53752496e155243693fffbf79c7ed2daa9d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#pullrequestreview-266374645",
      "submitted_at": "2019-07-25T02:38:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/643"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6ZGIxMTdlZjQ3MzQ5MmMxODA5MzllNjk0NzczMTA0MDAyYTM5MjlhNA==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/db117ef473492c180939e694773104002a3929a4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/db117ef473492c180939e694773104002a3929a4",
      "tree": {
        "sha": "6d37733dbcb8a1be124444cd3098b76ed24b8167",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/6d37733dbcb8a1be124444cd3098b76ed24b8167"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6d37733dbcb8a1be124444cd3098b76ed24b8167\nparent 4cd4e53752496e155243693fffbf79c7ed2daa9d\nauthor Paul Sztorc <psztorc01@gmail.com> 1564123865 -0700\ncommitter GitHub <noreply@github.com> 1564123865 -0700\n\nfix spacing",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdOqLZCRBK7hj4Ov3rIwAAdHIIAH56PjJdLO+UDWrjcJ6EUB/8\na9iQ1+T1wQAAGNXoLf2E5OpXWNF8ghOU1ZorKSXL6CIdCywtaenmzDQ58rCUrwmv\nrxKSpwrMDOQ2oLYYiza11RsYSvatDBapY67JSjK30O//1BvDnfvU0IQGd+LLsRdM\n1R0HosHJlUED/fewXYubx2DxTr1hfdItFBFUSyL5/AFnMD60GbQ+frWokV7uvQaY\nAhV1rEY0XkStxV4Dx0/zUPQ71cfH2geNpTYeoKiIIFb9OXVmCobgZZ16/rv0mN4+\nzR5twORZuh7gRA9c9UFVhK02xHNL6xEQQFNMYharJKM8wI7cjbk7WM8q5J/JIrI=\n=ESZp\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/4cd4e53752496e155243693fffbf79c7ed2daa9d",
          "sha": "4cd4e53752496e155243693fffbf79c7ed2daa9d",
          "html_url": "https://github.com/bitcoin/bips/commit/4cd4e53752496e155243693fffbf79c7ed2daa9d"
        }
      ],
      "message": "fix spacing",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-26T06:51:05Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-26T06:51:05Z"
      },
      "sha": "db117ef473492c180939e694773104002a3929a4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6NTQyYzY2ZTZkZGMzZDlmNzAzMTE0ZjdlNjQ1ZjE5ZDU3MmM4Mjc0ZQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "tree": {
        "sha": "98580bcd6d891b4669385ff194faeb38f3b2abd7",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/98580bcd6d891b4669385ff194faeb38f3b2abd7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 98580bcd6d891b4669385ff194faeb38f3b2abd7\nparent db117ef473492c180939e694773104002a3929a4\nauthor Paul Sztorc <psztorc01@gmail.com> 1564124232 -0700\ncommitter GitHub <noreply@github.com> 1564124232 -0700\n\nAdd 301 Blind Merged Mining",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdOqRICRBK7hj4Ov3rIwAAdHIIAFqPgUNus/FU18WAjg/7wIjH\nHQhenbrOj0I9Ki08XiG5KrHmTI9fgHPNknu9qMBwXBzHAAfzx4eN+S+APxNrbbaf\nuXUYbm0cWIEJMIOntYYYAqKSf1RMzyTvbTsxW4ekiFF1PfluwEXFqg1h/p7iuGLa\nUQO9UoglsasGclGGdN/D43jif/ajhmNWOZ1AqirSoAjIirKmu2UBjfZ7ttroCNuK\nuJ7DY8kBgbGPoK2w+qvOcM3XKX2pU3QmouGe+3wR3N3e8WdGFITvMcsl4Maz9D8W\nIrZG7/HjemufbLtqApAWxZgdSJL3JhNkB15BwRm/+B6eCc5FXYo9QbOoA1+QCDI=\n=fAiM\n-----END PGP SIGNATURE-----\n"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/db117ef473492c180939e694773104002a3929a4",
          "sha": "db117ef473492c180939e694773104002a3929a4",
          "html_url": "https://github.com/bitcoin/bips/commit/db117ef473492c180939e694773104002a3929a4"
        }
      ],
      "message": "Add 301 Blind Merged Mining",
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-07-26T06:57:12Z"
      },
      "author": {
        "name": "Paul Sztorc",
        "email": "psztorc01@gmail.com",
        "date": "2019-07-26T06:57:12Z"
      },
      "sha": "542c66e6ddc3d9f703114f7e645f19d572c8274e"
    },
    {
      "event": "commented",
      "id": 515334521,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTMzNDUyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/515334521",
      "actor": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-26T06:59:24Z",
      "updated_at": "2019-07-26T06:59:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ok, spaces deleted and README updated",
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/643#issuecomment-515334521",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/643"
    },
    {
      "event": "merged",
      "id": 2512462837,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjUxMjQ2MjgzNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2512462837",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "created_at": "2019-07-26T12:42:54Z"
    },
    {
      "event": "closed",
      "id": 2512462843,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjUxMjQ2Mjg0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/2512462843",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-26T12:42:55Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166170712",
      "pull_request_review_id": 94207940,
      "id": 166170712,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE3MDcxMg==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 61,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Where is this file?",
      "created_at": "2018-02-06T02:15:18Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r166170712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166170712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166171352",
      "pull_request_review_id": 94207940,
      "id": 166171352,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE3MTM1Mg==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 28,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Extension blocks and sidechains are two different things.",
      "created_at": "2018-02-06T02:20:59Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r166171352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166171352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166184217",
      "pull_request_review_id": 94207940,
      "id": 166184217,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE4NDIxNw==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the sidechain block)\r\n+    2-bytes  - prevBlockRef (an index which points to this side:block's parent side:block)\r\n+\r\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:block which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\r\n+\r\n+Where does this data come from, and how does it get around?\r\n+\r\n+#### Creating / Broadcasting This Data\r\n+\r\n+##### Creation\r\n+\r\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\r\n+\r\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\r\n+\r\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\r\n+\r\n+![dots-image](/bip-blind-merged-mining/bmm-dots-examples.png?raw=true)\r\n+\r\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\r\n+\r\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 83,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not made clear *why* this data is considered critical... It certainly doesn't seem like it should be.",
      "created_at": "2018-02-06T04:21:26Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r166184217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166184217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166184347",
      "pull_request_review_id": 94207940,
      "id": 166184347,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE4NDM0Nw==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the sidechain block)\r\n+    2-bytes  - prevBlockRef (an index which points to this side:block's parent side:block)\r\n+\r\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:block which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\r\n+\r\n+Where does this data come from, and how does it get around?\r\n+\r\n+#### Creating / Broadcasting This Data\r\n+\r\n+##### Creation\r\n+\r\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\r\n+\r\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\r\n+\r\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\r\n+\r\n+![dots-image](/bip-blind-merged-mining/bmm-dots-examples.png?raw=true)\r\n+\r\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\r\n+\r\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\r\n+\r\n+##### Broadcast\r\n+\r\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\r\n+\r\n+#### M7 -- \"Blind-Mine the Sidechain(s)\"\r\n+\r\n+Thus, (for n sidechains) we have a coinbase output with:\r\n+\r\n+    1-byte - OP_RETURN (0x6a)\r\n+    1-byte - Push the following (4+(n*35)) bytes (0x??)\r\n+    4-byte - Message header (0xD3407053)\r\n+    (n*(32+5))-byte - A sequence of bytes, of the three Mini-Header items (h*, prevBlockRef, ChainIndex).\r\n+\r\n+( We assume that 5 bytes are used for the Critical Data bytes (non h* parts of the Sidechain Mini-Header). For 256 sidechains, a total of 9,478 bytes [1+1+4+256\\*(32+5)] are required, conveniently just below the 10 KB scriptPubKey size limit.)\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 98,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why? This is useless data to the main chain.",
      "created_at": "2018-02-06T04:22:49Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r166184347",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166184347"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166184793",
      "pull_request_review_id": 94207940,
      "id": 166184793,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE4NDc5Mw==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the sidechain block)\r\n+    2-bytes  - prevBlockRef (an index which points to this side:block's parent side:block)\r\n+\r\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:block which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\r\n+\r\n+Where does this data come from, and how does it get around?\r\n+\r\n+#### Creating / Broadcasting This Data\r\n+\r\n+##### Creation\r\n+\r\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\r\n+\r\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\r\n+\r\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\r\n+\r\n+![dots-image](/bip-blind-merged-mining/bmm-dots-examples.png?raw=true)\r\n+\r\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\r\n+\r\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\r\n+\r\n+##### Broadcast\r\n+\r\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\r\n+\r\n+#### M7 -- \"Blind-Mine the Sidechain(s)\"\r\n+\r\n+Thus, (for n sidechains) we have a coinbase output with:\r\n+\r\n+    1-byte - OP_RETURN (0x6a)\r\n+    1-byte - Push the following (4+(n*35)) bytes (0x??)\r\n+    4-byte - Message header (0xD3407053)\r\n+    (n*(32+5))-byte - A sequence of bytes, of the three Mini-Header items (h*, prevBlockRef, ChainIndex).\r\n+\r\n+( We assume that 5 bytes are used for the Critical Data bytes (non h* parts of the Sidechain Mini-Header). For 256 sidechains, a total of 9,478 bytes [1+1+4+256\\*(32+5)] are required, conveniently just below the 10 KB scriptPubKey size limit.)\r\n+\r\n+This data is parsed by laying it in sequential 37-byte chunks (any remaining data --ie, some final chunk that is less than 37 bytes in length-- has no consensus meaning). \r\n+\r\n+Each 37-byte chunk is then parsed to obtain the data outlined above (in \"Description\"). If two 35-byte chunks being with the same \"Sidechain number\" (ie, if the two chunks have the same first byte), then only the first chunk has consensus meaning.\r\n+\r\n+We are left with, at most, one (h*, prevBlockRef) pair per sidechain per block. This data is added directly to D3, a new database.\r\n+\r\n+#### D3 -- \"RecentSidechains_DB\"\r\n+\r\n+To suit our purposes, the mainchain full nodes will need to keep track of the most recent 8000 (h\\*, prevBlockRef) pairs.\r\n+\r\n+( This 8,000 figure is a tradeoff between decentralization (costs of running the main:node) and sidechain security -- it requires attackers to merged-mine 8,000 invalid blocks consecutively, in order to cause the sidechain to fail. The mainchain burden is minimal, so this figure might be raised to 12,000 or higher. )\r\n+\r\n+Therefore, D3 would look something like this:\r\n+\r\n+\r\n+           BlockHeight  CB_Index    SC_1   Blks_Atop_1   SC 2   Blks_Atop_2   SC 3   Blks_Atop_3\r\n+            ---------    ------    ------   ---------   ------   ---------   ------   ---------\r\n+       1.    401,005        2      (h*, 0)     7985     (h*, 0)        1     (h*, 0)        0\r\n+       2.    401,006        4      (h*, 0)     7984     (h*, 0)        0     (h*, 1)     7801\r\n+       3.    401,007        2      (h*, 0)     7983     (h*, 5)     2027     (h*, 0)        0\r\n+       4.    401,008        2      (h*, 0)     7982     (h*, 0)     2028     (h*, 1)     7800\r\n+      ...     ...                                                                  )\r\n+    7999.    409,003        3      (h*, 0)        1     (h*, 0)        0     (h*, 0)        1\r\n+    8000.    409,004        2      (h*, 0)        0     (h*, 1)        0     (h*, 0)        0\r\n+\r\n+\r\n+When new sidechains (or \"hashrate escrows\") are soft-forked into existence, a new column is added to D3 (to contain any BMMing that might be done on it).\r\n+\r\n+For each sidechain we also track the field \"Blocks Atop\". This is the number of side:blocks that are \"on top\" of the specified side:block. These might be regarded as \"side:confirmations\" (pseudo-confirmations that are specific to each sidechain).\r\n+\r\n+D3 also contains a column (not shown) for each sidechain containing \"prevSideBlockHash\". This value is is either derived from prevBlockRef; or else it is given explicitly (in which case it is the converse: prevBlockRef is derived from prevSideBlockHash).\r\n+\r\n+\r\n+#### Coinbase Cache\r\n+\r\n+As mentioned above, M7s cause data to be added to D3. Recent D3 data is tracked by all mainchain nodes for a period of time.\r\n+\r\n+To efficiently keep track of the above data, without having to constantly load and process entire blocks from disk, we temporarily cache enough coinbases in the chain index to maintain D3.\r\n+\r\n+\r\n+### M8 -- Paying miners to include BMM data in their coinbase outputs\r\n+\r\n+This section introduces a new type of transaction, which allows sidechain block creators to request, and pay for, a critical hash to be included in a specific block by mainchain miners. See [the Blind Merged Mining spec](http://www.truthcoin.info/blog/blind-merged-mining/). This txn allows miners to \"sell\" the act of mining a sidechain block. By taking advantage of this option, miners earn tx fees for mining sidechains...truly \"for free\". They do not even need to run sidechain nodes, and the tx-fees they earn are in mainchain BTC. As a result, sidechains affect all miners equally and do not affect the mining ecosystem.\r\n+\r\n+M8 will ultimately come in two versions. The second version will be specialized for use in the Lightning Network and must use the full 32-byte prevBlockHash (ironically, this larger transaction is cheaper for the Bitcoin network to process, as it is completely off-chain). The first version of M8, in contrast, cannot be used inside the Lightning Network, but is slightly more space-efficient (using the 2 prevBlockRef bytes to maintain chain order). It is important to make both options available to the user, because some side:nodes may be unwilling or unable to open a payment channels with each main:miner. However, in the long run we expect the lightning version to be preferred.\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 144,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lightning doesn't require you to have a channel with the recipient...",
      "created_at": "2018-02-06T04:27:59Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r166184793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166184793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166185392",
      "pull_request_review_id": 94207940,
      "id": 166185392,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE4NTM5Mg==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 44,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They can take a merged chain header from someone else risk-free.",
      "created_at": "2018-02-06T04:33:52Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r166185392",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166185392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166185436",
      "pull_request_review_id": 94207940,
      "id": 166185436,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE4NTQzNg==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 45,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They can accept payment in any way they like... nothing stops them from being paid in bitcoins to include the mentioned merge block header.",
      "created_at": "2018-02-06T04:34:21Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r166185436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/166185436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413089",
      "pull_request_review_id": 95635461,
      "id": 167413089,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQxMzA4OQ==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 61,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": 166170712,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now, it is here, in the first BIP: https://github.com/bitcoin/bips/pull/642/files#diff-faa5d00974be8fe9f13c7d7fec81b7ee",
      "created_at": "2018-02-10T22:36:46Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r167413089",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413112",
      "pull_request_review_id": 95635484,
      "id": 167413112,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQxMzExMg==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 28,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": 166171352,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They are indeed. I feel that an asymmetric sidechain is the same as an optional extension block. I will clarify it.",
      "created_at": "2018-02-10T22:38:15Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r167413112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413235",
      "pull_request_review_id": 95635604,
      "id": 167413235,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQxMzIzNQ==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the sidechain block)\r\n+    2-bytes  - prevBlockRef (an index which points to this side:block's parent side:block)\r\n+\r\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:block which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\r\n+\r\n+Where does this data come from, and how does it get around?\r\n+\r\n+#### Creating / Broadcasting This Data\r\n+\r\n+##### Creation\r\n+\r\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\r\n+\r\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\r\n+\r\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\r\n+\r\n+![dots-image](/bip-blind-merged-mining/bmm-dots-examples.png?raw=true)\r\n+\r\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\r\n+\r\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 83,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": 166184217,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have clarified this part by adding: \" This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain. \"",
      "created_at": "2018-02-10T22:44:10Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r167413235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413250",
      "pull_request_review_id": 95635624,
      "id": 167413250,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQxMzI1MA==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the sidechain block)\r\n+    2-bytes  - prevBlockRef (an index which points to this side:block's parent side:block)\r\n+\r\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:block which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\r\n+\r\n+Where does this data come from, and how does it get around?\r\n+\r\n+#### Creating / Broadcasting This Data\r\n+\r\n+##### Creation\r\n+\r\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\r\n+\r\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\r\n+\r\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\r\n+\r\n+![dots-image](/bip-blind-merged-mining/bmm-dots-examples.png?raw=true)\r\n+\r\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\r\n+\r\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\r\n+\r\n+##### Broadcast\r\n+\r\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\r\n+\r\n+#### M7 -- \"Blind-Mine the Sidechain(s)\"\r\n+\r\n+Thus, (for n sidechains) we have a coinbase output with:\r\n+\r\n+    1-byte - OP_RETURN (0x6a)\r\n+    1-byte - Push the following (4+(n*35)) bytes (0x??)\r\n+    4-byte - Message header (0xD3407053)\r\n+    (n*(32+5))-byte - A sequence of bytes, of the three Mini-Header items (h*, prevBlockRef, ChainIndex).\r\n+\r\n+( We assume that 5 bytes are used for the Critical Data bytes (non h* parts of the Sidechain Mini-Header). For 256 sidechains, a total of 9,478 bytes [1+1+4+256\\*(32+5)] are required, conveniently just below the 10 KB scriptPubKey size limit.)\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 98,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": 166184347,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The mainchain needs this data in order to validate the two styles of \"M8\" transaction.",
      "created_at": "2018-02-10T22:44:58Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r167413250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413292",
      "pull_request_review_id": 95635667,
      "id": 167413292,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQxMzI5Mg==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r\n+\r\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\r\n+\r\n+\r\n+Specification\r\n+============\r\n+\r\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\r\n+\r\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+### Sidechain Critical Data (\"Sidechain Mini-Header\")\r\n+\r\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\r\n+\r\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\r\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the sidechain block)\r\n+    2-bytes  - prevBlockRef (an index which points to this side:block's parent side:block)\r\n+\r\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:block which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\r\n+\r\n+Where does this data come from, and how does it get around?\r\n+\r\n+#### Creating / Broadcasting This Data\r\n+\r\n+##### Creation\r\n+\r\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\r\n+\r\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\r\n+\r\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\r\n+\r\n+![dots-image](/bip-blind-merged-mining/bmm-dots-examples.png?raw=true)\r\n+\r\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\r\n+\r\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\r\n+\r\n+##### Broadcast\r\n+\r\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\r\n+\r\n+#### M7 -- \"Blind-Mine the Sidechain(s)\"\r\n+\r\n+Thus, (for n sidechains) we have a coinbase output with:\r\n+\r\n+    1-byte - OP_RETURN (0x6a)\r\n+    1-byte - Push the following (4+(n*35)) bytes (0x??)\r\n+    4-byte - Message header (0xD3407053)\r\n+    (n*(32+5))-byte - A sequence of bytes, of the three Mini-Header items (h*, prevBlockRef, ChainIndex).\r\n+\r\n+( We assume that 5 bytes are used for the Critical Data bytes (non h* parts of the Sidechain Mini-Header). For 256 sidechains, a total of 9,478 bytes [1+1+4+256\\*(32+5)] are required, conveniently just below the 10 KB scriptPubKey size limit.)\r\n+\r\n+This data is parsed by laying it in sequential 37-byte chunks (any remaining data --ie, some final chunk that is less than 37 bytes in length-- has no consensus meaning). \r\n+\r\n+Each 37-byte chunk is then parsed to obtain the data outlined above (in \"Description\"). If two 35-byte chunks being with the same \"Sidechain number\" (ie, if the two chunks have the same first byte), then only the first chunk has consensus meaning.\r\n+\r\n+We are left with, at most, one (h*, prevBlockRef) pair per sidechain per block. This data is added directly to D3, a new database.\r\n+\r\n+#### D3 -- \"RecentSidechains_DB\"\r\n+\r\n+To suit our purposes, the mainchain full nodes will need to keep track of the most recent 8000 (h\\*, prevBlockRef) pairs.\r\n+\r\n+( This 8,000 figure is a tradeoff between decentralization (costs of running the main:node) and sidechain security -- it requires attackers to merged-mine 8,000 invalid blocks consecutively, in order to cause the sidechain to fail. The mainchain burden is minimal, so this figure might be raised to 12,000 or higher. )\r\n+\r\n+Therefore, D3 would look something like this:\r\n+\r\n+\r\n+           BlockHeight  CB_Index    SC_1   Blks_Atop_1   SC 2   Blks_Atop_2   SC 3   Blks_Atop_3\r\n+            ---------    ------    ------   ---------   ------   ---------   ------   ---------\r\n+       1.    401,005        2      (h*, 0)     7985     (h*, 0)        1     (h*, 0)        0\r\n+       2.    401,006        4      (h*, 0)     7984     (h*, 0)        0     (h*, 1)     7801\r\n+       3.    401,007        2      (h*, 0)     7983     (h*, 5)     2027     (h*, 0)        0\r\n+       4.    401,008        2      (h*, 0)     7982     (h*, 0)     2028     (h*, 1)     7800\r\n+      ...     ...                                                                  )\r\n+    7999.    409,003        3      (h*, 0)        1     (h*, 0)        0     (h*, 0)        1\r\n+    8000.    409,004        2      (h*, 0)        0     (h*, 1)        0     (h*, 0)        0\r\n+\r\n+\r\n+When new sidechains (or \"hashrate escrows\") are soft-forked into existence, a new column is added to D3 (to contain any BMMing that might be done on it).\r\n+\r\n+For each sidechain we also track the field \"Blocks Atop\". This is the number of side:blocks that are \"on top\" of the specified side:block. These might be regarded as \"side:confirmations\" (pseudo-confirmations that are specific to each sidechain).\r\n+\r\n+D3 also contains a column (not shown) for each sidechain containing \"prevSideBlockHash\". This value is is either derived from prevBlockRef; or else it is given explicitly (in which case it is the converse: prevBlockRef is derived from prevSideBlockHash).\r\n+\r\n+\r\n+#### Coinbase Cache\r\n+\r\n+As mentioned above, M7s cause data to be added to D3. Recent D3 data is tracked by all mainchain nodes for a period of time.\r\n+\r\n+To efficiently keep track of the above data, without having to constantly load and process entire blocks from disk, we temporarily cache enough coinbases in the chain index to maintain D3.\r\n+\r\n+\r\n+### M8 -- Paying miners to include BMM data in their coinbase outputs\r\n+\r\n+This section introduces a new type of transaction, which allows sidechain block creators to request, and pay for, a critical hash to be included in a specific block by mainchain miners. See [the Blind Merged Mining spec](http://www.truthcoin.info/blog/blind-merged-mining/). This txn allows miners to \"sell\" the act of mining a sidechain block. By taking advantage of this option, miners earn tx fees for mining sidechains...truly \"for free\". They do not even need to run sidechain nodes, and the tx-fees they earn are in mainchain BTC. As a result, sidechains affect all miners equally and do not affect the mining ecosystem.\r\n+\r\n+M8 will ultimately come in two versions. The second version will be specialized for use in the Lightning Network and must use the full 32-byte prevBlockHash (ironically, this larger transaction is cheaper for the Bitcoin network to process, as it is completely off-chain). The first version of M8, in contrast, cannot be used inside the Lightning Network, but is slightly more space-efficient (using the 2 prevBlockRef bytes to maintain chain order). It is important to make both options available to the user, because some side:nodes may be unwilling or unable to open a payment channels with each main:miner. However, in the long run we expect the lightning version to be preferred.\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 144,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": 166184793,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I have edited this part to instead read \"LN connection\". Although, it does not change the point I was trying to make.",
      "created_at": "2018-02-10T22:46:35Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r167413292",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413322",
      "pull_request_review_id": 95635701,
      "id": 167413322,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQxMzMyMg==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 44,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": 166185392,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there not a risk that they will get a merged chain header that is ultimately invalid (as I say above)? If so than it is not risk free.",
      "created_at": "2018-02-10T22:47:48Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r167413322",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413366",
      "pull_request_review_id": 95635743,
      "id": 167413366,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQxMzM2Ng==",
      "diff_hunk": "@@ -0,0 +1,329 @@\n+    Drivechain Documentation -- Blind Merged Mining BIP\r\n+    Paul Sztorc\r\n+    November 17, 2017\r\n+    Document 3 of 3\r\n+    v4.1\r\n+\r\n+\r\n+Header\r\n+=======\r\n+\r\n+    BIP: ????\r\n+    Layer: Consensus (soft fork)\r\n+    Title: Blind Merged Mining (Consensus layer)\r\n+    Author: Paul Sztorc <truthcoin@gmail.com>\r\n+            CryptAxe <cryptaxe@gmail.com>\r\n+            Chris Stewart <chris@suredbits.com>\r\n+    Comments-Summary: No comments yet.\r\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\r\n+    Status: Draft\r\n+    Type: Standards Track\r\n+    Created: 2017-10-24\r\n+    License: BSD-2-Clause\r\n+\r\n+\r\n+Abstract\r\n+==========\r\n+\r\n+Blind Merged Mining (BMM) is a way of mining special extension blocks, ie \"sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\r\n+\r\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\r\n+\r\n+To support BMM, the mainchain is asked to accomplish two goals:\r\n+1. Track a set of ordered hashes (the merged-mining).\r\n+2. Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\r\n+\r\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\r\n+\r\n+\r\n+Motivation\r\n+============\r\n+\r\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\r\n+\r\n+1. Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\r\n+2. Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\r",
      "path": "bip-blind-merged-mining.md",
      "position": null,
      "original_position": 45,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "3246096174020bdcfcdf464c43b0ec997410f580",
      "in_reply_to_id": 166185436,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The goal here is to make it require zero trust.\r\n\r\nThe issue is not being paid in BTC (as they will also be paid \"in BTC\" if they mine a namecoin sidechain [instead of namecoin-altcoin]). Instead, the issue is being paid on the mainchain.",
      "created_at": "2018-02-10T22:49:52Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r167413366",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/167413366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191773852",
      "pull_request_review_id": 124411445,
      "id": 191773852,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTc3Mzg1Mg==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure these are drawbacks. By eliminating them, you essentially turn all sidechain hashrate into a kind of decentralised Nicehash service. This can be catastrophic, since it essentially sells control to the highest bidder, which can easily be an attacker.",
      "created_at": "2018-05-30T13:47:26Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191773852",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191773852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191774458",
      "pull_request_review_id": 124411445,
      "id": 191774458,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTc3NDQ1OA==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 54,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a huge scalability regression for sidechains, which currently can be increased in number infinitely without adding more than a fixed 32 bytes to Bitcoin's blocks.",
      "created_at": "2018-05-30T13:49:07Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191774458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191774458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191774793",
      "pull_request_review_id": 124411445,
      "id": 191774793,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTc3NDc5Mw==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 70,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why would there only be 256 sidechains?",
      "created_at": "2018-05-30T13:49:53Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191774793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191774793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191775404",
      "pull_request_review_id": 124411445,
      "id": 191775404,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTc3NTQwNA==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\n+\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\n+\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 78,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about side:blocks that do not meet the difficulty of a valid Bitcoin block (but still remain a valid sidechain block)?",
      "created_at": "2018-05-30T13:51:33Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191775404",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191775404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191775645",
      "pull_request_review_id": 124411445,
      "id": 191775645,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTc3NTY0NQ==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\n+\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\n+\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\n+\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\n+\n+===== Broadcast =====\n+\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\n+\n+==== M7 -- \"Blind-Mine the Sidechain(s)\" ====\n+\n+Thus, (for n sidechains) we have a coinbase output with multiple OP_RETURNs (we've changed the tx-standardness policy to allow multiple OP_RETURNs):",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 88,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is no tx-standardness policy for coinbases (it is a self-contradicting concept)... Nor are such matters of policy subject to BIPs - they are entirely up to implementations and/or individual node operators.",
      "created_at": "2018-05-30T13:52:10Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191775645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191775645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191778136",
      "pull_request_review_id": 124411445,
      "id": 191778136,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTc3ODEzNg==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Let's go with BIP 301.",
      "created_at": "2018-05-30T13:59:07Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191778136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191778136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191920411",
      "pull_request_review_id": 124590012,
      "id": 191920411,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyMDQxMQ==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 40,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191773852,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n> I'm not sure these are drawbacks.\r\n\r\nThe first is, I think. Some miners complained about Namecoin's buggy software, and refused to use it -- leading to suboptimal NMC hashrate, and disproportionate 2x-sha256 rewards (which some SC reviewers are strongly against). Also, if/when namecoin software crashed, it (very temporarily) took down the Bitcoin hashing network with it.\r\n\r\nThe second is really just a convenience. I suppose it is better for miners to \"dogfood\" (in a sense) their coinbases (they will be more loyal to Namecoin if they are paid in NMC). But in the sidechains case, they are being paid with BTC, and their ASICs have been designed mine BTC.\r\n\r\n> sells control to the highest bidder\r\n\r\nThis does give control over block ordering to the highest bidder. I am truly not sure what will happen as a result.\r\n\r\nBut first of all we are already in a world where control goes to the highest bidder -- today, they must instead bid using illiquid currencies -- ASIC equipment and electrical power. But if they win then they will have \"control\" (in the same limited sense that miners have control over block ordering today).\r\n\r\nBut, hashes/second has a time component, whereas the bidding in blind merged mining does not.\r\n\r\nOn the other hand, when Bitcoin has no block subsidy, an attacker can broadcast a string of \"attack transactions\" that pay extremely large fees, and thus induce miners to reorg the chain. It really comes down to the wealth generated by the chain, I think (whether it is a main- or side- chain).",
      "created_at": "2018-05-30T20:57:10Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191920411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191920411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191921625",
      "pull_request_review_id": 124591534,
      "id": 191921625,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyMTYyNQ==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 54,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191774458,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, yes I think it is.\r\n\r\nBut it is intended to respond to the allegation that, in practice, miners would need to run a sidechain node. In that case, the scalability regression would be several orders of magnitude greater. Instead of 32 bytes in your example, it would be infinite bytes.",
      "created_at": "2018-05-30T21:01:32Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191921625",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191921625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191922023",
      "pull_request_review_id": 124592046,
      "id": 191922023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyMjAyMw==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 70,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191774793,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We only allocate one byte to identifying a sidechain.\r\n\r\nBut there can be sidechains-of-sidechains, so in practice there is no real limit.",
      "created_at": "2018-05-30T21:03:00Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191922023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191922023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191923174",
      "pull_request_review_id": 124593483,
      "id": 191923174,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyMzE3NA==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\n+\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\n+\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 78,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191775404,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Such a block would not be a found sidechain block. It would just be a candidate for the next block (perhaps), or else it would be some arbitrary collection of mempool data.\r\n\r\nIn BMM, a sidechain header meets its difficulty requirement if and only if the header is included in a mainchain Bitcoin block. That is the only way it can meet its \"difficulty\" requirement. This is a difference from regular merged mining. ",
      "created_at": "2018-05-30T21:07:15Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191923174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191923174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191923889",
      "pull_request_review_id": 124594343,
      "id": 191923889,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyMzg4OQ==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\n+\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\n+\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\n+\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\n+\n+===== Broadcast =====\n+\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\n+\n+==== M7 -- \"Blind-Mine the Sidechain(s)\" ====\n+\n+Thus, (for n sidechains) we have a coinbase output with multiple OP_RETURNs (we've changed the tx-standardness policy to allow multiple OP_RETURNs):",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 88,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191775645,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That may be so, but in practice many people have pointed out to me that I am \"not allowed\" to use multiple OP Returns. So it definitely interests some readers.\r\n\r\nAnd we did in fact change the standardness policy.\r\n\r\nShould we ensure that we have only changed the policy for coinbase txns only?",
      "created_at": "2018-05-30T21:09:45Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191923889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191923889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191924023",
      "pull_request_review_id": 124594452,
      "id": 191924023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyNDAyMw==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 4,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191778136,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it",
      "created_at": "2018-05-30T21:10:04Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191924023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191924023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191925083",
      "pull_request_review_id": 124595788,
      "id": 191925083,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyNTA4Mw==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 54,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191774458,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The scalability regression affects not just miners, but all full nodes.",
      "created_at": "2018-05-30T21:14:10Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191925083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191925083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191925405",
      "pull_request_review_id": 124596190,
      "id": 191925405,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkyNTQwNQ==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\n+\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\n+\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\n+\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\n+\n+===== Broadcast =====\n+\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\n+\n+==== M7 -- \"Blind-Mine the Sidechain(s)\" ====\n+\n+Thus, (for n sidechains) we have a coinbase output with multiple OP_RETURNs (we've changed the tx-standardness policy to allow multiple OP_RETURNs):",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 88,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191775645,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Policy is about off-chain transaction acceptance. There is no policy for on-chain blocks - just consensus rules.",
      "created_at": "2018-05-30T21:15:30Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191925405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191925405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191945229",
      "pull_request_review_id": 124619666,
      "id": 191945229,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTk0NTIyOQ==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\n+\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\n+\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\n+\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\n+\n+===== Broadcast =====\n+\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\n+\n+==== M7 -- \"Blind-Mine the Sidechain(s)\" ====\n+\n+Thus, (for n sidechains) we have a coinbase output with multiple OP_RETURNs (we've changed the tx-standardness policy to allow multiple OP_RETURNs):",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 88,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191775645,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I see what you are saying.\r\n\r\nI will try to find a way to clarify the sentence.",
      "created_at": "2018-05-30T22:42:14Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r191945229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/191945229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/192573138",
      "pull_request_review_id": 125379540,
      "id": 192573138,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjU3MzEzOA==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 54,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": 191774458,
      "user": {
        "login": "psztorc",
        "id": 3165891,
        "node_id": "MDQ6VXNlcjMxNjU4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3165891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psztorc",
        "html_url": "https://github.com/psztorc",
        "followers_url": "https://api.github.com/users/psztorc/followers",
        "following_url": "https://api.github.com/users/psztorc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psztorc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psztorc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psztorc/subscriptions",
        "organizations_url": "https://api.github.com/users/psztorc/orgs",
        "repos_url": "https://api.github.com/users/psztorc/repos",
        "events_url": "https://api.github.com/users/psztorc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psztorc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That is correct. It is part of the tradeoff required for trustless BMM.\r\n\r\nOne could still use the technique of BMM, without any code changes to Bitcoin. But it would involve some trust -- likely, side:nodes would have to open (and fund) an account with pools. Side:nodes would then request that the pool find certain side:blocks (\"blindly\") and the pool would then deduct some value (side:txn_fees - epsilon) from the node's account.",
      "created_at": "2018-06-02T23:41:18Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r192573138",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/192573138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/271787404",
      "pull_request_review_id": 222268373,
      "id": 271787404,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MTc4NzQwNA==",
      "diff_hunk": "@@ -0,0 +1,341 @@\n+\n+<pre>\n+\n+    BIP: ????\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-???????\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks, ie \"asymmetric sidechains\". It produces strong guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. For an explanation of the \"whole picture\", please see [this post](http://www.truthcoin.info/blog/blind-merged-mining/). Here we focus on the modifications to mainchain Bitcoin.\n+\n+To support BMM, the mainchain is asked to accomplish two goals:\n+\n+# Track a set of ordered hashes (the merged-mining).\n+# Allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+These goals are accomplished by forcing nodes to validate two new messages (M7, M8), and track data in one new database (D3).\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+Blind Merged-Mining (BMM) attempts to address those shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart.\n+\n+As stated above, we have two goals: [1] create and monitor an alt-chain (defined only by a deterministic list of hashes), and [2] allow miners to \"sell\" the act of finding a sidechain block (through the use of a new extended serialization transaction type).\n+\n+=== Sidechain Critical Data (\"Sidechain Mini-Header\") ===\n+\n+Specifically, per side:block per side:chain, we track the following 35 bytes of information:\n+\n+    1-byte   - ChainIndex (known as \"Account Number\" in hashrate-escrows.md , or as \"Sidechain Number\")\n+    32-bytes - sideHeaderHash (also known as \"h*\" / hashCritical, the hash of the blockheader of the sidechain in question)\n+    2-bytes  - prevBlockRef (an index which points to this side:blockheader's parent side:blockheader)\n+\n+The **ChainIndex** indicates which sidechain this critical data is relevant to. As we may eventually have more than one sidechain, this serves as an identifier similar to the Bitcoin network's magic bytes (0xF9BEB4D9). Drivechains however only need to use 1 byte for the identifier (there is a hard limit of 256 sidechains identified as 0-255). The **sideHeaderHash** is the hash of a side:blockheader which will receive PoW via BMM. It serves a similar function to Bitcoin's \"hashMerkleRoot\", in that it contains the data for its blockchain. The **prevBlockRef** forms the set of headers into a blockchain structure by making each headers refer to one parent header. It is most similar to Bitcoin's hashPrevBlock.\n+\n+This data is \"critical\" in the sense that it is the minimum amount of data required to define a sidechain.\n+\n+Where does this data come from, and how does it get around?\n+\n+==== Creating / Broadcasting This Data ====\n+\n+===== Creation =====\n+\n+By the time Blind Merged Mining can take place, the ChainIndex is globally known (it is the \"Account Number\" in D1 [see previous BIP], and \"nSidechain\" in the code). Each sidechain, when activated by soft fork, will take one of the 0-255 available indexes.\n+\n+The other two items, sideHeaderHash and prevBlockRef, are created by sidechain nodes. sideHeaderHash is quite straightforward -- side:nodes build side:blocks, and take the hash of these.\n+\n+The final item, prevBlockRef, is a little more complicated. It is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. In practice, this value will usually be zero. It will only be a value other than zero, in cases where invalid sidechain blocks have been mined, or when a side:node intentionally wants to orphan some side:blocks (if a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N ; in the block after that it will be back to zero).\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Since the hashes themselves are already ordered by the mainchain, tracing the blockchain's path by index (prevBlockRef) will be the same as tracing it by identifying a list of hashes. In other words, the ordering given via each side:block's \"prevBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" ... if \"prevSideHeaderHash is defined to be the sidechain's equivalent of the mainchain's \"prevBlockHash\". It will be possible to freely convert from one to the other. See M8 to learn more about how these hashes are requested by sidechain block creators to be included in the mainchain.\n+\n+Now that we know what our critical data is, and how it is made, how is this data broadcast and stored?\n+\n+===== Broadcast =====\n+\n+Mainchain nodes are going to need this data later, so it must be easy to find. We will put it into the coinbase via OP RETURN.\n+\n+==== M7 -- \"Blind-Mine the Sidechain(s)\" ====\n+\n+Thus, (for n sidechains) we have a coinbase output with multiple OP_RETURNs (we've changed the tx-standardness policy to allow multiple OP_RETURNs):\n+\n+    1-byte - OP_RETURN (0x6a)\n+    1-byte - Push the following 39 bytes (0x27)\n+    4-byte - Message header (0xD3407053)\n+    37-byte - A sequence of bytes, of the three Mini-Header items (h*, prevBlockRef, ChainIndex).\n+\n+( We assume that 5 bytes are used for the Critical Data bytes (non h* parts of the Sidechain Mini-Header). For 256 sidechains, a total of 9,478 bytes [1+1+4+256\\*(32+5)] are required, conveniently just below the 10 KB scriptPubKey size limit.)\n+\n+This data is parsed by laying it in sequential 37-byte chunks (any remaining data --ie, some final chunk that is less than 37 bytes in length-- has no consensus meaning). \n+\n+Each 37-byte chunk is then parsed to obtain the data outlined above (in \"Description\"). If two 35-byte chunks being with the same \"Sidechain number\" (ie, if the two chunks have the same first byte), then only the first chunk has consensus meaning.\n+\n+We are left with, at most, one (h*, prevBlockRef) pair per sidechain per block. This data is added directly to D3, a new database.\n+\n+==== D3 -- \"RecentSidechains_DB\" ====\n+\n+To suit our purposes, the mainchain full nodes will need to keep track of the most recent 8000 (h\\*, prevBlockRef) pairs.\n+\n+( This 8,000 figure is a tradeoff between decentralization (costs of running the main:node) and sidechain security -- it requires attackers to merged-mine 8,000 invalid blocks consecutively, in order to cause the sidechain to fail. The mainchain burden is minimal, so this figure might be raised to 12,000 or higher. )\n+\n+Therefore, D3 would look something like this:\n+\n+\n+<pre>\n+           BlockHeight  CB_Index    SC_1   Blks_Atop_1   SC 2   Blks_Atop_2   SC 3   Blks_Atop_3\n+            ---------    ------    ------   ---------   ------   ---------   ------   ---------\n+       1.    401,005        2      (h*, 0)     7985     (h*, 0)        1     (h*, 0)        0\n+       2.    401,006        4      (h*, 0)     7984     (h*, 0)        0     (h*, 1)     7801\n+       3.    401,007        2      (h*, 0)     7983     (h*, 5)     2027     (h*, 0)        0\n+       4.    401,008        2      (h*, 0)     7982     (h*, 0)     2028     (h*, 1)     7800\n+      ...     ...                                                                  )\n+    7999.    409,003        3      (h*, 0)        1     (h*, 0)        0     (h*, 0)        1\n+    8000.    409,004        2      (h*, 0)        0     (h*, 1)        0     (h*, 0)        0\n+</pre>\n+\n+\n+When new sidechains (or \"hashrate escrows\") are soft-forked into existence, a new column is added to D3 (to contain any BMMing that might be done on it).\n+\n+For each sidechain we also track the field \"Blocks Atop\". This is the number of side:blocks that are \"on top\" of the specified side:block. These might be regarded as \"side:confirmations\" (pseudo-confirmations that are specific to each sidechain).\n+\n+D3 also contains a column (not shown) for each sidechain containing \"prevSideBlockHash\". This value is is either derived from prevBlockRef; or else it is given explicitly (in which case it is the converse: prevBlockRef is derived from prevSideBlockHash).",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 129,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "485b1318bd4a6f2e1378add714ce7af2cffee87b",
      "in_reply_to_id": null,
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"This value is is either\"",
      "created_at": "2019-04-03T15:01:29Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r271787404",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/271787404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441296",
      "pull_request_review_id": 223094461,
      "id": 272441296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjQ0MTI5Ng==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+\n+<pre>\n+\n+    BIP: 301\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-301\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks (ie, \"asymmetric sidechains\"). BMM produces weak guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. Here we focus on the modifications to mainchain Bitcoin. For an explanation of the \"whole picture\", please see [http://www.truthcoin.info/blog/blind-merged-mining/ this post].\n+\n+Our goal here, is to allow mainchain miners to trustlessly \"sell\" the act of finding a sidechain block.\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+BMM addresses both shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart. We also use \"Simon\" to refer to a Sidechain Full Node, and \"Mary\" to refer to a mainchain miner.\n+\n+\n+=== BMM Request ===\n+\n+To buy the right to find a sidechain block, users broadcast BMM Requests.\n+\n+Here, these can take two forms. The first does not require the Lightning Network, but it does have new requirements for Immediate Expiration (see below). The second inherits Immediate Expiration from the Lightning Network itself, but requires extra preparation and a different/larger message.\n+\n+Both forms require that certain Critical Data will be committed to within the coinbase of the block that the transaction is included in (see BMM Accept). For the OnChain (non-Lightning) version, we have created a new extended serialization transaction type (very similar to how segwit handles witness data (the witness stack)).\n+\n+==== Immediate Expiration (\"Fill-or-Kill\") ====\n+\n+We would like to make special guarantees to the counterparties of this transaction. Specifically, instead of Simon making a \"payment\" to Mary, we prefer that Simon give Mary an \"offer\" (which she can either accept or decline).\n+\n+Crucially, we want Simon to safely make many offers to several different Mary's, in realtime (ie, quickly and off-chain). However, we ultimately want only one offer to be accepted, at most. In other words, we want Simon's offers to *immediately expire*. If only one offer can become a bona fide transaction, then Simon will feel comfortable making multiple offers all day long. Because all of the Simons are making many offers, the Marys collectively gain access to a large set of offers to choose from.\n+\n+==== OnChain BMM Request ====\n+\n+OnChain BMMRs do not require the Lightning network, but they do have new requirements for validation.\n+\n+===== Structure =====\n+\n+The following data is required:\n+\n+<pre>\n+    32-bytes  - h* sideHeaderHash\n+    ?~?-bytes - critical data extended serialization\n+        3-bytes - 0x00bf00 identifying bytes\n+        1-byte  - nSidechain\n+        2-bytes - prevSideBlockRef\n+        4-bytes - prevMainHeaderBytes\n+</pre>\n+\n+sideHeaderHash comes from side:chain (side:nodes build side:blocks/headers). The identifying bytes are given here. nSidechain identifies which sidechain we are BMMing. By the time Blind Merged Mining can take place, it is known globally.\n+\n+prevBlockRef, is a little more complicated (next section). \n+\n+To qualify for inclusion in a block, BMM requests are subject to the following reqirements:",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 81,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "bbcab029ea0c4e6237087e76102e62df5e1d530d",
      "in_reply_to_id": null,
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"reqirements\"",
      "created_at": "2019-04-05T04:29:19Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r272441296",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441509",
      "pull_request_review_id": 223094461,
      "id": 272441509,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjQ0MTUwOQ==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+\n+<pre>\n+\n+    BIP: 301\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-301\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks (ie, \"asymmetric sidechains\"). BMM produces weak guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. Here we focus on the modifications to mainchain Bitcoin. For an explanation of the \"whole picture\", please see [http://www.truthcoin.info/blog/blind-merged-mining/ this post].\n+\n+Our goal here, is to allow mainchain miners to trustlessly \"sell\" the act of finding a sidechain block.\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+BMM addresses both shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart. We also use \"Simon\" to refer to a Sidechain Full Node, and \"Mary\" to refer to a mainchain miner.\n+\n+\n+=== BMM Request ===\n+\n+To buy the right to find a sidechain block, users broadcast BMM Requests.\n+\n+Here, these can take two forms. The first does not require the Lightning Network, but it does have new requirements for Immediate Expiration (see below). The second inherits Immediate Expiration from the Lightning Network itself, but requires extra preparation and a different/larger message.\n+\n+Both forms require that certain Critical Data will be committed to within the coinbase of the block that the transaction is included in (see BMM Accept). For the OnChain (non-Lightning) version, we have created a new extended serialization transaction type (very similar to how segwit handles witness data (the witness stack)).\n+\n+==== Immediate Expiration (\"Fill-or-Kill\") ====\n+\n+We would like to make special guarantees to the counterparties of this transaction. Specifically, instead of Simon making a \"payment\" to Mary, we prefer that Simon give Mary an \"offer\" (which she can either accept or decline).\n+\n+Crucially, we want Simon to safely make many offers to several different Mary's, in realtime (ie, quickly and off-chain). However, we ultimately want only one offer to be accepted, at most. In other words, we want Simon's offers to *immediately expire*. If only one offer can become a bona fide transaction, then Simon will feel comfortable making multiple offers all day long. Because all of the Simons are making many offers, the Marys collectively gain access to a large set of offers to choose from.\n+\n+==== OnChain BMM Request ====\n+\n+OnChain BMMRs do not require the Lightning network, but they do have new requirements for validation.\n+\n+===== Structure =====\n+\n+The following data is required:\n+\n+<pre>\n+    32-bytes  - h* sideHeaderHash\n+    ?~?-bytes - critical data extended serialization\n+        3-bytes - 0x00bf00 identifying bytes\n+        1-byte  - nSidechain\n+        2-bytes - prevSideBlockRef\n+        4-bytes - prevMainHeaderBytes\n+</pre>\n+\n+sideHeaderHash comes from side:chain (side:nodes build side:blocks/headers). The identifying bytes are given here. nSidechain identifies which sidechain we are BMMing. By the time Blind Merged Mining can take place, it is known globally.\n+\n+prevBlockRef, is a little more complicated (next section). \n+\n+To qualify for inclusion in a block, BMM requests are subject to the following reqirements:\n+\n+# Requests must match a corresponding \"BMM Accept\" (see last section of BIP).\n+# At most, only one Request is allowed in a main:block, per sidechain. In other words, if 700 users broadcast BMM Requests for sidechain #4, then the main:miner must choose one single Request to include.\n+# The 4-bytes of prevMainHeaderBytes must match the last four bytes of the previous main:blockheader. Thus, Simon's txns are only be valid for the current block, in the block history that he knows about (and therefore, the current sidechain history that he knows about).\n+\n+===== prevBlockRef =====\n+\n+prevBlockRef is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. This value is zero unless the sidechain is reorganizing (or skipping over invalid sidechain blocks). If a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N; in the block after that it will be back to zero.\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Above: Three blockchains, with different max length (small number), reorganization histories, and prevBlockRef numbers (larger numbers beneath blocks). The ordering given via each side:block's \"prevSideBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" (\"prevSideHeaderHash is the sidechain's equivalent of the mainchain's \"prevBlockHash\"). One can freely convert from one to the other.\n+\n+===== Extended Serialization =====\n+\n+To impose new requirements at the transaction level, we borrow the dummy vin & \"flag\" trick from SegWit style transactions. Unless all of the requirements for sidechain critical data transactions are met by the block it is included in, the transaction is invalid. With SegWit, this extra data is the segwit signature stack, and the extra requirements are the signatures' locations and validity. In the sidechain BMM critical data transactions, the extra data is the (nSidechain, h\\*) pair, which must meet the first two requirements (above) as well as the main:blocknumber, which must meet the third requirement (above).\n+\n+<img src=\"bip-blind-merged-mining/witness-vs-critical.png?raw=true\" align=\"middle\"></img>\n+\n+Above: A chart showing normal txns, SegWit txns, and CriticalData txns. The specific SegWit txn can be seen [http://srv1.yogh.io/#tx:id:D4A99AE93DF6EE3D4E42CE69338DFC1D06CCD9B198666E98FF0588057378D3D9 here].\n+\n+These types of transactions have slightly different mempool behavior, and should probably be kept in a second mempool. These txns are received, checked immediately, and if valid they are evaluated for inclusion in a block. If they are not able to be included in the specific requested block (if the block height requested has been surpassed by the chain tip), they are discarded. In fact, after any main:block is found, everything in this \"second mempool\" can be discarded as new payments will be created immediately for the next block height. (This includes cases where the blockchain reorganizes.) There is no re-evaluation of the txns in this mempool ever -- they are evaluated once and then either included or discarded. They never need to be rescanned.\n+\n+Interestingly, these payments will *always* be directed to main:miners from non-main:miners. Therefore, non-mining full nodes do not need to keep them in any mempool at all. Non-miner nodes can just wait for a block to be found, and check the txn then. These transactions more resemble a stock market's pit trade-offers (in contrast, regular Bitcoin txns are more like paper checks).\n+\n+==== Lightning BMM Request ====\n+\n+Lightning BMMRs require Simons to have a LN-channel pathways open with Marys. This may not always be practical (or even possible), especially today.\n+\n+LN txns cannot make use of prevSideBlockRef, as no one knows for sure when (or if) they will be broadcast on-chain. Instead, they must use prevSideBlockHash. But they otherwise require the same data:\n+\n+<pre>\t\n+    4-bytes - Message header (0xD0520C6E)\t\n+    1-byte - sidechain number\n+    32-bytes  - h* side:block hash\t\n+    32-bytes  - prevSideBlockHash\t\n+</pre>\n+\n+Notice that, in OnChain BMMRs, Simon could reuse the same h\\* all he wanted, because only one OnChain BMMR could be included per main:block per sidechain. However, on the LN no such rule can be enforced, as the goal is to push everything off-chain and include *zero* txns. So, we will never know what the Requests were, or how many had an effect on anything.\n+\n+Therefore, Simon will need to ensure that he '''gives each Mary a different h\\*'''. Simon can easily do this, as he controls the side:block's contents and can simply increment a side:nonce -- this changes the side:block, and changes its hash (ie, changes h\\*).\n+\n+With a unique h\\* per Mary (or, more precisely, per channel), and at most 1 h\\* making it into a block (per sidechain), Simon can ensure that he is charged, at most, one time.\n+\n+That's probably confusing, so here is an example, in which: Simon starts with 13 BTC, Mary starts with 40 BTC, the side:block's tx-fees currently total 7.1 BTC, and Simon is keeping 0.1 BTC for himself and paying 7 BTC to Mary.\n+\n+We start with (I):\n+\n+<pre>\n+    Simon 13 in, Mary 40 in ; 53 in total\n+        Simon's version [signed by Mary]\n+            13 ; to Simon if TimeLock=over; OR to Mary if SimonSig\n+            40 ; to Mary\n+        Mary's version [signed by Simon]\n+            40 ; to me if TimeLock=over; OR to Simon if MarySig\n+            13 ; to Simon\n+</pre>\n+\n+\n+And both parties move, from there to (II):\n+\n+<pre>\n+    Simon 13 in, Mary 40 in ; 53 in total\n+        Simon's version [signed by Mary]\n+            6 ; to Simon if TimeLock=over; OR to Mary if SimonSig\n+            40 ; to Mary\n+            7 ; to Mary if critical data requirements met; OR to Simon if LongTimeLock=over\n+        Mary's version [signed by Simon]\n+            40 ; to Mary if TimeLock=over; OR to Simon if MarySig\n+            6 ; to Simon\n+            7 ; to Mary if critical data requirements met; OR to Simon if LongTimeLock=over\n+</pre>\n+\n+\n+From here, if the h\\* side:block in question is BMMed, they can proceed to (III):\n+\n+<pre>\n+    Simon 13 in, Mary 40 in ; 53 in total\n+        Simon's version [signed by Mary]\n+            6 ; to Simon if TimeLock=over; OR to Mary if SimonSig\n+            47 ; to Mary\n+        Mary's version [signed by Simon]\n+            47 ; to me if TimeLock=over; OR to Simon if MarySig\n+            6 ; to Simon\n+</pre>\n+\n+If Simon proceeds immediately, he removes Mary's incentive to care about blocks being built on this side:block. If Simon's side:block is orphaned, he loses his 7 BTC. Simon can either play it safe, and wait for (for example) 100 side:blocks before moving on (ie, before moving on to the third LN txn, above); or else Simon can take the risk if he feels comfortable with it.\n+\n+If the h\\* side:block is not found, then (II) and (III) are basically equivalent to each other. Simon and Mary could jointly reconstruct (I) and go back there, or they could proceed to a new version of II (with a different h\\*, trying again with new side:block in the next main:block).\n+\n+Now that we have described Requests, we can describe how they are accepted.\n+\n+=== BMM Accept ===\n+\n+For each BMM Request that a main:miner \"accepts\", main:miners must place an OP Return ouput into their main:coinbase txn. (We've changed the tx-standardness policy to allow multiple OP_RETURNs.)",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 176,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "bbcab029ea0c4e6237087e76102e62df5e1d530d",
      "in_reply_to_id": null,
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"ouput\"",
      "created_at": "2019-04-05T04:31:03Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r272441509",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441612",
      "pull_request_review_id": 223094461,
      "id": 272441612,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjQ0MTYxMg==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+\n+<pre>\n+\n+    BIP: 301\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-301\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks (ie, \"asymmetric sidechains\"). BMM produces weak guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. Here we focus on the modifications to mainchain Bitcoin. For an explanation of the \"whole picture\", please see [http://www.truthcoin.info/blog/blind-merged-mining/ this post].\n+\n+Our goal here, is to allow mainchain miners to trustlessly \"sell\" the act of finding a sidechain block.\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+BMM addresses both shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart. We also use \"Simon\" to refer to a Sidechain Full Node, and \"Mary\" to refer to a mainchain miner.\n+\n+\n+=== BMM Request ===\n+\n+To buy the right to find a sidechain block, users broadcast BMM Requests.\n+\n+Here, these can take two forms. The first does not require the Lightning Network, but it does have new requirements for Immediate Expiration (see below). The second inherits Immediate Expiration from the Lightning Network itself, but requires extra preparation and a different/larger message.\n+\n+Both forms require that certain Critical Data will be committed to within the coinbase of the block that the transaction is included in (see BMM Accept). For the OnChain (non-Lightning) version, we have created a new extended serialization transaction type (very similar to how segwit handles witness data (the witness stack)).",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 52,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "bbcab029ea0c4e6237087e76102e62df5e1d530d",
      "in_reply_to_id": null,
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "segwit -> SegWit",
      "created_at": "2019-04-05T04:32:05Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r272441612",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441649",
      "pull_request_review_id": 223094461,
      "id": 272441649,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3MjQ0MTY0OQ==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+\n+<pre>\n+\n+    BIP: 301\n+    Layer: Consensus (soft fork)\n+    Title: Blind Merged Mining (Consensus layer)\n+    Author: Paul Sztorc <truthcoin@gmail.com>\n+            CryptAxe <cryptaxe@gmail.com>\n+    Comments-Summary: No comments yet.\n+    Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-301\n+    Status: Draft\n+    Type: Standards Track\n+    Created: 2017-10-24\n+    License: BSD-2-Clause\n+\n+</pre>\n+\n+\n+==Abstract==\n+\n+\n+Blind Merged Mining (BMM) is a way of mining optional extension blocks (ie, \"asymmetric sidechains\"). BMM produces weak guarantees that the block is valid, for *any* arbitrary set of rules; and yet it does so without requiring miners to actually do any validation on the block whatsoever.\n+\n+BMM actually is a process that spans two or more chains. Here we focus on the modifications to mainchain Bitcoin. For an explanation of the \"whole picture\", please see [http://www.truthcoin.info/blog/blind-merged-mining/ this post].\n+\n+Our goal here, is to allow mainchain miners to trustlessly \"sell\" the act of finding a sidechain block.\n+\n+\n+==Motivation==\n+\n+\n+Regular \"Merged-Mining\" (MM) allows miners to reuse their hashing work to secure other chains (for example, as in Namecoin). However, traditional MM has two drawbacks:\n+\n+# Miners must run a full node of the other chain. (This is because [while miners can effortlessly create the block] miners will not create a valid payment to themselves, unless the block that they MM is a valid one. Therefore, miners must assemble a *valid* block first, then MM it.)\n+# Miners are paid on the other chain, not on the regular BTC mainchain. For example, miners who MM Namecoin will earn NMC (and they will need to sell the NMC for BTC, before selling the BTC in order to pay for electricity).\n+\n+BMM addresses both shortcomings.\n+\n+\n+==Specification==\n+\n+\n+Note: This document uses the notation side:\\* and main:\\* in front of otherwise-ambiguous words (such as \"block\", \"node\", or \"chain\"), to distinguish the mainchain version from its sidechain counterpart. We also use \"Simon\" to refer to a Sidechain Full Node, and \"Mary\" to refer to a mainchain miner.\n+\n+\n+=== BMM Request ===\n+\n+To buy the right to find a sidechain block, users broadcast BMM Requests.\n+\n+Here, these can take two forms. The first does not require the Lightning Network, but it does have new requirements for Immediate Expiration (see below). The second inherits Immediate Expiration from the Lightning Network itself, but requires extra preparation and a different/larger message.\n+\n+Both forms require that certain Critical Data will be committed to within the coinbase of the block that the transaction is included in (see BMM Accept). For the OnChain (non-Lightning) version, we have created a new extended serialization transaction type (very similar to how segwit handles witness data (the witness stack)).\n+\n+==== Immediate Expiration (\"Fill-or-Kill\") ====\n+\n+We would like to make special guarantees to the counterparties of this transaction. Specifically, instead of Simon making a \"payment\" to Mary, we prefer that Simon give Mary an \"offer\" (which she can either accept or decline).\n+\n+Crucially, we want Simon to safely make many offers to several different Mary's, in realtime (ie, quickly and off-chain). However, we ultimately want only one offer to be accepted, at most. In other words, we want Simon's offers to *immediately expire*. If only one offer can become a bona fide transaction, then Simon will feel comfortable making multiple offers all day long. Because all of the Simons are making many offers, the Marys collectively gain access to a large set of offers to choose from.\n+\n+==== OnChain BMM Request ====\n+\n+OnChain BMMRs do not require the Lightning network, but they do have new requirements for validation.\n+\n+===== Structure =====\n+\n+The following data is required:\n+\n+<pre>\n+    32-bytes  - h* sideHeaderHash\n+    ?~?-bytes - critical data extended serialization\n+        3-bytes - 0x00bf00 identifying bytes\n+        1-byte  - nSidechain\n+        2-bytes - prevSideBlockRef\n+        4-bytes - prevMainHeaderBytes\n+</pre>\n+\n+sideHeaderHash comes from side:chain (side:nodes build side:blocks/headers). The identifying bytes are given here. nSidechain identifies which sidechain we are BMMing. By the time Blind Merged Mining can take place, it is known globally.\n+\n+prevBlockRef, is a little more complicated (next section). \n+\n+To qualify for inclusion in a block, BMM requests are subject to the following reqirements:\n+\n+# Requests must match a corresponding \"BMM Accept\" (see last section of BIP).\n+# At most, only one Request is allowed in a main:block, per sidechain. In other words, if 700 users broadcast BMM Requests for sidechain #4, then the main:miner must choose one single Request to include.\n+# The 4-bytes of prevMainHeaderBytes must match the last four bytes of the previous main:blockheader. Thus, Simon's txns are only be valid for the current block, in the block history that he knows about (and therefore, the current sidechain history that he knows about).\n+\n+===== prevBlockRef =====\n+\n+prevBlockRef is an integer that counts the number of \"skips\" one must take in the side:chain in order to find the current side:block's parent block. This value is zero unless the sidechain is reorganizing (or skipping over invalid sidechain blocks). If a side:node wants to orphan the most-recent N blocks, the value of the current block will be equal to N; in the block after that it will be back to zero.\n+\n+<img src=\"bip-blind-merged-mining/bmm-dots-examples.png?raw=true\" align=\"middle\"></img>\n+\n+Above: Three blockchains, with different max length (small number), reorganization histories, and prevBlockRef numbers (larger numbers beneath blocks). The ordering given via each side:block's \"prevSideBlockRef\" will be isomorphic to an ordering given by each side:block's \"prevSideHeaderHash\" (\"prevSideHeaderHash is the sidechain's equivalent of the mainchain's \"prevBlockHash\"). One can freely convert from one to the other.\n+\n+===== Extended Serialization =====\n+\n+To impose new requirements at the transaction level, we borrow the dummy vin & \"flag\" trick from SegWit style transactions. Unless all of the requirements for sidechain critical data transactions are met by the block it is included in, the transaction is invalid. With SegWit, this extra data is the segwit signature stack, and the extra requirements are the signatures' locations and validity. In the sidechain BMM critical data transactions, the extra data is the (nSidechain, h\\*) pair, which must meet the first two requirements (above) as well as the main:blocknumber, which must meet the third requirement (above).",
      "path": "bip-blind-merged-mining.mediawiki",
      "position": null,
      "original_position": 97,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "bbcab029ea0c4e6237087e76102e62df5e1d530d",
      "in_reply_to_id": null,
      "user": {
        "login": "rex4539",
        "id": 227442,
        "node_id": "MDQ6VXNlcjIyNzQ0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/227442?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rex4539",
        "html_url": "https://github.com/rex4539",
        "followers_url": "https://api.github.com/users/rex4539/followers",
        "following_url": "https://api.github.com/users/rex4539/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rex4539/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rex4539/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rex4539/subscriptions",
        "organizations_url": "https://api.github.com/users/rex4539/orgs",
        "repos_url": "https://api.github.com/users/rex4539/repos",
        "events_url": "https://api.github.com/users/rex4539/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rex4539/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "segwit -> SegWit",
      "created_at": "2019-04-05T04:32:28Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r272441649",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/272441649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/307094076",
      "pull_request_review_id": 266374645,
      "id": 307094076,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzA5NDA3Ng==",
      "diff_hunk": "@@ -0,0 +1,234 @@\n+<pre>\n+",
      "path": "bip-0301.mediawiki",
      "position": null,
      "original_position": 2,
      "commit_id": "542c66e6ddc3d9f703114f7e645f19d572c8274e",
      "original_commit_id": "4cd4e53752496e155243693fffbf79c7ed2daa9d",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please check the preamble is formatted correctly. (There shouldn't be blank lines here.)\r\n\r\nREADME will also need to be updated.",
      "created_at": "2019-07-25T02:38:41Z",
      "updated_at": "2019-07-26T06:57:14Z",
      "html_url": "https://github.com/bitcoin/bips/pull/643#discussion_r307094076",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/307094076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/643"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    }
  ]
}