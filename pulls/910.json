{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bips/pulls/910",
    "id": 404547229,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDA0NTQ3MjI5",
    "html_url": "https://github.com/bitcoin/bips/pull/910",
    "diff_url": "https://github.com/bitcoin/bips/pull/910.diff",
    "patch_url": "https://github.com/bitcoin/bips/pull/910.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910",
    "commits_url": "https://api.github.com/repos/bitcoin/bips/pulls/910/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bips/pulls/910/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bips/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bips/issues/910/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/96927344e7a50116aceab6c0f648362cc3bab296",
    "number": 910,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "BIP 85: Deterministic Entropy From BIP32 Keychains",
    "user": {
      "login": "ethankosakovsky",
      "id": 62417540,
      "node_id": "MDQ6VXNlcjYyNDE3NTQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ethankosakovsky",
      "html_url": "https://github.com/ethankosakovsky",
      "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
      "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
      "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
      "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I would like to request a BIP number for this BIP",
    "labels": [
      {
        "id": 275845989,
        "node_id": "MDU6TGFiZWwyNzU4NDU5ODk=",
        "url": "https://api.github.com/repos/bitcoin/bips/labels/New%20BIP",
        "name": "New BIP",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2020-04-16T17:21:10Z",
    "updated_at": "2020-06-12T00:32:30Z",
    "closed_at": "2020-06-12T00:32:30Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-06-12T00:32:30Z",
    "merge_commit_sha": "d0d2bc99793e3daafe25456b8e2624a1019791c3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ethankosakovsky:entropy_bip",
      "ref": "entropy_bip",
      "sha": "96927344e7a50116aceab6c0f648362cc3bab296",
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 248684631,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDg2ODQ2MzE=",
        "name": "bips",
        "full_name": "ethankosakovsky/bips",
        "owner": {
          "login": "ethankosakovsky",
          "id": 62417540,
          "node_id": "MDQ6VXNlcjYyNDE3NTQw",
          "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ethankosakovsky",
          "html_url": "https://github.com/ethankosakovsky",
          "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
          "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
          "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
          "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ethankosakovsky/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": true,
        "url": "https://api.github.com/repos/ethankosakovsky/bips",
        "archive_url": "https://api.github.com/repos/ethankosakovsky/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ethankosakovsky/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ethankosakovsky/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ethankosakovsky/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ethankosakovsky/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ethankosakovsky/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ethankosakovsky/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ethankosakovsky/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ethankosakovsky/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ethankosakovsky/bips/contributors",
        "deployments_url": "https://api.github.com/repos/ethankosakovsky/bips/deployments",
        "downloads_url": "https://api.github.com/repos/ethankosakovsky/bips/downloads",
        "events_url": "https://api.github.com/repos/ethankosakovsky/bips/events",
        "forks_url": "https://api.github.com/repos/ethankosakovsky/bips/forks",
        "git_commits_url": "https://api.github.com/repos/ethankosakovsky/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ethankosakovsky/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ethankosakovsky/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ethankosakovsky/bips.git",
        "issue_comment_url": "https://api.github.com/repos/ethankosakovsky/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ethankosakovsky/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ethankosakovsky/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ethankosakovsky/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ethankosakovsky/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ethankosakovsky/bips/languages",
        "merges_url": "https://api.github.com/repos/ethankosakovsky/bips/merges",
        "milestones_url": "https://api.github.com/repos/ethankosakovsky/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ethankosakovsky/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ethankosakovsky/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ethankosakovsky/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:ethankosakovsky/bips.git",
        "stargazers_url": "https://api.github.com/repos/ethankosakovsky/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/ethankosakovsky/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ethankosakovsky/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/ethankosakovsky/bips/subscription",
        "tags_url": "https://api.github.com/repos/ethankosakovsky/bips/tags",
        "teams_url": "https://api.github.com/repos/ethankosakovsky/bips/teams",
        "trees_url": "https://api.github.com/repos/ethankosakovsky/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ethankosakovsky/bips.git",
        "hooks_url": "https://api.github.com/repos/ethankosakovsky/bips/hooks",
        "svn_url": "https://github.com/ethankosakovsky/bips",
        "homepage": "",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 9451,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2021-03-13T06:38:27Z",
        "created_at": "2020-03-20T06:32:01Z",
        "updated_at": "2020-03-20T06:32:03Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d8a56c9f2b521bf4af5d588f217e7618cc44952c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 14531737,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDUzMTczNw==",
        "name": "bips",
        "full_name": "bitcoin/bips",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bips",
        "description": "Bitcoin Improvement Proposals",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bips",
        "archive_url": "https://api.github.com/repos/bitcoin/bips/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bips/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bips/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bips/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bips/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bips/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bips/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bips/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bips/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bips/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bips/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bips/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bips/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bips/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bips/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bips/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bips/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bips.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bips/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bips/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bips/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bips/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bips/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bips/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bips/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bips/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bips/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bips/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bips/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bips.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bips/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bips/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bips/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bips/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bips/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bips/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bips/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bips.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bips/hooks",
        "svn_url": "https://github.com/bitcoin/bips",
        "homepage": "",
        "language": "Wikitext",
        "forks_count": 5535,
        "stargazers_count": 8220,
        "watchers_count": 8220,
        "size": 13787,
        "default_branch": "master",
        "open_issues_count": 112,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T12:09:15Z",
        "created_at": "2013-11-19T17:18:41Z",
        "updated_at": "2023-08-01T09:08:43Z"
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 266,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 9,
    "comments": 15
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 3241079237,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI0MTA3OTIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3241079237",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T17:49:54Z"
    },
    {
      "event": "commented",
      "id": 614808523,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDgwODUyMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/614808523",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T18:03:51Z",
      "updated_at": "2020-04-16T18:03:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Experimenting with splitting the applications to  a separate BIP like 32 and 44 are separated. https://github.com/ethankosakovsky/bips/blob/entropy_apps/bip-entropy-applications.mediawiki",
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-614808523",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "commented",
      "id": 614994293,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk5NDI5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/614994293",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T01:57:05Z",
      "updated_at": "2020-04-17T01:57:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "So the problem you're trying to solve is:\r\n\r\n\"I have way too many wallets/keys/bip39 and I want to back them all up with one key\"\r\n\r\nIn which case we are back to the bip39 discussion (or retrospect) of:\r\n\r\n- \"How do we do versioning?\"\r\n- \"Should we store data pertaining to wallets and encode it somewhere?\"\r\n\r\netc.\r\n\r\nIn your examples, there's a pretty complicated derivation scheme of language, word count, app number, etc.\r\n\r\nApp number could be hard coded into the app, sure... but how are you going to relay the language / word count?\r\n\r\nWould it make sense to give an app a 12 word English BIP39, tell it to create a master key for a 24 word Japanese BIP39 phrase, then have it derive the wallet? Even if it did make sense? How would I relay that info? So do I enter my root BIP32 xprv as my backup and then select which language / word count to pass through?...\r\n\r\nThen let's take a few steps back.\r\n\r\nAs a wallet dev do I want to use a master key that someone is entering into every wallet they encounter?\r\n\r\nI have seen a lot of instances where a theft occurs and the victim gets upset and threatens to sue the wallet dev only to find out that they wrote down their phrase into a shady website to get an airdrop (unrelated to the wallet)... So getting devs to support this scheme is going to take a lot more effort than even BIP39 (which isn't perfect adoption even yet).\r\n\r\nThis needs a lot of major re-thinking, and to be honest I'm not sure the problem it is trying to solve is much of a problem.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-614994293",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "commented",
      "id": 615037832,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAzNzgzMg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/615037832",
      "actor": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T04:41:44Z",
      "updated_at": "2020-04-17T04:41:44Z",
      "author_association": "NONE",
      "body": "I'm not sure I'm comfortable with your approach of using multiple keys to create each word of BIP39. Just used the derived key to create new master seed that is converted to BIP39, SLIP39, Lightning recovery, future encodings, etc.. \r\n\r\n-- Christopher Allen\r\n",
      "user": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-615037832",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "commented",
      "id": 615039969,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAzOTk2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/615039969",
      "actor": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T04:50:35Z",
      "updated_at": "2020-04-17T04:52:41Z",
      "author_association": "NONE",
      "body": "With our [#LetheKit](https://github.com/BlockchainCommons/bc-lethekit) offline/airgap device, and our new [bc-seedtool-cli](https://github.com/BlockchainCommons/bc-seedtool-cli) project, we are doing HKDF-SHA256 to convert raw randomness of dice or other sources of randomness into a master seed.\r\n\r\nThat we've standardized on this means that both of the above tools, plus @iancoleman's [BIP39] tool, you can enter the same dice on all three devices and end up with the same master seed and BIP39. This means you can independently confirm that all three devices do their encoding correctly. \r\n\r\n-- Christopher Allen\r\n",
      "user": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-615039969",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "mentioned",
      "id": 3242812330,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI0MjgxMjMzMA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3242812330",
      "actor": {
        "login": "iancoleman",
        "id": 1281387,
        "node_id": "MDQ6VXNlcjEyODEzODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1281387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/iancoleman",
        "html_url": "https://github.com/iancoleman",
        "followers_url": "https://api.github.com/users/iancoleman/followers",
        "following_url": "https://api.github.com/users/iancoleman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/iancoleman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/iancoleman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/iancoleman/subscriptions",
        "organizations_url": "https://api.github.com/users/iancoleman/orgs",
        "repos_url": "https://api.github.com/users/iancoleman/repos",
        "events_url": "https://api.github.com/users/iancoleman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/iancoleman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T04:50:35Z"
    },
    {
      "event": "subscribed",
      "id": 3242812333,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNDI4MTIzMzM=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3242812333",
      "actor": {
        "login": "iancoleman",
        "id": 1281387,
        "node_id": "MDQ6VXNlcjEyODEzODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1281387?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/iancoleman",
        "html_url": "https://github.com/iancoleman",
        "followers_url": "https://api.github.com/users/iancoleman/followers",
        "following_url": "https://api.github.com/users/iancoleman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/iancoleman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/iancoleman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/iancoleman/subscriptions",
        "organizations_url": "https://api.github.com/users/iancoleman/orgs",
        "repos_url": "https://api.github.com/users/iancoleman/repos",
        "events_url": "https://api.github.com/users/iancoleman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/iancoleman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T04:50:35Z"
    },
    {
      "event": "commented",
      "id": 615045135,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTA0NTEzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/615045135",
      "actor": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T05:08:46Z",
      "updated_at": "2020-04-17T05:08:46Z",
      "author_association": "NONE",
      "body": "[Blockchain Commons](https://www.BlockchainCommons.com)' use case for this proposal is as follows:\r\n\r\nYou have a previously created titanium key (say generated as per our free [#SmartCustody book](http://bit.ly/SmartCustodyBookV101)) with BIP39 words stamped on it, in a safe deposit box in a vault. In that vault you also have a #LetheKit, which conveniently is designed to fit in your safety deposit box with your key. You previously confirmed that #LetheKit executes code correctly when you stored it away.\r\n\r\nYou enter the vault and bring a new 12 volt battery and adapter to charge your #LetheKit, and you load your words from the titanium blank (or from a SLIP39 recovery set of shards that you brought with you), which creates a master seed internally that allows you to confirm your BIP39 words are valid, or deal them to a deck of SLIP39 shards, or with a path, create a child zprv or zpub. \r\n\r\nWith this proposal, you could also enter a path to create either a new master seed, which can be saved as a BIP39 set of words (or SLIP39 or to or a QR code) that can be used as a child seed for a Ledger, Trezor, mobile phone, or some other device you take out of the bank vault with you.\r\n\r\nYou turn off #LetheKit, your master seed evaporates, and your master seed never leaves the vault. But a derived child (either as an zprv, zpub, QR on your phone, new deck of SLIP39 shards, etc.) goes out with you to be used.\r\n\r\nWe also have a new multisig iOS wallet called [FullyNoded 2](https://github.com/BlockchainCommons/FullyNoded-2) which can go into the vault with you, which has a PSBT needing an offline key. You go to #LetheKit, restore the master, recreate the child needed for the PSBT, turn off #LetheKit, then go outside and transmit your fully signed PSBT. Again, the master key never leaves the vault or is on an networked device, but in 10 minutes you can sign an important transaction.\r\n\r\nOffline master seeds, child keys, #LetheKit, FullyNoded 2, and clever use of multisigs so even if your bank is compromised you have alternatives, means that you have better than custodial bank class security for your keys if you want it. Currently this level o security maybe using the Thale's class of equipment $250K. The #LetheKit and an iPhone and the rent on a couple of safe deposit boxes in different banks is several orders of magnitude less expensive.\r\n\r\nI'm not recommending this level of security for everyone (see the risk modeling and adversary analysis  section of the #SmartCustodby book), but that you can do it all is pretty powerful.\r\n\r\n-- Christopher Allen\r\n",
      "user": {
        "login": "ChristopherA",
        "id": 69103,
        "node_id": "MDQ6VXNlcjY5MTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/69103?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChristopherA",
        "html_url": "https://github.com/ChristopherA",
        "followers_url": "https://api.github.com/users/ChristopherA/followers",
        "following_url": "https://api.github.com/users/ChristopherA/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ChristopherA/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ChristopherA/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ChristopherA/subscriptions",
        "organizations_url": "https://api.github.com/users/ChristopherA/orgs",
        "repos_url": "https://api.github.com/users/ChristopherA/repos",
        "events_url": "https://api.github.com/users/ChristopherA/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ChristopherA/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-615045135",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "commented",
      "id": 615377805,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTM3NzgwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/615377805",
      "actor": {
        "login": "doc-hex",
        "id": 1482781,
        "node_id": "MDQ6VXNlcjE0ODI3ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1482781?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/doc-hex",
        "html_url": "https://github.com/doc-hex",
        "followers_url": "https://api.github.com/users/doc-hex/followers",
        "following_url": "https://api.github.com/users/doc-hex/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/doc-hex/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/doc-hex/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/doc-hex/subscriptions",
        "organizations_url": "https://api.github.com/users/doc-hex/orgs",
        "repos_url": "https://api.github.com/users/doc-hex/repos",
        "events_url": "https://api.github.com/users/doc-hex/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/doc-hex/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-17T17:43:47Z",
      "updated_at": "2020-04-17T17:43:47Z",
      "author_association": "NONE",
      "body": "I feel strongly this should be a single BIP, not multiple.",
      "user": {
        "login": "doc-hex",
        "id": 1482781,
        "node_id": "MDQ6VXNlcjE0ODI3ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1482781?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/doc-hex",
        "html_url": "https://github.com/doc-hex",
        "followers_url": "https://api.github.com/users/doc-hex/followers",
        "following_url": "https://api.github.com/users/doc-hex/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/doc-hex/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/doc-hex/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/doc-hex/subscriptions",
        "organizations_url": "https://api.github.com/users/doc-hex/orgs",
        "repos_url": "https://api.github.com/users/doc-hex/repos",
        "events_url": "https://api.github.com/users/doc-hex/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/doc-hex/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-615377805",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "commented",
      "id": 615982004,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTk4MjAwNA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/615982004",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-18T23:46:33Z",
      "updated_at": "2020-04-18T23:46:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "@junderw There has been a bitcoin-dev discussion on it, I summarized my points previously here https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-March/017685.html\r\n\r\nI disagree this is another BIP39 situation, although I would agree about BIP39, there is a lot wrong with it :-) But this BIP is not concerned with BIP39 specifically, but BIP32. Ultimately all derivation schemes, no matter how poorly conceived, boil down to a BIP32 root, and we're concerned here about how to create child derivations for incompatible derivation (BIP39 vs Electrum, vs Bitcoin Core's WIF as a root, SLIP39 etc.) schemes such that everything remains a child of the one root parent keychain.\r\n\r\nAdditionally, BIP is exactly an argument against funds loss because with the current need for many incompatible seeds for various wallets we may or may not need to use, or may need in the future, the more backups we need to maintain, the worse the problem gets. The reason for having standardized paths is to make it less difficult to forget lose your paths if you were to lose that information. However, BIP32 allows for arbitrary paths, so the problem is no better or worse than BIP44/49 etc, and users are still free for custom applications to chose their own custom paths, with all the caveats.",
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-615982004",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "mentioned",
      "id": 3248497747,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI0ODQ5Nzc0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3248497747",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-18T23:46:34Z"
    },
    {
      "event": "subscribed",
      "id": 3248497748,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNDg0OTc3NDg=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3248497748",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-18T23:46:34Z"
    },
    {
      "event": "commented",
      "id": 616112398,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjExMjM5OA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/616112398",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-19T11:42:23Z",
      "updated_at": "2020-04-19T11:42:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "> this is another BIP39 situation\r\n\r\nI never said this is another BIP39 solution, I merely said the considerations you need to think about are similar to those that were brought up during the BIP39 discussions.\r\n\r\nLet me simplify my concerns into a few simple questions:\r\n\r\nI have a BIP32 root key that I want to use with your protocol: `xprv9s21ZrQH143K2vmu4Nkp4Q2MmH8Ptn2qwHqdZjaPgKFtjd6PTRK3FW4XNmsSEYLYaa6rBVcugaRbECQ3uQ4z4bfFFwAeYNGjq6GovTYCatw`\r\n\r\n0. How do I know it's a key for your protocol and not just a normal BIP32 wallet?\r\n1. How many apps am I using it with? If I only have the string above, how can I tell?\r\n2. If the protocol adds a backwards incompatible change, how do I know which version of the protocol to use?\r\n3. (Using your BIP39 example) How do I know which phrases I've used? (ex. In BIP44, there's a \"gap limit of 20 empty addresses before stopping checking of addresses)\r\n\r\nThe idea of adding a layer of abstraction to entropy generation is not a good or bad idea. As long as you're willing to take the security hit, and you understand it, that's fine.\r\n\r\nThe problem I am proposing is:\r\n\r\nThe fine details of how this protocol works and how it deals with recovery need to be clear. (Do we create a JSON file that continuously grows with metadata? Do we just tell the user to keep track of everything they use and an xprv key? Do we make every wallet derive every known app type including the BIP39 stuff with all languages all word counts, and give a gap limit for each phrase? (performance hit on startup) Do we leave it up to the wallet devs to decide (in which case you get a lot of interoperability problems.)\r\n\r\nThat is the most crucial part of this protocol and is noticeably absent.",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-616112398",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3282672003,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI4MjY3MjAwMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3282672003",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T01:09:37Z"
    },
    {
      "event": "commented",
      "id": 620938174,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDkzODE3NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/620938174",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T01:22:13Z",
      "updated_at": "2020-04-29T01:22:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and squashed.",
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-620938174",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "commented",
      "id": 620940638,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDk0MDYzOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/620940638",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T01:30:50Z",
      "updated_at": "2020-04-29T01:30:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@junderw The point of this BIP is not to redesign deterministic key derivation, but to act as a middleware to solve the problem proliferation (a problem which may not exist if everything was restarted with hindsight maybe). I agree that there is a need for wallet meta data but that seems to be out of scope for this proposal unless you have some suggestions?\r\n\r\nIt would seem to me that a \"wallet metadata\" system could be an extensive and independent BIP which would describe how to reconstruct any wallet. Given the scope of BIP32 it would seem just as relevant to a BIP32 as to this BIP or any other derivation scheme. Currently all derivation schemes boil down to BIP32, so it would be prudent to have a wallet descriptor to describe how a wallet was derived and the paths used in the derivation, regardless of the starting point scheme (e.g. BIP32, BIP39, SLIP32 etc).",
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-620940638",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "mentioned",
      "id": 3282705117,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4MjcwNTExNw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3282705117",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T01:30:51Z"
    },
    {
      "event": "subscribed",
      "id": 3282705118,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODI3MDUxMTg=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3282705118",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T01:30:51Z"
    },
    {
      "event": "reviewed",
      "id": 402875406,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyODc1NDA2",
      "url": null,
      "actor": null,
      "commit_id": "97be6e609acf89b5589e5670b5624935f7cb8fa0",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "doc-hex",
        "id": 1482781,
        "node_id": "MDQ6VXNlcjE0ODI3ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1482781?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/doc-hex",
        "html_url": "https://github.com/doc-hex",
        "followers_url": "https://api.github.com/users/doc-hex/followers",
        "following_url": "https://api.github.com/users/doc-hex/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/doc-hex/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/doc-hex/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/doc-hex/subscriptions",
        "organizations_url": "https://api.github.com/users/doc-hex/orgs",
        "repos_url": "https://api.github.com/users/doc-hex/repos",
        "events_url": "https://api.github.com/users/doc-hex/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/doc-hex/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#pullrequestreview-402875406",
      "submitted_at": "2020-04-29T17:16:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/910"
    },
    {
      "event": "commented",
      "id": 621888900,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg4ODkwMA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/621888900",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T14:28:22Z",
      "updated_at": "2020-04-30T14:28:22Z",
      "author_association": "MEMBER",
      "body": "This is missing a section for backward compatibility.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-621888900",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "labeled",
      "id": 3289736652,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyODk3MzY2NTI=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3289736652",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T14:32:53Z",
      "label": {
        "name": "New BIP",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 622171908,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjE3MTkwOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/622171908",
      "actor": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T23:25:21Z",
      "updated_at": "2020-04-30T23:25:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The point of this BIP is not to redesign deterministic key derivation\r\n\r\nThat's not what I am saying... the point of this BIP is to be standardize something that is useful so that everyone isn't doing a million different things and things can be interoperable.\r\n\r\nHow would two wallet apps, without communicating with each other, exchange the Deterministic Entropy with each other, validate whether the data was meant to be used with this BIP and validate what features of this BIP it is using?\r\n\r\nSince you won't answer my question, please tell me if this answer is correct:\r\n\r\n\"You would need the user to present a BIP32 xprv string, we will assume any valid xprv could be used with this BIP, then we will derive entropy according to every possible feature laid out in this BIP, and show these pieces of entropy to the user and ask them for each \"do you recognize this entropy? Would you like to use it?\"\"\r\n\r\nOr is it more like:\r\n\r\n\"You need to present a valid xprv. The application hard codes 1 or more uses of the xprv in accordance with this BIP directly into its source code, the end user may not choose what they want to use it for / what language BIP39 phrase they can pass through. If someone mistakenly inserts an xprv meant for use in BIP32, there's no way to tell, so continue as if it was meant for our BIP anyways.\"\r\n\r\nThese are the types of answers I was looking for, are either of them correct. If either of them are correct the utility of this BIP is extremely low and would need a major reworking. (a big one would be a new encoding format to prevent mistakenly using a BIP32 key that is just a BIP32 key)",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-622171908",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "commented",
      "id": 622177643,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjE3NzY0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/622177643",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-30T23:44:42Z",
      "updated_at": "2020-04-30T23:44:42Z",
      "author_association": "MEMBER",
      "body": ">the point of this BIP is to be standardize something that is useful so that everyone isn't doing a million different things and things can be interoperable.\r\n\r\nI'm not sure it actually does that. Wouldn't the BIP need to itself define a PRNG to use the data with, and the outputs thereof?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-622177643",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "reviewed",
      "id": 422113377,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTEzMzc3",
      "url": null,
      "actor": null,
      "commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#pullrequestreview-422113377",
      "submitted_at": "2020-06-01T19:18:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/910"
    },
    {
      "event": "renamed",
      "id": 3394534013,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzM5NDUzNDAxMw==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3394534013",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-01T19:21:10Z",
      "rename": {
        "from": "Deterministic Entropy BIP",
        "to": "BIP 85: Deterministic Entropy From BIP32 Keychains"
      }
    },
    {
      "event": "commented",
      "id": 637054324,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzA1NDMyNA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/637054324",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-01T19:21:33Z",
      "updated_at": "2020-06-01T19:21:33Z",
      "author_association": "MEMBER",
      "body": "Assigned BIP number 85",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-637054324",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "reviewed",
      "id": 424093732,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDkzNzMy",
      "url": null,
      "actor": null,
      "commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#pullrequestreview-424093732",
      "submitted_at": "2020-06-04T04:28:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/910"
    },
    {
      "event": "reviewed",
      "id": 424094494,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDk0NDk0",
      "url": null,
      "actor": null,
      "commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#pullrequestreview-424094494",
      "submitted_at": "2020-06-04T04:31:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/910"
    },
    {
      "event": "reviewed",
      "id": 424094895,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDk0ODk1",
      "url": null,
      "actor": null,
      "commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#pullrequestreview-424094895",
      "submitted_at": "2020-06-04T04:32:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/910"
    },
    {
      "event": "reviewed",
      "id": 424096376,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDk2Mzc2",
      "url": null,
      "actor": null,
      "commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#pullrequestreview-424096376",
      "submitted_at": "2020-06-04T04:38:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bips/pulls/910"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3433550162,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzMzU1MDE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433550162",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T10:37:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3433562852,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzMzU2Mjg1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433562852",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T10:41:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3433588861,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzMzU4ODg2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433588861",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T10:49:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3433601184,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzMzYwMTE4NA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433601184",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T10:53:07Z"
    },
    {
      "event": "mentioned",
      "id": 3433813526,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQzMzgxMzUyNg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433813526",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T11:56:25Z"
    },
    {
      "event": "subscribed",
      "id": 3433813529,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0MzM4MTM1Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433813529",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T11:56:25Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTQ1MzE3Mzc6OTY5MjczNDRlN2E1MDExNmFjZWFiNmMwZjY0ODM2MmNjM2JhYjI5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/git/commits/96927344e7a50116aceab6c0f648362cc3bab296",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bips/commit/96927344e7a50116aceab6c0f648362cc3bab296",
      "tree": {
        "sha": "d15d8383da3b0e63f57297a8c2da649e4a0f8bf7",
        "url": "https://api.github.com/repos/bitcoin/bips/git/trees/d15d8383da3b0e63f57297a8c2da649e4a0f8bf7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bips/git/commits/cb071df902eafb7054635201a8b12e76f42774ad",
          "sha": "cb071df902eafb7054635201a8b12e76f42774ad",
          "html_url": "https://github.com/bitcoin/bips/commit/cb071df902eafb7054635201a8b12e76f42774ad"
        }
      ],
      "message": "Initial commit of entropy BIP",
      "committer": {
        "name": "Ethan Kosakovsky",
        "email": "ethankosakovsky@protonmail.com",
        "date": "2020-06-11T12:11:06Z"
      },
      "author": {
        "name": "Ethan Kosakovsky",
        "email": "ethankosakovsky@protonmail.com",
        "date": "2020-04-11T11:29:51Z"
      },
      "sha": "96927344e7a50116aceab6c0f648362cc3bab296"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3433863592,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQzMzg2MzU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433863592",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T12:11:30Z"
    },
    {
      "event": "commented",
      "id": 642605135,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjYwNTEzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/comments/642605135",
      "actor": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T12:13:26Z",
      "updated_at": "2020-06-11T12:13:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr ready for merge.",
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bips/pull/910#issuecomment-642605135",
      "issue_url": "https://api.github.com/repos/bitcoin/bips/issues/910"
    },
    {
      "event": "mentioned",
      "id": 3433870338,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzQzMzg3MDMzOA==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433870338",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T12:13:27Z"
    },
    {
      "event": "subscribed",
      "id": 3433870343,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM0MzM4NzAzNDM=",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3433870343",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-11T12:13:27Z"
    },
    {
      "event": "merged",
      "id": 3436443681,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzQzNjQ0MzY4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3436443681",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d0d2bc99793e3daafe25456b8e2624a1019791c3",
      "commit_url": "https://api.github.com/repos/bitcoin/bips/commits/d0d2bc99793e3daafe25456b8e2624a1019791c3",
      "created_at": "2020-06-12T00:32:30Z"
    },
    {
      "event": "closed",
      "id": 3436443686,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQzNjQ0MzY4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bips/issues/events/3436443686",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-12T00:32:30Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "aido",
        "id": 2703875,
        "node_id": "MDQ6VXNlcjI3MDM4NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2703875?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aido",
        "html_url": "https://github.com/aido",
        "followers_url": "https://api.github.com/users/aido/followers",
        "following_url": "https://api.github.com/users/aido/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aido/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aido/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aido/subscriptions",
        "organizations_url": "https://api.github.com/users/aido/orgs",
        "repos_url": "https://api.github.com/users/aido/repos",
        "events_url": "https://api.github.com/users/aido/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aido/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-04T23:29:35Z",
      "updated_at": "2022-01-04T23:29:35Z",
      "source": {
        "issue": {
          "id": 634739676,
          "node_id": "MDU6SXNzdWU2MzQ3Mzk2NzY=",
          "url": "https://api.github.com/repos/BlockchainCommons/lethekit/issues/38",
          "repository_url": "https://api.github.com/repos/BlockchainCommons/lethekit",
          "labels_url": "https://api.github.com/repos/BlockchainCommons/lethekit/issues/38/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/BlockchainCommons/lethekit/issues/38/comments",
          "events_url": "https://api.github.com/repos/BlockchainCommons/lethekit/issues/38/events",
          "html_url": "https://github.com/BlockchainCommons/lethekit/issues/38",
          "number": 38,
          "state": "open",
          "state_reason": null,
          "title": "BIP39 and SLIP39 generated wallets do not match",
          "body": "The LetheKit seedtool application generates new wallets using dice\r\nentropy to create BIP39 and SLIP39 recovery mnemonics. The BIP39 and\r\nSLIP39 mnemonics represent valid wallets, but they are not the same\r\nwallet.\r\n\r\nThis is a serious problem.  If both BIP39 and SLIP39 backups are\r\ncreated at the same time and funds are placed in the BIP39 wallet the\r\nSLIP39 backup will fail to recover the same wallet and the funds would\r\nbe lost.\r\n#### Why is this the case?\r\n\r\nAndrew Kozlik explains it well in this [GitHub comment](https://github.com/iancoleman/slip39/issues/1#issuecomment-563213494)\r\n\r\n#### How can matching BIP39 and SLIP39 backups be made?\r\n\r\nAndrew Kozlik explains (above) that in principle, SLIP39 shares which\r\nare 59 words long could match a BIP39 mnemonic.  In practice SLIP39\r\nshares of this length are non-standard and unlikely to be supported by\r\nany devices or applications.  The extreme length is also significantly\r\npainful to record and enter.\r\n\r\n#### Impact on LetheKit/seedtool:\r\n\r\nThe desired feature of (standard) matching BIP39 and SLIP39 backups is\r\nnot possible.\r\n\r\nThe conversion of a BIP39 backup into a SLIP39 backup is not possible.\r\n\r\nThe conversion of a SLIP39 backup into a BIP39 backup is not possible.\r\n\r\nLetheKit/seedtool can generate valid BIP39 and SLIP39 wallets but\r\nshould not allow generation of both at the same time or suggest it\r\ncan convert between the two.\r\n\r\nLetheKit can restore SLIP39 backups, but a mechanism to export the\r\nmaster secret (likely via QR code) would need to be added.\r\n",
          "user": {
            "login": "ksedgwic",
            "id": 38590,
            "node_id": "MDQ6VXNlcjM4NTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38590?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ksedgwic",
            "html_url": "https://github.com/ksedgwic",
            "followers_url": "https://api.github.com/users/ksedgwic/followers",
            "following_url": "https://api.github.com/users/ksedgwic/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ksedgwic/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ksedgwic/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ksedgwic/subscriptions",
            "organizations_url": "https://api.github.com/users/ksedgwic/orgs",
            "repos_url": "https://api.github.com/users/ksedgwic/repos",
            "events_url": "https://api.github.com/users/ksedgwic/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ksedgwic/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 12,
          "created_at": "2020-06-08T15:56:19Z",
          "updated_at": "2023-07-11T18:51:27Z"
        },
        "type": "issue"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/417480083",
      "pull_request_review_id": 402875406,
      "id": 417480083,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4MDA4Mw==",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.\n+\n+The HMAC-SHA512 function is specified in [http://tools.ietf.org/html/rfc4231 RFC 4231].\n+\n+===Test vectors===\n+\n+====Test case 1====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/0'/0'\n+\n+OUTPUT:\n+* DERIVED KEY=cca20ccb0e9a90feb0912870c3323b24874b0ca3d8018c4b96d0b97c0e82ded0\n+* DERIVED ENTROPY=6bea85e51a05e6dbaf2ccee05097758213807997ba936589cef01c8f19c0079f395a0cd045efa3438677f3ef9ad34c9a68506626c5a17e51ed5e177852ee7fdc\n+\n+====Test case 2====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+*PATH: m/83696968'/0'/1'\n+\n+OUTPUT\n+* DERIVED KEY=503776919131758bb7de7beb6c0ae24894f4ec042c26032890c29359216e21ba\n+* DERIVED ENTROPY=6da87ce3a71869b7a644c9d574f67df168fee8c6b24bc0832ef3cc43e23ca5055dd0458431caa5b5b33113b1d7bbd706c20a5ea3b408808402f553ddf1a3d6d4\n+\n+==Reference Implementation==\n+\n+Python library implementation: [https://github.com/ethankosakovsky/bipentropy python-bipentropy]\n+\n+===Other Implementations===\n+\n+Coldcard Firmware: [https://github.com/Coldcard/firmware/pull/39]\n+\n+==Applications==\n+\n+Application number define how entropy will be used post processing. Some basic examples follow:\n+\n+Derivation path uses the format <code>m/83696968/' + /app_no' + /index'</code> where ''app_no'' path for the application, and `index` in the index.\n+\n+===BIP39===\n+Application number: 39'\n+\n+Entropy is truncated to the number of bits required to map to the relevant word length 128 bits for 12 words, 256 bits for 24 words.\n+\n+The derivation path format is: <code>m/83696968'/39'/{language}'/{words}'/{index}'</code>\n+\n+Example a BIP39 mnemonic with 12 English words (first index) would have the path <code>m/83696968'/39'/0'/12'/0'</code> the next key would be <code>m/83696968'/39'/0'/12'/1'</code> etc.\n+\n+Language Table\n+\n+{|\n+!Wordlist\n+!Code\n+|- \n+| English\n+| 0'\n+|- \n+| Japanese\n+| 1'\n+|- \n+| Korean\n+| 2'\n+|- \n+| Spanish\n+| 3'\n+|- \n+| Chinese (Simplified)\n+| 4'\n+|- \n+| Chinese (Traditional)\n+| 5'\n+|- \n+| French\n+| 6'\n+|- \n+| Italian\n+| 7'\n+|- \n+| Czech\n+| 8'\n+|}\n+\n+Words Table\n+\n+{|\n+!Words\n+!Entropy\n+!Code\n+|- \n+| 12 words\n+| 128 bits\n+| 12'\n+|-\n+| 18 words\n+| 192 bits\n+| 18'\n+|-\n+| 24 words\n+| 256 bits\n+| 24'\n+|}\n+\n+====12 English words====\n+BIP39 English 12 word mnemonic seed \n+\n+128 bits of entropy as input to BIP39 to derive 12 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/12'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=6250b68daf746d12a24d58b4787a714b\n+* DERIVED BIP39 MNEMONIC=girl mad pet galaxy egg matter matrix prison refuse sense ordinary nose\n+\n+====18 English words====\n+BIP39 English 18 word mnemonic seed\n+\n+196 bits of entropy as input to BIP39 to derive 18 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/18'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=938033ed8b12698449d4bbca3c853c66b293ea1b1ce9d9dc\n+* DERIVED BIP39 MNEMONIC=near account window bike charge season chef number sketch tomorrow excuse sniff circle vital hockey outdoor supply token\n+\n+====24 English words====\n+Derives 24 word BIP39 mnemonic seed\n+\n+256 bits of entropy as input to BIP39 to derive 24 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/24'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=ae131e2312cdc61331542efe0d1077bac5ea803adf24b313a4f0e48e9c51f37f\n+* DERIVED BIP39 MNEMONIC=puppy ocean match cereal symbol another shed magic wrap hammer bulb intact gadget divorce twin tonight reason outdoor destroy simple truth cigar social volcano\n+\n+===HD-Seed WIF===\n+Application number: 2'\n+\n+Uses 256 bits of entropy as the secret exponent to derive a private key and encode as a compressed WIF which will be used as the hdseed for Bitcoin Core wallets.\n+\n+There is a very small chance that you'll make an invalid key that is zero or bigger than the order of the curve. If this occurs, software should hard fail (forcing users should iterate to the next index).\n+\n+From BIP32:\n+> In case parse<sub>256</sub>(I<sub>L</sub>) ≥ n or k<sub>i</sub> = 0, the resulting key is invalid, and one should proceed with the next value for i. (Note: this has probability lower than 1 in 2<sup>127</sup>.)\n+\n+Path format is <code>m/83696968'/2'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/2'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1\n+* DERIVED WIF=Kzyv4uF39d4Jrw2W7UryTHwZr1zQVNk4dAFyqE6BuMrMh1Za7uhp\n+\n+===XPRV===\n+Application number: 32'\n+\n+Taking 64 bytes of the HMAC digest, the first 32 bytes are the chain code, and second 32 bytes are the private key for BIP32 XPRV value. Child number, depth, and parent fingerprint are forced to zero.\n+\n+Path format is <code>m/83696968'/32'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1\n+* DERIVED WIF=xprv9s21ZrQH143K2srSbCSg4m4kLvPMzcWydgmKEnMmoZUurYuBuYG46c6P71UGXMzmriLzCCBvKQWBUv3vPB3m1SATMhp3uEjXHJ42jFg7myX\n+\n+===HEX===\n+Application number: 128169'\n+\n+The derivation path format is: <code>m/83696968'/128169'/{num_bytes}'/{index}'</code>\n+\n+`16 >= num_bytes <= 64`",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 228,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "97be6e609acf89b5589e5670b5624935f7cb8fa0",
      "in_reply_to_id": null,
      "user": {
        "login": "doc-hex",
        "id": 1482781,
        "node_id": "MDQ6VXNlcjE0ODI3ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1482781?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/doc-hex",
        "html_url": "https://github.com/doc-hex",
        "followers_url": "https://api.github.com/users/doc-hex/followers",
        "following_url": "https://api.github.com/users/doc-hex/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/doc-hex/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/doc-hex/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/doc-hex/subscriptions",
        "organizations_url": "https://api.github.com/users/doc-hex/orgs",
        "repos_url": "https://api.github.com/users/doc-hex/repos",
        "events_url": "https://api.github.com/users/doc-hex/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/doc-hex/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "- should be `16 <= num_bytes <= 64`",
      "created_at": "2020-04-29T17:16:44Z",
      "updated_at": "2020-06-11T12:11:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r417480083",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/417480083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/433437183",
      "pull_request_review_id": 422113377,
      "id": 433437183,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNzE4Mw==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 9,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This looks more like `Informational`?",
      "created_at": "2020-06-01T19:18:54Z",
      "updated_at": "2020-06-11T12:11:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r433437183",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/433437183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434985722",
      "pull_request_review_id": 424093732,
      "id": 434985722,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4NTcyMg==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 48,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": null,
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove quotes from \"k\" here to discourage confusion.\r\n\r\n```suggestion\r\nFor each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is the private key k: <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.\r\n```",
      "created_at": "2020-06-04T04:28:35Z",
      "updated_at": "2020-06-11T12:11:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r434985722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434985722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434986365",
      "pull_request_review_id": 424094494,
      "id": 434986365,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4NjM2NQ==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.\n+\n+The HMAC-SHA512 function is specified in [http://tools.ietf.org/html/rfc4231 RFC 4231].\n+\n+===Test vectors===\n+\n+====Test case 1====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/0'/0'\n+\n+OUTPUT:\n+* DERIVED KEY=cca20ccb0e9a90feb0912870c3323b24874b0ca3d8018c4b96d0b97c0e82ded0\n+* DERIVED ENTROPY=6bea85e51a05e6dbaf2ccee05097758213807997ba936589cef01c8f19c0079f395a0cd045efa3438677f3ef9ad34c9a68506626c5a17e51ed5e177852ee7fdc\n+\n+====Test case 2====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+*PATH: m/83696968'/0'/1'\n+\n+OUTPUT\n+* DERIVED KEY=503776919131758bb7de7beb6c0ae24894f4ec042c26032890c29359216e21ba\n+* DERIVED ENTROPY=6da87ce3a71869b7a644c9d574f67df168fee8c6b24bc0832ef3cc43e23ca5055dd0458431caa5b5b33113b1d7bbd706c20a5ea3b408808402f553ddf1a3d6d4\n+\n+==Reference Implementation==\n+\n+Python library implementation: [https://github.com/ethankosakovsky/bipentropy python-bipentropy]\n+\n+===Other Implementations===\n+\n+Coldcard Firmware: [https://github.com/Coldcard/firmware/pull/39]\n+\n+==Applications==\n+\n+Application number define how entropy will be used post processing. Some basic examples follow:\n+\n+Derivation path uses the format <code>m/83696968/' + /app_no' + /index'</code> where ''app_no'' path for the application, and `index` in the index.\n+\n+===BIP39===\n+Application number: 39'\n+\n+Entropy is truncated to the number of bits required to map to the relevant word length 128 bits for 12 words, 256 bits for 24 words.\n+\n+The derivation path format is: <code>m/83696968'/39'/{language}'/{words}'/{index}'</code>\n+\n+Example a BIP39 mnemonic with 12 English words (first index) would have the path <code>m/83696968'/39'/0'/12'/0'</code> the next key would be <code>m/83696968'/39'/0'/12'/1'</code> etc.\n+\n+Language Table\n+\n+{|\n+!Wordlist\n+!Code\n+|- \n+| English\n+| 0'\n+|- \n+| Japanese\n+| 1'\n+|- \n+| Korean\n+| 2'\n+|- \n+| Spanish\n+| 3'\n+|- \n+| Chinese (Simplified)\n+| 4'\n+|- \n+| Chinese (Traditional)\n+| 5'\n+|- \n+| French\n+| 6'\n+|- \n+| Italian\n+| 7'\n+|- \n+| Czech\n+| 8'\n+|}\n+\n+Words Table\n+\n+{|\n+!Words\n+!Entropy\n+!Code\n+|- \n+| 12 words\n+| 128 bits\n+| 12'\n+|-\n+| 18 words\n+| 192 bits\n+| 18'\n+|-\n+| 24 words\n+| 256 bits\n+| 24'\n+|}\n+\n+====12 English words====\n+BIP39 English 12 word mnemonic seed \n+\n+128 bits of entropy as input to BIP39 to derive 12 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/12'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=6250b68daf746d12a24d58b4787a714b\n+* DERIVED BIP39 MNEMONIC=girl mad pet galaxy egg matter matrix prison refuse sense ordinary nose\n+\n+====18 English words====\n+BIP39 English 18 word mnemonic seed\n+\n+196 bits of entropy as input to BIP39 to derive 18 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/18'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=938033ed8b12698449d4bbca3c853c66b293ea1b1ce9d9dc\n+* DERIVED BIP39 MNEMONIC=near account window bike charge season chef number sketch tomorrow excuse sniff circle vital hockey outdoor supply token\n+\n+====24 English words====\n+Derives 24 word BIP39 mnemonic seed\n+\n+256 bits of entropy as input to BIP39 to derive 24 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/24'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=ae131e2312cdc61331542efe0d1077bac5ea803adf24b313a4f0e48e9c51f37f\n+* DERIVED BIP39 MNEMONIC=puppy ocean match cereal symbol another shed magic wrap hammer bulb intact gadget divorce twin tonight reason outdoor destroy simple truth cigar social volcano\n+\n+===HD-Seed WIF===\n+Application number: 2'\n+\n+Uses 256 bits of entropy as the secret exponent to derive a private key and encode as a compressed WIF which will be used as the hdseed for Bitcoin Core wallets.\n+\n+There is a very small chance that you'll make an invalid key that is zero or bigger than the order of the curve. If this occurs, software should hard fail (forcing users should iterate to the next index).\n+\n+From BIP32:\n+> In case parse<sub>256</sub>(I<sub>L</sub>) ≥ n or k<sub>i</sub> = 0, the resulting key is invalid, and one should proceed with the next value for i. (Note: this has probability lower than 1 in 2<sup>127</sup>.)\n+\n+Path format is <code>m/83696968'/2'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/2'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1\n+* DERIVED WIF=Kzyv4uF39d4Jrw2W7UryTHwZr1zQVNk4dAFyqE6BuMrMh1Za7uhp\n+\n+===XPRV===\n+Application number: 32'\n+\n+Taking 64 bytes of the HMAC digest, the first 32 bytes are the chain code, and second 32 bytes are the private key for BIP32 XPRV value. Child number, depth, and parent fingerprint are forced to zero.\n+\n+Path format is <code>m/83696968'/32'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 220,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": null,
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is the same DERIVED ENTROPY from HD-Seed WIF",
      "created_at": "2020-06-04T04:31:28Z",
      "updated_at": "2020-06-11T12:11:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r434986365",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434986365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434986719",
      "pull_request_review_id": 424094895,
      "id": 434986719,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4NjcxOQ==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.\n+\n+The HMAC-SHA512 function is specified in [http://tools.ietf.org/html/rfc4231 RFC 4231].\n+\n+===Test vectors===\n+\n+====Test case 1====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/0'/0'\n+\n+OUTPUT:\n+* DERIVED KEY=cca20ccb0e9a90feb0912870c3323b24874b0ca3d8018c4b96d0b97c0e82ded0\n+* DERIVED ENTROPY=6bea85e51a05e6dbaf2ccee05097758213807997ba936589cef01c8f19c0079f395a0cd045efa3438677f3ef9ad34c9a68506626c5a17e51ed5e177852ee7fdc\n+\n+====Test case 2====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+*PATH: m/83696968'/0'/1'\n+\n+OUTPUT\n+* DERIVED KEY=503776919131758bb7de7beb6c0ae24894f4ec042c26032890c29359216e21ba\n+* DERIVED ENTROPY=6da87ce3a71869b7a644c9d574f67df168fee8c6b24bc0832ef3cc43e23ca5055dd0458431caa5b5b33113b1d7bbd706c20a5ea3b408808402f553ddf1a3d6d4\n+\n+==Reference Implementation==\n+\n+Python library implementation: [https://github.com/ethankosakovsky/bipentropy python-bipentropy]\n+\n+===Other Implementations===\n+\n+Coldcard Firmware: [https://github.com/Coldcard/firmware/pull/39]\n+\n+==Applications==\n+\n+Application number define how entropy will be used post processing. Some basic examples follow:\n+\n+Derivation path uses the format <code>m/83696968/' + /app_no' + /index'</code> where ''app_no'' path for the application, and `index` in the index.\n+\n+===BIP39===\n+Application number: 39'\n+\n+Entropy is truncated to the number of bits required to map to the relevant word length 128 bits for 12 words, 256 bits for 24 words.\n+\n+The derivation path format is: <code>m/83696968'/39'/{language}'/{words}'/{index}'</code>\n+\n+Example a BIP39 mnemonic with 12 English words (first index) would have the path <code>m/83696968'/39'/0'/12'/0'</code> the next key would be <code>m/83696968'/39'/0'/12'/1'</code> etc.\n+\n+Language Table\n+\n+{|\n+!Wordlist\n+!Code\n+|- \n+| English\n+| 0'\n+|- \n+| Japanese\n+| 1'\n+|- \n+| Korean\n+| 2'\n+|- \n+| Spanish\n+| 3'\n+|- \n+| Chinese (Simplified)\n+| 4'\n+|- \n+| Chinese (Traditional)\n+| 5'\n+|- \n+| French\n+| 6'\n+|- \n+| Italian\n+| 7'\n+|- \n+| Czech\n+| 8'\n+|}\n+\n+Words Table\n+\n+{|\n+!Words\n+!Entropy\n+!Code\n+|- \n+| 12 words\n+| 128 bits\n+| 12'\n+|-\n+| 18 words\n+| 192 bits\n+| 18'\n+|-\n+| 24 words\n+| 256 bits\n+| 24'\n+|}\n+\n+====12 English words====\n+BIP39 English 12 word mnemonic seed \n+\n+128 bits of entropy as input to BIP39 to derive 12 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/12'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=6250b68daf746d12a24d58b4787a714b\n+* DERIVED BIP39 MNEMONIC=girl mad pet galaxy egg matter matrix prison refuse sense ordinary nose\n+\n+====18 English words====\n+BIP39 English 18 word mnemonic seed\n+\n+196 bits of entropy as input to BIP39 to derive 18 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/18'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=938033ed8b12698449d4bbca3c853c66b293ea1b1ce9d9dc\n+* DERIVED BIP39 MNEMONIC=near account window bike charge season chef number sketch tomorrow excuse sniff circle vital hockey outdoor supply token\n+\n+====24 English words====\n+Derives 24 word BIP39 mnemonic seed\n+\n+256 bits of entropy as input to BIP39 to derive 24 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/24'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=ae131e2312cdc61331542efe0d1077bac5ea803adf24b313a4f0e48e9c51f37f\n+* DERIVED BIP39 MNEMONIC=puppy ocean match cereal symbol another shed magic wrap hammer bulb intact gadget divorce twin tonight reason outdoor destroy simple truth cigar social volcano\n+\n+===HD-Seed WIF===\n+Application number: 2'\n+\n+Uses 256 bits of entropy as the secret exponent to derive a private key and encode as a compressed WIF which will be used as the hdseed for Bitcoin Core wallets.\n+\n+There is a very small chance that you'll make an invalid key that is zero or bigger than the order of the curve. If this occurs, software should hard fail (forcing users should iterate to the next index).\n+\n+From BIP32:\n+> In case parse<sub>256</sub>(I<sub>L</sub>) ≥ n or k<sub>i</sub> = 0, the resulting key is invalid, and one should proceed with the next value for i. (Note: this has probability lower than 1 in 2<sup>127</sup>.)\n+\n+Path format is <code>m/83696968'/2'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/2'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1\n+* DERIVED WIF=Kzyv4uF39d4Jrw2W7UryTHwZr1zQVNk4dAFyqE6BuMrMh1Za7uhp\n+\n+===XPRV===\n+Application number: 32'\n+\n+Taking 64 bytes of the HMAC digest, the first 32 bytes are the chain code, and second 32 bytes are the private key for BIP32 XPRV value. Child number, depth, and parent fingerprint are forced to zero.\n+\n+Path format is <code>m/83696968'/32'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1\n+* DERIVED WIF=xprv9s21ZrQH143K2srSbCSg4m4kLvPMzcWydgmKEnMmoZUurYuBuYG46c6P71UGXMzmriLzCCBvKQWBUv3vPB3m1SATMhp3uEjXHJ42jFg7myX\n+\n+===HEX===\n+Application number: 128169'\n+\n+The derivation path format is: <code>m/83696968'/128169'/{num_bytes}'/{index}'</code>",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 226,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": null,
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "specify which bytes.\r\n\r\nIf I use 16, should I just the first 16 bytes or last 16 bytes? Or something else.",
      "created_at": "2020-06-04T04:32:53Z",
      "updated_at": "2020-06-11T12:11:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r434986719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434986719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 226,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434987941",
      "pull_request_review_id": 424096376,
      "id": 434987941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk4Nzk0MQ==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.\n+\n+The HMAC-SHA512 function is specified in [http://tools.ietf.org/html/rfc4231 RFC 4231].\n+\n+===Test vectors===\n+\n+====Test case 1====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/0'/0'\n+\n+OUTPUT:\n+* DERIVED KEY=cca20ccb0e9a90feb0912870c3323b24874b0ca3d8018c4b96d0b97c0e82ded0\n+* DERIVED ENTROPY=6bea85e51a05e6dbaf2ccee05097758213807997ba936589cef01c8f19c0079f395a0cd045efa3438677f3ef9ad34c9a68506626c5a17e51ed5e177852ee7fdc\n+\n+====Test case 2====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+*PATH: m/83696968'/0'/1'\n+\n+OUTPUT\n+* DERIVED KEY=503776919131758bb7de7beb6c0ae24894f4ec042c26032890c29359216e21ba\n+* DERIVED ENTROPY=6da87ce3a71869b7a644c9d574f67df168fee8c6b24bc0832ef3cc43e23ca5055dd0458431caa5b5b33113b1d7bbd706c20a5ea3b408808402f553ddf1a3d6d4\n+\n+==Reference Implementation==\n+\n+Python library implementation: [https://github.com/ethankosakovsky/bipentropy python-bipentropy]\n+\n+===Other Implementations===\n+\n+Coldcard Firmware: [https://github.com/Coldcard/firmware/pull/39]\n+\n+==Applications==\n+\n+Application number define how entropy will be used post processing. Some basic examples follow:\n+\n+Derivation path uses the format <code>m/83696968/' + /app_no' + /index'</code> where ''app_no'' path for the application, and `index` in the index.\n+\n+===BIP39===\n+Application number: 39'\n+\n+Entropy is truncated to the number of bits required to map to the relevant word length 128 bits for 12 words, 256 bits for 24 words.",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": null,
      "user": {
        "login": "junderw",
        "id": 11246316,
        "node_id": "MDQ6VXNlcjExMjQ2MzE2",
        "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/junderw",
        "html_url": "https://github.com/junderw",
        "followers_url": "https://api.github.com/users/junderw/followers",
        "following_url": "https://api.github.com/users/junderw/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/junderw/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/junderw/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
        "organizations_url": "https://api.github.com/users/junderw/orgs",
        "repos_url": "https://api.github.com/users/junderw/repos",
        "events_url": "https://api.github.com/users/junderw/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/junderw/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Truncate can refer to chopping off data from the beginning or end. Specify one or the other. Colloquially most people understand truncate to mean \"from the end\" which in the case of a byte array is that of least significance (or higher index from a coding perspective)\r\n```suggestion\r\nTruncate trailing (least significant) bytes of the entropy to the number of bits required to map to the relevant word length 128 bits for 12 words, 256 bits for 24 words.\r\n```",
      "created_at": "2020-06-04T04:38:06Z",
      "updated_at": "2020-06-11T12:11:30Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r434987941",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/434987941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/438738191",
      "pull_request_review_id": 428848526,
      "id": 438738191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczODE5MQ==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.\n+\n+The HMAC-SHA512 function is specified in [http://tools.ietf.org/html/rfc4231 RFC 4231].\n+\n+===Test vectors===\n+\n+====Test case 1====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/0'/0'\n+\n+OUTPUT:\n+* DERIVED KEY=cca20ccb0e9a90feb0912870c3323b24874b0ca3d8018c4b96d0b97c0e82ded0\n+* DERIVED ENTROPY=6bea85e51a05e6dbaf2ccee05097758213807997ba936589cef01c8f19c0079f395a0cd045efa3438677f3ef9ad34c9a68506626c5a17e51ed5e177852ee7fdc\n+\n+====Test case 2====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+*PATH: m/83696968'/0'/1'\n+\n+OUTPUT\n+* DERIVED KEY=503776919131758bb7de7beb6c0ae24894f4ec042c26032890c29359216e21ba\n+* DERIVED ENTROPY=6da87ce3a71869b7a644c9d574f67df168fee8c6b24bc0832ef3cc43e23ca5055dd0458431caa5b5b33113b1d7bbd706c20a5ea3b408808402f553ddf1a3d6d4\n+\n+==Reference Implementation==\n+\n+Python library implementation: [https://github.com/ethankosakovsky/bipentropy python-bipentropy]\n+\n+===Other Implementations===\n+\n+Coldcard Firmware: [https://github.com/Coldcard/firmware/pull/39]\n+\n+==Applications==\n+\n+Application number define how entropy will be used post processing. Some basic examples follow:\n+\n+Derivation path uses the format <code>m/83696968/' + /app_no' + /index'</code> where ''app_no'' path for the application, and `index` in the index.\n+\n+===BIP39===\n+Application number: 39'\n+\n+Entropy is truncated to the number of bits required to map to the relevant word length 128 bits for 12 words, 256 bits for 24 words.",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 89,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": 434987941,
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added.",
      "created_at": "2020-06-11T12:13:05Z",
      "updated_at": "2020-06-11T12:13:05Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r438738191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/438738191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/438738253",
      "pull_request_review_id": 428848599,
      "id": 438738253,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczODI1Mw==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.\n+\n+The HMAC-SHA512 function is specified in [http://tools.ietf.org/html/rfc4231 RFC 4231].\n+\n+===Test vectors===\n+\n+====Test case 1====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/0'/0'\n+\n+OUTPUT:\n+* DERIVED KEY=cca20ccb0e9a90feb0912870c3323b24874b0ca3d8018c4b96d0b97c0e82ded0\n+* DERIVED ENTROPY=6bea85e51a05e6dbaf2ccee05097758213807997ba936589cef01c8f19c0079f395a0cd045efa3438677f3ef9ad34c9a68506626c5a17e51ed5e177852ee7fdc\n+\n+====Test case 2====\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+*PATH: m/83696968'/0'/1'\n+\n+OUTPUT\n+* DERIVED KEY=503776919131758bb7de7beb6c0ae24894f4ec042c26032890c29359216e21ba\n+* DERIVED ENTROPY=6da87ce3a71869b7a644c9d574f67df168fee8c6b24bc0832ef3cc43e23ca5055dd0458431caa5b5b33113b1d7bbd706c20a5ea3b408808402f553ddf1a3d6d4\n+\n+==Reference Implementation==\n+\n+Python library implementation: [https://github.com/ethankosakovsky/bipentropy python-bipentropy]\n+\n+===Other Implementations===\n+\n+Coldcard Firmware: [https://github.com/Coldcard/firmware/pull/39]\n+\n+==Applications==\n+\n+Application number define how entropy will be used post processing. Some basic examples follow:\n+\n+Derivation path uses the format <code>m/83696968/' + /app_no' + /index'</code> where ''app_no'' path for the application, and `index` in the index.\n+\n+===BIP39===\n+Application number: 39'\n+\n+Entropy is truncated to the number of bits required to map to the relevant word length 128 bits for 12 words, 256 bits for 24 words.\n+\n+The derivation path format is: <code>m/83696968'/39'/{language}'/{words}'/{index}'</code>\n+\n+Example a BIP39 mnemonic with 12 English words (first index) would have the path <code>m/83696968'/39'/0'/12'/0'</code> the next key would be <code>m/83696968'/39'/0'/12'/1'</code> etc.\n+\n+Language Table\n+\n+{|\n+!Wordlist\n+!Code\n+|- \n+| English\n+| 0'\n+|- \n+| Japanese\n+| 1'\n+|- \n+| Korean\n+| 2'\n+|- \n+| Spanish\n+| 3'\n+|- \n+| Chinese (Simplified)\n+| 4'\n+|- \n+| Chinese (Traditional)\n+| 5'\n+|- \n+| French\n+| 6'\n+|- \n+| Italian\n+| 7'\n+|- \n+| Czech\n+| 8'\n+|}\n+\n+Words Table\n+\n+{|\n+!Words\n+!Entropy\n+!Code\n+|- \n+| 12 words\n+| 128 bits\n+| 12'\n+|-\n+| 18 words\n+| 192 bits\n+| 18'\n+|-\n+| 24 words\n+| 256 bits\n+| 24'\n+|}\n+\n+====12 English words====\n+BIP39 English 12 word mnemonic seed \n+\n+128 bits of entropy as input to BIP39 to derive 12 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/12'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=6250b68daf746d12a24d58b4787a714b\n+* DERIVED BIP39 MNEMONIC=girl mad pet galaxy egg matter matrix prison refuse sense ordinary nose\n+\n+====18 English words====\n+BIP39 English 18 word mnemonic seed\n+\n+196 bits of entropy as input to BIP39 to derive 18 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/18'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=938033ed8b12698449d4bbca3c853c66b293ea1b1ce9d9dc\n+* DERIVED BIP39 MNEMONIC=near account window bike charge season chef number sketch tomorrow excuse sniff circle vital hockey outdoor supply token\n+\n+====24 English words====\n+Derives 24 word BIP39 mnemonic seed\n+\n+256 bits of entropy as input to BIP39 to derive 24 word mnemonic\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'/24'/0'\n+\n+OUTPUT:\n+* DERIVED ENTROPY=ae131e2312cdc61331542efe0d1077bac5ea803adf24b313a4f0e48e9c51f37f\n+* DERIVED BIP39 MNEMONIC=puppy ocean match cereal symbol another shed magic wrap hammer bulb intact gadget divorce twin tonight reason outdoor destroy simple truth cigar social volcano\n+\n+===HD-Seed WIF===\n+Application number: 2'\n+\n+Uses 256 bits of entropy as the secret exponent to derive a private key and encode as a compressed WIF which will be used as the hdseed for Bitcoin Core wallets.\n+\n+There is a very small chance that you'll make an invalid key that is zero or bigger than the order of the curve. If this occurs, software should hard fail (forcing users should iterate to the next index).\n+\n+From BIP32:\n+> In case parse<sub>256</sub>(I<sub>L</sub>) ≥ n or k<sub>i</sub> = 0, the resulting key is invalid, and one should proceed with the next value for i. (Note: this has probability lower than 1 in 2<sup>127</sup>.)\n+\n+Path format is <code>m/83696968'/2'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/2'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1\n+* DERIVED WIF=Kzyv4uF39d4Jrw2W7UryTHwZr1zQVNk4dAFyqE6BuMrMh1Za7uhp\n+\n+===XPRV===\n+Application number: 32'\n+\n+Taking 64 bytes of the HMAC digest, the first 32 bytes are the chain code, and second 32 bytes are the private key for BIP32 XPRV value. Child number, depth, and parent fingerprint are forced to zero.\n+\n+Path format is <code>m/83696968'/32'/{index}'</code>\n+\n+INPUT:\n+* MASTER BIP32 ROOT KEY: xprv9s21ZrQH143K2LBWUUQRFXhucrQqBpKdRRxNVq2zBqsx8HVqFk2uYo8kmbaLLHRdqtQpUm98uKfu3vca1LqdGhUtyoFnCNkfmXRyPXLjbKb\n+* PATH: m/83696968'/39'/0'\n+\n+OUTPUT\n+* DERIVED ENTROPY=7040bb53104f27367f317558e78a994ada7296c6fde36a364e5baf206e502bb1\n+* DERIVED WIF=xprv9s21ZrQH143K2srSbCSg4m4kLvPMzcWydgmKEnMmoZUurYuBuYG46c6P71UGXMzmriLzCCBvKQWBUv3vPB3m1SATMhp3uEjXHJ42jFg7myX\n+\n+===HEX===\n+Application number: 128169'\n+\n+The derivation path format is: <code>m/83696968'/128169'/{num_bytes}'/{index}'</code>",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 226,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": 434986719,
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added",
      "created_at": "2020-06-11T12:13:13Z",
      "updated_at": "2020-06-11T12:13:13Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r438738253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/438738253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 226,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bips/pulls/comments/438738318",
      "pull_request_review_id": 428848677,
      "id": 438738318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODczODMxOA==",
      "diff_hunk": "@@ -0,0 +1,257 @@\n+<pre>\n+  BIP: XXXX\n+  Layer: Applications\n+  Title: Deterministic Entropy From BIP32 Keychains\n+  Author: Ethan Kosakovsky <ethankosakovsky@protonmail.com>\n+  Comments-Summary: No comments yet.\n+  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-XXXX\n+  Status: Proposed\n+  Type: Standards Track\n+  Created: 2020-03-20\n+  License: BSD-2-Clause\n+           OPL\n+</pre>\n+\n+==Abstract==\n+\n+''\"One Seed to rule them all,''\n+''One Key to find them,''\n+''One Path to bring them all,''\n+''And in cryptography bind them.\"''\n+\n+It is not possible to maintain one single (mnemonic) seed backup for all keychains used across various wallets because there are a variety of incompatible standards. Sharing of seeds across multiple wallets is not desirable for security reasons. Physical storage of multiple seeds is difficult depending on the security and redundancy required.\n+\n+As HD keychains are essentially derived from initial entropy, this proposal provides a way to derive entropy from the keychain which can be fed into whatever method a wallet uses to derive the initial mnemonic seed or root key.\n+\n+==Definitions==\n+\n+The terminology related to keychains used in the wild varies widely, for example `seed` has various different meanings. In this document we define the terms\n+\n+# '''BIP32 root key''' is the root extended private key that is represented as the top root of the keychain in BIP32.\n+# '''BIP39 mnemonic''' is the mnemonic phrase that is calculated from the entropy used before hashing of the mnemonic in BIP39.\n+# '''BIP39 seed''' is the result of hashing the BIP39 mnemonic seed.\n+\n+==Motivation==\n+\n+Most wallets implement BIP32 which defines how a BIP32 root key can be used to derive keychains. As a consequence, a backup of just the BIP32 root key is sufficient to include all keys derived from it. BIP32 does not have a human friendly serialization of the BIP32 root key (or BIP32 extended keys in general) which makes paper backups or manually restoring the key more error-prone. BIP39 was designed solve this problem but rather than serialize the BIP32 root key, it takes some entropy, encoded to a \"seed mnemonic\", which is then hashed to derive the BIP39 seed which can be turned into the BIP32 root key. Saving the BIP39 mnemonic is enough to reconstruct the entire BIP32 keychain, but a BIP32 root key cannot be reversed back to the BIP39 mnemonic.\n+\n+Most wallets implement BIP39, so on initialization or restoration, the user must interact with a BIP39 mnemonic. Most wallets do not support of BIP32 extended private keys so each wallet must either share the same BIP39 mnemonic, or have a separate BIP39 mnemonic entirely. Neither scenarios are particularly satisfactory for security reasons. For example, some wallets may be inherently less secure like hot wallets on smartphones, Join Market servers, Lightning Network nodes. Having multiple seeds is far from desirable especially for those who rely on split key or redundancy backups in different geological locations. Adding is necessarily difficult and may result in users being more lazy with subsequent keys, such that compromises security or leads to key loss.\n+\n+There is added complication with wallets that implement other standards, or no standards at all. Bitcoin Core wallet uses a WIF as the ''hdseed'', and yet other wallets use different mnemonic schemes like Electrum to derive the BIP32 root key. Other cryptocurrencies like Monero also use a different mnemonic scheme entirely.\n+\n+Ultimately, all of the mnemonic/seed schemes start with some \"initial entropy\" to derive a mnemonic/seed, and then process the mnemonic into a BIP32 key, or private key. We can use BIP32 itself to derive the \"initial entropy\" to then recreate the same mnemonic or seed according the specific application standard of the target wallet. We can use a BIP44 like categorization to ensure unitform derivation according to the target application type.\n+\n+==Specification==\n+\n+We assume a single BIP32 master root key. This specification is not concerned with how this was derived (e.g. directly or via a mnemonic scheme such as BIP39).\n+\n+For each application that requires its own wallet, a unique private key is derived from the BIP32 master root key using fully hardened derivation path. The resulting private key (k) is then processed with HMAC-SHA512, where the key is \"bip-entropy-from-k\", and the message payload is \"k\": <code>HMAC-SHA512(key=\"bip-entropy-from-k\", msg=k)</code>. The result produces 512 bits of entropy. Each application SHOULD use up to the required number of bits necessary for their operation truncating the rest.",
      "path": "bip-entropy.mediawiki",
      "position": null,
      "original_position": 48,
      "commit_id": "96927344e7a50116aceab6c0f648362cc3bab296",
      "original_commit_id": "6ef879aa536e6177677e03abdc59c1e03a7f91ee",
      "in_reply_to_id": 434985722,
      "user": {
        "login": "ethankosakovsky",
        "id": 62417540,
        "node_id": "MDQ6VXNlcjYyNDE3NTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62417540?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ethankosakovsky",
        "html_url": "https://github.com/ethankosakovsky",
        "followers_url": "https://api.github.com/users/ethankosakovsky/followers",
        "following_url": "https://api.github.com/users/ethankosakovsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ethankosakovsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ethankosakovsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ethankosakovsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ethankosakovsky/orgs",
        "repos_url": "https://api.github.com/users/ethankosakovsky/repos",
        "events_url": "https://api.github.com/users/ethankosakovsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ethankosakovsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added",
      "created_at": "2020-06-11T12:13:20Z",
      "updated_at": "2020-06-11T12:13:21Z",
      "html_url": "https://github.com/bitcoin/bips/pull/910#discussion_r438738318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/comments/438738318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bips/pulls/910"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    }
  ]
}